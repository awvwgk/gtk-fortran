cairo;cairo_append_path;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_append_path (cairo_t *cr, const cairo_path_t *path);";subroutine cairo_append_path(cr, path) bind(c)
cairo;cairo_arc;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_arc (cairo_t *cr, double xc, double yc, double radius, double angle1, double angle2);";subroutine cairo_arc(cr, xc, yc, radius, angle1, angle2) bind(c)
cairo;cairo_arc_negative;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_arc_negative (cairo_t *cr, double xc, double yc, double radius, double angle1, double angle2);";subroutine cairo_arc_negative(cr, xc, yc, radius, angle1, angle2) bind(c)
cairo;cairo_clip;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_clip (cairo_t *cr);";subroutine cairo_clip(cr) bind(c)
cairo;cairo_clip_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_clip_extents (cairo_t *cr, double *x1, double *y1, double *x2, double *y2);";subroutine cairo_clip_extents(cr, x1, y1, x2, y2) bind(c)
cairo;cairo_clip_preserve;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_clip_preserve (cairo_t *cr);";subroutine cairo_clip_preserve(cr) bind(c)
cairo;cairo_close_path;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_close_path (cairo_t *cr);";subroutine cairo_close_path(cr) bind(c)
cairo;cairo_copy_clip_rectangle_list;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_rectangle_list_t * cairo_copy_clip_rectangle_list (cairo_t *cr);";function cairo_copy_clip_rectangle_list(cr) bind(c)
cairo;cairo_copy_page;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_copy_page (cairo_t *cr);";subroutine cairo_copy_page(cr) bind(c)
cairo;cairo_copy_path;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_path_t * cairo_copy_path (cairo_t *cr);";function cairo_copy_path(cr) bind(c)
cairo;cairo_copy_path_flat;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_path_t * cairo_copy_path_flat (cairo_t *cr);";function cairo_copy_path_flat(cr) bind(c)
cairo;cairo_create;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_t * cairo_create (cairo_surface_t *target);";function cairo_create(target) bind(c)
cairo;cairo_curve_to;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_curve_to (cairo_t *cr, double x1, double y1, double x2, double y2, double x3, double y3);";subroutine cairo_curve_to(cr, x1, y1, x2, y2, x3, y3) bind(c)
cairo;cairo_debug_reset_static_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_debug_reset_static_data (void);";subroutine cairo_debug_reset_static_data() bind(c)
cairo;cairo_destroy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_destroy (cairo_t *cr);";subroutine cairo_destroy(cr) bind(c)
cairo;cairo_device_acquire;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_device_acquire (cairo_device_t *device);";function cairo_device_acquire(device) bind(c)
cairo;cairo_device_destroy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_device_destroy (cairo_device_t *device);";subroutine cairo_device_destroy(device) bind(c)
cairo;cairo_device_finish;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_device_finish (cairo_device_t *device);";subroutine cairo_device_finish(device) bind(c)
cairo;cairo_device_flush;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_device_flush (cairo_device_t *device);";subroutine cairo_device_flush(device) bind(c)
cairo;cairo_device_get_reference_count;;cairo-auto.f90;/usr/include/cairo/cairo.h;"unsigned int cairo_device_get_reference_count (cairo_device_t *device);";function cairo_device_get_reference_count(device) bind(c)
cairo;cairo_device_get_type;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_device_type_t cairo_device_get_type (cairo_device_t *device);";function cairo_device_get_type(device) bind(c)
cairo;cairo_device_get_user_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void * cairo_device_get_user_data (cairo_device_t *device, const cairo_user_data_key_t *key);";function cairo_device_get_user_data(device, key) bind(c)
cairo;cairo_device_observer_elapsed;;cairo-auto.f90;/usr/include/cairo/cairo.h;"double cairo_device_observer_elapsed (cairo_device_t *device);";function cairo_device_observer_elapsed(device) bind(c)
cairo;cairo_device_observer_fill_elapsed;;cairo-auto.f90;/usr/include/cairo/cairo.h;"double cairo_device_observer_fill_elapsed (cairo_device_t *device);";function cairo_device_observer_fill_elapsed(device) bind(c)
cairo;cairo_device_observer_glyphs_elapsed;;cairo-auto.f90;/usr/include/cairo/cairo.h;"double cairo_device_observer_glyphs_elapsed (cairo_device_t *device);";function cairo_device_observer_glyphs_elapsed(device) bind(c)
cairo;cairo_device_observer_mask_elapsed;;cairo-auto.f90;/usr/include/cairo/cairo.h;"double cairo_device_observer_mask_elapsed (cairo_device_t *device);";function cairo_device_observer_mask_elapsed(device) bind(c)
cairo;cairo_device_observer_paint_elapsed;;cairo-auto.f90;/usr/include/cairo/cairo.h;"double cairo_device_observer_paint_elapsed (cairo_device_t *device);";function cairo_device_observer_paint_elapsed(device) bind(c)
cairo;cairo_device_observer_print;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_device_observer_print (cairo_device_t *device, cairo_write_func_t write_func, void *closure);";function cairo_device_observer_print(device, write_func, closure) bind(c)
cairo;cairo_device_observer_stroke_elapsed;;cairo-auto.f90;/usr/include/cairo/cairo.h;"double cairo_device_observer_stroke_elapsed (cairo_device_t *device);";function cairo_device_observer_stroke_elapsed(device) bind(c)
cairo;cairo_device_reference;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_device_t * cairo_device_reference (cairo_device_t *device);";function cairo_device_reference(device) bind(c)
cairo;cairo_device_release;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_device_release (cairo_device_t *device);";subroutine cairo_device_release(device) bind(c)
cairo;cairo_device_set_user_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_device_set_user_data (cairo_device_t *device, const cairo_user_data_key_t *key, void *user_data, cairo_destroy_func_t destroy);";function cairo_device_set_user_data(device, key, user_data, destroy) bind(c)
cairo;cairo_device_status;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_device_status (cairo_device_t *device);";function cairo_device_status(device) bind(c)
cairo;cairo_device_to_user;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_device_to_user (cairo_t *cr, double *x, double *y);";subroutine cairo_device_to_user(cr, x, y) bind(c)
cairo;cairo_device_to_user_distance;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_device_to_user_distance (cairo_t *cr, double *dx, double *dy);";subroutine cairo_device_to_user_distance(cr, dx, dy) bind(c)
cairo;cairo_fill;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_fill (cairo_t *cr);";subroutine cairo_fill(cr) bind(c)
cairo;cairo_fill_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_fill_extents (cairo_t *cr, double *x1, double *y1, double *x2, double *y2);";subroutine cairo_fill_extents(cr, x1, y1, x2, y2) bind(c)
cairo;cairo_fill_preserve;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_fill_preserve (cairo_t *cr);";subroutine cairo_fill_preserve(cr) bind(c)
cairo;cairo_font_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_font_extents (cairo_t *cr, cairo_font_extents_t *extents);";subroutine cairo_font_extents(cr, extents) bind(c)
cairo;cairo_font_face_destroy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_font_face_destroy (cairo_font_face_t *font_face);";subroutine cairo_font_face_destroy(font_face) bind(c)
cairo;cairo_font_face_get_reference_count;;cairo-auto.f90;/usr/include/cairo/cairo.h;"unsigned int cairo_font_face_get_reference_count (cairo_font_face_t *font_face);";function cairo_font_face_get_reference_count(font_face) bind(c)
cairo;cairo_font_face_get_type;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_font_type_t cairo_font_face_get_type (cairo_font_face_t *font_face);";function cairo_font_face_get_type(font_face) bind(c)
cairo;cairo_font_face_get_user_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void * cairo_font_face_get_user_data (cairo_font_face_t *font_face, const cairo_user_data_key_t *key);";function cairo_font_face_get_user_data(font_face, key) bind(c)
cairo;cairo_font_face_reference;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_font_face_t * cairo_font_face_reference (cairo_font_face_t *font_face);";function cairo_font_face_reference(font_face) bind(c)
cairo;cairo_font_face_set_user_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_font_face_set_user_data (cairo_font_face_t *font_face, const cairo_user_data_key_t *key, void *user_data, cairo_destroy_func_t destroy);";function cairo_font_face_set_user_data(font_face, key, user_data, destroy) bind(c)
cairo;cairo_font_face_status;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_font_face_status (cairo_font_face_t *font_face);";function cairo_font_face_status(font_face) bind(c)
cairo;cairo_font_options_copy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_font_options_t * cairo_font_options_copy (const cairo_font_options_t *original);";function cairo_font_options_copy(original) bind(c)
cairo;cairo_font_options_create;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_font_options_t * cairo_font_options_create (void);";function cairo_font_options_create() bind(c)
cairo;cairo_font_options_destroy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_font_options_destroy (cairo_font_options_t *options);";subroutine cairo_font_options_destroy(options) bind(c)
cairo;cairo_font_options_equal;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_bool_t cairo_font_options_equal (const cairo_font_options_t *options, const cairo_font_options_t *other);";function cairo_font_options_equal(options, other) bind(c)
cairo;cairo_font_options_get_antialias;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_antialias_t cairo_font_options_get_antialias (const cairo_font_options_t *options);";function cairo_font_options_get_antialias(options) bind(c)
cairo;cairo_font_options_get_hint_metrics;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_hint_metrics_t cairo_font_options_get_hint_metrics (const cairo_font_options_t *options);";function cairo_font_options_get_hint_metrics(options) bind(c)
cairo;cairo_font_options_get_hint_style;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_hint_style_t cairo_font_options_get_hint_style (const cairo_font_options_t *options);";function cairo_font_options_get_hint_style(options) bind(c)
cairo;cairo_font_options_get_subpixel_order;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_subpixel_order_t cairo_font_options_get_subpixel_order (const cairo_font_options_t *options);";function cairo_font_options_get_subpixel_order(options) bind(c)
cairo;cairo_font_options_get_variations;;cairo-auto.f90;/usr/include/cairo/cairo.h;"const char * cairo_font_options_get_variations (cairo_font_options_t *options);";function cairo_font_options_get_variations(options) bind(c)
cairo;cairo_font_options_hash;;cairo-auto.f90;/usr/include/cairo/cairo.h;"unsigned long cairo_font_options_hash (const cairo_font_options_t *options);";function cairo_font_options_hash(options) bind(c)
cairo;cairo_font_options_merge;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_font_options_merge (cairo_font_options_t *options, const cairo_font_options_t *other);";subroutine cairo_font_options_merge(options, other) bind(c)
cairo;cairo_font_options_set_antialias;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_font_options_set_antialias (cairo_font_options_t *options, cairo_antialias_t antialias);";subroutine cairo_font_options_set_antialias(options, antialias) bind(c)
cairo;cairo_font_options_set_hint_metrics;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_font_options_set_hint_metrics (cairo_font_options_t *options, cairo_hint_metrics_t hint_metrics);";subroutine cairo_font_options_set_hint_metrics(options, hint_metrics) bind(c)
cairo;cairo_font_options_set_hint_style;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_font_options_set_hint_style (cairo_font_options_t *options, cairo_hint_style_t hint_style);";subroutine cairo_font_options_set_hint_style(options, hint_style) bind(c)
cairo;cairo_font_options_set_subpixel_order;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_font_options_set_subpixel_order (cairo_font_options_t *options, cairo_subpixel_order_t subpixel_order);";subroutine cairo_font_options_set_subpixel_order(options, subpixel_order) bind(c)
cairo;cairo_font_options_set_variations;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_font_options_set_variations (cairo_font_options_t *options, const char *variations);";subroutine cairo_font_options_set_variations(options, variations) bind(c)
cairo;cairo_font_options_status;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_font_options_status (cairo_font_options_t *options);";function cairo_font_options_status(options) bind(c)
cairo;cairo_format_stride_for_width;;cairo-auto.f90;/usr/include/cairo/cairo.h;"int cairo_format_stride_for_width (cairo_format_t format, int width);";function cairo_format_stride_for_width(format, width) bind(c)
cairo;cairo_ft_font_face_create_for_ft_face;;cairo-auto.f90;/usr/include/cairo/cairo-ft.h;"cairo_font_face_t * cairo_ft_font_face_create_for_ft_face (FT_Face face, int load_flags);";function cairo_ft_font_face_create_for_ft_face(face, load_flags) bind(c)
cairo;cairo_ft_font_face_create_for_pattern;;cairo-auto.f90;/usr/include/cairo/cairo-ft.h;"cairo_font_face_t * cairo_ft_font_face_create_for_pattern (FcPattern *pattern);";function cairo_ft_font_face_create_for_pattern(pattern) bind(c)
cairo;cairo_ft_font_face_get_synthesize;;cairo-auto.f90;/usr/include/cairo/cairo-ft.h;"unsigned int cairo_ft_font_face_get_synthesize (cairo_font_face_t *font_face);";function cairo_ft_font_face_get_synthesize(font_face) bind(c)
cairo;cairo_ft_font_face_set_synthesize;;cairo-auto.f90;/usr/include/cairo/cairo-ft.h;"void cairo_ft_font_face_set_synthesize (cairo_font_face_t *font_face, unsigned int synth_flags);";subroutine cairo_ft_font_face_set_synthesize(font_face, synth_flags) bind(c)
cairo;cairo_ft_font_face_unset_synthesize;;cairo-auto.f90;/usr/include/cairo/cairo-ft.h;"void cairo_ft_font_face_unset_synthesize (cairo_font_face_t *font_face, unsigned int synth_flags);";subroutine cairo_ft_font_face_unset_synthesize(font_face, synth_flags) bind(c)
cairo;cairo_ft_font_options_substitute;;cairo-auto.f90;/usr/include/cairo/cairo-ft.h;"void cairo_ft_font_options_substitute (const cairo_font_options_t *options, FcPattern *pattern);";subroutine cairo_ft_font_options_substitute(options, pattern) bind(c)
cairo;cairo_ft_scaled_font_lock_face;;cairo-auto.f90;/usr/include/cairo/cairo-ft.h;"FT_Face cairo_ft_scaled_font_lock_face (cairo_scaled_font_t *scaled_font);";function cairo_ft_scaled_font_lock_face(scaled_font) bind(c)
cairo;cairo_ft_scaled_font_unlock_face;;cairo-auto.f90;/usr/include/cairo/cairo-ft.h;"void cairo_ft_scaled_font_unlock_face (cairo_scaled_font_t *scaled_font);";subroutine cairo_ft_scaled_font_unlock_face(scaled_font) bind(c)
cairo;cairo_get_antialias;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_antialias_t cairo_get_antialias (cairo_t *cr);";function cairo_get_antialias(cr) bind(c)
cairo;cairo_get_current_point;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_get_current_point (cairo_t *cr, double *x, double *y);";subroutine cairo_get_current_point(cr, x, y) bind(c)
cairo;cairo_get_dash;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_get_dash (cairo_t *cr, double *dashes, double *offset);";subroutine cairo_get_dash(cr, dashes, offset) bind(c)
cairo;cairo_get_dash_count;;cairo-auto.f90;/usr/include/cairo/cairo.h;"int cairo_get_dash_count (cairo_t *cr);";function cairo_get_dash_count(cr) bind(c)
cairo;cairo_get_fill_rule;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_fill_rule_t cairo_get_fill_rule (cairo_t *cr);";function cairo_get_fill_rule(cr) bind(c)
cairo;cairo_get_font_face;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_font_face_t * cairo_get_font_face (cairo_t *cr);";function cairo_get_font_face(cr) bind(c)
cairo;cairo_get_font_matrix;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_get_font_matrix (cairo_t *cr, cairo_matrix_t *matrix);";subroutine cairo_get_font_matrix(cr, matrix) bind(c)
cairo;cairo_get_font_options;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_get_font_options (cairo_t *cr, cairo_font_options_t *options);";subroutine cairo_get_font_options(cr, options) bind(c)
cairo;cairo_get_group_target;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_get_group_target (cairo_t *cr);";function cairo_get_group_target(cr) bind(c)
cairo;cairo_get_line_cap;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_line_cap_t cairo_get_line_cap (cairo_t *cr);";function cairo_get_line_cap(cr) bind(c)
cairo;cairo_get_line_join;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_line_join_t cairo_get_line_join (cairo_t *cr);";function cairo_get_line_join(cr) bind(c)
cairo;cairo_get_line_width;;cairo-auto.f90;/usr/include/cairo/cairo.h;"double cairo_get_line_width (cairo_t *cr);";function cairo_get_line_width(cr) bind(c)
cairo;cairo_get_matrix;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_get_matrix (cairo_t *cr, cairo_matrix_t *matrix);";subroutine cairo_get_matrix(cr, matrix) bind(c)
cairo;cairo_get_miter_limit;;cairo-auto.f90;/usr/include/cairo/cairo.h;"double cairo_get_miter_limit (cairo_t *cr);";function cairo_get_miter_limit(cr) bind(c)
cairo;cairo_get_operator;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_operator_t cairo_get_operator (cairo_t *cr);";function cairo_get_operator(cr) bind(c)
cairo;cairo_get_reference_count;;cairo-auto.f90;/usr/include/cairo/cairo.h;"unsigned int cairo_get_reference_count (cairo_t *cr);";function cairo_get_reference_count(cr) bind(c)
cairo;cairo_get_scaled_font;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_scaled_font_t * cairo_get_scaled_font (cairo_t *cr);";function cairo_get_scaled_font(cr) bind(c)
cairo;cairo_get_source;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_pattern_t * cairo_get_source (cairo_t *cr);";function cairo_get_source(cr) bind(c)
cairo;cairo_get_target;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_get_target (cairo_t *cr);";function cairo_get_target(cr) bind(c)
cairo;cairo_get_tolerance;;cairo-auto.f90;/usr/include/cairo/cairo.h;"double cairo_get_tolerance (cairo_t *cr);";function cairo_get_tolerance(cr) bind(c)
cairo;cairo_get_user_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void * cairo_get_user_data (cairo_t *cr, const cairo_user_data_key_t *key);";function cairo_get_user_data(cr, key) bind(c)
cairo;cairo_glyph_allocate;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_glyph_t * cairo_glyph_allocate (int num_glyphs);";function cairo_glyph_allocate(num_glyphs) bind(c)
cairo;cairo_glyph_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_glyph_extents (cairo_t *cr, const cairo_glyph_t *glyphs, int num_glyphs, cairo_text_extents_t *extents);";subroutine cairo_glyph_extents(cr, glyphs, num_glyphs, extents) bind(c)
cairo;cairo_glyph_free;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_glyph_free (cairo_glyph_t *glyphs);";subroutine cairo_glyph_free(glyphs) bind(c)
cairo;cairo_glyph_path;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_glyph_path (cairo_t *cr, const cairo_glyph_t *glyphs, int num_glyphs);";subroutine cairo_glyph_path(cr, glyphs, num_glyphs) bind(c)
cairo;cairo_gobject_antialias_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_antialias_get_type (void);";function cairo_gobject_antialias_get_type() bind(c)
cairo;cairo_gobject_content_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_content_get_type (void);";function cairo_gobject_content_get_type() bind(c)
cairo;cairo_gobject_context_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_context_get_type (void);";function cairo_gobject_context_get_type() bind(c)
cairo;cairo_gobject_device_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_device_get_type (void);";function cairo_gobject_device_get_type() bind(c)
cairo;cairo_gobject_device_type_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_device_type_get_type (void);";function cairo_gobject_device_type_get_type() bind(c)
cairo;cairo_gobject_extend_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_extend_get_type (void);";function cairo_gobject_extend_get_type() bind(c)
cairo;cairo_gobject_fill_rule_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_fill_rule_get_type (void);";function cairo_gobject_fill_rule_get_type() bind(c)
cairo;cairo_gobject_filter_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_filter_get_type (void);";function cairo_gobject_filter_get_type() bind(c)
cairo;cairo_gobject_font_face_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_font_face_get_type (void);";function cairo_gobject_font_face_get_type() bind(c)
cairo;cairo_gobject_font_options_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_font_options_get_type (void);";function cairo_gobject_font_options_get_type() bind(c)
cairo;cairo_gobject_font_slant_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_font_slant_get_type (void);";function cairo_gobject_font_slant_get_type() bind(c)
cairo;cairo_gobject_font_type_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_font_type_get_type (void);";function cairo_gobject_font_type_get_type() bind(c)
cairo;cairo_gobject_font_weight_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_font_weight_get_type (void);";function cairo_gobject_font_weight_get_type() bind(c)
cairo;cairo_gobject_format_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_format_get_type (void);";function cairo_gobject_format_get_type() bind(c)
cairo;cairo_gobject_hint_metrics_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_hint_metrics_get_type (void);";function cairo_gobject_hint_metrics_get_type() bind(c)
cairo;cairo_gobject_hint_style_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_hint_style_get_type (void);";function cairo_gobject_hint_style_get_type() bind(c)
cairo;cairo_gobject_line_cap_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_line_cap_get_type (void);";function cairo_gobject_line_cap_get_type() bind(c)
cairo;cairo_gobject_line_join_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_line_join_get_type (void);";function cairo_gobject_line_join_get_type() bind(c)
cairo;cairo_gobject_matrix_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_matrix_get_type (void);";function cairo_gobject_matrix_get_type() bind(c)
cairo;cairo_gobject_operator_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_operator_get_type (void);";function cairo_gobject_operator_get_type() bind(c)
cairo;cairo_gobject_path_data_type_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_path_data_type_get_type (void);";function cairo_gobject_path_data_type_get_type() bind(c)
cairo;cairo_gobject_pattern_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_pattern_get_type (void);";function cairo_gobject_pattern_get_type() bind(c)
cairo;cairo_gobject_pattern_type_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_pattern_type_get_type (void);";function cairo_gobject_pattern_type_get_type() bind(c)
cairo;cairo_gobject_rectangle_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_rectangle_get_type (void);";function cairo_gobject_rectangle_get_type() bind(c)
cairo;cairo_gobject_rectangle_int_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_rectangle_int_get_type (void);";function cairo_gobject_rectangle_int_get_type() bind(c)
cairo;cairo_gobject_region_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_region_get_type (void);";function cairo_gobject_region_get_type() bind(c)
cairo;cairo_gobject_region_overlap_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_region_overlap_get_type (void);";function cairo_gobject_region_overlap_get_type() bind(c)
cairo;cairo_gobject_scaled_font_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_scaled_font_get_type (void);";function cairo_gobject_scaled_font_get_type() bind(c)
cairo;cairo_gobject_status_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_status_get_type (void);";function cairo_gobject_status_get_type() bind(c)
cairo;cairo_gobject_subpixel_order_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_subpixel_order_get_type (void);";function cairo_gobject_subpixel_order_get_type() bind(c)
cairo;cairo_gobject_surface_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_surface_get_type (void);";function cairo_gobject_surface_get_type() bind(c)
cairo;cairo_gobject_surface_type_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_surface_type_get_type (void);";function cairo_gobject_surface_type_get_type() bind(c)
cairo;cairo_gobject_text_cluster_flags_get_type;;cairo-auto.f90;/usr/include/cairo/cairo-gobject.h;"GType cairo_gobject_text_cluster_flags_get_type (void);";function cairo_gobject_text_cluster_flags_get_type() bind(c)
cairo;cairo_has_current_point;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_bool_t cairo_has_current_point (cairo_t *cr);";function cairo_has_current_point(cr) bind(c)
cairo;cairo_identity_matrix;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_identity_matrix (cairo_t *cr);";subroutine cairo_identity_matrix(cr) bind(c)
cairo;cairo_image_surface_create;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_image_surface_create (cairo_format_t format, int width, int height);";function cairo_image_surface_create(format, width, height) bind(c)
cairo;cairo_image_surface_create_for_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_image_surface_create_for_data (unsigned char *data, cairo_format_t format, int width, int height, int stride);";function cairo_image_surface_create_for_data(data, format, width, height, stride) bind(c)
cairo;cairo_image_surface_create_from_png;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_image_surface_create_from_png (const char *filename);";function cairo_image_surface_create_from_png(filename) bind(c)
cairo;cairo_image_surface_create_from_png_stream;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_image_surface_create_from_png_stream (cairo_read_func_t read_func, void *closure);";function cairo_image_surface_create_from_png_stream(read_func, closure) bind(c)
cairo;cairo_image_surface_get_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"unsigned char * cairo_image_surface_get_data (cairo_surface_t *surface);";function cairo_image_surface_get_data(surface) bind(c)
cairo;cairo_image_surface_get_format;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_format_t cairo_image_surface_get_format (cairo_surface_t *surface);";function cairo_image_surface_get_format(surface) bind(c)
cairo;cairo_image_surface_get_height;;cairo-auto.f90;/usr/include/cairo/cairo.h;"int cairo_image_surface_get_height (cairo_surface_t *surface);";function cairo_image_surface_get_height(surface) bind(c)
cairo;cairo_image_surface_get_stride;;cairo-auto.f90;/usr/include/cairo/cairo.h;"int cairo_image_surface_get_stride (cairo_surface_t *surface);";function cairo_image_surface_get_stride(surface) bind(c)
cairo;cairo_image_surface_get_width;;cairo-auto.f90;/usr/include/cairo/cairo.h;"int cairo_image_surface_get_width (cairo_surface_t *surface);";function cairo_image_surface_get_width(surface) bind(c)
cairo;cairo_in_clip;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_bool_t cairo_in_clip (cairo_t *cr, double x, double y);";function cairo_in_clip(cr, x, y) bind(c)
cairo;cairo_in_fill;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_bool_t cairo_in_fill (cairo_t *cr, double x, double y);";function cairo_in_fill(cr, x, y) bind(c)
cairo;cairo_in_stroke;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_bool_t cairo_in_stroke (cairo_t *cr, double x, double y);";function cairo_in_stroke(cr, x, y) bind(c)
cairo;cairo_line_to;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_line_to (cairo_t *cr, double x, double y);";subroutine cairo_line_to(cr, x, y) bind(c)
cairo;cairo_mask;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_mask (cairo_t *cr, cairo_pattern_t *pattern);";subroutine cairo_mask(cr, pattern) bind(c)
cairo;cairo_mask_surface;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_mask_surface (cairo_t *cr, cairo_surface_t *surface, double surface_x, double surface_y);";subroutine cairo_mask_surface(cr, surface, surface_x, surface_y) bind(c)
cairo;cairo_matrix_init;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_matrix_init (cairo_matrix_t *matrix, double xx, double yx, double xy, double yy, double x0, double y0);";subroutine cairo_matrix_init(matrix, xx, yx, xy, yy, x0, y0) bind(c)
cairo;cairo_matrix_init_identity;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_matrix_init_identity (cairo_matrix_t *matrix);";subroutine cairo_matrix_init_identity(matrix) bind(c)
cairo;cairo_matrix_init_rotate;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_matrix_init_rotate (cairo_matrix_t *matrix, double radians);";subroutine cairo_matrix_init_rotate(matrix, radians) bind(c)
cairo;cairo_matrix_init_scale;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_matrix_init_scale (cairo_matrix_t *matrix, double sx, double sy);";subroutine cairo_matrix_init_scale(matrix, sx, sy) bind(c)
cairo;cairo_matrix_init_translate;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_matrix_init_translate (cairo_matrix_t *matrix, double tx, double ty);";subroutine cairo_matrix_init_translate(matrix, tx, ty) bind(c)
cairo;cairo_matrix_invert;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_matrix_invert (cairo_matrix_t *matrix);";function cairo_matrix_invert(matrix) bind(c)
cairo;cairo_matrix_multiply;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_matrix_multiply (cairo_matrix_t *result, const cairo_matrix_t *a, const cairo_matrix_t *b);";subroutine cairo_matrix_multiply(result, a, b) bind(c)
cairo;cairo_matrix_rotate;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_matrix_rotate (cairo_matrix_t *matrix, double radians);";subroutine cairo_matrix_rotate(matrix, radians) bind(c)
cairo;cairo_matrix_scale;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_matrix_scale (cairo_matrix_t *matrix, double sx, double sy);";subroutine cairo_matrix_scale(matrix, sx, sy) bind(c)
cairo;cairo_matrix_transform_distance;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_matrix_transform_distance (const cairo_matrix_t *matrix, double *dx, double *dy);";subroutine cairo_matrix_transform_distance(matrix, dx, dy) bind(c)
cairo;cairo_matrix_transform_point;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_matrix_transform_point (const cairo_matrix_t *matrix, double *x, double *y);";subroutine cairo_matrix_transform_point(matrix, x, y) bind(c)
cairo;cairo_matrix_translate;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_matrix_translate (cairo_matrix_t *matrix, double tx, double ty);";subroutine cairo_matrix_translate(matrix, tx, ty) bind(c)
cairo;cairo_mesh_pattern_begin_patch;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_mesh_pattern_begin_patch (cairo_pattern_t *pattern);";subroutine cairo_mesh_pattern_begin_patch(pattern) bind(c)
cairo;cairo_mesh_pattern_curve_to;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_mesh_pattern_curve_to (cairo_pattern_t *pattern, double x1, double y1, double x2, double y2, double x3, double y3);";subroutine cairo_mesh_pattern_curve_to(pattern, x1, y1, x2, y2, x3, y3) bind(c)
cairo;cairo_mesh_pattern_end_patch;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_mesh_pattern_end_patch (cairo_pattern_t *pattern);";subroutine cairo_mesh_pattern_end_patch(pattern) bind(c)
cairo;cairo_mesh_pattern_get_control_point;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_mesh_pattern_get_control_point (cairo_pattern_t *pattern, unsigned int patch_num, unsigned int point_num, double *x, double *y);";function cairo_mesh_pattern_get_control_point(pattern, patch_num, point_num, x, y) bind(c)
cairo;cairo_mesh_pattern_get_corner_color_rgba;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_mesh_pattern_get_corner_color_rgba (cairo_pattern_t *pattern, unsigned int patch_num, unsigned int corner_num, double *red, double *green, double *blue, double *alpha);";function cairo_mesh_pattern_get_corner_color_rgba(pattern, patch_num, corner_num, red, green, blue, alpha) bind(c)
cairo;cairo_mesh_pattern_get_patch_count;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_mesh_pattern_get_patch_count (cairo_pattern_t *pattern, unsigned int *count);";function cairo_mesh_pattern_get_patch_count(pattern, count) bind(c)
cairo;cairo_mesh_pattern_get_path;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_path_t * cairo_mesh_pattern_get_path (cairo_pattern_t *pattern, unsigned int patch_num);";function cairo_mesh_pattern_get_path(pattern, patch_num) bind(c)
cairo;cairo_mesh_pattern_line_to;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_mesh_pattern_line_to (cairo_pattern_t *pattern, double x, double y);";subroutine cairo_mesh_pattern_line_to(pattern, x, y) bind(c)
cairo;cairo_mesh_pattern_move_to;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_mesh_pattern_move_to (cairo_pattern_t *pattern, double x, double y);";subroutine cairo_mesh_pattern_move_to(pattern, x, y) bind(c)
cairo;cairo_mesh_pattern_set_control_point;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_mesh_pattern_set_control_point (cairo_pattern_t *pattern, unsigned int point_num, double x, double y);";subroutine cairo_mesh_pattern_set_control_point(pattern, point_num, x, y) bind(c)
cairo;cairo_mesh_pattern_set_corner_color_rgb;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_mesh_pattern_set_corner_color_rgb (cairo_pattern_t *pattern, unsigned int corner_num, double red, double green, double blue);";subroutine cairo_mesh_pattern_set_corner_color_rgb(pattern, corner_num, red, green, blue) bind(c)
cairo;cairo_mesh_pattern_set_corner_color_rgba;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_mesh_pattern_set_corner_color_rgba (cairo_pattern_t *pattern, unsigned int corner_num, double red, double green, double blue, double alpha);";subroutine cairo_mesh_pattern_set_corner_color_rgba(pattern, corner_num, red, green, blue, alpha) bind(c)
cairo;cairo_move_to;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_move_to (cairo_t *cr, double x, double y);";subroutine cairo_move_to(cr, x, y) bind(c)
cairo;cairo_new_path;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_new_path (cairo_t *cr);";subroutine cairo_new_path(cr) bind(c)
cairo;cairo_new_sub_path;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_new_sub_path (cairo_t *cr);";subroutine cairo_new_sub_path(cr) bind(c)
cairo;cairo_paint;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_paint (cairo_t *cr);";subroutine cairo_paint(cr) bind(c)
cairo;cairo_paint_with_alpha;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_paint_with_alpha (cairo_t *cr, double alpha);";subroutine cairo_paint_with_alpha(cr, alpha) bind(c)
cairo;cairo_path_destroy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_path_destroy (cairo_path_t *path);";subroutine cairo_path_destroy(path) bind(c)
cairo;cairo_path_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_path_extents (cairo_t *cr, double *x1, double *y1, double *x2, double *y2);";subroutine cairo_path_extents(cr, x1, y1, x2, y2) bind(c)
cairo;cairo_pattern_add_color_stop_rgb;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_pattern_add_color_stop_rgb (cairo_pattern_t *pattern, double offset, double red, double green, double blue);";subroutine cairo_pattern_add_color_stop_rgb(pattern, offset, red, green, blue) bind(c)
cairo;cairo_pattern_add_color_stop_rgba;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_pattern_add_color_stop_rgba (cairo_pattern_t *pattern, double offset, double red, double green, double blue, double alpha);";subroutine cairo_pattern_add_color_stop_rgba(pattern, offset, red, green, blue, alpha) bind(c)
cairo;cairo_pattern_create_for_surface;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_pattern_t * cairo_pattern_create_for_surface (cairo_surface_t *surface);";function cairo_pattern_create_for_surface(surface) bind(c)
cairo;cairo_pattern_create_linear;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_pattern_t * cairo_pattern_create_linear (double x0, double y0, double x1, double y1);";function cairo_pattern_create_linear(x0, y0, x1, y1) bind(c)
cairo;cairo_pattern_create_mesh;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_pattern_t * cairo_pattern_create_mesh (void);";function cairo_pattern_create_mesh() bind(c)
cairo;cairo_pattern_create_radial;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_pattern_t * cairo_pattern_create_radial (double cx0, double cy0, double radius0, double cx1, double cy1, double radius1);";function cairo_pattern_create_radial(cx0, cy0, radius0, cx1, cy1, radius1) bind(c)
cairo;cairo_pattern_create_raster_source;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_pattern_t * cairo_pattern_create_raster_source (void *user_data, cairo_content_t content, int width, int height);";function cairo_pattern_create_raster_source(user_data, content, width, height) bind(c)
cairo;cairo_pattern_create_rgb;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_pattern_t * cairo_pattern_create_rgb (double red, double green, double blue);";function cairo_pattern_create_rgb(red, green, blue) bind(c)
cairo;cairo_pattern_create_rgba;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_pattern_t * cairo_pattern_create_rgba (double red, double green, double blue, double alpha);";function cairo_pattern_create_rgba(red, green, blue, alpha) bind(c)
cairo;cairo_pattern_destroy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_pattern_destroy (cairo_pattern_t *pattern);";subroutine cairo_pattern_destroy(pattern) bind(c)
cairo;cairo_pattern_get_color_stop_count;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_pattern_get_color_stop_count (cairo_pattern_t *pattern, int *count);";function cairo_pattern_get_color_stop_count(pattern, count) bind(c)
cairo;cairo_pattern_get_color_stop_rgba;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_pattern_get_color_stop_rgba (cairo_pattern_t *pattern, int index, double *offset, double *red, double *green, double *blue, double *alpha);";function cairo_pattern_get_color_stop_rgba(pattern, index, offset, red, green, blue, alpha) bind(c)
cairo;cairo_pattern_get_extend;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_extend_t cairo_pattern_get_extend (cairo_pattern_t *pattern);";function cairo_pattern_get_extend(pattern) bind(c)
cairo;cairo_pattern_get_filter;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_filter_t cairo_pattern_get_filter (cairo_pattern_t *pattern);";function cairo_pattern_get_filter(pattern) bind(c)
cairo;cairo_pattern_get_linear_points;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_pattern_get_linear_points (cairo_pattern_t *pattern, double *x0, double *y0, double *x1, double *y1);";function cairo_pattern_get_linear_points(pattern, x0, y0, x1, y1) bind(c)
cairo;cairo_pattern_get_matrix;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_pattern_get_matrix (cairo_pattern_t *pattern, cairo_matrix_t *matrix);";subroutine cairo_pattern_get_matrix(pattern, matrix) bind(c)
cairo;cairo_pattern_get_radial_circles;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_pattern_get_radial_circles (cairo_pattern_t *pattern, double *x0, double *y0, double *r0, double *x1, double *y1, double *r1);";function cairo_pattern_get_radial_circles(pattern, x0, y0, r0, x1, y1, r1) bind(c)
cairo;cairo_pattern_get_reference_count;;cairo-auto.f90;/usr/include/cairo/cairo.h;"unsigned int cairo_pattern_get_reference_count (cairo_pattern_t *pattern);";function cairo_pattern_get_reference_count(pattern) bind(c)
cairo;cairo_pattern_get_rgba;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_pattern_get_rgba (cairo_pattern_t *pattern, double *red, double *green, double *blue, double *alpha);";function cairo_pattern_get_rgba(pattern, red, green, blue, alpha) bind(c)
cairo;cairo_pattern_get_surface;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_pattern_get_surface (cairo_pattern_t *pattern, cairo_surface_t **surface);";function cairo_pattern_get_surface(pattern, surface) bind(c)
cairo;cairo_pattern_get_type;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_pattern_type_t cairo_pattern_get_type (cairo_pattern_t *pattern);";function cairo_pattern_get_type(pattern) bind(c)
cairo;cairo_pattern_get_user_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void * cairo_pattern_get_user_data (cairo_pattern_t *pattern, const cairo_user_data_key_t *key);";function cairo_pattern_get_user_data(pattern, key) bind(c)
cairo;cairo_pattern_reference;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_pattern_t * cairo_pattern_reference (cairo_pattern_t *pattern);";function cairo_pattern_reference(pattern) bind(c)
cairo;cairo_pattern_set_extend;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_pattern_set_extend (cairo_pattern_t *pattern, cairo_extend_t extend);";subroutine cairo_pattern_set_extend(pattern, extend) bind(c)
cairo;cairo_pattern_set_filter;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_pattern_set_filter (cairo_pattern_t *pattern, cairo_filter_t filter);";subroutine cairo_pattern_set_filter(pattern, filter) bind(c)
cairo;cairo_pattern_set_matrix;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_pattern_set_matrix (cairo_pattern_t *pattern, const cairo_matrix_t *matrix);";subroutine cairo_pattern_set_matrix(pattern, matrix) bind(c)
cairo;cairo_pattern_set_user_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_pattern_set_user_data (cairo_pattern_t *pattern, const cairo_user_data_key_t *key, void *user_data, cairo_destroy_func_t destroy);";function cairo_pattern_set_user_data(pattern, key, user_data, destroy) bind(c)
cairo;cairo_pattern_status;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_pattern_status (cairo_pattern_t *pattern);";function cairo_pattern_status(pattern) bind(c)
cairo;cairo_pdf_get_versions;;cairo-auto.f90;/usr/include/cairo/cairo-pdf.h;"void cairo_pdf_get_versions (cairo_pdf_version_t const **versions, int *num_versions);";subroutine cairo_pdf_get_versions(versions, num_versions) bind(c)
cairo;cairo_pdf_surface_add_outline;;cairo-auto.f90;/usr/include/cairo/cairo-pdf.h;"int cairo_pdf_surface_add_outline (cairo_surface_t *surface, int parent_id, const char *utf8, const char *link_attribs, cairo_pdf_outline_flags_t flags);";function cairo_pdf_surface_add_outline(surface, parent_id, utf8, link_attribs, flags) bind(c)
cairo;cairo_pdf_surface_create;;cairo-auto.f90;/usr/include/cairo/cairo-pdf.h;"cairo_surface_t * cairo_pdf_surface_create (const char *filename, double width_in_points, double height_in_points);";function cairo_pdf_surface_create(filename, width_in_points, height_in_points) bind(c)
cairo;cairo_pdf_surface_create_for_stream;;cairo-auto.f90;/usr/include/cairo/cairo-pdf.h;"cairo_surface_t * cairo_pdf_surface_create_for_stream (cairo_write_func_t write_func, void *closure, double width_in_points, double height_in_points);";function cairo_pdf_surface_create_for_stream(write_func, closure, width_in_points, height_in_points) bind(c)
cairo;cairo_pdf_surface_restrict_to_version;;cairo-auto.f90;/usr/include/cairo/cairo-pdf.h;"void cairo_pdf_surface_restrict_to_version (cairo_surface_t *surface, cairo_pdf_version_t version);";subroutine cairo_pdf_surface_restrict_to_version(surface, version) bind(c)
cairo;cairo_pdf_surface_set_metadata;;cairo-auto.f90;/usr/include/cairo/cairo-pdf.h;"void cairo_pdf_surface_set_metadata (cairo_surface_t *surface, cairo_pdf_metadata_t metadata, const char *utf8);";subroutine cairo_pdf_surface_set_metadata(surface, metadata, utf8) bind(c)
cairo;cairo_pdf_surface_set_page_label;;cairo-auto.f90;/usr/include/cairo/cairo-pdf.h;"void cairo_pdf_surface_set_page_label (cairo_surface_t *surface, const char *utf8);";subroutine cairo_pdf_surface_set_page_label(surface, utf8) bind(c)
cairo;cairo_pdf_surface_set_size;;cairo-auto.f90;/usr/include/cairo/cairo-pdf.h;"void cairo_pdf_surface_set_size (cairo_surface_t *surface, double width_in_points, double height_in_points);";subroutine cairo_pdf_surface_set_size(surface, width_in_points, height_in_points) bind(c)
cairo;cairo_pdf_surface_set_thumbnail_size;;cairo-auto.f90;/usr/include/cairo/cairo-pdf.h;"void cairo_pdf_surface_set_thumbnail_size (cairo_surface_t *surface, int width, int height);";subroutine cairo_pdf_surface_set_thumbnail_size(surface, width, height) bind(c)
cairo;cairo_pdf_version_to_string;;cairo-auto.f90;/usr/include/cairo/cairo-pdf.h;"const char * cairo_pdf_version_to_string (cairo_pdf_version_t version);";function cairo_pdf_version_to_string(version) bind(c)
cairo;cairo_pop_group;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_pattern_t * cairo_pop_group (cairo_t *cr);";function cairo_pop_group(cr) bind(c)
cairo;cairo_pop_group_to_source;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_pop_group_to_source (cairo_t *cr);";subroutine cairo_pop_group_to_source(cr) bind(c)
cairo;cairo_ps_get_levels;;cairo-auto.f90;/usr/include/cairo/cairo-ps.h;"void cairo_ps_get_levels (cairo_ps_level_t const **levels, int *num_levels);";subroutine cairo_ps_get_levels(levels, num_levels) bind(c)
cairo;cairo_ps_level_to_string;;cairo-auto.f90;/usr/include/cairo/cairo-ps.h;"const char * cairo_ps_level_to_string (cairo_ps_level_t level);";function cairo_ps_level_to_string(level) bind(c)
cairo;cairo_ps_surface_create;;cairo-auto.f90;/usr/include/cairo/cairo-ps.h;"cairo_surface_t * cairo_ps_surface_create (const char *filename, double width_in_points, double height_in_points);";function cairo_ps_surface_create(filename, width_in_points, height_in_points) bind(c)
cairo;cairo_ps_surface_create_for_stream;;cairo-auto.f90;/usr/include/cairo/cairo-ps.h;"cairo_surface_t * cairo_ps_surface_create_for_stream (cairo_write_func_t write_func, void *closure, double width_in_points, double height_in_points);";function cairo_ps_surface_create_for_stream(write_func, closure, width_in_points, height_in_points) bind(c)
cairo;cairo_ps_surface_dsc_begin_page_setup;;cairo-auto.f90;/usr/include/cairo/cairo-ps.h;"void cairo_ps_surface_dsc_begin_page_setup (cairo_surface_t *surface);";subroutine cairo_ps_surface_dsc_begin_page_setup(surface) bind(c)
cairo;cairo_ps_surface_dsc_begin_setup;;cairo-auto.f90;/usr/include/cairo/cairo-ps.h;"void cairo_ps_surface_dsc_begin_setup (cairo_surface_t *surface);";subroutine cairo_ps_surface_dsc_begin_setup(surface) bind(c)
cairo;cairo_ps_surface_dsc_comment;;cairo-auto.f90;/usr/include/cairo/cairo-ps.h;"void cairo_ps_surface_dsc_comment (cairo_surface_t *surface, const char *comment);";subroutine cairo_ps_surface_dsc_comment(surface, comment) bind(c)
cairo;cairo_ps_surface_get_eps;;cairo-auto.f90;/usr/include/cairo/cairo-ps.h;"cairo_bool_t cairo_ps_surface_get_eps (cairo_surface_t *surface);";function cairo_ps_surface_get_eps(surface) bind(c)
cairo;cairo_ps_surface_restrict_to_level;;cairo-auto.f90;/usr/include/cairo/cairo-ps.h;"void cairo_ps_surface_restrict_to_level (cairo_surface_t *surface, cairo_ps_level_t level);";subroutine cairo_ps_surface_restrict_to_level(surface, level) bind(c)
cairo;cairo_ps_surface_set_eps;;cairo-auto.f90;/usr/include/cairo/cairo-ps.h;"void cairo_ps_surface_set_eps (cairo_surface_t *surface, cairo_bool_t eps);";subroutine cairo_ps_surface_set_eps(surface, eps) bind(c)
cairo;cairo_ps_surface_set_size;;cairo-auto.f90;/usr/include/cairo/cairo-ps.h;"void cairo_ps_surface_set_size (cairo_surface_t *surface, double width_in_points, double height_in_points);";subroutine cairo_ps_surface_set_size(surface, width_in_points, height_in_points) bind(c)
cairo;cairo_push_group;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_push_group (cairo_t *cr);";subroutine cairo_push_group(cr) bind(c)
cairo;cairo_push_group_with_content;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_push_group_with_content (cairo_t *cr, cairo_content_t content);";subroutine cairo_push_group_with_content(cr, content) bind(c)
cairo;cairo_raster_source_pattern_get_acquire;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_raster_source_pattern_get_acquire (cairo_pattern_t *pattern, cairo_raster_source_acquire_func_t *acquire, cairo_raster_source_release_func_t *release);";subroutine cairo_raster_source_pattern_get_acquire(pattern, acquire, release) bind(c)
cairo;cairo_raster_source_pattern_get_callback_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void * cairo_raster_source_pattern_get_callback_data (cairo_pattern_t *pattern);";function cairo_raster_source_pattern_get_callback_data(pattern) bind(c)
cairo;cairo_raster_source_pattern_get_copy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_raster_source_copy_func_t cairo_raster_source_pattern_get_copy (cairo_pattern_t *pattern);";function cairo_raster_source_pattern_get_copy(pattern) bind(c)
cairo;cairo_raster_source_pattern_get_finish;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_raster_source_finish_func_t cairo_raster_source_pattern_get_finish (cairo_pattern_t *pattern);";function cairo_raster_source_pattern_get_finish(pattern) bind(c)
cairo;cairo_raster_source_pattern_get_snapshot;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_raster_source_snapshot_func_t cairo_raster_source_pattern_get_snapshot (cairo_pattern_t *pattern);";function cairo_raster_source_pattern_get_snapshot(pattern) bind(c)
cairo;cairo_raster_source_pattern_set_acquire;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_raster_source_pattern_set_acquire (cairo_pattern_t *pattern, cairo_raster_source_acquire_func_t acquire, cairo_raster_source_release_func_t release);";subroutine cairo_raster_source_pattern_set_acquire(pattern, acquire, release) bind(c)
cairo;cairo_raster_source_pattern_set_callback_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_raster_source_pattern_set_callback_data (cairo_pattern_t *pattern, void *data);";subroutine cairo_raster_source_pattern_set_callback_data(pattern, data) bind(c)
cairo;cairo_raster_source_pattern_set_copy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_raster_source_pattern_set_copy (cairo_pattern_t *pattern, cairo_raster_source_copy_func_t copy);";subroutine cairo_raster_source_pattern_set_copy(pattern, copy) bind(c)
cairo;cairo_raster_source_pattern_set_finish;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_raster_source_pattern_set_finish (cairo_pattern_t *pattern, cairo_raster_source_finish_func_t finish);";subroutine cairo_raster_source_pattern_set_finish(pattern, finish) bind(c)
cairo;cairo_raster_source_pattern_set_snapshot;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_raster_source_pattern_set_snapshot (cairo_pattern_t *pattern, cairo_raster_source_snapshot_func_t snapshot);";subroutine cairo_raster_source_pattern_set_snapshot(pattern, snapshot) bind(c)
cairo;cairo_recording_surface_create;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_recording_surface_create (cairo_content_t content, const cairo_rectangle_t *extents);";function cairo_recording_surface_create(content, extents) bind(c)
cairo;cairo_recording_surface_get_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_bool_t cairo_recording_surface_get_extents (cairo_surface_t *surface, cairo_rectangle_t *extents);";function cairo_recording_surface_get_extents(surface, extents) bind(c)
cairo;cairo_recording_surface_ink_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_recording_surface_ink_extents (cairo_surface_t *surface, double *x0, double *y0, double *width, double *height);";subroutine cairo_recording_surface_ink_extents(surface, x0, y0, width, height) bind(c)
cairo;cairo_rectangle;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_rectangle (cairo_t *cr, double x, double y, double width, double height);";subroutine cairo_rectangle(cr, x, y, width, height) bind(c)
cairo;cairo_rectangle_list_destroy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_rectangle_list_destroy (cairo_rectangle_list_t *rectangle_list);";subroutine cairo_rectangle_list_destroy(rectangle_list) bind(c)
cairo;cairo_reference;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_t * cairo_reference (cairo_t *cr);";function cairo_reference(cr) bind(c)
cairo;cairo_region_contains_point;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_bool_t cairo_region_contains_point (const cairo_region_t *region, int x, int y);";function cairo_region_contains_point(region, x, y) bind(c)
cairo;cairo_region_contains_rectangle;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_region_overlap_t cairo_region_contains_rectangle (const cairo_region_t *region, const cairo_rectangle_int_t *rectangle);";function cairo_region_contains_rectangle(region, rectangle) bind(c)
cairo;cairo_region_copy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_region_t * cairo_region_copy (const cairo_region_t *original);";function cairo_region_copy(original) bind(c)
cairo;cairo_region_create;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_region_t * cairo_region_create (void);";function cairo_region_create() bind(c)
cairo;cairo_region_create_rectangle;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_region_t * cairo_region_create_rectangle (const cairo_rectangle_int_t *rectangle);";function cairo_region_create_rectangle(rectangle) bind(c)
cairo;cairo_region_create_rectangles;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_region_t * cairo_region_create_rectangles (const cairo_rectangle_int_t *rects, int count);";function cairo_region_create_rectangles(rects, count) bind(c)
cairo;cairo_region_destroy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_region_destroy (cairo_region_t *region);";subroutine cairo_region_destroy(region) bind(c)
cairo;cairo_region_equal;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_bool_t cairo_region_equal (const cairo_region_t *a, const cairo_region_t *b);";function cairo_region_equal(a, b) bind(c)
cairo;cairo_region_get_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_region_get_extents (const cairo_region_t *region, cairo_rectangle_int_t *extents);";subroutine cairo_region_get_extents(region, extents) bind(c)
cairo;cairo_region_get_rectangle;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_region_get_rectangle (const cairo_region_t *region, int nth, cairo_rectangle_int_t *rectangle);";subroutine cairo_region_get_rectangle(region, nth, rectangle) bind(c)
cairo;cairo_region_intersect;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_region_intersect (cairo_region_t *dst, const cairo_region_t *other);";function cairo_region_intersect(dst, other) bind(c)
cairo;cairo_region_intersect_rectangle;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_region_intersect_rectangle (cairo_region_t *dst, const cairo_rectangle_int_t *rectangle);";function cairo_region_intersect_rectangle(dst, rectangle) bind(c)
cairo;cairo_region_is_empty;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_bool_t cairo_region_is_empty (const cairo_region_t *region);";function cairo_region_is_empty(region) bind(c)
cairo;cairo_region_num_rectangles;;cairo-auto.f90;/usr/include/cairo/cairo.h;"int cairo_region_num_rectangles (const cairo_region_t *region);";function cairo_region_num_rectangles(region) bind(c)
cairo;cairo_region_reference;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_region_t * cairo_region_reference (cairo_region_t *region);";function cairo_region_reference(region) bind(c)
cairo;cairo_region_status;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_region_status (const cairo_region_t *region);";function cairo_region_status(region) bind(c)
cairo;cairo_region_subtract;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_region_subtract (cairo_region_t *dst, const cairo_region_t *other);";function cairo_region_subtract(dst, other) bind(c)
cairo;cairo_region_subtract_rectangle;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_region_subtract_rectangle (cairo_region_t *dst, const cairo_rectangle_int_t *rectangle);";function cairo_region_subtract_rectangle(dst, rectangle) bind(c)
cairo;cairo_region_translate;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_region_translate (cairo_region_t *region, int dx, int dy);";subroutine cairo_region_translate(region, dx, dy) bind(c)
cairo;cairo_region_union;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_region_union (cairo_region_t *dst, const cairo_region_t *other);";function cairo_region_union(dst, other) bind(c)
cairo;cairo_region_union_rectangle;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_region_union_rectangle (cairo_region_t *dst, const cairo_rectangle_int_t *rectangle);";function cairo_region_union_rectangle(dst, rectangle) bind(c)
cairo;cairo_region_xor;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_region_xor (cairo_region_t *dst, const cairo_region_t *other);";function cairo_region_xor(dst, other) bind(c)
cairo;cairo_region_xor_rectangle;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_region_xor_rectangle (cairo_region_t *dst, const cairo_rectangle_int_t *rectangle);";function cairo_region_xor_rectangle(dst, rectangle) bind(c)
cairo;cairo_rel_curve_to;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_rel_curve_to (cairo_t *cr, double dx1, double dy1, double dx2, double dy2, double dx3, double dy3);";subroutine cairo_rel_curve_to(cr, dx1, dy1, dx2, dy2, dx3, dy3) bind(c)
cairo;cairo_rel_line_to;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_rel_line_to (cairo_t *cr, double dx, double dy);";subroutine cairo_rel_line_to(cr, dx, dy) bind(c)
cairo;cairo_rel_move_to;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_rel_move_to (cairo_t *cr, double dx, double dy);";subroutine cairo_rel_move_to(cr, dx, dy) bind(c)
cairo;cairo_reset_clip;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_reset_clip (cairo_t *cr);";subroutine cairo_reset_clip(cr) bind(c)
cairo;cairo_restore;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_restore (cairo_t *cr);";subroutine cairo_restore(cr) bind(c)
cairo;cairo_rotate;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_rotate (cairo_t *cr, double angle);";subroutine cairo_rotate(cr, angle) bind(c)
cairo;cairo_save;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_save (cairo_t *cr);";subroutine cairo_save(cr) bind(c)
cairo;cairo_scale;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_scale (cairo_t *cr, double sx, double sy);";subroutine cairo_scale(cr, sx, sy) bind(c)
cairo;cairo_scaled_font_create;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_scaled_font_t * cairo_scaled_font_create (cairo_font_face_t *font_face, const cairo_matrix_t *font_matrix, const cairo_matrix_t *ctm, const cairo_font_options_t *options);";function cairo_scaled_font_create(font_face, font_matrix, ctm, options) bind(c)
cairo;cairo_scaled_font_destroy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_scaled_font_destroy (cairo_scaled_font_t *scaled_font);";subroutine cairo_scaled_font_destroy(scaled_font) bind(c)
cairo;cairo_scaled_font_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_scaled_font_extents (cairo_scaled_font_t *scaled_font, cairo_font_extents_t *extents);";subroutine cairo_scaled_font_extents(scaled_font, extents) bind(c)
cairo;cairo_scaled_font_get_ctm;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_scaled_font_get_ctm (cairo_scaled_font_t *scaled_font, cairo_matrix_t *ctm);";subroutine cairo_scaled_font_get_ctm(scaled_font, ctm) bind(c)
cairo;cairo_scaled_font_get_font_face;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_font_face_t * cairo_scaled_font_get_font_face (cairo_scaled_font_t *scaled_font);";function cairo_scaled_font_get_font_face(scaled_font) bind(c)
cairo;cairo_scaled_font_get_font_matrix;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_scaled_font_get_font_matrix (cairo_scaled_font_t *scaled_font, cairo_matrix_t *font_matrix);";subroutine cairo_scaled_font_get_font_matrix(scaled_font, font_matrix) bind(c)
cairo;cairo_scaled_font_get_font_options;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_scaled_font_get_font_options (cairo_scaled_font_t *scaled_font, cairo_font_options_t *options);";subroutine cairo_scaled_font_get_font_options(scaled_font, options) bind(c)
cairo;cairo_scaled_font_get_reference_count;;cairo-auto.f90;/usr/include/cairo/cairo.h;"unsigned int cairo_scaled_font_get_reference_count (cairo_scaled_font_t *scaled_font);";function cairo_scaled_font_get_reference_count(scaled_font) bind(c)
cairo;cairo_scaled_font_get_scale_matrix;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_scaled_font_get_scale_matrix (cairo_scaled_font_t *scaled_font, cairo_matrix_t *scale_matrix);";subroutine cairo_scaled_font_get_scale_matrix(scaled_font, scale_matrix) bind(c)
cairo;cairo_scaled_font_get_type;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_font_type_t cairo_scaled_font_get_type (cairo_scaled_font_t *scaled_font);";function cairo_scaled_font_get_type(scaled_font) bind(c)
cairo;cairo_scaled_font_get_user_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void * cairo_scaled_font_get_user_data (cairo_scaled_font_t *scaled_font, const cairo_user_data_key_t *key);";function cairo_scaled_font_get_user_data(scaled_font, key) bind(c)
cairo;cairo_scaled_font_glyph_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_scaled_font_glyph_extents (cairo_scaled_font_t *scaled_font, const cairo_glyph_t *glyphs, int num_glyphs, cairo_text_extents_t *extents);";subroutine cairo_scaled_font_glyph_extents(scaled_font, glyphs, num_glyphs, extents) bind(c)
cairo;cairo_scaled_font_reference;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_scaled_font_t * cairo_scaled_font_reference (cairo_scaled_font_t *scaled_font);";function cairo_scaled_font_reference(scaled_font) bind(c)
cairo;cairo_scaled_font_set_user_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_scaled_font_set_user_data (cairo_scaled_font_t *scaled_font, const cairo_user_data_key_t *key, void *user_data, cairo_destroy_func_t destroy);";function cairo_scaled_font_set_user_data(scaled_font, key, user_data, destroy) bind(c)
cairo;cairo_scaled_font_status;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_scaled_font_status (cairo_scaled_font_t *scaled_font);";function cairo_scaled_font_status(scaled_font) bind(c)
cairo;cairo_scaled_font_text_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_scaled_font_text_extents (cairo_scaled_font_t *scaled_font, const char *utf8, cairo_text_extents_t *extents);";subroutine cairo_scaled_font_text_extents(scaled_font, utf8, extents) bind(c)
cairo;cairo_scaled_font_text_to_glyphs;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_scaled_font_text_to_glyphs (cairo_scaled_font_t *scaled_font, double x, double y, const char *utf8, int utf8_len, cairo_glyph_t **glyphs, int *num_glyphs, cairo_text_cluster_t **clusters, int *num_clusters, cairo_text_cluster_flags_t *cluster_flags);";function cairo_scaled_font_text_to_glyphs(scaled_font, x, y, utf8, utf8_len, glyphs, num_glyphs, clusters, num_clusters, cluster_flags) bind(c)
cairo;cairo_script_create;;cairo-auto.f90;/usr/include/cairo/cairo-script.h;"cairo_device_t * cairo_script_create (const char *filename);";function cairo_script_create(filename) bind(c)
cairo;cairo_script_create_for_stream;;cairo-auto.f90;/usr/include/cairo/cairo-script.h;"cairo_device_t * cairo_script_create_for_stream (cairo_write_func_t write_func, void *closure);";function cairo_script_create_for_stream(write_func, closure) bind(c)
cairo;cairo_script_from_recording_surface;;cairo-auto.f90;/usr/include/cairo/cairo-script.h;"cairo_status_t cairo_script_from_recording_surface (cairo_device_t *script, cairo_surface_t *recording_surface);";function cairo_script_from_recording_surface(script, recording_surface) bind(c)
cairo;cairo_script_get_mode;;cairo-auto.f90;/usr/include/cairo/cairo-script.h;"cairo_script_mode_t cairo_script_get_mode (cairo_device_t *script);";function cairo_script_get_mode(script) bind(c)
cairo;cairo_script_interpreter_create;;cairo-auto.f90;/usr/include/cairo/cairo-script-interpreter.h;"cairo_script_interpreter_t * cairo_script_interpreter_create (void);";function cairo_script_interpreter_create() bind(c)
cairo;cairo_script_interpreter_destroy;;cairo-auto.f90;/usr/include/cairo/cairo-script-interpreter.h;"cairo_status_t cairo_script_interpreter_destroy (cairo_script_interpreter_t *ctx);";function cairo_script_interpreter_destroy(ctx) bind(c)
cairo;cairo_script_interpreter_feed_stream;;cairo-auto.f90;/usr/include/cairo/cairo-script-interpreter.h;"cairo_status_t cairo_script_interpreter_feed_stream (cairo_script_interpreter_t *ctx, FILE *stream);";function cairo_script_interpreter_feed_stream(ctx, stream) bind(c)
cairo;cairo_script_interpreter_feed_string;;cairo-auto.f90;/usr/include/cairo/cairo-script-interpreter.h;"cairo_status_t cairo_script_interpreter_feed_string (cairo_script_interpreter_t *ctx, const char *line, int len);";function cairo_script_interpreter_feed_string(ctx, line, len) bind(c)
cairo;cairo_script_interpreter_finish;;cairo-auto.f90;/usr/include/cairo/cairo-script-interpreter.h;"cairo_status_t cairo_script_interpreter_finish (cairo_script_interpreter_t *ctx);";function cairo_script_interpreter_finish(ctx) bind(c)
cairo;cairo_script_interpreter_get_line_number;;cairo-auto.f90;/usr/include/cairo/cairo-script-interpreter.h;"unsigned int cairo_script_interpreter_get_line_number (cairo_script_interpreter_t *ctx);";function cairo_script_interpreter_get_line_number(ctx) bind(c)
cairo;cairo_script_interpreter_install_hooks;;cairo-auto.f90;/usr/include/cairo/cairo-script-interpreter.h;"void cairo_script_interpreter_install_hooks (cairo_script_interpreter_t *ctx, const cairo_script_interpreter_hooks_t *hooks);";subroutine cairo_script_interpreter_install_hooks(ctx, hooks) bind(c)
cairo;cairo_script_interpreter_reference;;cairo-auto.f90;/usr/include/cairo/cairo-script-interpreter.h;"cairo_script_interpreter_t * cairo_script_interpreter_reference (cairo_script_interpreter_t *ctx);";function cairo_script_interpreter_reference(ctx) bind(c)
cairo;cairo_script_interpreter_run;;cairo-auto.f90;/usr/include/cairo/cairo-script-interpreter.h;"cairo_status_t cairo_script_interpreter_run (cairo_script_interpreter_t *ctx, const char *filename);";function cairo_script_interpreter_run(ctx, filename) bind(c)
cairo;cairo_script_interpreter_translate_stream;;cairo-auto.f90;/usr/include/cairo/cairo-script-interpreter.h;"cairo_status_t cairo_script_interpreter_translate_stream (FILE *stream, cairo_write_func_t write_func, void *closure);";function cairo_script_interpreter_translate_stream(stream, write_func, closure) bind(c)
cairo;cairo_script_set_mode;;cairo-auto.f90;/usr/include/cairo/cairo-script.h;"void cairo_script_set_mode (cairo_device_t *script, cairo_script_mode_t mode);";subroutine cairo_script_set_mode(script, mode) bind(c)
cairo;cairo_script_surface_create;;cairo-auto.f90;/usr/include/cairo/cairo-script.h;"cairo_surface_t * cairo_script_surface_create (cairo_device_t *script, cairo_content_t content, double width, double height);";function cairo_script_surface_create(script, content, width, height) bind(c)
cairo;cairo_script_surface_create_for_target;;cairo-auto.f90;/usr/include/cairo/cairo-script.h;"cairo_surface_t * cairo_script_surface_create_for_target (cairo_device_t *script, cairo_surface_t *target);";function cairo_script_surface_create_for_target(script, target) bind(c)
cairo;cairo_script_write_comment;;cairo-auto.f90;/usr/include/cairo/cairo-script.h;"void cairo_script_write_comment (cairo_device_t *script, const char *comment, int len);";subroutine cairo_script_write_comment(script, comment, len) bind(c)
cairo;cairo_select_font_face;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_select_font_face (cairo_t *cr, const char *family, cairo_font_slant_t slant, cairo_font_weight_t weight);";subroutine cairo_select_font_face(cr, family, slant, weight) bind(c)
cairo;cairo_set_antialias;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_antialias (cairo_t *cr, cairo_antialias_t antialias);";subroutine cairo_set_antialias(cr, antialias) bind(c)
cairo;cairo_set_dash;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_dash (cairo_t *cr, const double *dashes, int num_dashes, double offset);";subroutine cairo_set_dash(cr, dashes, num_dashes, offset) bind(c)
cairo;cairo_set_fill_rule;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_fill_rule (cairo_t *cr, cairo_fill_rule_t fill_rule);";subroutine cairo_set_fill_rule(cr, fill_rule) bind(c)
cairo;cairo_set_font_face;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_font_face (cairo_t *cr, cairo_font_face_t *font_face);";subroutine cairo_set_font_face(cr, font_face) bind(c)
cairo;cairo_set_font_matrix;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_font_matrix (cairo_t *cr, const cairo_matrix_t *matrix);";subroutine cairo_set_font_matrix(cr, matrix) bind(c)
cairo;cairo_set_font_options;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_font_options (cairo_t *cr, const cairo_font_options_t *options);";subroutine cairo_set_font_options(cr, options) bind(c)
cairo;cairo_set_font_size;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_font_size (cairo_t *cr, double size);";subroutine cairo_set_font_size(cr, size) bind(c)
cairo;cairo_set_line_cap;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_line_cap (cairo_t *cr, cairo_line_cap_t line_cap);";subroutine cairo_set_line_cap(cr, line_cap) bind(c)
cairo;cairo_set_line_join;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_line_join (cairo_t *cr, cairo_line_join_t line_join);";subroutine cairo_set_line_join(cr, line_join) bind(c)
cairo;cairo_set_line_width;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_line_width (cairo_t *cr, double width);";subroutine cairo_set_line_width(cr, width) bind(c)
cairo;cairo_set_matrix;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_matrix (cairo_t *cr, const cairo_matrix_t *matrix);";subroutine cairo_set_matrix(cr, matrix) bind(c)
cairo;cairo_set_miter_limit;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_miter_limit (cairo_t *cr, double limit);";subroutine cairo_set_miter_limit(cr, limit) bind(c)
cairo;cairo_set_operator;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_operator (cairo_t *cr, cairo_operator_t op);";subroutine cairo_set_operator(cr, op) bind(c)
cairo;cairo_set_scaled_font;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_scaled_font (cairo_t *cr, const cairo_scaled_font_t *scaled_font);";subroutine cairo_set_scaled_font(cr, scaled_font) bind(c)
cairo;cairo_set_source;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_source (cairo_t *cr, cairo_pattern_t *source);";subroutine cairo_set_source(cr, source) bind(c)
cairo;cairo_set_source_rgb;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_source_rgb (cairo_t *cr, double red, double green, double blue);";subroutine cairo_set_source_rgb(cr, red, green, blue) bind(c)
cairo;cairo_set_source_rgba;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_source_rgba (cairo_t *cr, double red, double green, double blue, double alpha);";subroutine cairo_set_source_rgba(cr, red, green, blue, alpha) bind(c)
cairo;cairo_set_source_surface;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_source_surface (cairo_t *cr, cairo_surface_t *surface, double x, double y);";subroutine cairo_set_source_surface(cr, surface, x, y) bind(c)
cairo;cairo_set_tolerance;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_set_tolerance (cairo_t *cr, double tolerance);";subroutine cairo_set_tolerance(cr, tolerance) bind(c)
cairo;cairo_set_user_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_set_user_data (cairo_t *cr, const cairo_user_data_key_t *key, void *user_data, cairo_destroy_func_t destroy);";function cairo_set_user_data(cr, key, user_data, destroy) bind(c)
cairo;cairo_show_glyphs;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_show_glyphs (cairo_t *cr, const cairo_glyph_t *glyphs, int num_glyphs);";subroutine cairo_show_glyphs(cr, glyphs, num_glyphs) bind(c)
cairo;cairo_show_page;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_show_page (cairo_t *cr);";subroutine cairo_show_page(cr) bind(c)
cairo;cairo_show_text;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_show_text (cairo_t *cr, const char *utf8);";subroutine cairo_show_text(cr, utf8) bind(c)
cairo;cairo_show_text_glyphs;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_show_text_glyphs (cairo_t *cr, const char *utf8, int utf8_len, const cairo_glyph_t *glyphs, int num_glyphs, const cairo_text_cluster_t *clusters, int num_clusters, cairo_text_cluster_flags_t cluster_flags);";subroutine cairo_show_text_glyphs(cr, utf8, utf8_len, glyphs, num_glyphs, clusters, num_clusters, cluster_flags) bind(c)
cairo;cairo_status;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_status (cairo_t *cr);";function cairo_status(cr) bind(c)
cairo;cairo_status_to_string;;cairo-auto.f90;/usr/include/cairo/cairo.h;"const char * cairo_status_to_string (cairo_status_t status);";function cairo_status_to_string(status) bind(c)
cairo;cairo_stroke;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_stroke (cairo_t *cr);";subroutine cairo_stroke(cr) bind(c)
cairo;cairo_stroke_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_stroke_extents (cairo_t *cr, double *x1, double *y1, double *x2, double *y2);";subroutine cairo_stroke_extents(cr, x1, y1, x2, y2) bind(c)
cairo;cairo_stroke_preserve;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_stroke_preserve (cairo_t *cr);";subroutine cairo_stroke_preserve(cr) bind(c)
cairo;cairo_surface_copy_page;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_copy_page (cairo_surface_t *surface);";subroutine cairo_surface_copy_page(surface) bind(c)
cairo;cairo_surface_create_for_rectangle;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_surface_create_for_rectangle (cairo_surface_t *target, double x, double y, double width, double height);";function cairo_surface_create_for_rectangle(target, x, y, width, height) bind(c)
cairo;cairo_surface_create_observer;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_surface_create_observer (cairo_surface_t *target, cairo_surface_observer_mode_t mode);";function cairo_surface_create_observer(target, mode) bind(c)
cairo;cairo_surface_create_similar;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_surface_create_similar (cairo_surface_t *other, cairo_content_t content, int width, int height);";function cairo_surface_create_similar(other, content, width, height) bind(c)
cairo;cairo_surface_create_similar_image;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_surface_create_similar_image (cairo_surface_t *other, cairo_format_t format, int width, int height);";function cairo_surface_create_similar_image(other, format, width, height) bind(c)
cairo;cairo_surface_destroy;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_destroy (cairo_surface_t *surface);";subroutine cairo_surface_destroy(surface) bind(c)
cairo;cairo_surface_finish;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_finish (cairo_surface_t *surface);";subroutine cairo_surface_finish(surface) bind(c)
cairo;cairo_surface_flush;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_flush (cairo_surface_t *surface);";subroutine cairo_surface_flush(surface) bind(c)
cairo;cairo_surface_get_content;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_content_t cairo_surface_get_content (cairo_surface_t *surface);";function cairo_surface_get_content(surface) bind(c)
cairo;cairo_surface_get_device;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_device_t * cairo_surface_get_device (cairo_surface_t *surface);";function cairo_surface_get_device(surface) bind(c)
cairo;cairo_surface_get_device_offset;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_get_device_offset (cairo_surface_t *surface, double *x_offset, double *y_offset);";subroutine cairo_surface_get_device_offset(surface, x_offset, y_offset) bind(c)
cairo;cairo_surface_get_device_scale;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_get_device_scale (cairo_surface_t *surface, double *x_scale, double *y_scale);";subroutine cairo_surface_get_device_scale(surface, x_scale, y_scale) bind(c)
cairo;cairo_surface_get_fallback_resolution;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_get_fallback_resolution (cairo_surface_t *surface, double *x_pixels_per_inch, double *y_pixels_per_inch);";subroutine cairo_surface_get_fallback_resolution(surface, x_pixels_per_inch, y_pixels_per_inch) bind(c)
cairo;cairo_surface_get_font_options;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_get_font_options (cairo_surface_t *surface, cairo_font_options_t *options);";subroutine cairo_surface_get_font_options(surface, options) bind(c)
cairo;cairo_surface_get_mime_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_get_mime_data (cairo_surface_t *surface, const char *mime_type, const unsigned char **data, unsigned long *length);";subroutine cairo_surface_get_mime_data(surface, mime_type, data, length) bind(c)
cairo;cairo_surface_get_reference_count;;cairo-auto.f90;/usr/include/cairo/cairo.h;"unsigned int cairo_surface_get_reference_count (cairo_surface_t *surface);";function cairo_surface_get_reference_count(surface) bind(c)
cairo;cairo_surface_get_type;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_type_t cairo_surface_get_type (cairo_surface_t *surface);";function cairo_surface_get_type(surface) bind(c)
cairo;cairo_surface_get_user_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void * cairo_surface_get_user_data (cairo_surface_t *surface, const cairo_user_data_key_t *key);";function cairo_surface_get_user_data(surface, key) bind(c)
cairo;cairo_surface_has_show_text_glyphs;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_bool_t cairo_surface_has_show_text_glyphs (cairo_surface_t *surface);";function cairo_surface_has_show_text_glyphs(surface) bind(c)
cairo;cairo_surface_map_to_image;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_surface_map_to_image (cairo_surface_t *surface, const cairo_rectangle_int_t *extents);";function cairo_surface_map_to_image(surface, extents) bind(c)
cairo;cairo_surface_mark_dirty;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_mark_dirty (cairo_surface_t *surface);";subroutine cairo_surface_mark_dirty(surface) bind(c)
cairo;cairo_surface_mark_dirty_rectangle;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_mark_dirty_rectangle (cairo_surface_t *surface, int x, int y, int width, int height);";subroutine cairo_surface_mark_dirty_rectangle(surface, x, y, width, height) bind(c)
cairo;cairo_surface_observer_add_fill_callback;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_observer_add_fill_callback (cairo_surface_t *abstract_surface, cairo_surface_observer_callback_t func, void *data);";function cairo_surface_observer_add_fill_callback(abstract_surface, func, data) bind(c)
cairo;cairo_surface_observer_add_finish_callback;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_observer_add_finish_callback (cairo_surface_t *abstract_surface, cairo_surface_observer_callback_t func, void *data);";function cairo_surface_observer_add_finish_callback(abstract_surface, func, data) bind(c)
cairo;cairo_surface_observer_add_flush_callback;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_observer_add_flush_callback (cairo_surface_t *abstract_surface, cairo_surface_observer_callback_t func, void *data);";function cairo_surface_observer_add_flush_callback(abstract_surface, func, data) bind(c)
cairo;cairo_surface_observer_add_glyphs_callback;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_observer_add_glyphs_callback (cairo_surface_t *abstract_surface, cairo_surface_observer_callback_t func, void *data);";function cairo_surface_observer_add_glyphs_callback(abstract_surface, func, data) bind(c)
cairo;cairo_surface_observer_add_mask_callback;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_observer_add_mask_callback (cairo_surface_t *abstract_surface, cairo_surface_observer_callback_t func, void *data);";function cairo_surface_observer_add_mask_callback(abstract_surface, func, data) bind(c)
cairo;cairo_surface_observer_add_paint_callback;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_observer_add_paint_callback (cairo_surface_t *abstract_surface, cairo_surface_observer_callback_t func, void *data);";function cairo_surface_observer_add_paint_callback(abstract_surface, func, data) bind(c)
cairo;cairo_surface_observer_add_stroke_callback;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_observer_add_stroke_callback (cairo_surface_t *abstract_surface, cairo_surface_observer_callback_t func, void *data);";function cairo_surface_observer_add_stroke_callback(abstract_surface, func, data) bind(c)
cairo;cairo_surface_observer_elapsed;;cairo-auto.f90;/usr/include/cairo/cairo.h;"double cairo_surface_observer_elapsed (cairo_surface_t *surface);";function cairo_surface_observer_elapsed(surface) bind(c)
cairo;cairo_surface_observer_print;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_observer_print (cairo_surface_t *surface, cairo_write_func_t write_func, void *closure);";function cairo_surface_observer_print(surface, write_func, closure) bind(c)
cairo;cairo_surface_reference;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_surface_t * cairo_surface_reference (cairo_surface_t *surface);";function cairo_surface_reference(surface) bind(c)
cairo;cairo_surface_set_device_offset;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_set_device_offset (cairo_surface_t *surface, double x_offset, double y_offset);";subroutine cairo_surface_set_device_offset(surface, x_offset, y_offset) bind(c)
cairo;cairo_surface_set_device_scale;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_set_device_scale (cairo_surface_t *surface, double x_scale, double y_scale);";subroutine cairo_surface_set_device_scale(surface, x_scale, y_scale) bind(c)
cairo;cairo_surface_set_fallback_resolution;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_set_fallback_resolution (cairo_surface_t *surface, double x_pixels_per_inch, double y_pixels_per_inch);";subroutine cairo_surface_set_fallback_resolution(surface, x_pixels_per_inch, y_pixels_per_inch) bind(c)
cairo;cairo_surface_set_mime_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_set_mime_data (cairo_surface_t *surface, const char *mime_type, const unsigned char *data, unsigned long length, cairo_destroy_func_t destroy, void *closure);";function cairo_surface_set_mime_data(surface, mime_type, data, length, destroy, closure) bind(c)
cairo;cairo_surface_set_user_data;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_set_user_data (cairo_surface_t *surface, const cairo_user_data_key_t *key, void *user_data, cairo_destroy_func_t destroy);";function cairo_surface_set_user_data(surface, key, user_data, destroy) bind(c)
cairo;cairo_surface_show_page;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_show_page (cairo_surface_t *surface);";subroutine cairo_surface_show_page(surface) bind(c)
cairo;cairo_surface_status;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_status (cairo_surface_t *surface);";function cairo_surface_status(surface) bind(c)
cairo;cairo_surface_supports_mime_type;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_bool_t cairo_surface_supports_mime_type (cairo_surface_t *surface, const char *mime_type);";function cairo_surface_supports_mime_type(surface, mime_type) bind(c)
cairo;cairo_surface_unmap_image;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_surface_unmap_image (cairo_surface_t *surface, cairo_surface_t *image);";subroutine cairo_surface_unmap_image(surface, image) bind(c)
cairo;cairo_surface_write_to_png;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_write_to_png (cairo_surface_t *surface, const char *filename);";function cairo_surface_write_to_png(surface, filename) bind(c)
cairo;cairo_surface_write_to_png_stream;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_status_t cairo_surface_write_to_png_stream (cairo_surface_t *surface, cairo_write_func_t write_func, void *closure);";function cairo_surface_write_to_png_stream(surface, write_func, closure) bind(c)
cairo;cairo_svg_get_versions;;cairo-auto.f90;/usr/include/cairo/cairo-svg.h;"void cairo_svg_get_versions (cairo_svg_version_t const **versions, int *num_versions);";subroutine cairo_svg_get_versions(versions, num_versions) bind(c)
cairo;cairo_svg_surface_create;;cairo-auto.f90;/usr/include/cairo/cairo-svg.h;"cairo_surface_t * cairo_svg_surface_create (const char *filename, double width_in_points, double height_in_points);";function cairo_svg_surface_create(filename, width_in_points, height_in_points) bind(c)
cairo;cairo_svg_surface_create_for_stream;;cairo-auto.f90;/usr/include/cairo/cairo-svg.h;"cairo_surface_t * cairo_svg_surface_create_for_stream (cairo_write_func_t write_func, void *closure, double width_in_points, double height_in_points);";function cairo_svg_surface_create_for_stream(write_func, closure, width_in_points, height_in_points) bind(c)
cairo;cairo_svg_surface_get_document_unit;;cairo-auto.f90;/usr/include/cairo/cairo-svg.h;"cairo_svg_unit_t cairo_svg_surface_get_document_unit (cairo_surface_t *surface);";function cairo_svg_surface_get_document_unit(surface) bind(c)
cairo;cairo_svg_surface_restrict_to_version;;cairo-auto.f90;/usr/include/cairo/cairo-svg.h;"void cairo_svg_surface_restrict_to_version (cairo_surface_t *surface, cairo_svg_version_t version);";subroutine cairo_svg_surface_restrict_to_version(surface, version) bind(c)
cairo;cairo_svg_surface_set_document_unit;;cairo-auto.f90;/usr/include/cairo/cairo-svg.h;"void cairo_svg_surface_set_document_unit (cairo_surface_t *surface, cairo_svg_unit_t unit);";subroutine cairo_svg_surface_set_document_unit(surface, unit) bind(c)
cairo;cairo_svg_version_to_string;;cairo-auto.f90;/usr/include/cairo/cairo-svg.h;"const char * cairo_svg_version_to_string (cairo_svg_version_t version);";function cairo_svg_version_to_string(version) bind(c)
cairo;cairo_tag_begin;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_tag_begin (cairo_t *cr, const char *tag_name, const char *attributes);";subroutine cairo_tag_begin(cr, tag_name, attributes) bind(c)
cairo;cairo_tag_end;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_tag_end (cairo_t *cr, const char *tag_name);";subroutine cairo_tag_end(cr, tag_name) bind(c)
cairo;cairo_tee_surface_add;;cairo-auto.f90;/usr/include/cairo/cairo-tee.h;"void cairo_tee_surface_add (cairo_surface_t *surface, cairo_surface_t *target);";subroutine cairo_tee_surface_add(surface, target) bind(c)
cairo;cairo_tee_surface_create;;cairo-auto.f90;/usr/include/cairo/cairo-tee.h;"cairo_surface_t * cairo_tee_surface_create (cairo_surface_t *master);";function cairo_tee_surface_create(master) bind(c)
cairo;cairo_tee_surface_index;;cairo-auto.f90;/usr/include/cairo/cairo-tee.h;"cairo_surface_t * cairo_tee_surface_index (cairo_surface_t *surface, unsigned int index);";function cairo_tee_surface_index(surface, index) bind(c)
cairo;cairo_tee_surface_remove;;cairo-auto.f90;/usr/include/cairo/cairo-tee.h;"void cairo_tee_surface_remove (cairo_surface_t *surface, cairo_surface_t *target);";subroutine cairo_tee_surface_remove(surface, target) bind(c)
cairo;cairo_text_cluster_allocate;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_text_cluster_t * cairo_text_cluster_allocate (int num_clusters);";function cairo_text_cluster_allocate(num_clusters) bind(c)
cairo;cairo_text_cluster_free;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_text_cluster_free (cairo_text_cluster_t *clusters);";subroutine cairo_text_cluster_free(clusters) bind(c)
cairo;cairo_text_extents;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_text_extents (cairo_t *cr, const char *utf8, cairo_text_extents_t *extents);";subroutine cairo_text_extents(cr, utf8, extents) bind(c)
cairo;cairo_text_path;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_text_path (cairo_t *cr, const char *utf8);";subroutine cairo_text_path(cr, utf8) bind(c)
cairo;cairo_toy_font_face_create;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_font_face_t * cairo_toy_font_face_create (const char *family, cairo_font_slant_t slant, cairo_font_weight_t weight);";function cairo_toy_font_face_create(family, slant, weight) bind(c)
cairo;cairo_toy_font_face_get_family;;cairo-auto.f90;/usr/include/cairo/cairo.h;"const char * cairo_toy_font_face_get_family (cairo_font_face_t *font_face);";function cairo_toy_font_face_get_family(font_face) bind(c)
cairo;cairo_toy_font_face_get_slant;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_font_slant_t cairo_toy_font_face_get_slant (cairo_font_face_t *font_face);";function cairo_toy_font_face_get_slant(font_face) bind(c)
cairo;cairo_toy_font_face_get_weight;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_font_weight_t cairo_toy_font_face_get_weight (cairo_font_face_t *font_face);";function cairo_toy_font_face_get_weight(font_face) bind(c)
cairo;cairo_transform;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_transform (cairo_t *cr, const cairo_matrix_t *matrix);";subroutine cairo_transform(cr, matrix) bind(c)
cairo;cairo_translate;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_translate (cairo_t *cr, double tx, double ty);";subroutine cairo_translate(cr, tx, ty) bind(c)
cairo;cairo_user_font_face_create;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_font_face_t * cairo_user_font_face_create (void);";function cairo_user_font_face_create() bind(c)
cairo;cairo_user_font_face_get_init_func;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_user_scaled_font_init_func_t cairo_user_font_face_get_init_func (cairo_font_face_t *font_face);";function cairo_user_font_face_get_init_func(font_face) bind(c)
cairo;cairo_user_font_face_get_render_glyph_func;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_user_scaled_font_render_glyph_func_t cairo_user_font_face_get_render_glyph_func (cairo_font_face_t *font_face);";function cairo_user_font_face_get_render_glyph_func(font_face) bind(c)
cairo;cairo_user_font_face_get_text_to_glyphs_func;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_user_scaled_font_text_to_glyphs_func_t cairo_user_font_face_get_text_to_glyphs_func (cairo_font_face_t *font_face);";function cairo_user_font_face_get_text_to_glyphs_func(font_face) bind(c)
cairo;cairo_user_font_face_get_unicode_to_glyph_func;;cairo-auto.f90;/usr/include/cairo/cairo.h;"cairo_user_scaled_font_unicode_to_glyph_func_t cairo_user_font_face_get_unicode_to_glyph_func (cairo_font_face_t *font_face);";function cairo_user_font_face_get_unicode_to_glyph_func(font_face) bind(c)
cairo;cairo_user_font_face_set_init_func;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_user_font_face_set_init_func (cairo_font_face_t *font_face, cairo_user_scaled_font_init_func_t init_func);";subroutine cairo_user_font_face_set_init_func(font_face, init_func) bind(c)
cairo;cairo_user_font_face_set_render_glyph_func;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_user_font_face_set_render_glyph_func (cairo_font_face_t *font_face, cairo_user_scaled_font_render_glyph_func_t render_glyph_func);";subroutine cairo_user_font_face_set_render_glyph_func(font_face, render_glyph_func) bind(c)
cairo;cairo_user_font_face_set_text_to_glyphs_func;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_user_font_face_set_text_to_glyphs_func (cairo_font_face_t *font_face, cairo_user_scaled_font_text_to_glyphs_func_t text_to_glyphs_func);";subroutine cairo_user_font_face_set_text_to_glyphs_func(font_face, text_to_glyphs_func) bind(c)
cairo;cairo_user_font_face_set_unicode_to_glyph_func;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_user_font_face_set_unicode_to_glyph_func (cairo_font_face_t *font_face, cairo_user_scaled_font_unicode_to_glyph_func_t unicode_to_glyph_func);";subroutine cairo_user_font_face_set_unicode_to_glyph_func(font_face, unicode_to_glyph_func) bind(c)
cairo;cairo_user_to_device;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_user_to_device (cairo_t *cr, double *x, double *y);";subroutine cairo_user_to_device(cr, x, y) bind(c)
cairo;cairo_user_to_device_distance;;cairo-auto.f90;/usr/include/cairo/cairo.h;"void cairo_user_to_device_distance (cairo_t *cr, double *dx, double *dy);";subroutine cairo_user_to_device_distance(cr, dx, dy) bind(c)
cairo;cairo_version;;cairo-auto.f90;/usr/include/cairo/cairo.h;"int cairo_version (void);";function cairo_version() bind(c)
cairo;cairo_version_string;;cairo-auto.f90;/usr/include/cairo/cairo.h;"const char* cairo_version_string (void);";function cairo_version_string() bind(c)
cairo;cairo_xcb_device_debug_cap_xrender_version;;cairo-auto.f90;/usr/include/cairo/cairo-xcb.h;"void cairo_xcb_device_debug_cap_xrender_version (cairo_device_t *device, int major_version, int minor_version);";subroutine cairo_xcb_device_debug_cap_xrender_version(device, major_version, minor_version) bind(c)
cairo;cairo_xcb_device_debug_cap_xshm_version;;cairo-auto.f90;/usr/include/cairo/cairo-xcb.h;"void cairo_xcb_device_debug_cap_xshm_version (cairo_device_t *device, int major_version, int minor_version);";subroutine cairo_xcb_device_debug_cap_xshm_version(device, major_version, minor_version) bind(c)
cairo;cairo_xcb_device_debug_get_precision;;cairo-auto.f90;/usr/include/cairo/cairo-xcb.h;"int cairo_xcb_device_debug_get_precision (cairo_device_t *device);";function cairo_xcb_device_debug_get_precision(device) bind(c)
cairo;cairo_xcb_device_debug_set_precision;;cairo-auto.f90;/usr/include/cairo/cairo-xcb.h;"void cairo_xcb_device_debug_set_precision (cairo_device_t *device, int precision);";subroutine cairo_xcb_device_debug_set_precision(device, precision) bind(c)
cairo;cairo_xcb_device_get_connection;;cairo-auto.f90;/usr/include/cairo/cairo-xcb.h;"xcb_connection_t * cairo_xcb_device_get_connection (cairo_device_t *device);";function cairo_xcb_device_get_connection(device) bind(c)
cairo;cairo_xcb_surface_create;;cairo-auto.f90;/usr/include/cairo/cairo-xcb.h;"cairo_surface_t * cairo_xcb_surface_create (xcb_connection_t *connection, xcb_drawable_t drawable, xcb_visualtype_t *visual, int width, int height);";function cairo_xcb_surface_create(connection, drawable, visual, width, height) bind(c)
cairo;cairo_xcb_surface_create_for_bitmap;;cairo-auto.f90;/usr/include/cairo/cairo-xcb.h;"cairo_surface_t * cairo_xcb_surface_create_for_bitmap (xcb_connection_t *connection, xcb_screen_t *screen, xcb_pixmap_t bitmap, int width, int height);";function cairo_xcb_surface_create_for_bitmap(connection, screen, bitmap, width, height) bind(c)
cairo;cairo_xcb_surface_create_with_xrender_format;;cairo-auto.f90;/usr/include/cairo/cairo-xcb.h;"cairo_surface_t * cairo_xcb_surface_create_with_xrender_format (xcb_connection_t *connection, xcb_screen_t *screen, xcb_drawable_t drawable, xcb_render_pictforminfo_t *format, int width, int height);";function cairo_xcb_surface_create_with_xrender_format(connection, screen, drawable, format, width, height) bind(c)
cairo;cairo_xcb_surface_set_drawable;;cairo-auto.f90;/usr/include/cairo/cairo-xcb.h;"void cairo_xcb_surface_set_drawable (cairo_surface_t *surface, xcb_drawable_t drawable, int width, int height);";subroutine cairo_xcb_surface_set_drawable(surface, drawable, width, height) bind(c)
cairo;cairo_xcb_surface_set_size;;cairo-auto.f90;/usr/include/cairo/cairo-xcb.h;"void cairo_xcb_surface_set_size (cairo_surface_t *surface, int width, int height);";subroutine cairo_xcb_surface_set_size(surface, width, height) bind(c)
cairo;cairo_xlib_device_debug_cap_xrender_version;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"void cairo_xlib_device_debug_cap_xrender_version (cairo_device_t *device, int major_version, int minor_version);";subroutine cairo_xlib_device_debug_cap_xrender_version(device, major_version, minor_version) bind(c)
cairo;cairo_xlib_device_debug_get_precision;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"int cairo_xlib_device_debug_get_precision (cairo_device_t *device);";function cairo_xlib_device_debug_get_precision(device) bind(c)
cairo;cairo_xlib_device_debug_set_precision;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"void cairo_xlib_device_debug_set_precision (cairo_device_t *device, int precision);";subroutine cairo_xlib_device_debug_set_precision(device, precision) bind(c)
cairo;cairo_xlib_surface_create;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"cairo_surface_t * cairo_xlib_surface_create (Display *dpy, Drawable drawable, Visual *visual, int width, int height);";function cairo_xlib_surface_create(dpy, drawable, visual, width, height) bind(c)
cairo;cairo_xlib_surface_create_for_bitmap;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"cairo_surface_t * cairo_xlib_surface_create_for_bitmap (Display *dpy, Pixmap bitmap, Screen *screen, int width, int height);";function cairo_xlib_surface_create_for_bitmap(dpy, bitmap, screen, width, height) bind(c)
cairo;cairo_xlib_surface_create_with_xrender_format;;cairo-auto.f90;/usr/include/cairo/cairo-xlib-xrender.h;"cairo_surface_t * cairo_xlib_surface_create_with_xrender_format (Display *dpy, Drawable drawable, Screen *screen, XRenderPictFormat *format, int width, int height);";function cairo_xlib_surface_create_with_xrender_format(dpy, drawable, screen, format, width, height) bind(c)
cairo;cairo_xlib_surface_get_depth;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"int cairo_xlib_surface_get_depth (cairo_surface_t *surface);";function cairo_xlib_surface_get_depth(surface) bind(c)
cairo;cairo_xlib_surface_get_display;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"Display * cairo_xlib_surface_get_display (cairo_surface_t *surface);";function cairo_xlib_surface_get_display(surface) bind(c)
cairo;cairo_xlib_surface_get_drawable;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"Drawable cairo_xlib_surface_get_drawable (cairo_surface_t *surface);";function cairo_xlib_surface_get_drawable(surface) bind(c)
cairo;cairo_xlib_surface_get_height;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"int cairo_xlib_surface_get_height (cairo_surface_t *surface);";function cairo_xlib_surface_get_height(surface) bind(c)
cairo;cairo_xlib_surface_get_screen;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"Screen * cairo_xlib_surface_get_screen (cairo_surface_t *surface);";function cairo_xlib_surface_get_screen(surface) bind(c)
cairo;cairo_xlib_surface_get_visual;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"Visual * cairo_xlib_surface_get_visual (cairo_surface_t *surface);";function cairo_xlib_surface_get_visual(surface) bind(c)
cairo;cairo_xlib_surface_get_width;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"int cairo_xlib_surface_get_width (cairo_surface_t *surface);";function cairo_xlib_surface_get_width(surface) bind(c)
cairo;cairo_xlib_surface_get_xrender_format;;cairo-auto.f90;/usr/include/cairo/cairo-xlib-xrender.h;"XRenderPictFormat * cairo_xlib_surface_get_xrender_format (cairo_surface_t *surface);";function cairo_xlib_surface_get_xrender_format(surface) bind(c)
cairo;cairo_xlib_surface_set_drawable;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"void cairo_xlib_surface_set_drawable (cairo_surface_t *surface, Drawable drawable, int width, int height);";subroutine cairo_xlib_surface_set_drawable(surface, drawable, width, height) bind(c)
cairo;cairo_xlib_surface_set_size;;cairo-auto.f90;/usr/include/cairo/cairo-xlib.h;"void cairo_xlib_surface_set_size (cairo_surface_t *surface, int width, int height);";subroutine cairo_xlib_surface_set_size(surface, width, height) bind(c)
g;alloca;;glib-auto.f90;/usr/include/glib-2.0/glib/galloca.h;"char *alloca ();";function alloca() bind(c)
g;atexit;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"int atexit (void (*)(void));";function atexit() bind(c)
g;g_abort;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"G_NORETURN void g_abort (void) G_ANALYZER_NORETURN;";subroutine g_abort() bind(c)
g;g_access;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_access (const gchar *filename, int mode);";function g_access(filename, mode) bind(c)
g;g_action_activate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gaction.h;"void g_action_activate (GAction *action, GVariant *parameter);";subroutine g_action_activate(action, parameter) bind(c)
g;g_action_change_state;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gaction.h;"void g_action_change_state (GAction *action, GVariant *value);";subroutine g_action_change_state(action, value) bind(c)
g;g_action_get_enabled;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gaction.h;"gboolean g_action_get_enabled (GAction *action);";function g_action_get_enabled(action) bind(c)
g;g_action_get_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gaction.h;"const gchar * g_action_get_name (GAction *action);";function g_action_get_name(action) bind(c)
g;g_action_get_parameter_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gaction.h;"const GVariantType * g_action_get_parameter_type (GAction *action);";function g_action_get_parameter_type(action) bind(c)
g;g_action_get_state;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gaction.h;"GVariant * g_action_get_state (GAction *action);";function g_action_get_state(action) bind(c)
g;g_action_get_state_hint;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gaction.h;"GVariant * g_action_get_state_hint (GAction *action);";function g_action_get_state_hint(action) bind(c)
g;g_action_get_state_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gaction.h;"const GVariantType * g_action_get_state_type (GAction *action);";function g_action_get_state_type(action) bind(c)
g;g_action_get_type;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gio/gaction.h;"GType g_action_get_type (void) G_GNUC_CONST;";function g_action_get_type() bind(c)
g;g_action_group_action_added;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"void g_action_group_action_added (GActionGroup *action_group, const gchar *action_name);";subroutine g_action_group_action_added(action_group, action_name) bind(c)
g;g_action_group_action_enabled_changed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"void g_action_group_action_enabled_changed (GActionGroup *action_group, const gchar *action_name, gboolean enabled);";subroutine g_action_group_action_enabled_changed(action_group, action_name, enabled) bind(c)
g;g_action_group_action_removed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"void g_action_group_action_removed (GActionGroup *action_group, const gchar *action_name);";subroutine g_action_group_action_removed(action_group, action_name) bind(c)
g;g_action_group_action_state_changed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"void g_action_group_action_state_changed (GActionGroup *action_group, const gchar *action_name, GVariant *state);";subroutine g_action_group_action_state_changed(action_group, action_name, state) bind(c)
g;g_action_group_activate_action;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"void g_action_group_activate_action (GActionGroup *action_group, const gchar *action_name, GVariant *parameter);";subroutine g_action_group_activate_action(action_group, action_name, parameter) bind(c)
g;g_action_group_change_action_state;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"void g_action_group_change_action_state (GActionGroup *action_group, const gchar *action_name, GVariant *value);";subroutine g_action_group_change_action_state(action_group, action_name, value) bind(c)
g;g_action_group_get_action_enabled;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"gboolean g_action_group_get_action_enabled (GActionGroup *action_group, const gchar *action_name);";function g_action_group_get_action_enabled(action_group, action_name) bind(c)
g;g_action_group_get_action_parameter_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"const GVariantType * g_action_group_get_action_parameter_type (GActionGroup *action_group, const gchar *action_name);";function g_action_group_get_action_parameter_type(action_group, action_name) bind(c)
g;g_action_group_get_action_state;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"GVariant * g_action_group_get_action_state (GActionGroup *action_group, const gchar *action_name);";function g_action_group_get_action_state(action_group, action_name) bind(c)
g;g_action_group_get_action_state_hint;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"GVariant * g_action_group_get_action_state_hint (GActionGroup *action_group, const gchar *action_name);";function g_action_group_get_action_state_hint(action_group, action_name) bind(c)
g;g_action_group_get_action_state_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"const GVariantType * g_action_group_get_action_state_type (GActionGroup *action_group, const gchar *action_name);";function g_action_group_get_action_state_type(action_group, action_name) bind(c)
g;g_action_group_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"GType g_action_group_get_type (void) G_GNUC_CONST;";function g_action_group_get_type() bind(c)
g;g_action_group_has_action;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"gboolean g_action_group_has_action (GActionGroup *action_group, const gchar *action_name);";function g_action_group_has_action(action_group, action_name) bind(c)
g;g_action_group_list_actions;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"gchar ** g_action_group_list_actions (GActionGroup *action_group);";function g_action_group_list_actions(action_group) bind(c)
g;g_action_group_query_action;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroup.h;"gboolean g_action_group_query_action (GActionGroup *action_group, const gchar *action_name, gboolean *enabled, const GVariantType **parameter_type, const GVariantType **state_type, GVariant **state_hint, GVariant **state);";function g_action_group_query_action(action_group, action_name, enabled, parameter_type, state_type, state_hint, state) bind(c)
g;g_action_map_add_action;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gactionmap.h;"void g_action_map_add_action (GActionMap *action_map, GAction *action);";subroutine g_action_map_add_action(action_map, action) bind(c)
g;g_action_map_add_action_entries;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gactionmap.h;"void g_action_map_add_action_entries (GActionMap *action_map, const GActionEntry *entries, gint n_entries, gpointer user_data);";subroutine g_action_map_add_action_entries(action_map, entries, n_entries, user_data) bind(c)
g;g_action_map_get_type;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gactionmap.h;"GType g_action_map_get_type (void) G_GNUC_CONST;";function g_action_map_get_type() bind(c)
g;g_action_map_lookup_action;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gactionmap.h;"GAction * g_action_map_lookup_action (GActionMap *action_map, const gchar *action_name);";function g_action_map_lookup_action(action_map, action_name) bind(c)
g;g_action_map_remove_action;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gactionmap.h;"void g_action_map_remove_action (GActionMap *action_map, const gchar *action_name);";subroutine g_action_map_remove_action(action_map, action_name) bind(c)
g;g_action_name_is_valid;GLIB_AVAILABLE_IN_2_28;glib-auto.f90;/usr/include/glib-2.0/gio/gaction.h;"gboolean g_action_name_is_valid (const gchar *action_name);";function g_action_name_is_valid(action_name) bind(c)
g;g_action_parse_detailed_name;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gaction.h;"gboolean g_action_parse_detailed_name (const gchar *detailed_name, gchar **action_name, GVariant **target_value, GError **error);";function g_action_parse_detailed_name(detailed_name, action_name, target_value, error) bind(c)
g;g_action_print_detailed_name;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gaction.h;"gchar * g_action_print_detailed_name (const gchar *action_name, GVariant *target_value);";function g_action_print_detailed_name(action_name, target_value) bind(c)
g;g_allocator_free;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_allocator_free (GAllocator *allocator);";subroutine g_allocator_free(allocator) bind(c)
g;g_allocator_new;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"GAllocator * g_allocator_new (const gchar *name, guint n_preallocs);";function g_allocator_new(name, n_preallocs) bind(c)
g;g_app_info_add_supports_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_add_supports_type (GAppInfo *appinfo, const char *content_type, GError **error);";function g_app_info_add_supports_type(appinfo, content_type, error) bind(c)
g;g_app_info_can_delete;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_can_delete (GAppInfo *appinfo);";function g_app_info_can_delete(appinfo) bind(c)
g;g_app_info_can_remove_supports_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_can_remove_supports_type (GAppInfo *appinfo);";function g_app_info_can_remove_supports_type(appinfo) bind(c)
g;g_app_info_create_from_commandline;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GAppInfo * g_app_info_create_from_commandline (const char *commandline, const char *application_name, GAppInfoCreateFlags flags, GError **error);";function g_app_info_create_from_commandline(commandline, application_name, flags, error) bind(c)
g;g_app_info_delete;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_delete (GAppInfo *appinfo);";function g_app_info_delete(appinfo) bind(c)
g;g_app_info_dup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GAppInfo * g_app_info_dup (GAppInfo *appinfo);";function g_app_info_dup(appinfo) bind(c)
g;g_app_info_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_equal (GAppInfo *appinfo1, GAppInfo *appinfo2);";function g_app_info_equal(appinfo1, appinfo2) bind(c)
g;g_app_info_get_all;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GList * g_app_info_get_all (void);";function g_app_info_get_all() bind(c)
g;g_app_info_get_all_for_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GList * g_app_info_get_all_for_type (const char *content_type);";function g_app_info_get_all_for_type(content_type) bind(c)
g;g_app_info_get_commandline;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"const char *g_app_info_get_commandline (GAppInfo *appinfo);";function g_app_info_get_commandline(appinfo) bind(c)
g;g_app_info_get_default_for_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GAppInfo *g_app_info_get_default_for_type (const char *content_type, gboolean must_support_uris);";function g_app_info_get_default_for_type(content_type, must_support_uris) bind(c)
g;g_app_info_get_default_for_uri_scheme;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GAppInfo *g_app_info_get_default_for_uri_scheme (const char *uri_scheme);";function g_app_info_get_default_for_uri_scheme(uri_scheme) bind(c)
g;g_app_info_get_description;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"const char *g_app_info_get_description (GAppInfo *appinfo);";function g_app_info_get_description(appinfo) bind(c)
g;g_app_info_get_display_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"const char *g_app_info_get_display_name (GAppInfo *appinfo);";function g_app_info_get_display_name(appinfo) bind(c)
g;g_app_info_get_executable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"const char *g_app_info_get_executable (GAppInfo *appinfo);";function g_app_info_get_executable(appinfo) bind(c)
g;g_app_info_get_fallback_for_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GList * g_app_info_get_fallback_for_type (const gchar *content_type);";function g_app_info_get_fallback_for_type(content_type) bind(c)
g;g_app_info_get_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GIcon * g_app_info_get_icon (GAppInfo *appinfo);";function g_app_info_get_icon(appinfo) bind(c)
g;g_app_info_get_id;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"const char *g_app_info_get_id (GAppInfo *appinfo);";function g_app_info_get_id(appinfo) bind(c)
g;g_app_info_get_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"const char *g_app_info_get_name (GAppInfo *appinfo);";function g_app_info_get_name(appinfo) bind(c)
g;g_app_info_get_recommended_for_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GList * g_app_info_get_recommended_for_type (const gchar *content_type);";function g_app_info_get_recommended_for_type(content_type) bind(c)
g;g_app_info_get_supported_types;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"const char **g_app_info_get_supported_types (GAppInfo *appinfo);";function g_app_info_get_supported_types(appinfo) bind(c)
g;g_app_info_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GType g_app_info_get_type (void) G_GNUC_CONST;";function g_app_info_get_type() bind(c)
g;g_app_info_launch;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_launch (GAppInfo *appinfo, GList *files, GAppLaunchContext *context, GError **error);";function g_app_info_launch(appinfo, files, context, error) bind(c)
g;g_app_info_launch_default_for_uri;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_launch_default_for_uri (const char *uri, GAppLaunchContext *context, GError **error);";function g_app_info_launch_default_for_uri(uri, context, error) bind(c)
g;g_app_info_launch_default_for_uri_async;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"void g_app_info_launch_default_for_uri_async (const char *uri, GAppLaunchContext *context, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_app_info_launch_default_for_uri_async(uri, context, cancellable, callback, user_data) bind(c)
g;g_app_info_launch_default_for_uri_finish;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_launch_default_for_uri_finish (GAsyncResult *result, GError **error);";function g_app_info_launch_default_for_uri_finish(result, error) bind(c)
g;g_app_info_launch_uris;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_launch_uris (GAppInfo *appinfo, GList *uris, GAppLaunchContext *context, GError **error);";function g_app_info_launch_uris(appinfo, uris, context, error) bind(c)
g;g_app_info_launch_uris_async;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"void g_app_info_launch_uris_async (GAppInfo *appinfo, GList *uris, GAppLaunchContext *context, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_app_info_launch_uris_async(appinfo, uris, context, cancellable, callback, user_data) bind(c)
g;g_app_info_launch_uris_finish;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_launch_uris_finish (GAppInfo *appinfo, GAsyncResult *result, GError **error);";function g_app_info_launch_uris_finish(appinfo, result, error) bind(c)
g;g_app_info_monitor_get;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GAppInfoMonitor * g_app_info_monitor_get (void);";function g_app_info_monitor_get() bind(c)
g;g_app_info_monitor_get_type;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GType g_app_info_monitor_get_type (void);";function g_app_info_monitor_get_type() bind(c)
g;g_app_info_remove_supports_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_remove_supports_type (GAppInfo *appinfo, const char *content_type, GError **error);";function g_app_info_remove_supports_type(appinfo, content_type, error) bind(c)
g;g_app_info_reset_type_associations;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"void g_app_info_reset_type_associations (const char *content_type);";subroutine g_app_info_reset_type_associations(content_type) bind(c)
g;g_app_info_set_as_default_for_extension;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_set_as_default_for_extension (GAppInfo *appinfo, const char *extension, GError **error);";function g_app_info_set_as_default_for_extension(appinfo, extension, error) bind(c)
g;g_app_info_set_as_default_for_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_set_as_default_for_type (GAppInfo *appinfo, const char *content_type, GError **error);";function g_app_info_set_as_default_for_type(appinfo, content_type, error) bind(c)
g;g_app_info_set_as_last_used_for_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_set_as_last_used_for_type (GAppInfo *appinfo, const char *content_type, GError **error);";function g_app_info_set_as_last_used_for_type(appinfo, content_type, error) bind(c)
g;g_app_info_should_show;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_should_show (GAppInfo *appinfo);";function g_app_info_should_show(appinfo) bind(c)
g;g_app_info_supports_files;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_supports_files (GAppInfo *appinfo);";function g_app_info_supports_files(appinfo) bind(c)
g;g_app_info_supports_uris;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"gboolean g_app_info_supports_uris (GAppInfo *appinfo);";function g_app_info_supports_uris(appinfo) bind(c)
g;g_app_launch_context_get_display;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"char * g_app_launch_context_get_display (GAppLaunchContext *context, GAppInfo *info, GList *files);";function g_app_launch_context_get_display(context, info, files) bind(c)
g;g_app_launch_context_get_environment;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"char ** g_app_launch_context_get_environment (GAppLaunchContext *context);";function g_app_launch_context_get_environment(context) bind(c)
g;g_app_launch_context_get_startup_notify_id;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"char * g_app_launch_context_get_startup_notify_id (GAppLaunchContext *context, GAppInfo *info, GList *files);";function g_app_launch_context_get_startup_notify_id(context, info, files) bind(c)
g;g_app_launch_context_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GType g_app_launch_context_get_type (void) G_GNUC_CONST;";function g_app_launch_context_get_type() bind(c)
g;g_app_launch_context_launch_failed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"void g_app_launch_context_launch_failed (GAppLaunchContext *context, const char * startup_notify_id);";subroutine g_app_launch_context_launch_failed(context, startup_notify_id) bind(c)
g;g_app_launch_context_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"GAppLaunchContext *g_app_launch_context_new (void);";function g_app_launch_context_new() bind(c)
g;g_app_launch_context_setenv;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"void g_app_launch_context_setenv (GAppLaunchContext *context, const char *variable, const char *value);";subroutine g_app_launch_context_setenv(context, variable, value) bind(c)
g;g_app_launch_context_unsetenv;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gappinfo.h;"void g_app_launch_context_unsetenv (GAppLaunchContext *context, const char *variable);";subroutine g_app_launch_context_unsetenv(context, variable) bind(c)
g;g_application_activate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_activate (GApplication *application);";subroutine g_application_activate(application) bind(c)
g;g_application_add_main_option;GLIB_AVAILABLE_IN_2_42;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_add_main_option (GApplication *application, const char *long_name, char short_name, GOptionFlags flags, GOptionArg arg, const char *description, const char *arg_description);";subroutine g_application_add_main_option(application, long_name, short_name, flags, arg, description, arg_description) bind(c)
g;g_application_add_main_option_entries;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_add_main_option_entries (GApplication *application, const GOptionEntry *entries);";subroutine g_application_add_main_option_entries(application, entries) bind(c)
g;g_application_add_option_group;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_add_option_group (GApplication *application, GOptionGroup *group);";subroutine g_application_add_option_group(application, group) bind(c)
g;g_application_bind_busy_property;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_bind_busy_property (GApplication *application, gpointer object, const gchar *property);";subroutine g_application_bind_busy_property(application, object, property) bind(c)
g;g_application_command_line_create_file_for_arg;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gapplicationcommandline.h;"GFile * g_application_command_line_create_file_for_arg (GApplicationCommandLine *cmdline, const gchar *arg);";function g_application_command_line_create_file_for_arg(cmdline, arg) bind(c)
g;g_application_command_line_get_arguments;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplicationcommandline.h;"gchar ** g_application_command_line_get_arguments (GApplicationCommandLine *cmdline, int *argc);";function g_application_command_line_get_arguments(cmdline, argc) bind(c)
g;g_application_command_line_get_cwd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplicationcommandline.h;"const gchar * g_application_command_line_get_cwd (GApplicationCommandLine *cmdline);";function g_application_command_line_get_cwd(cmdline) bind(c)
g;g_application_command_line_get_environ;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplicationcommandline.h;"const gchar * const * g_application_command_line_get_environ (GApplicationCommandLine *cmdline);";function g_application_command_line_get_environ(cmdline) bind(c)
g;g_application_command_line_get_exit_status;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplicationcommandline.h;"int g_application_command_line_get_exit_status (GApplicationCommandLine *cmdline);";function g_application_command_line_get_exit_status(cmdline) bind(c)
g;g_application_command_line_get_is_remote;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplicationcommandline.h;"gboolean g_application_command_line_get_is_remote (GApplicationCommandLine *cmdline);";function g_application_command_line_get_is_remote(cmdline) bind(c)
g;g_application_command_line_get_options_dict;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gapplicationcommandline.h;"GVariantDict * g_application_command_line_get_options_dict (GApplicationCommandLine *cmdline);";function g_application_command_line_get_options_dict(cmdline) bind(c)
g;g_application_command_line_get_platform_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplicationcommandline.h;"GVariant * g_application_command_line_get_platform_data (GApplicationCommandLine *cmdline);";function g_application_command_line_get_platform_data(cmdline) bind(c)
g;g_application_command_line_get_stdin;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gapplicationcommandline.h;"GInputStream * g_application_command_line_get_stdin (GApplicationCommandLine *cmdline);";function g_application_command_line_get_stdin(cmdline) bind(c)
g;g_application_command_line_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplicationcommandline.h;"GType g_application_command_line_get_type (void) G_GNUC_CONST;";function g_application_command_line_get_type() bind(c)
g;g_application_command_line_getenv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplicationcommandline.h;"const gchar * g_application_command_line_getenv (GApplicationCommandLine *cmdline, const gchar *name);";function g_application_command_line_getenv(cmdline, name) bind(c)
g;g_application_command_line_set_exit_status;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplicationcommandline.h;"void g_application_command_line_set_exit_status (GApplicationCommandLine *cmdline, int exit_status);";subroutine g_application_command_line_set_exit_status(cmdline, exit_status) bind(c)
g;g_application_get_application_id;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"const gchar * g_application_get_application_id (GApplication *application);";function g_application_get_application_id(application) bind(c)
g;g_application_get_dbus_connection;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"GDBusConnection * g_application_get_dbus_connection (GApplication *application);";function g_application_get_dbus_connection(application) bind(c)
g;g_application_get_dbus_object_path;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"const gchar * g_application_get_dbus_object_path (GApplication *application);";function g_application_get_dbus_object_path(application) bind(c)
g;g_application_get_default;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"GApplication * g_application_get_default (void);";function g_application_get_default() bind(c)
g;g_application_get_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"GApplicationFlags g_application_get_flags (GApplication *application);";function g_application_get_flags(application) bind(c)
g;g_application_get_inactivity_timeout;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"guint g_application_get_inactivity_timeout (GApplication *application);";function g_application_get_inactivity_timeout(application) bind(c)
g;g_application_get_is_busy;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"gboolean g_application_get_is_busy (GApplication *application);";function g_application_get_is_busy(application) bind(c)
g;g_application_get_is_registered;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"gboolean g_application_get_is_registered (GApplication *application);";function g_application_get_is_registered(application) bind(c)
g;g_application_get_is_remote;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"gboolean g_application_get_is_remote (GApplication *application);";function g_application_get_is_remote(application) bind(c)
g;g_application_get_resource_base_path;GLIB_AVAILABLE_IN_2_42;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"const gchar * g_application_get_resource_base_path (GApplication *application);";function g_application_get_resource_base_path(application) bind(c)
g;g_application_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"GType g_application_get_type (void) G_GNUC_CONST;";function g_application_get_type() bind(c)
g;g_application_hold;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_hold (GApplication *application);";subroutine g_application_hold(application) bind(c)
g;g_application_id_is_valid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"gboolean g_application_id_is_valid (const gchar *application_id);";function g_application_id_is_valid(application_id) bind(c)
g;g_application_mark_busy;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_mark_busy (GApplication *application);";subroutine g_application_mark_busy(application) bind(c)
g;g_application_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"GApplication * g_application_new (const gchar *application_id, GApplicationFlags flags);";function g_application_new(application_id, flags) bind(c)
g;g_application_open;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_open (GApplication *application, GFile **files, gint n_files, const gchar *hint);";subroutine g_application_open(application, files, n_files, hint) bind(c)
g;g_application_quit;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_quit (GApplication *application);";subroutine g_application_quit(application) bind(c)
g;g_application_register;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"gboolean g_application_register (GApplication *application, GCancellable *cancellable, GError **error);";function g_application_register(application, cancellable, error) bind(c)
g;g_application_release;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_release (GApplication *application);";subroutine g_application_release(application) bind(c)
g;g_application_run;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"int g_application_run (GApplication *application, int argc, char **argv);";function g_application_run(application, argc, argv) bind(c)
g;g_application_send_notification;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_send_notification (GApplication *application, const gchar *id, GNotification *notification);";subroutine g_application_send_notification(application, id, notification) bind(c)
g;g_application_set_action_group;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_set_action_group (GApplication *application, GActionGroup *action_group);";subroutine g_application_set_action_group(application, action_group) bind(c)
g;g_application_set_application_id;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_set_application_id (GApplication *application, const gchar *application_id);";subroutine g_application_set_application_id(application, application_id) bind(c)
g;g_application_set_default;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_set_default (GApplication *application);";subroutine g_application_set_default(application) bind(c)
g;g_application_set_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_set_flags (GApplication *application, GApplicationFlags flags);";subroutine g_application_set_flags(application, flags) bind(c)
g;g_application_set_inactivity_timeout;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_set_inactivity_timeout (GApplication *application, guint inactivity_timeout);";subroutine g_application_set_inactivity_timeout(application, inactivity_timeout) bind(c)
g;g_application_set_option_context_description;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_set_option_context_description (GApplication *application, const gchar *description);";subroutine g_application_set_option_context_description(application, description) bind(c)
g;g_application_set_option_context_parameter_string;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_set_option_context_parameter_string (GApplication *application, const gchar *parameter_string);";subroutine g_application_set_option_context_parameter_string(application, parameter_string) bind(c)
g;g_application_set_option_context_summary;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_set_option_context_summary (GApplication *application, const gchar *summary);";subroutine g_application_set_option_context_summary(application, summary) bind(c)
g;g_application_set_resource_base_path;GLIB_AVAILABLE_IN_2_42;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_set_resource_base_path (GApplication *application, const gchar *resource_path);";subroutine g_application_set_resource_base_path(application, resource_path) bind(c)
g;g_application_unbind_busy_property;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_unbind_busy_property (GApplication *application, gpointer object, const gchar *property);";subroutine g_application_unbind_busy_property(application, object, property) bind(c)
g;g_application_unmark_busy;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_unmark_busy (GApplication *application);";subroutine g_application_unmark_busy(application) bind(c)
g;g_application_withdraw_notification;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gapplication.h;"void g_application_withdraw_notification (GApplication *application, const gchar *id);";subroutine g_application_withdraw_notification(application, id) bind(c)
g;g_array_append_vals;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GArray* g_array_append_vals (GArray *array, gconstpointer data, guint len);";function g_array_append_vals(array, data, len) bind(c)
g;g_array_binary_search;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gboolean g_array_binary_search (GArray *array, gconstpointer target, GCompareFunc compare_func, guint *out_match_index);";function g_array_binary_search(array, target, compare_func, out_match_index) bind(c)
g;g_array_copy;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GArray* g_array_copy (GArray *array);";function g_array_copy(array) bind(c)
g;g_array_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gchar* g_array_free (GArray *array, gboolean free_segment);";function g_array_free(array, free_segment) bind(c)
g;g_array_get_element_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"guint g_array_get_element_size (GArray *array);";function g_array_get_element_size(array) bind(c)
g;g_array_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_array_get_type (void) G_GNUC_CONST;";function g_array_get_type() bind(c)
g;g_array_insert_vals;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GArray* g_array_insert_vals (GArray *array, guint index_, gconstpointer data, guint len);";function g_array_insert_vals(array, index_, data, len) bind(c)
g;g_array_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GArray* g_array_new (gboolean zero_terminated, gboolean clear_, guint element_size);";function g_array_new(zero_terminated, clear_, element_size) bind(c)
g;g_array_prepend_vals;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GArray* g_array_prepend_vals (GArray *array, gconstpointer data, guint len);";function g_array_prepend_vals(array, data, len) bind(c)
g;g_array_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GArray *g_array_ref (GArray *array);";function g_array_ref(array) bind(c)
g;g_array_remove_index;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GArray* g_array_remove_index (GArray *array, guint index_);";function g_array_remove_index(array, index_) bind(c)
g;g_array_remove_index_fast;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GArray* g_array_remove_index_fast (GArray *array, guint index_);";function g_array_remove_index_fast(array, index_) bind(c)
g;g_array_remove_range;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GArray* g_array_remove_range (GArray *array, guint index_, guint length);";function g_array_remove_range(array, index_, length) bind(c)
g;g_array_set_clear_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_array_set_clear_func (GArray *array, GDestroyNotify clear_func);";subroutine g_array_set_clear_func(array, clear_func) bind(c)
g;g_array_set_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GArray* g_array_set_size (GArray *array, guint length);";function g_array_set_size(array, length) bind(c)
g;g_array_sized_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GArray* g_array_sized_new (gboolean zero_terminated, gboolean clear_, guint element_size, guint reserved_size);";function g_array_sized_new(zero_terminated, clear_, element_size, reserved_size) bind(c)
g;g_array_sort;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_array_sort (GArray *array, GCompareFunc compare_func);";subroutine g_array_sort(array, compare_func) bind(c)
g;g_array_sort_with_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_array_sort_with_data (GArray *array, GCompareDataFunc compare_func, gpointer user_data);";subroutine g_array_sort_with_data(array, compare_func, user_data) bind(c)
g;g_array_steal;GLIB_AVAILABLE_IN_2_64;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gpointer g_array_steal (GArray *array, gsize *len);";function g_array_steal(array, len) bind(c)
g;g_array_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_array_unref (GArray *array);";subroutine g_array_unref(array) bind(c)
g;g_ascii_digit_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gint g_ascii_digit_value (gchar c) G_GNUC_CONST;";function g_ascii_digit_value(c) bind(c)
g;g_ascii_dtostr;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar * g_ascii_dtostr (gchar *buffer, gint buf_len, gdouble d);";function g_ascii_dtostr(buffer, buf_len, d) bind(c)
g;g_ascii_formatd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar * g_ascii_formatd (gchar *buffer, gint buf_len, const gchar *format, gdouble d);";function g_ascii_formatd(buffer, buf_len, format, d) bind(c)
g;g_ascii_strcasecmp;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gint g_ascii_strcasecmp (const gchar *s1, const gchar *s2);";function g_ascii_strcasecmp(s1, s2) bind(c)
g;g_ascii_strdown;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_ascii_strdown (const gchar *str, gssize len) G_GNUC_MALLOC;";function g_ascii_strdown(str, len) bind(c)
g;g_ascii_string_to_signed;GLIB_AVAILABLE_IN_2_54;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gboolean g_ascii_string_to_signed (const gchar *str, guint base, gint64 min, gint64 max, gint64 *out_num, GError **error);";function g_ascii_string_to_signed(str, base, min, max, out_num, error) bind(c)
g;g_ascii_string_to_unsigned;GLIB_AVAILABLE_IN_2_54;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gboolean g_ascii_string_to_unsigned (const gchar *str, guint base, guint64 min, guint64 max, guint64 *out_num, GError **error);";function g_ascii_string_to_unsigned(str, base, min, max, out_num, error) bind(c)
g;g_ascii_strncasecmp;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gint g_ascii_strncasecmp (const gchar *s1, const gchar *s2, gsize n);";function g_ascii_strncasecmp(s1, s2, n) bind(c)
g;g_ascii_strtod;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gdouble g_ascii_strtod (const gchar *nptr, gchar **endptr);";function g_ascii_strtod(nptr, endptr) bind(c)
g;g_ascii_strtoll;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gint64 g_ascii_strtoll (const gchar *nptr, gchar **endptr, guint base);";function g_ascii_strtoll(nptr, endptr, base) bind(c)
g;g_ascii_strtoull;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"guint64 g_ascii_strtoull (const gchar *nptr, gchar **endptr, guint base);";function g_ascii_strtoull(nptr, endptr, base) bind(c)
g;g_ascii_strup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_ascii_strup (const gchar *str, gssize len) G_GNUC_MALLOC;";function g_ascii_strup(str, len) bind(c)
g;g_ascii_tolower;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar g_ascii_tolower (gchar c) G_GNUC_CONST;";function g_ascii_tolower(c) bind(c)
g;g_ascii_toupper;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar g_ascii_toupper (gchar c) G_GNUC_CONST;";function g_ascii_toupper(c) bind(c)
g;g_ascii_xdigit_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gint g_ascii_xdigit_value (gchar c) G_GNUC_CONST;";function g_ascii_xdigit_value(c) bind(c)
g;g_assert_warning;;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"G_NORETURN void g_assert_warning (const char *log_domain, const char *file, const int line, const char *pretty_function, const char *expression);";subroutine g_assert_warning(log_domain, file, line, pretty_function, expression) bind(c)
g;g_assertion_message;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_assertion_message (const char *domain, const char *file, int line, const char *func, const char *message) G_ANALYZER_NORETURN;";subroutine g_assertion_message(domain, file, line, func, message) bind(c)
g;g_assertion_message_cmpnum;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_assertion_message_cmpnum (const char *domain, const char *file, int line, const char *func, const char *expr, long double arg1, const char *cmp, long double arg2, char numtype) G_ANALYZER_NORETURN;";subroutine g_assertion_message_cmpnum(domain, file, line, func, expr, arg1, cmp, arg2, numtype) bind(c)
g;g_assertion_message_cmpstr;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_assertion_message_cmpstr (const char *domain, const char *file, int line, const char *func, const char *expr, const char *arg1, const char *cmp, const char *arg2) G_ANALYZER_NORETURN;";subroutine g_assertion_message_cmpstr(domain, file, line, func, expr, arg1, cmp, arg2) bind(c)
g;g_assertion_message_cmpstrv;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_assertion_message_cmpstrv (const char *domain, const char *file, int line, const char *func, const char *expr, const char * const *arg1, const char * const *arg2, gsize first_wrong_idx) G_ANALYZER_NORETURN;";subroutine g_assertion_message_cmpstrv(domain, file, line, func, expr, arg1, arg2, first_wrong_idx) bind(c)
g;g_assertion_message_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_assertion_message_error (const char *domain, const char *file, int line, const char *func, const char *expr, const GError *error, GQuark error_domain, int error_code) G_ANALYZER_NORETURN;";subroutine g_assertion_message_error(domain, file, line, func, expr, error, error_domain, error_code) bind(c)
g;g_assertion_message_expr;;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"G_NORETURN void g_assertion_message_expr (const char *domain, const char *file, int line, const char *func, const char *expr);";subroutine g_assertion_message_expr(domain, file, line, func, expr) bind(c)
g;g_async_initable_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gasyncinitable.h;"GType g_async_initable_get_type (void) G_GNUC_CONST;";function g_async_initable_get_type() bind(c)
g;g_async_initable_init_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gasyncinitable.h;"void g_async_initable_init_async (GAsyncInitable *initable, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_async_initable_init_async(initable, io_priority, cancellable, callback, user_data) bind(c)
g;g_async_initable_init_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gasyncinitable.h;"gboolean g_async_initable_init_finish (GAsyncInitable *initable, GAsyncResult *res, GError **error);";function g_async_initable_init_finish(initable, res, error) bind(c)
g;g_async_initable_new_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gasyncinitable.h;"GObject *g_async_initable_new_finish (GAsyncInitable *initable, GAsyncResult *res, GError **error);";function g_async_initable_new_finish(initable, res, error) bind(c)
g;g_async_initable_new_valist_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gasyncinitable.h;"void g_async_initable_new_valist_async (GType object_type, const gchar *first_property_name, va_list var_args, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_async_initable_new_valist_async(object_type, first_property_name, var_args, io_priority, cancellable, callback, user_data) bind(c)
g;g_async_initable_newv_async;GLIB_DEPRECATED_IN_2_54_FOR(g_object_new_with_properties and g_async_initable_init_async);glib-auto.f90;/usr/include/glib-2.0/gio/gasyncinitable.h;"void g_async_initable_newv_async (GType object_type, guint n_parameters, GParameter *parameters, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_async_initable_newv_async(object_type, n_parameters, parameters, io_priority, cancellable, callback, user_data) bind(c)
g;g_async_queue_length;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"gint g_async_queue_length (GAsyncQueue *queue);";function g_async_queue_length(queue) bind(c)
g;g_async_queue_length_unlocked;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"gint g_async_queue_length_unlocked (GAsyncQueue *queue);";function g_async_queue_length_unlocked(queue) bind(c)
g;g_async_queue_lock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_lock (GAsyncQueue *queue);";subroutine g_async_queue_lock(queue) bind(c)
g;g_async_queue_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"GAsyncQueue *g_async_queue_new (void);";function g_async_queue_new() bind(c)
g;g_async_queue_new_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"GAsyncQueue *g_async_queue_new_full (GDestroyNotify item_free_func);";function g_async_queue_new_full(item_free_func) bind(c)
g;g_async_queue_pop;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"gpointer g_async_queue_pop (GAsyncQueue *queue);";function g_async_queue_pop(queue) bind(c)
g;g_async_queue_pop_unlocked;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"gpointer g_async_queue_pop_unlocked (GAsyncQueue *queue);";function g_async_queue_pop_unlocked(queue) bind(c)
g;g_async_queue_push;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_push (GAsyncQueue *queue, gpointer data);";subroutine g_async_queue_push(queue, data) bind(c)
g;g_async_queue_push_front;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_push_front (GAsyncQueue *queue, gpointer item);";subroutine g_async_queue_push_front(queue, item) bind(c)
g;g_async_queue_push_front_unlocked;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_push_front_unlocked (GAsyncQueue *queue, gpointer item);";subroutine g_async_queue_push_front_unlocked(queue, item) bind(c)
g;g_async_queue_push_sorted;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_push_sorted (GAsyncQueue *queue, gpointer data, GCompareDataFunc func, gpointer user_data);";subroutine g_async_queue_push_sorted(queue, data, func, user_data) bind(c)
g;g_async_queue_push_sorted_unlocked;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_push_sorted_unlocked (GAsyncQueue *queue, gpointer data, GCompareDataFunc func, gpointer user_data);";subroutine g_async_queue_push_sorted_unlocked(queue, data, func, user_data) bind(c)
g;g_async_queue_push_unlocked;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_push_unlocked (GAsyncQueue *queue, gpointer data);";subroutine g_async_queue_push_unlocked(queue, data) bind(c)
g;g_async_queue_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"GAsyncQueue *g_async_queue_ref (GAsyncQueue *queue);";function g_async_queue_ref(queue) bind(c)
g;g_async_queue_ref_unlocked;GLIB_DEPRECATED_FOR(g_async_queue_ref);glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_ref_unlocked (GAsyncQueue *queue);";subroutine g_async_queue_ref_unlocked(queue) bind(c)
g;g_async_queue_remove;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"gboolean g_async_queue_remove (GAsyncQueue *queue, gpointer item);";function g_async_queue_remove(queue, item) bind(c)
g;g_async_queue_remove_unlocked;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"gboolean g_async_queue_remove_unlocked (GAsyncQueue *queue, gpointer item);";function g_async_queue_remove_unlocked(queue, item) bind(c)
g;g_async_queue_sort;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_sort (GAsyncQueue *queue, GCompareDataFunc func, gpointer user_data);";subroutine g_async_queue_sort(queue, func, user_data) bind(c)
g;g_async_queue_sort_unlocked;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_sort_unlocked (GAsyncQueue *queue, GCompareDataFunc func, gpointer user_data);";subroutine g_async_queue_sort_unlocked(queue, func, user_data) bind(c)
g;g_async_queue_timed_pop;GLIB_DEPRECATED_FOR(g_async_queue_timeout_pop);glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"gpointer g_async_queue_timed_pop (GAsyncQueue *queue, GTimeVal *end_time);";function g_async_queue_timed_pop(queue, end_time) bind(c)
g;g_async_queue_timed_pop_unlocked;GLIB_DEPRECATED_FOR(g_async_queue_timeout_pop_unlocked);glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"gpointer g_async_queue_timed_pop_unlocked (GAsyncQueue *queue, GTimeVal *end_time);";function g_async_queue_timed_pop_unlocked(queue, end_time) bind(c)
g;g_async_queue_timeout_pop;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"gpointer g_async_queue_timeout_pop (GAsyncQueue *queue, guint64 timeout);";function g_async_queue_timeout_pop(queue, timeout) bind(c)
g;g_async_queue_timeout_pop_unlocked;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"gpointer g_async_queue_timeout_pop_unlocked (GAsyncQueue *queue, guint64 timeout);";function g_async_queue_timeout_pop_unlocked(queue, timeout) bind(c)
g;g_async_queue_try_pop;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"gpointer g_async_queue_try_pop (GAsyncQueue *queue);";function g_async_queue_try_pop(queue) bind(c)
g;g_async_queue_try_pop_unlocked;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"gpointer g_async_queue_try_pop_unlocked (GAsyncQueue *queue);";function g_async_queue_try_pop_unlocked(queue) bind(c)
g;g_async_queue_unlock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_unlock (GAsyncQueue *queue);";subroutine g_async_queue_unlock(queue) bind(c)
g;g_async_queue_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_unref (GAsyncQueue *queue);";subroutine g_async_queue_unref(queue) bind(c)
g;g_async_queue_unref_and_unlock;GLIB_DEPRECATED_FOR(g_async_queue_unref);glib-auto.f90;/usr/include/glib-2.0/glib/gasyncqueue.h;"void g_async_queue_unref_and_unlock (GAsyncQueue *queue);";subroutine g_async_queue_unref_and_unlock(queue) bind(c)
g;g_async_result_get_source_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gasyncresult.h;"GObject *g_async_result_get_source_object (GAsyncResult *res);";function g_async_result_get_source_object(res) bind(c)
g;g_async_result_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gasyncresult.h;"GType g_async_result_get_type (void) G_GNUC_CONST;";function g_async_result_get_type() bind(c)
g;g_async_result_get_user_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gasyncresult.h;"gpointer g_async_result_get_user_data (GAsyncResult *res);";function g_async_result_get_user_data(res) bind(c)
g;g_async_result_is_tagged;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gasyncresult.h;"gboolean g_async_result_is_tagged (GAsyncResult *res, gpointer source_tag);";function g_async_result_is_tagged(res, source_tag) bind(c)
g;g_async_result_legacy_propagate_error;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gasyncresult.h;"gboolean g_async_result_legacy_propagate_error (GAsyncResult *res, GError **error);";function g_async_result_legacy_propagate_error(res, error) bind(c)
g;g_atexit;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"void g_atexit (GVoidFunc func);";subroutine g_atexit(func) bind(c)
g;g_atomic_int_add;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"gint g_atomic_int_add (volatile gint *atomic, gint val);";function g_atomic_int_add(atomic, val) bind(c)
g;g_atomic_int_and;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"guint g_atomic_int_and (volatile guint *atomic, guint val);";function g_atomic_int_and(atomic, val) bind(c)
g;g_atomic_int_compare_and_exchange;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"gboolean g_atomic_int_compare_and_exchange (volatile gint *atomic, gint oldval, gint newval);";function g_atomic_int_compare_and_exchange(atomic, oldval, newval) bind(c)
g;g_atomic_int_dec_and_test;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"gboolean g_atomic_int_dec_and_test (volatile gint *atomic);";function g_atomic_int_dec_and_test(atomic) bind(c)
g;g_atomic_int_exchange_and_add;GLIB_DEPRECATED_IN_2_30_FOR(g_atomic_int_add);glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"gint g_atomic_int_exchange_and_add (volatile gint *atomic, gint val);";function g_atomic_int_exchange_and_add(atomic, val) bind(c)
g;g_atomic_int_get;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"gint g_atomic_int_get (const volatile gint *atomic);";function g_atomic_int_get(atomic) bind(c)
g;g_atomic_int_inc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"void g_atomic_int_inc (volatile gint *atomic);";subroutine g_atomic_int_inc(atomic) bind(c)
g;g_atomic_int_or;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"guint g_atomic_int_or (volatile guint *atomic, guint val);";function g_atomic_int_or(atomic, val) bind(c)
g;g_atomic_int_set;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"void g_atomic_int_set (volatile gint *atomic, gint newval);";subroutine g_atomic_int_set(atomic, newval) bind(c)
g;g_atomic_int_xor;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"guint g_atomic_int_xor (volatile guint *atomic, guint val);";function g_atomic_int_xor(atomic, val) bind(c)
g;g_atomic_pointer_add;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"gssize g_atomic_pointer_add (volatile void *atomic, gssize val);";function g_atomic_pointer_add(atomic, val) bind(c)
g;g_atomic_pointer_and;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"gsize g_atomic_pointer_and (volatile void *atomic, gsize val);";function g_atomic_pointer_and(atomic, val) bind(c)
g;g_atomic_pointer_compare_and_exchange;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"gboolean g_atomic_pointer_compare_and_exchange (volatile void *atomic, gpointer oldval, gpointer newval);";function g_atomic_pointer_compare_and_exchange(atomic, oldval, newval) bind(c)
g;g_atomic_pointer_get;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"gpointer g_atomic_pointer_get (const volatile void *atomic);";function g_atomic_pointer_get(atomic) bind(c)
g;g_atomic_pointer_or;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"gsize g_atomic_pointer_or (volatile void *atomic, gsize val);";function g_atomic_pointer_or(atomic, val) bind(c)
g;g_atomic_pointer_set;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"void g_atomic_pointer_set (volatile void *atomic, gpointer newval);";subroutine g_atomic_pointer_set(atomic, newval) bind(c)
g;g_atomic_pointer_xor;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gatomic.h;"gsize g_atomic_pointer_xor (volatile void *atomic, gsize val);";function g_atomic_pointer_xor(atomic, val) bind(c)
g;g_atomic_rc_box_acquire;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"gpointer g_atomic_rc_box_acquire (gpointer mem_block);";function g_atomic_rc_box_acquire(mem_block) bind(c)
g;g_atomic_rc_box_alloc;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"gpointer g_atomic_rc_box_alloc (gsize block_size) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE(1);";function g_atomic_rc_box_alloc(block_size) bind(c)
g;g_atomic_rc_box_alloc0;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"gpointer g_atomic_rc_box_alloc0 (gsize block_size) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE(1);";function g_atomic_rc_box_alloc0(block_size) bind(c)
g;g_atomic_rc_box_dup;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"gpointer g_atomic_rc_box_dup (gsize block_size, gconstpointer mem_block) G_GNUC_ALLOC_SIZE(1);";function g_atomic_rc_box_dup(block_size, mem_block) bind(c)
g;g_atomic_rc_box_get_size;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"gsize g_atomic_rc_box_get_size (gpointer mem_block);";function g_atomic_rc_box_get_size(mem_block) bind(c)
g;g_atomic_rc_box_release;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"void g_atomic_rc_box_release (gpointer mem_block);";subroutine g_atomic_rc_box_release(mem_block) bind(c)
g;g_atomic_rc_box_release_full;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"void g_atomic_rc_box_release_full (gpointer mem_block, GDestroyNotify clear_func);";subroutine g_atomic_rc_box_release_full(mem_block, clear_func) bind(c)
g;g_atomic_ref_count_compare;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefcount.h;"gboolean g_atomic_ref_count_compare (gatomicrefcount *arc, gint val);";function g_atomic_ref_count_compare(arc, val) bind(c)
g;g_atomic_ref_count_dec;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefcount.h;"gboolean g_atomic_ref_count_dec (gatomicrefcount *arc);";function g_atomic_ref_count_dec(arc) bind(c)
g;g_atomic_ref_count_inc;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefcount.h;"void g_atomic_ref_count_inc (gatomicrefcount *arc);";subroutine g_atomic_ref_count_inc(arc) bind(c)
g;g_atomic_ref_count_init;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefcount.h;"void g_atomic_ref_count_init (gatomicrefcount *arc);";subroutine g_atomic_ref_count_init(arc) bind(c)
g;g_base64_decode;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbase64.h;"guchar *g_base64_decode (const gchar *text, gsize *out_len) G_GNUC_MALLOC;";function g_base64_decode(text, out_len) bind(c)
g;g_base64_decode_inplace;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbase64.h;"guchar *g_base64_decode_inplace (gchar *text, gsize *out_len);";function g_base64_decode_inplace(text, out_len) bind(c)
g;g_base64_decode_step;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbase64.h;"gsize g_base64_decode_step (const gchar *in, gsize len, guchar *out, gint *state, guint *save);";function g_base64_decode_step(in, len, out, state, save) bind(c)
g;g_base64_encode;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbase64.h;"gchar* g_base64_encode (const guchar *data, gsize len) G_GNUC_MALLOC;";function g_base64_encode(data, len) bind(c)
g;g_base64_encode_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbase64.h;"gsize g_base64_encode_close (gboolean break_lines, gchar *out, gint *state, gint *save);";function g_base64_encode_close(break_lines, out, state, save) bind(c)
g;g_base64_encode_step;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbase64.h;"gsize g_base64_encode_step (const guchar *in, gsize len, gboolean break_lines, gchar *out, gint *state, gint *save);";function g_base64_encode_step(in, len, break_lines, out, state, save) bind(c)
g;g_basename;GLIB_DEPRECATED_FOR(g_path_get_basename);glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"const gchar *g_basename (const gchar *file_name);";function g_basename(file_name) bind(c)
g;g_binding_dup_source;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"GObject * g_binding_dup_source (GBinding *binding);";function g_binding_dup_source(binding) bind(c)
g;g_binding_dup_target;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"GObject * g_binding_dup_target (GBinding *binding);";function g_binding_dup_target(binding) bind(c)
g;g_binding_flags_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"GType g_binding_flags_get_type (void) G_GNUC_CONST;";function g_binding_flags_get_type() bind(c)
g;g_binding_get_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"GBindingFlags g_binding_get_flags (GBinding *binding);";function g_binding_get_flags(binding) bind(c)
g;g_binding_get_source;GLIB_DEPRECATED_IN_2_68_FOR(g_binding_dup_source);glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"GObject * g_binding_get_source (GBinding *binding);";function g_binding_get_source(binding) bind(c)
g;g_binding_get_source_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"const gchar * g_binding_get_source_property (GBinding *binding);";function g_binding_get_source_property(binding) bind(c)
g;g_binding_get_target;GLIB_DEPRECATED_IN_2_68_FOR(g_binding_dup_target);glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"GObject * g_binding_get_target (GBinding *binding);";function g_binding_get_target(binding) bind(c)
g;g_binding_get_target_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"const gchar * g_binding_get_target_property (GBinding *binding);";function g_binding_get_target_property(binding) bind(c)
g;g_binding_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"GType g_binding_get_type (void) G_GNUC_CONST;";function g_binding_get_type() bind(c)
g;g_binding_unbind;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"void g_binding_unbind (GBinding *binding);";subroutine g_binding_unbind(binding) bind(c)
g;g_bit_lock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbitlock.h;"void g_bit_lock (volatile gint *address, gint lock_bit);";subroutine g_bit_lock(address, lock_bit) bind(c)
g;g_bit_nth_lsf;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"gint g_bit_nth_lsf (gulong mask, gint nth_bit);";function g_bit_nth_lsf(mask, nth_bit) bind(c)
g;g_bit_nth_msf;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"gint g_bit_nth_msf (gulong mask, gint nth_bit);";function g_bit_nth_msf(mask, nth_bit) bind(c)
g;g_bit_storage;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"guint g_bit_storage (gulong number);";function g_bit_storage(number) bind(c)
g;g_bit_trylock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbitlock.h;"gboolean g_bit_trylock (volatile gint *address, gint lock_bit);";function g_bit_trylock(address, lock_bit) bind(c)
g;g_bit_unlock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbitlock.h;"void g_bit_unlock (volatile gint *address, gint lock_bit);";subroutine g_bit_unlock(address, lock_bit) bind(c)
g;g_blow_chunks;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_blow_chunks (void);";subroutine g_blow_chunks() bind(c)
g;g_bookmark_file_add_application;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_add_application (GBookmarkFile *bookmark, const gchar *uri, const gchar *name, const gchar *exec);";subroutine g_bookmark_file_add_application(bookmark, uri, name, exec) bind(c)
g;g_bookmark_file_add_group;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_add_group (GBookmarkFile *bookmark, const gchar *uri, const gchar *group);";subroutine g_bookmark_file_add_group(bookmark, uri, group) bind(c)
g;g_bookmark_file_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"GQuark g_bookmark_file_error_quark (void);";function g_bookmark_file_error_quark() bind(c)
g;g_bookmark_file_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_free (GBookmarkFile *bookmark);";subroutine g_bookmark_file_free(bookmark) bind(c)
g;g_bookmark_file_get_added;GLIB_DEPRECATED_IN_2_66_FOR(g_bookmark_file_get_added_date_time);glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"time_t g_bookmark_file_get_added (GBookmarkFile *bookmark, const gchar *uri, GError **error);";function g_bookmark_file_get_added(bookmark, uri, error) bind(c)
g;g_bookmark_file_get_added_date_time;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"GDateTime *g_bookmark_file_get_added_date_time (GBookmarkFile *bookmark, const char *uri, GError **error);";function g_bookmark_file_get_added_date_time(bookmark, uri, error) bind(c)
g;g_bookmark_file_get_app_info;GLIB_DEPRECATED_IN_2_66_FOR(g_bookmark_file_get_application_info);glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_get_app_info (GBookmarkFile *bookmark, const gchar *uri, const gchar *name, gchar **exec, guint *count, time_t *stamp, GError **error);";function g_bookmark_file_get_app_info(bookmark, uri, name, exec, count, stamp, error) bind(c)
g;g_bookmark_file_get_application_info;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_get_application_info (GBookmarkFile *bookmark, const char *uri, const char *name, char **exec, unsigned int *count, GDateTime **stamp, GError **error);";function g_bookmark_file_get_application_info(bookmark, uri, name, exec, count, stamp, error) bind(c)
g;g_bookmark_file_get_applications;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gchar ** g_bookmark_file_get_applications (GBookmarkFile *bookmark, const gchar *uri, gsize *length, GError **error);";function g_bookmark_file_get_applications(bookmark, uri, length, error) bind(c)
g;g_bookmark_file_get_description;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gchar * g_bookmark_file_get_description (GBookmarkFile *bookmark, const gchar *uri, GError **error) G_GNUC_MALLOC;";function g_bookmark_file_get_description(bookmark, uri, error) bind(c)
g;g_bookmark_file_get_groups;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gchar ** g_bookmark_file_get_groups (GBookmarkFile *bookmark, const gchar *uri, gsize *length, GError **error);";function g_bookmark_file_get_groups(bookmark, uri, length, error) bind(c)
g;g_bookmark_file_get_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_get_icon (GBookmarkFile *bookmark, const gchar *uri, gchar **href, gchar **mime_type, GError **error);";function g_bookmark_file_get_icon(bookmark, uri, href, mime_type, error) bind(c)
g;g_bookmark_file_get_is_private;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_get_is_private (GBookmarkFile *bookmark, const gchar *uri, GError **error);";function g_bookmark_file_get_is_private(bookmark, uri, error) bind(c)
g;g_bookmark_file_get_mime_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gchar * g_bookmark_file_get_mime_type (GBookmarkFile *bookmark, const gchar *uri, GError **error) G_GNUC_MALLOC;";function g_bookmark_file_get_mime_type(bookmark, uri, error) bind(c)
g;g_bookmark_file_get_modified;GLIB_DEPRECATED_IN_2_66_FOR(g_bookmark_file_get_modified_date_time);glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"time_t g_bookmark_file_get_modified (GBookmarkFile *bookmark, const gchar *uri, GError **error);";function g_bookmark_file_get_modified(bookmark, uri, error) bind(c)
g;g_bookmark_file_get_modified_date_time;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"GDateTime *g_bookmark_file_get_modified_date_time (GBookmarkFile *bookmark, const char *uri, GError **error);";function g_bookmark_file_get_modified_date_time(bookmark, uri, error) bind(c)
g;g_bookmark_file_get_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gint g_bookmark_file_get_size (GBookmarkFile *bookmark);";function g_bookmark_file_get_size(bookmark) bind(c)
g;g_bookmark_file_get_title;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gchar * g_bookmark_file_get_title (GBookmarkFile *bookmark, const gchar *uri, GError **error) G_GNUC_MALLOC;";function g_bookmark_file_get_title(bookmark, uri, error) bind(c)
g;g_bookmark_file_get_uris;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gchar ** g_bookmark_file_get_uris (GBookmarkFile *bookmark, gsize *length);";function g_bookmark_file_get_uris(bookmark, length) bind(c)
g;g_bookmark_file_get_visited;GLIB_DEPRECATED_IN_2_66_FOR(g_bookmark_file_get_visited_date_time);glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"time_t g_bookmark_file_get_visited (GBookmarkFile *bookmark, const gchar *uri, GError **error);";function g_bookmark_file_get_visited(bookmark, uri, error) bind(c)
g;g_bookmark_file_get_visited_date_time;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"GDateTime *g_bookmark_file_get_visited_date_time (GBookmarkFile *bookmark, const char *uri, GError **error);";function g_bookmark_file_get_visited_date_time(bookmark, uri, error) bind(c)
g;g_bookmark_file_has_application;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_has_application (GBookmarkFile *bookmark, const gchar *uri, const gchar *name, GError **error);";function g_bookmark_file_has_application(bookmark, uri, name, error) bind(c)
g;g_bookmark_file_has_group;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_has_group (GBookmarkFile *bookmark, const gchar *uri, const gchar *group, GError **error);";function g_bookmark_file_has_group(bookmark, uri, group, error) bind(c)
g;g_bookmark_file_has_item;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_has_item (GBookmarkFile *bookmark, const gchar *uri);";function g_bookmark_file_has_item(bookmark, uri) bind(c)
g;g_bookmark_file_load_from_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_load_from_data (GBookmarkFile *bookmark, const gchar *data, gsize length, GError **error);";function g_bookmark_file_load_from_data(bookmark, data, length, error) bind(c)
g;g_bookmark_file_load_from_data_dirs;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_load_from_data_dirs (GBookmarkFile *bookmark, const gchar *file, gchar **full_path, GError **error);";function g_bookmark_file_load_from_data_dirs(bookmark, file, full_path, error) bind(c)
g;g_bookmark_file_load_from_file;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_load_from_file (GBookmarkFile *bookmark, const gchar *filename, GError **error);";function g_bookmark_file_load_from_file(bookmark, filename, error) bind(c)
g;g_bookmark_file_move_item;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_move_item (GBookmarkFile *bookmark, const gchar *old_uri, const gchar *new_uri, GError **error);";function g_bookmark_file_move_item(bookmark, old_uri, new_uri, error) bind(c)
g;g_bookmark_file_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"GBookmarkFile *g_bookmark_file_new (void);";function g_bookmark_file_new() bind(c)
g;g_bookmark_file_remove_application;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_remove_application (GBookmarkFile *bookmark, const gchar *uri, const gchar *name, GError **error);";function g_bookmark_file_remove_application(bookmark, uri, name, error) bind(c)
g;g_bookmark_file_remove_group;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_remove_group (GBookmarkFile *bookmark, const gchar *uri, const gchar *group, GError **error);";function g_bookmark_file_remove_group(bookmark, uri, group, error) bind(c)
g;g_bookmark_file_remove_item;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_remove_item (GBookmarkFile *bookmark, const gchar *uri, GError **error);";function g_bookmark_file_remove_item(bookmark, uri, error) bind(c)
g;g_bookmark_file_set_added;GLIB_DEPRECATED_IN_2_66_FOR(g_bookmark_file_set_added_date_time);glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_set_added (GBookmarkFile *bookmark, const gchar *uri, time_t added);";subroutine g_bookmark_file_set_added(bookmark, uri, added) bind(c)
g;g_bookmark_file_set_added_date_time;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_set_added_date_time (GBookmarkFile *bookmark, const char *uri, GDateTime *added);";subroutine g_bookmark_file_set_added_date_time(bookmark, uri, added) bind(c)
g;g_bookmark_file_set_app_info;GLIB_DEPRECATED_IN_2_66_FOR(g_bookmark_file_set_application_info);glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_set_app_info (GBookmarkFile *bookmark, const gchar *uri, const gchar *name, const gchar *exec, gint count, time_t stamp, GError **error);";function g_bookmark_file_set_app_info(bookmark, uri, name, exec, count, stamp, error) bind(c)
g;g_bookmark_file_set_application_info;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_set_application_info (GBookmarkFile *bookmark, const char *uri, const char *name, const char *exec, int count, GDateTime *stamp, GError **error);";function g_bookmark_file_set_application_info(bookmark, uri, name, exec, count, stamp, error) bind(c)
g;g_bookmark_file_set_description;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_set_description (GBookmarkFile *bookmark, const gchar *uri, const gchar *description);";subroutine g_bookmark_file_set_description(bookmark, uri, description) bind(c)
g;g_bookmark_file_set_groups;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_set_groups (GBookmarkFile *bookmark, const gchar *uri, const gchar **groups, gsize length);";subroutine g_bookmark_file_set_groups(bookmark, uri, groups, length) bind(c)
g;g_bookmark_file_set_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_set_icon (GBookmarkFile *bookmark, const gchar *uri, const gchar *href, const gchar *mime_type);";subroutine g_bookmark_file_set_icon(bookmark, uri, href, mime_type) bind(c)
g;g_bookmark_file_set_is_private;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_set_is_private (GBookmarkFile *bookmark, const gchar *uri, gboolean is_private);";subroutine g_bookmark_file_set_is_private(bookmark, uri, is_private) bind(c)
g;g_bookmark_file_set_mime_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_set_mime_type (GBookmarkFile *bookmark, const gchar *uri, const gchar *mime_type);";subroutine g_bookmark_file_set_mime_type(bookmark, uri, mime_type) bind(c)
g;g_bookmark_file_set_modified;GLIB_DEPRECATED_IN_2_66_FOR(g_bookmark_file_set_modified_date_time);glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_set_modified (GBookmarkFile *bookmark, const gchar *uri, time_t modified);";subroutine g_bookmark_file_set_modified(bookmark, uri, modified) bind(c)
g;g_bookmark_file_set_modified_date_time;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_set_modified_date_time (GBookmarkFile *bookmark, const char *uri, GDateTime *modified);";subroutine g_bookmark_file_set_modified_date_time(bookmark, uri, modified) bind(c)
g;g_bookmark_file_set_title;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_set_title (GBookmarkFile *bookmark, const gchar *uri, const gchar *title);";subroutine g_bookmark_file_set_title(bookmark, uri, title) bind(c)
g;g_bookmark_file_set_visited;GLIB_DEPRECATED_IN_2_66_FOR(g_bookmark_file_set_visited_date_time);glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_set_visited (GBookmarkFile *bookmark, const gchar *uri, time_t visited);";subroutine g_bookmark_file_set_visited(bookmark, uri, visited) bind(c)
g;g_bookmark_file_set_visited_date_time;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"void g_bookmark_file_set_visited_date_time (GBookmarkFile *bookmark, const char *uri, GDateTime *visited);";subroutine g_bookmark_file_set_visited_date_time(bookmark, uri, visited) bind(c)
g;g_bookmark_file_to_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gchar * g_bookmark_file_to_data (GBookmarkFile *bookmark, gsize *length, GError **error) G_GNUC_MALLOC;";function g_bookmark_file_to_data(bookmark, length, error) bind(c)
g;g_bookmark_file_to_file;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbookmarkfile.h;"gboolean g_bookmark_file_to_file (GBookmarkFile *bookmark, const gchar *filename, GError **error);";function g_bookmark_file_to_file(bookmark, filename, error) bind(c)
g;g_boxed_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gboxed.h;"gpointer g_boxed_copy (GType boxed_type, gconstpointer src_boxed);";function g_boxed_copy(boxed_type, src_boxed) bind(c)
g;g_boxed_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gboxed.h;"void g_boxed_free (GType boxed_type, gpointer boxed);";subroutine g_boxed_free(boxed_type, boxed) bind(c)
g;g_boxed_type_register_static;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gboxed.h;"GType g_boxed_type_register_static (const gchar *name, GBoxedCopyFunc boxed_copy, GBoxedFreeFunc boxed_free);";function g_boxed_type_register_static(name, boxed_copy, boxed_free) bind(c)
g;g_buffered_input_stream_fill;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedinputstream.h;"gssize g_buffered_input_stream_fill (GBufferedInputStream *stream, gssize count, GCancellable *cancellable, GError **error);";function g_buffered_input_stream_fill(stream, count, cancellable, error) bind(c)
g;g_buffered_input_stream_fill_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedinputstream.h;"void g_buffered_input_stream_fill_async (GBufferedInputStream *stream, gssize count, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_buffered_input_stream_fill_async(stream, count, io_priority, cancellable, callback, user_data) bind(c)
g;g_buffered_input_stream_fill_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedinputstream.h;"gssize g_buffered_input_stream_fill_finish (GBufferedInputStream *stream, GAsyncResult *result, GError **error);";function g_buffered_input_stream_fill_finish(stream, result, error) bind(c)
g;g_buffered_input_stream_get_available;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedinputstream.h;"gsize g_buffered_input_stream_get_available (GBufferedInputStream *stream);";function g_buffered_input_stream_get_available(stream) bind(c)
g;g_buffered_input_stream_get_buffer_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedinputstream.h;"gsize g_buffered_input_stream_get_buffer_size (GBufferedInputStream *stream);";function g_buffered_input_stream_get_buffer_size(stream) bind(c)
g;g_buffered_input_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedinputstream.h;"GType g_buffered_input_stream_get_type (void) G_GNUC_CONST;";function g_buffered_input_stream_get_type() bind(c)
g;g_buffered_input_stream_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedinputstream.h;"GInputStream* g_buffered_input_stream_new (GInputStream *base_stream);";function g_buffered_input_stream_new(base_stream) bind(c)
g;g_buffered_input_stream_new_sized;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedinputstream.h;"GInputStream* g_buffered_input_stream_new_sized (GInputStream *base_stream, gsize size);";function g_buffered_input_stream_new_sized(base_stream, size) bind(c)
g;g_buffered_input_stream_peek;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedinputstream.h;"gsize g_buffered_input_stream_peek (GBufferedInputStream *stream, void *buffer, gsize offset, gsize count);";function g_buffered_input_stream_peek(stream, buffer, offset, count) bind(c)
g;g_buffered_input_stream_peek_buffer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedinputstream.h;"const void* g_buffered_input_stream_peek_buffer (GBufferedInputStream *stream, gsize *count);";function g_buffered_input_stream_peek_buffer(stream, count) bind(c)
g;g_buffered_input_stream_read_byte;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedinputstream.h;"int g_buffered_input_stream_read_byte (GBufferedInputStream *stream, GCancellable *cancellable, GError **error);";function g_buffered_input_stream_read_byte(stream, cancellable, error) bind(c)
g;g_buffered_input_stream_set_buffer_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedinputstream.h;"void g_buffered_input_stream_set_buffer_size (GBufferedInputStream *stream, gsize size);";subroutine g_buffered_input_stream_set_buffer_size(stream, size) bind(c)
g;g_buffered_output_stream_get_auto_grow;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedoutputstream.h;"gboolean g_buffered_output_stream_get_auto_grow (GBufferedOutputStream *stream);";function g_buffered_output_stream_get_auto_grow(stream) bind(c)
g;g_buffered_output_stream_get_buffer_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedoutputstream.h;"gsize g_buffered_output_stream_get_buffer_size (GBufferedOutputStream *stream);";function g_buffered_output_stream_get_buffer_size(stream) bind(c)
g;g_buffered_output_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedoutputstream.h;"GType g_buffered_output_stream_get_type (void) G_GNUC_CONST;";function g_buffered_output_stream_get_type() bind(c)
g;g_buffered_output_stream_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedoutputstream.h;"GOutputStream* g_buffered_output_stream_new (GOutputStream *base_stream);";function g_buffered_output_stream_new(base_stream) bind(c)
g;g_buffered_output_stream_new_sized;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedoutputstream.h;"GOutputStream* g_buffered_output_stream_new_sized (GOutputStream *base_stream, gsize size);";function g_buffered_output_stream_new_sized(base_stream, size) bind(c)
g;g_buffered_output_stream_set_auto_grow;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedoutputstream.h;"void g_buffered_output_stream_set_auto_grow (GBufferedOutputStream *stream, gboolean auto_grow);";subroutine g_buffered_output_stream_set_auto_grow(stream, auto_grow) bind(c)
g;g_buffered_output_stream_set_buffer_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gbufferedoutputstream.h;"void g_buffered_output_stream_set_buffer_size (GBufferedOutputStream *stream, gsize size);";subroutine g_buffered_output_stream_set_buffer_size(stream, size) bind(c)
g;g_build_filename_valist;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gchar *g_build_filename_valist (const gchar *first_element, va_list *args) G_GNUC_MALLOC;";function g_build_filename_valist(first_element, args) bind(c)
g;g_build_filenamev;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gchar *g_build_filenamev (gchar **args) G_GNUC_MALLOC;";function g_build_filenamev(args) bind(c)
g;g_build_pathv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gchar *g_build_pathv (const gchar *separator, gchar **args) G_GNUC_MALLOC;";function g_build_pathv(separator, args) bind(c)
g;g_bus_get;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"void g_bus_get (GBusType bus_type, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_bus_get(bus_type, cancellable, callback, user_data) bind(c)
g;g_bus_get_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GDBusConnection *g_bus_get_finish (GAsyncResult *res, GError **error);";function g_bus_get_finish(res, error) bind(c)
g;g_bus_get_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GDBusConnection *g_bus_get_sync (GBusType bus_type, GCancellable *cancellable, GError **error);";function g_bus_get_sync(bus_type, cancellable, error) bind(c)
g;g_bus_own_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusnameowning.h;"guint g_bus_own_name (GBusType bus_type, const gchar *name, GBusNameOwnerFlags flags, GBusAcquiredCallback bus_acquired_handler, GBusNameAcquiredCallback name_acquired_handler, GBusNameLostCallback name_lost_handler, gpointer user_data, GDestroyNotify user_data_free_func);";function g_bus_own_name(bus_type, name, flags, bus_acquired_handler, name_acquired_handler, name_lost_handler, user_data, user_data_free_func) bind(c)
g;g_bus_own_name_on_connection;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusnameowning.h;"guint g_bus_own_name_on_connection (GDBusConnection *connection, const gchar *name, GBusNameOwnerFlags flags, GBusNameAcquiredCallback name_acquired_handler, GBusNameLostCallback name_lost_handler, gpointer user_data, GDestroyNotify user_data_free_func);";function g_bus_own_name_on_connection(connection, name, flags, name_acquired_handler, name_lost_handler, user_data, user_data_free_func) bind(c)
g;g_bus_own_name_on_connection_with_closures;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusnameowning.h;"guint g_bus_own_name_on_connection_with_closures ( GDBusConnection *connection, const gchar *name, GBusNameOwnerFlags flags, GClosure *name_acquired_closure, GClosure *name_lost_closure);";function g_bus_own_name_on_connection_with_closures(connection, name, flags, name_acquired_closure, name_lost_closure) bind(c)
g;g_bus_own_name_with_closures;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusnameowning.h;"guint g_bus_own_name_with_closures (GBusType bus_type, const gchar *name, GBusNameOwnerFlags flags, GClosure *bus_acquired_closure, GClosure *name_acquired_closure, GClosure *name_lost_closure);";function g_bus_own_name_with_closures(bus_type, name, flags, bus_acquired_closure, name_acquired_closure, name_lost_closure) bind(c)
g;g_bus_unown_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusnameowning.h;"void g_bus_unown_name (guint owner_id);";subroutine g_bus_unown_name(owner_id) bind(c)
g;g_bus_unwatch_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusnamewatching.h;"void g_bus_unwatch_name (guint watcher_id);";subroutine g_bus_unwatch_name(watcher_id) bind(c)
g;g_bus_watch_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusnamewatching.h;"guint g_bus_watch_name (GBusType bus_type, const gchar *name, GBusNameWatcherFlags flags, GBusNameAppearedCallback name_appeared_handler, GBusNameVanishedCallback name_vanished_handler, gpointer user_data, GDestroyNotify user_data_free_func);";function g_bus_watch_name(bus_type, name, flags, name_appeared_handler, name_vanished_handler, user_data, user_data_free_func) bind(c)
g;g_bus_watch_name_on_connection;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusnamewatching.h;"guint g_bus_watch_name_on_connection (GDBusConnection *connection, const gchar *name, GBusNameWatcherFlags flags, GBusNameAppearedCallback name_appeared_handler, GBusNameVanishedCallback name_vanished_handler, gpointer user_data, GDestroyNotify user_data_free_func);";function g_bus_watch_name_on_connection(connection, name, flags, name_appeared_handler, name_vanished_handler, user_data, user_data_free_func) bind(c)
g;g_bus_watch_name_on_connection_with_closures;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusnamewatching.h;"guint g_bus_watch_name_on_connection_with_closures ( GDBusConnection *connection, const gchar *name, GBusNameWatcherFlags flags, GClosure *name_appeared_closure, GClosure *name_vanished_closure);";function g_bus_watch_name_on_connection_with_closures(connection, name, flags, name_appeared_closure, name_vanished_closure) bind(c)
g;g_bus_watch_name_with_closures;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusnamewatching.h;"guint g_bus_watch_name_with_closures (GBusType bus_type, const gchar *name, GBusNameWatcherFlags flags, GClosure *name_appeared_closure, GClosure *name_vanished_closure);";function g_bus_watch_name_with_closures(bus_type, name, flags, name_appeared_closure, name_vanished_closure) bind(c)
g;g_byte_array_append;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GByteArray* g_byte_array_append (GByteArray *array, const guint8 *data, guint len);";function g_byte_array_append(array, data, len) bind(c)
g;g_byte_array_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"guint8* g_byte_array_free (GByteArray *array, gboolean free_segment);";function g_byte_array_free(array, free_segment) bind(c)
g;g_byte_array_free_to_bytes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GBytes* g_byte_array_free_to_bytes (GByteArray *array);";function g_byte_array_free_to_bytes(array) bind(c)
g;g_byte_array_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_byte_array_get_type (void) G_GNUC_CONST;";function g_byte_array_get_type() bind(c)
g;g_byte_array_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GByteArray* g_byte_array_new (void);";function g_byte_array_new() bind(c)
g;g_byte_array_new_take;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GByteArray* g_byte_array_new_take (guint8 *data, gsize len);";function g_byte_array_new_take(data, len) bind(c)
g;g_byte_array_prepend;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GByteArray* g_byte_array_prepend (GByteArray *array, const guint8 *data, guint len);";function g_byte_array_prepend(array, data, len) bind(c)
g;g_byte_array_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GByteArray *g_byte_array_ref (GByteArray *array);";function g_byte_array_ref(array) bind(c)
g;g_byte_array_remove_index;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GByteArray* g_byte_array_remove_index (GByteArray *array, guint index_);";function g_byte_array_remove_index(array, index_) bind(c)
g;g_byte_array_remove_index_fast;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GByteArray* g_byte_array_remove_index_fast (GByteArray *array, guint index_);";function g_byte_array_remove_index_fast(array, index_) bind(c)
g;g_byte_array_remove_range;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GByteArray* g_byte_array_remove_range (GByteArray *array, guint index_, guint length);";function g_byte_array_remove_range(array, index_, length) bind(c)
g;g_byte_array_set_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GByteArray* g_byte_array_set_size (GByteArray *array, guint length);";function g_byte_array_set_size(array, length) bind(c)
g;g_byte_array_sized_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GByteArray* g_byte_array_sized_new (guint reserved_size);";function g_byte_array_sized_new(reserved_size) bind(c)
g;g_byte_array_sort;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_byte_array_sort (GByteArray *array, GCompareFunc compare_func);";subroutine g_byte_array_sort(array, compare_func) bind(c)
g;g_byte_array_sort_with_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_byte_array_sort_with_data (GByteArray *array, GCompareDataFunc compare_func, gpointer user_data);";subroutine g_byte_array_sort_with_data(array, compare_func, user_data) bind(c)
g;g_byte_array_steal;GLIB_AVAILABLE_IN_2_64;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"guint8* g_byte_array_steal (GByteArray *array, gsize *len);";function g_byte_array_steal(array, len) bind(c)
g;g_byte_array_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_byte_array_unref (GByteArray *array);";subroutine g_byte_array_unref(array) bind(c)
g;g_bytes_compare;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"gint g_bytes_compare (gconstpointer bytes1, gconstpointer bytes2);";function g_bytes_compare(bytes1, bytes2) bind(c)
g;g_bytes_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"gboolean g_bytes_equal (gconstpointer bytes1, gconstpointer bytes2);";function g_bytes_equal(bytes1, bytes2) bind(c)
g;g_bytes_get_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"gconstpointer g_bytes_get_data (GBytes *bytes, gsize *size);";function g_bytes_get_data(bytes, size) bind(c)
g;g_bytes_get_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"gsize g_bytes_get_size (GBytes *bytes);";function g_bytes_get_size(bytes) bind(c)
g;g_bytes_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_bytes_get_type (void) G_GNUC_CONST;";function g_bytes_get_type() bind(c)
g;g_bytes_hash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"guint g_bytes_hash (gconstpointer bytes);";function g_bytes_hash(bytes) bind(c)
g;g_bytes_icon_get_bytes;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gbytesicon.h;"GBytes * g_bytes_icon_get_bytes (GBytesIcon *icon);";function g_bytes_icon_get_bytes(icon) bind(c)
g;g_bytes_icon_get_type;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gbytesicon.h;"GType g_bytes_icon_get_type (void) G_GNUC_CONST;";function g_bytes_icon_get_type() bind(c)
g;g_bytes_icon_new;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gbytesicon.h;"GIcon * g_bytes_icon_new (GBytes *bytes);";function g_bytes_icon_new(bytes) bind(c)
g;g_bytes_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"GBytes * g_bytes_new (gconstpointer data, gsize size);";function g_bytes_new(data, size) bind(c)
g;g_bytes_new_from_bytes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"GBytes * g_bytes_new_from_bytes (GBytes *bytes, gsize offset, gsize length);";function g_bytes_new_from_bytes(bytes, offset, length) bind(c)
g;g_bytes_new_static;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"GBytes * g_bytes_new_static (gconstpointer data, gsize size);";function g_bytes_new_static(data, size) bind(c)
g;g_bytes_new_take;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"GBytes * g_bytes_new_take (gpointer data, gsize size);";function g_bytes_new_take(data, size) bind(c)
g;g_bytes_new_with_free_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"GBytes * g_bytes_new_with_free_func (gconstpointer data, gsize size, GDestroyNotify free_func, gpointer user_data);";function g_bytes_new_with_free_func(data, size, free_func, user_data) bind(c)
g;g_bytes_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"GBytes * g_bytes_ref (GBytes *bytes);";function g_bytes_ref(bytes) bind(c)
g;g_bytes_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"void g_bytes_unref (GBytes *bytes);";subroutine g_bytes_unref(bytes) bind(c)
g;g_bytes_unref_to_array;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"GByteArray * g_bytes_unref_to_array (GBytes *bytes);";function g_bytes_unref_to_array(bytes) bind(c)
g;g_bytes_unref_to_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbytes.h;"gpointer g_bytes_unref_to_data (GBytes *bytes, gsize *size);";function g_bytes_unref_to_data(bytes, size) bind(c)
g;g_cache_destroy;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcache.h;"void g_cache_destroy (GCache *cache);";subroutine g_cache_destroy(cache) bind(c)
g;g_cache_insert;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcache.h;"gpointer g_cache_insert (GCache *cache, gpointer key);";function g_cache_insert(cache, key) bind(c)
g;g_cache_key_foreach;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcache.h;"void g_cache_key_foreach (GCache *cache, GHFunc func, gpointer user_data);";subroutine g_cache_key_foreach(cache, func, user_data) bind(c)
g;g_cache_new;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcache.h;"GCache* g_cache_new (GCacheNewFunc value_new_func, GCacheDestroyFunc value_destroy_func, GCacheDupFunc key_dup_func, GCacheDestroyFunc key_destroy_func, GHashFunc hash_key_func, GHashFunc hash_value_func, GEqualFunc key_equal_func);";function g_cache_new(value_new_func, value_destroy_func, key_dup_func, key_destroy_func, hash_key_func, hash_value_func, key_equal_func) bind(c)
g;g_cache_remove;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcache.h;"void g_cache_remove (GCache *cache, gconstpointer value);";subroutine g_cache_remove(cache, value) bind(c)
g;g_cache_value_foreach;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcache.h;"void g_cache_value_foreach (GCache *cache, GHFunc func, gpointer user_data);";subroutine g_cache_value_foreach(cache, func, user_data) bind(c)
g;g_cancellable_cancel;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"void g_cancellable_cancel (GCancellable *cancellable);";subroutine g_cancellable_cancel(cancellable) bind(c)
g;g_cancellable_connect;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"gulong g_cancellable_connect (GCancellable *cancellable, GCallback callback, gpointer data, GDestroyNotify data_destroy_func);";function g_cancellable_connect(cancellable, callback, data, data_destroy_func) bind(c)
g;g_cancellable_disconnect;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"void g_cancellable_disconnect (GCancellable *cancellable, gulong handler_id);";subroutine g_cancellable_disconnect(cancellable, handler_id) bind(c)
g;g_cancellable_get_current;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"GCancellable *g_cancellable_get_current (void);";function g_cancellable_get_current() bind(c)
g;g_cancellable_get_fd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"int g_cancellable_get_fd (GCancellable *cancellable);";function g_cancellable_get_fd(cancellable) bind(c)
g;g_cancellable_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"GType g_cancellable_get_type (void) G_GNUC_CONST;";function g_cancellable_get_type() bind(c)
g;g_cancellable_is_cancelled;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"gboolean g_cancellable_is_cancelled (GCancellable *cancellable);";function g_cancellable_is_cancelled(cancellable) bind(c)
g;g_cancellable_make_pollfd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"gboolean g_cancellable_make_pollfd (GCancellable *cancellable, GPollFD *pollfd);";function g_cancellable_make_pollfd(cancellable, pollfd) bind(c)
g;g_cancellable_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"GCancellable *g_cancellable_new (void);";function g_cancellable_new() bind(c)
g;g_cancellable_pop_current;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"void g_cancellable_pop_current (GCancellable *cancellable);";subroutine g_cancellable_pop_current(cancellable) bind(c)
g;g_cancellable_push_current;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"void g_cancellable_push_current (GCancellable *cancellable);";subroutine g_cancellable_push_current(cancellable) bind(c)
g;g_cancellable_release_fd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"void g_cancellable_release_fd (GCancellable *cancellable);";subroutine g_cancellable_release_fd(cancellable) bind(c)
g;g_cancellable_reset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"void g_cancellable_reset (GCancellable *cancellable);";subroutine g_cancellable_reset(cancellable) bind(c)
g;g_cancellable_set_error_if_cancelled;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"gboolean g_cancellable_set_error_if_cancelled (GCancellable *cancellable, GError **error);";function g_cancellable_set_error_if_cancelled(cancellable, error) bind(c)
g;g_cancellable_source_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcancellable.h;"GSource * g_cancellable_source_new (GCancellable *cancellable);";function g_cancellable_source_new(cancellable) bind(c)
g;g_canonicalize_filename;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gchar *g_canonicalize_filename (const gchar *filename, const gchar *relative_to) G_GNUC_MALLOC;";function g_canonicalize_filename(filename, relative_to) bind(c)
g;g_cclosure_marshal_BOOLEAN__BOXED_BOXED;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_BOOLEAN__BOXED_BOXED (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_BOOLEAN__BOXED_BOXED(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_BOOLEAN__FLAGS;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_BOOLEAN__FLAGS (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_BOOLEAN__FLAGS(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_BOOLEAN__FLAGSv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_BOOLEAN__FLAGSv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_BOOLEAN__FLAGSv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_STRING__OBJECT_POINTER;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_STRING__OBJECT_POINTER (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_STRING__OBJECT_POINTER(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_STRING__OBJECT_POINTERv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_STRING__OBJECT_POINTERv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_STRING__OBJECT_POINTERv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__BOOLEAN;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__BOOLEAN (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__BOOLEAN(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__BOOLEANv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__BOOLEANv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__BOOLEANv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__BOXED;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__BOXED (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__BOXED(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__BOXEDv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__BOXEDv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__BOXEDv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__CHAR;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__CHAR (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__CHAR(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__CHARv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__CHARv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__CHARv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__DOUBLE;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__DOUBLE (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__DOUBLE(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__DOUBLEv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__DOUBLEv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__DOUBLEv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__ENUM;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__ENUM (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__ENUM(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__ENUMv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__ENUMv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__ENUMv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__FLAGS;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__FLAGS (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__FLAGS(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__FLAGSv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__FLAGSv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__FLAGSv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__FLOAT;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__FLOAT (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__FLOAT(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__FLOATv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__FLOATv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__FLOATv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__INT;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__INT (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__INT(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__INTv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__INTv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__INTv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__LONG;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__LONG (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__LONG(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__LONGv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__LONGv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__LONGv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__OBJECT;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__OBJECT (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__OBJECT(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__OBJECTv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__OBJECTv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__OBJECTv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__PARAM;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__PARAM (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__PARAM(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__PARAMv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__PARAMv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__PARAMv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__POINTER;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__POINTER (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__POINTER(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__POINTERv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__POINTERv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__POINTERv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__STRING;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__STRING (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__STRING(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__STRINGv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__STRINGv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__STRINGv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__UCHAR;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__UCHAR (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__UCHAR(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__UCHARv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__UCHARv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__UCHARv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__UINT;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__UINT (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__UINT(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__UINT_POINTER;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__UINT_POINTER (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__UINT_POINTER(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__UINT_POINTERv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__UINT_POINTERv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__UINT_POINTERv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__UINTv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__UINTv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__UINTv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__ULONG;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__ULONG (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__ULONG(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__ULONGv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__ULONGv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__ULONGv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__VARIANT;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__VARIANT (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__VARIANT(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__VARIANTv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__VARIANTv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__VARIANTv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_VOID__VOID;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__VOID (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_VOID__VOID(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_VOID__VOIDv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gmarshal.h;"void g_cclosure_marshal_VOID__VOIDv (GClosure *closure, GValue *return_value, gpointer instance, va_list args, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_VOID__VOIDv(closure, return_value, instance, args, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_marshal_generic;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_cclosure_marshal_generic (GClosure *closure, GValue *return_gvalue, guint n_param_values, const GValue *param_values, gpointer invocation_hint, gpointer marshal_data);";subroutine g_cclosure_marshal_generic(closure, return_gvalue, n_param_values, param_values, invocation_hint, marshal_data) bind(c)
g;g_cclosure_marshal_generic_va;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_cclosure_marshal_generic_va (GClosure *closure, GValue *return_value, gpointer instance, va_list args_list, gpointer marshal_data, int n_params, GType *param_types);";subroutine g_cclosure_marshal_generic_va(closure, return_value, instance, args_list, marshal_data, n_params, param_types) bind(c)
g;g_cclosure_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"GClosure* g_cclosure_new (GCallback callback_func, gpointer user_data, GClosureNotify destroy_data);";function g_cclosure_new(callback_func, user_data, destroy_data) bind(c)
g;g_cclosure_new_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"GClosure* g_cclosure_new_object (GCallback callback_func, GObject *object);";function g_cclosure_new_object(callback_func, object) bind(c)
g;g_cclosure_new_object_swap;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"GClosure* g_cclosure_new_object_swap (GCallback callback_func, GObject *object);";function g_cclosure_new_object_swap(callback_func, object) bind(c)
g;g_cclosure_new_swap;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"GClosure* g_cclosure_new_swap (GCallback callback_func, gpointer user_data, GClosureNotify destroy_data);";function g_cclosure_new_swap(callback_func, user_data, destroy_data) bind(c)
g;g_charset_converter_get_num_fallbacks;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcharsetconverter.h;"guint g_charset_converter_get_num_fallbacks (GCharsetConverter *converter);";function g_charset_converter_get_num_fallbacks(converter) bind(c)
g;g_charset_converter_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcharsetconverter.h;"GType g_charset_converter_get_type (void) G_GNUC_CONST;";function g_charset_converter_get_type() bind(c)
g;g_charset_converter_get_use_fallback;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcharsetconverter.h;"gboolean g_charset_converter_get_use_fallback (GCharsetConverter *converter);";function g_charset_converter_get_use_fallback(converter) bind(c)
g;g_charset_converter_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcharsetconverter.h;"GCharsetConverter *g_charset_converter_new (const gchar *to_charset, const gchar *from_charset, GError **error);";function g_charset_converter_new(to_charset, from_charset, error) bind(c)
g;g_charset_converter_set_use_fallback;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcharsetconverter.h;"void g_charset_converter_set_use_fallback (GCharsetConverter *converter, gboolean use_fallback);";subroutine g_charset_converter_set_use_fallback(converter, use_fallback) bind(c)
g;g_chdir;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_chdir (const gchar *path);";function g_chdir(path) bind(c)
g;g_checksum_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gchecksum.h;"GChecksum * g_checksum_copy (const GChecksum *checksum);";function g_checksum_copy(checksum) bind(c)
g;g_checksum_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gchecksum.h;"void g_checksum_free (GChecksum *checksum);";subroutine g_checksum_free(checksum) bind(c)
g;g_checksum_get_digest;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gchecksum.h;"void g_checksum_get_digest (GChecksum *checksum, guint8 *buffer, gsize *digest_len);";subroutine g_checksum_get_digest(checksum, buffer, digest_len) bind(c)
g;g_checksum_get_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gchecksum.h;"const gchar * g_checksum_get_string (GChecksum *checksum);";function g_checksum_get_string(checksum) bind(c)
g;g_checksum_get_type;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_checksum_get_type (void) G_GNUC_CONST;";function g_checksum_get_type() bind(c)
g;g_checksum_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gchecksum.h;"GChecksum * g_checksum_new (GChecksumType checksum_type);";function g_checksum_new(checksum_type) bind(c)
g;g_checksum_reset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gchecksum.h;"void g_checksum_reset (GChecksum *checksum);";subroutine g_checksum_reset(checksum) bind(c)
g;g_checksum_type_get_length;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gchecksum.h;"gssize g_checksum_type_get_length (GChecksumType checksum_type);";function g_checksum_type_get_length(checksum_type) bind(c)
g;g_checksum_update;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gchecksum.h;"void g_checksum_update (GChecksum *checksum, const guchar *data, gssize length);";subroutine g_checksum_update(checksum, data, length) bind(c)
g;g_child_watch_add;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"guint g_child_watch_add (GPid pid, GChildWatchFunc function, gpointer data);";function g_child_watch_add(pid, function, data) bind(c)
g;g_child_watch_add_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"guint g_child_watch_add_full (gint priority, GPid pid, GChildWatchFunc function, gpointer data, GDestroyNotify notify);";function g_child_watch_add_full(priority, pid, function, data, notify) bind(c)
g;g_child_watch_source_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GSource *g_child_watch_source_new (GPid pid);";function g_child_watch_source_new(pid) bind(c)
g;g_chmod;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_chmod (const gchar *filename, int mode);";function g_chmod(filename, mode) bind(c)
g;g_clear_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gerror.h;"void g_clear_error (GError **err);";subroutine g_clear_error(err) bind(c)
g;g_clear_handle_id;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_clear_handle_id (guint *tag_ptr, GClearHandleFunc clear_func);";subroutine g_clear_handle_id(tag_ptr, clear_func) bind(c)
g;g_clear_list;GLIB_AVAILABLE_IN_2_64;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"void g_clear_list (GList **list_ptr, GDestroyNotify destroy);";subroutine g_clear_list(list_ptr, destroy) bind(c)
g;g_clear_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_clear_object (GObject **object_ptr);";subroutine g_clear_object(object_ptr) bind(c)
g;g_clear_pointer;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"void g_clear_pointer (gpointer *pp, GDestroyNotify destroy);";subroutine g_clear_pointer(pp, destroy) bind(c)
g;g_clear_signal_handler;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_clear_signal_handler (gulong *handler_id_ptr, gpointer instance);";subroutine g_clear_signal_handler(handler_id_ptr, instance) bind(c)
g;g_clear_slist;GLIB_AVAILABLE_IN_2_64;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"void g_clear_slist (GSList **slist_ptr, GDestroyNotify destroy);";subroutine g_clear_slist(slist_ptr, destroy) bind(c)
g;g_close;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"gboolean g_close (gint fd, GError **error);";function g_close(fd, error) bind(c)
g;g_closure_add_finalize_notifier;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_closure_add_finalize_notifier (GClosure *closure, gpointer notify_data, GClosureNotify notify_func);";subroutine g_closure_add_finalize_notifier(closure, notify_data, notify_func) bind(c)
g;g_closure_add_invalidate_notifier;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_closure_add_invalidate_notifier (GClosure *closure, gpointer notify_data, GClosureNotify notify_func);";subroutine g_closure_add_invalidate_notifier(closure, notify_data, notify_func) bind(c)
g;g_closure_add_marshal_guards;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_closure_add_marshal_guards (GClosure *closure, gpointer pre_marshal_data, GClosureNotify pre_marshal_notify, gpointer post_marshal_data, GClosureNotify post_marshal_notify);";subroutine g_closure_add_marshal_guards(closure, pre_marshal_data, pre_marshal_notify, post_marshal_data, post_marshal_notify) bind(c)
g;g_closure_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gboxed.h;"GType g_closure_get_type (void) G_GNUC_CONST;";function g_closure_get_type() bind(c)
g;g_closure_invalidate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_closure_invalidate (GClosure *closure);";subroutine g_closure_invalidate(closure) bind(c)
g;g_closure_invoke;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_closure_invoke (GClosure *closure, GValue *return_value, guint n_param_values, const GValue *param_values, gpointer invocation_hint);";subroutine g_closure_invoke(closure, return_value, n_param_values, param_values, invocation_hint) bind(c)
g;g_closure_new_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"GClosure* g_closure_new_object (guint sizeof_closure, GObject *object);";function g_closure_new_object(sizeof_closure, object) bind(c)
g;g_closure_new_simple;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"GClosure* g_closure_new_simple (guint sizeof_closure, gpointer data);";function g_closure_new_simple(sizeof_closure, data) bind(c)
g;g_closure_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"GClosure* g_closure_ref (GClosure *closure);";function g_closure_ref(closure) bind(c)
g;g_closure_remove_finalize_notifier;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_closure_remove_finalize_notifier (GClosure *closure, gpointer notify_data, GClosureNotify notify_func);";subroutine g_closure_remove_finalize_notifier(closure, notify_data, notify_func) bind(c)
g;g_closure_remove_invalidate_notifier;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_closure_remove_invalidate_notifier (GClosure *closure, gpointer notify_data, GClosureNotify notify_func);";subroutine g_closure_remove_invalidate_notifier(closure, notify_data, notify_func) bind(c)
g;g_closure_set_marshal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_closure_set_marshal (GClosure *closure, GClosureMarshal marshal);";subroutine g_closure_set_marshal(closure, marshal) bind(c)
g;g_closure_set_meta_marshal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_closure_set_meta_marshal (GClosure *closure, gpointer marshal_data, GClosureMarshal meta_marshal);";subroutine g_closure_set_meta_marshal(closure, marshal_data, meta_marshal) bind(c)
g;g_closure_sink;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_closure_sink (GClosure *closure);";subroutine g_closure_sink(closure) bind(c)
g;g_closure_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"void g_closure_unref (GClosure *closure);";subroutine g_closure_unref(closure) bind(c)
g;g_completion_add_items;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcompletion.h;"void g_completion_add_items (GCompletion* cmp, GList* items);";subroutine g_completion_add_items(cmp, items) bind(c)
g;g_completion_clear_items;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcompletion.h;"void g_completion_clear_items (GCompletion* cmp);";subroutine g_completion_clear_items(cmp) bind(c)
g;g_completion_complete;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcompletion.h;"GList* g_completion_complete (GCompletion* cmp, const gchar* prefix, gchar** new_prefix);";function g_completion_complete(cmp, prefix, new_prefix) bind(c)
g;g_completion_complete_utf8;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcompletion.h;"GList* g_completion_complete_utf8 (GCompletion *cmp, const gchar* prefix, gchar** new_prefix);";function g_completion_complete_utf8(cmp, prefix, new_prefix) bind(c)
g;g_completion_free;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcompletion.h;"void g_completion_free (GCompletion* cmp);";subroutine g_completion_free(cmp) bind(c)
g;g_completion_new;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcompletion.h;"GCompletion* g_completion_new (GCompletionFunc func);";function g_completion_new(func) bind(c)
g;g_completion_remove_items;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcompletion.h;"void g_completion_remove_items (GCompletion* cmp, GList* items);";subroutine g_completion_remove_items(cmp, items) bind(c)
g;g_completion_set_compare;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gcompletion.h;"void g_completion_set_compare (GCompletion *cmp, GCompletionStrncmpFunc strncmp_func);";subroutine g_completion_set_compare(cmp, strncmp_func) bind(c)
g;g_compute_checksum_for_bytes;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gchecksum.h;"gchar *g_compute_checksum_for_bytes (GChecksumType checksum_type, GBytes *data);";function g_compute_checksum_for_bytes(checksum_type, data) bind(c)
g;g_compute_checksum_for_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gchecksum.h;"gchar *g_compute_checksum_for_data (GChecksumType checksum_type, const guchar *data, gsize length);";function g_compute_checksum_for_data(checksum_type, data, length) bind(c)
g;g_compute_checksum_for_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gchecksum.h;"gchar *g_compute_checksum_for_string (GChecksumType checksum_type, const gchar *str, gssize length);";function g_compute_checksum_for_string(checksum_type, str, length) bind(c)
g;g_compute_hmac_for_bytes;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/glib/ghmac.h;"gchar *g_compute_hmac_for_bytes (GChecksumType digest_type, GBytes *key, GBytes *data);";function g_compute_hmac_for_bytes(digest_type, key, data) bind(c)
g;g_compute_hmac_for_data;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/ghmac.h;"gchar *g_compute_hmac_for_data (GChecksumType digest_type, const guchar *key, gsize key_len, const guchar *data, gsize length);";function g_compute_hmac_for_data(digest_type, key, key_len, data, length) bind(c)
g;g_compute_hmac_for_string;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/ghmac.h;"gchar *g_compute_hmac_for_string (GChecksumType digest_type, const guchar *key, gsize key_len, const gchar *str, gssize length);";function g_compute_hmac_for_string(digest_type, key, key_len, str, length) bind(c)
g;g_cond_broadcast;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_cond_broadcast (GCond *cond);";subroutine g_cond_broadcast(cond) bind(c)
g;g_cond_clear;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_cond_clear (GCond *cond);";subroutine g_cond_clear(cond) bind(c)
g;g_cond_free;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_cond_free (GCond *cond);";subroutine g_cond_free(cond) bind(c)
g;g_cond_init;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_cond_init (GCond *cond);";subroutine g_cond_init(cond) bind(c)
g;g_cond_new;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"GCond * g_cond_new (void);";function g_cond_new() bind(c)
g;g_cond_signal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_cond_signal (GCond *cond);";subroutine g_cond_signal(cond) bind(c)
g;g_cond_timed_wait;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"gboolean g_cond_timed_wait (GCond *cond, GMutex *mutex, GTimeVal *timeval);";function g_cond_timed_wait(cond, mutex, timeval) bind(c)
g;g_cond_wait;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_cond_wait (GCond *cond, GMutex *mutex);";subroutine g_cond_wait(cond, mutex) bind(c)
g;g_cond_wait_until;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"gboolean g_cond_wait_until (GCond *cond, GMutex *mutex, gint64 end_time);";function g_cond_wait_until(cond, mutex, end_time) bind(c)
g;g_content_type_can_be_executable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"gboolean g_content_type_can_be_executable (const gchar *type);";function g_content_type_can_be_executable(type) bind(c)
g;g_content_type_equals;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"gboolean g_content_type_equals (const gchar *type1, const gchar *type2);";function g_content_type_equals(type1, type2) bind(c)
g;g_content_type_from_mime_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"gchar * g_content_type_from_mime_type (const gchar *mime_type);";function g_content_type_from_mime_type(mime_type) bind(c)
g;g_content_type_get_description;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"gchar * g_content_type_get_description (const gchar *type);";function g_content_type_get_description(type) bind(c)
g;g_content_type_get_generic_icon_name;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"gchar * g_content_type_get_generic_icon_name (const gchar *type);";function g_content_type_get_generic_icon_name(type) bind(c)
g;g_content_type_get_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"GIcon * g_content_type_get_icon (const gchar *type);";function g_content_type_get_icon(type) bind(c)
g;g_content_type_get_mime_dirs;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"const gchar * const *g_content_type_get_mime_dirs (void);";function g_content_type_get_mime_dirs() bind(c)
g;g_content_type_get_mime_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"gchar * g_content_type_get_mime_type (const gchar *type);";function g_content_type_get_mime_type(type) bind(c)
g;g_content_type_get_symbolic_icon;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"GIcon * g_content_type_get_symbolic_icon (const gchar *type);";function g_content_type_get_symbolic_icon(type) bind(c)
g;g_content_type_guess;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"gchar * g_content_type_guess (const gchar *filename, const guchar *data, gsize data_size, gboolean *result_uncertain);";function g_content_type_guess(filename, data, data_size, result_uncertain) bind(c)
g;g_content_type_guess_for_tree;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"gchar ** g_content_type_guess_for_tree (GFile *root);";function g_content_type_guess_for_tree(root) bind(c)
g;g_content_type_is_a;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"gboolean g_content_type_is_a (const gchar *type, const gchar *supertype);";function g_content_type_is_a(type, supertype) bind(c)
g;g_content_type_is_mime_type;GLIB_AVAILABLE_IN_2_52;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"gboolean g_content_type_is_mime_type (const gchar *type, const gchar *mime_type);";function g_content_type_is_mime_type(type, mime_type) bind(c)
g;g_content_type_is_unknown;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"gboolean g_content_type_is_unknown (const gchar *type);";function g_content_type_is_unknown(type) bind(c)
g;g_content_type_set_mime_dirs;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"void g_content_type_set_mime_dirs (const gchar * const *dirs);";subroutine g_content_type_set_mime_dirs(dirs) bind(c)
g;g_content_types_get_registered;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcontenttype.h;"GList * g_content_types_get_registered (void);";function g_content_types_get_registered() bind(c)
g;g_convert;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gchar* g_convert (const gchar *str, gssize len, const gchar *to_codeset, const gchar *from_codeset, gsize *bytes_read, gsize *bytes_written, GError **error) G_GNUC_MALLOC;";function g_convert(str, len, to_codeset, from_codeset, bytes_read, bytes_written, error) bind(c)
g;g_convert_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"GQuark g_convert_error_quark (void);";function g_convert_error_quark() bind(c)
g;g_convert_with_fallback;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gchar* g_convert_with_fallback (const gchar *str, gssize len, const gchar *to_codeset, const gchar *from_codeset, const gchar *fallback, gsize *bytes_read, gsize *bytes_written, GError **error) G_GNUC_MALLOC;";function g_convert_with_fallback(str, len, to_codeset, from_codeset, fallback, bytes_read, bytes_written, error) bind(c)
g;g_convert_with_iconv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gchar* g_convert_with_iconv (const gchar *str, gssize len, GIConv converter, gsize *bytes_read, gsize *bytes_written, GError **error) G_GNUC_MALLOC;";function g_convert_with_iconv(str, len, converter, bytes_read, bytes_written, error) bind(c)
g;g_converter_convert;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gconverter.h;"GConverterResult g_converter_convert (GConverter *converter, const void *inbuf, gsize inbuf_size, void *outbuf, gsize outbuf_size, GConverterFlags flags, gsize *bytes_read, gsize *bytes_written, GError **error);";function g_converter_convert(converter, inbuf, inbuf_size, outbuf, outbuf_size, flags, bytes_read, bytes_written, error) bind(c)
g;g_converter_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gconverter.h;"GType g_converter_get_type (void) G_GNUC_CONST;";function g_converter_get_type() bind(c)
g;g_converter_input_stream_get_converter;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gconverterinputstream.h;"GConverter *g_converter_input_stream_get_converter (GConverterInputStream *converter_stream);";function g_converter_input_stream_get_converter(converter_stream) bind(c)
g;g_converter_input_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gconverterinputstream.h;"GType g_converter_input_stream_get_type (void) G_GNUC_CONST;";function g_converter_input_stream_get_type() bind(c)
g;g_converter_input_stream_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gconverterinputstream.h;"GInputStream *g_converter_input_stream_new (GInputStream *base_stream, GConverter *converter);";function g_converter_input_stream_new(base_stream, converter) bind(c)
g;g_converter_output_stream_get_converter;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gconverteroutputstream.h;"GConverter *g_converter_output_stream_get_converter (GConverterOutputStream *converter_stream);";function g_converter_output_stream_get_converter(converter_stream) bind(c)
g;g_converter_output_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gconverteroutputstream.h;"GType g_converter_output_stream_get_type (void) G_GNUC_CONST;";function g_converter_output_stream_get_type() bind(c)
g;g_converter_output_stream_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gconverteroutputstream.h;"GOutputStream *g_converter_output_stream_new (GOutputStream *base_stream, GConverter *converter);";function g_converter_output_stream_new(base_stream, converter) bind(c)
g;g_converter_reset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gconverter.h;"void g_converter_reset (GConverter *converter);";subroutine g_converter_reset(converter) bind(c)
g;g_creat;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_creat (const gchar *filename, int mode);";function g_creat(filename, mode) bind(c)
g;g_credentials_get_native;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcredentials.h;"gpointer g_credentials_get_native (GCredentials *credentials, GCredentialsType native_type);";function g_credentials_get_native(credentials, native_type) bind(c)
g;g_credentials_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcredentials.h;"GType g_credentials_get_type (void) G_GNUC_CONST;";function g_credentials_get_type() bind(c)
g;g_credentials_get_unix_user;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcredentials.h;"uid_t g_credentials_get_unix_user (GCredentials *credentials, GError **error);";function g_credentials_get_unix_user(credentials, error) bind(c)
g;g_credentials_is_same_user;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcredentials.h;"gboolean g_credentials_is_same_user (GCredentials *credentials, GCredentials *other_credentials, GError **error);";function g_credentials_is_same_user(credentials, other_credentials, error) bind(c)
g;g_credentials_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcredentials.h;"GCredentials *g_credentials_new (void);";function g_credentials_new() bind(c)
g;g_credentials_set_native;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcredentials.h;"void g_credentials_set_native (GCredentials *credentials, GCredentialsType native_type, gpointer native);";subroutine g_credentials_set_native(credentials, native_type, native) bind(c)
g;g_credentials_set_unix_user;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcredentials.h;"gboolean g_credentials_set_unix_user (GCredentials *credentials, uid_t uid, GError **error);";function g_credentials_set_unix_user(credentials, uid, error) bind(c)
g;g_credentials_to_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gcredentials.h;"gchar *g_credentials_to_string (GCredentials *credentials);";function g_credentials_to_string(credentials) bind(c)
g;g_data_input_stream_get_byte_order;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"GDataStreamByteOrder g_data_input_stream_get_byte_order (GDataInputStream *stream);";function g_data_input_stream_get_byte_order(stream) bind(c)
g;g_data_input_stream_get_newline_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"GDataStreamNewlineType g_data_input_stream_get_newline_type (GDataInputStream *stream);";function g_data_input_stream_get_newline_type(stream) bind(c)
g;g_data_input_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"GType g_data_input_stream_get_type (void) G_GNUC_CONST;";function g_data_input_stream_get_type() bind(c)
g;g_data_input_stream_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"GDataInputStream * g_data_input_stream_new (GInputStream *base_stream);";function g_data_input_stream_new(base_stream) bind(c)
g;g_data_input_stream_read_byte;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"guchar g_data_input_stream_read_byte (GDataInputStream *stream, GCancellable *cancellable, GError **error);";function g_data_input_stream_read_byte(stream, cancellable, error) bind(c)
g;g_data_input_stream_read_int16;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"gint16 g_data_input_stream_read_int16 (GDataInputStream *stream, GCancellable *cancellable, GError **error);";function g_data_input_stream_read_int16(stream, cancellable, error) bind(c)
g;g_data_input_stream_read_int32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"gint32 g_data_input_stream_read_int32 (GDataInputStream *stream, GCancellable *cancellable, GError **error);";function g_data_input_stream_read_int32(stream, cancellable, error) bind(c)
g;g_data_input_stream_read_int64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"gint64 g_data_input_stream_read_int64 (GDataInputStream *stream, GCancellable *cancellable, GError **error);";function g_data_input_stream_read_int64(stream, cancellable, error) bind(c)
g;g_data_input_stream_read_line;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"char * g_data_input_stream_read_line (GDataInputStream *stream, gsize *length, GCancellable *cancellable, GError **error);";function g_data_input_stream_read_line(stream, length, cancellable, error) bind(c)
g;g_data_input_stream_read_line_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"void g_data_input_stream_read_line_async (GDataInputStream *stream, gint io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_data_input_stream_read_line_async(stream, io_priority, cancellable, callback, user_data) bind(c)
g;g_data_input_stream_read_line_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"char * g_data_input_stream_read_line_finish (GDataInputStream *stream, GAsyncResult *result, gsize *length, GError **error);";function g_data_input_stream_read_line_finish(stream, result, length, error) bind(c)
g;g_data_input_stream_read_line_finish_utf8;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"char * g_data_input_stream_read_line_finish_utf8(GDataInputStream *stream, GAsyncResult *result, gsize *length, GError **error);";function g_data_input_stream_read_line_finish_utf8(stream, result, length, error) bind(c)
g;g_data_input_stream_read_line_utf8;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"char * g_data_input_stream_read_line_utf8 (GDataInputStream *stream, gsize *length, GCancellable *cancellable, GError **error);";function g_data_input_stream_read_line_utf8(stream, length, cancellable, error) bind(c)
g;g_data_input_stream_read_uint16;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"guint16 g_data_input_stream_read_uint16 (GDataInputStream *stream, GCancellable *cancellable, GError **error);";function g_data_input_stream_read_uint16(stream, cancellable, error) bind(c)
g;g_data_input_stream_read_uint32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"guint32 g_data_input_stream_read_uint32 (GDataInputStream *stream, GCancellable *cancellable, GError **error);";function g_data_input_stream_read_uint32(stream, cancellable, error) bind(c)
g;g_data_input_stream_read_uint64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"guint64 g_data_input_stream_read_uint64 (GDataInputStream *stream, GCancellable *cancellable, GError **error);";function g_data_input_stream_read_uint64(stream, cancellable, error) bind(c)
g;g_data_input_stream_read_until;GLIB_DEPRECATED_IN_2_56_FOR (g_data_input_stream_read_upto);glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"char * g_data_input_stream_read_until (GDataInputStream *stream, const gchar *stop_chars, gsize *length, GCancellable *cancellable, GError **error);";function g_data_input_stream_read_until(stream, stop_chars, length, cancellable, error) bind(c)
g;g_data_input_stream_read_until_async;GLIB_DEPRECATED_IN_2_56_FOR (g_data_input_stream_read_upto_async);glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"void g_data_input_stream_read_until_async (GDataInputStream *stream, const gchar *stop_chars, gint io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_data_input_stream_read_until_async(stream, stop_chars, io_priority, cancellable, callback, user_data) bind(c)
g;g_data_input_stream_read_until_finish;GLIB_DEPRECATED_IN_2_56_FOR (g_data_input_stream_read_upto_finish);glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"char * g_data_input_stream_read_until_finish (GDataInputStream *stream, GAsyncResult *result, gsize *length, GError **error);";function g_data_input_stream_read_until_finish(stream, result, length, error) bind(c)
g;g_data_input_stream_read_upto;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"char * g_data_input_stream_read_upto (GDataInputStream *stream, const gchar *stop_chars, gssize stop_chars_len, gsize *length, GCancellable *cancellable, GError **error);";function g_data_input_stream_read_upto(stream, stop_chars, stop_chars_len, length, cancellable, error) bind(c)
g;g_data_input_stream_read_upto_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"void g_data_input_stream_read_upto_async (GDataInputStream *stream, const gchar *stop_chars, gssize stop_chars_len, gint io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_data_input_stream_read_upto_async(stream, stop_chars, stop_chars_len, io_priority, cancellable, callback, user_data) bind(c)
g;g_data_input_stream_read_upto_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"char * g_data_input_stream_read_upto_finish (GDataInputStream *stream, GAsyncResult *result, gsize *length, GError **error);";function g_data_input_stream_read_upto_finish(stream, result, length, error) bind(c)
g;g_data_input_stream_set_byte_order;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"void g_data_input_stream_set_byte_order (GDataInputStream *stream, GDataStreamByteOrder order);";subroutine g_data_input_stream_set_byte_order(stream, order) bind(c)
g;g_data_input_stream_set_newline_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdatainputstream.h;"void g_data_input_stream_set_newline_type (GDataInputStream *stream, GDataStreamNewlineType type);";subroutine g_data_input_stream_set_newline_type(stream, type) bind(c)
g;g_data_output_stream_get_byte_order;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdataoutputstream.h;"GDataStreamByteOrder g_data_output_stream_get_byte_order (GDataOutputStream *stream);";function g_data_output_stream_get_byte_order(stream) bind(c)
g;g_data_output_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdataoutputstream.h;"GType g_data_output_stream_get_type (void) G_GNUC_CONST;";function g_data_output_stream_get_type() bind(c)
g;g_data_output_stream_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdataoutputstream.h;"GDataOutputStream * g_data_output_stream_new (GOutputStream *base_stream);";function g_data_output_stream_new(base_stream) bind(c)
g;g_data_output_stream_put_byte;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdataoutputstream.h;"gboolean g_data_output_stream_put_byte (GDataOutputStream *stream, guchar data, GCancellable *cancellable, GError **error);";function g_data_output_stream_put_byte(stream, data, cancellable, error) bind(c)
g;g_data_output_stream_put_int16;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdataoutputstream.h;"gboolean g_data_output_stream_put_int16 (GDataOutputStream *stream, gint16 data, GCancellable *cancellable, GError **error);";function g_data_output_stream_put_int16(stream, data, cancellable, error) bind(c)
g;g_data_output_stream_put_int32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdataoutputstream.h;"gboolean g_data_output_stream_put_int32 (GDataOutputStream *stream, gint32 data, GCancellable *cancellable, GError **error);";function g_data_output_stream_put_int32(stream, data, cancellable, error) bind(c)
g;g_data_output_stream_put_int64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdataoutputstream.h;"gboolean g_data_output_stream_put_int64 (GDataOutputStream *stream, gint64 data, GCancellable *cancellable, GError **error);";function g_data_output_stream_put_int64(stream, data, cancellable, error) bind(c)
g;g_data_output_stream_put_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdataoutputstream.h;"gboolean g_data_output_stream_put_string (GDataOutputStream *stream, const char *str, GCancellable *cancellable, GError **error);";function g_data_output_stream_put_string(stream, str, cancellable, error) bind(c)
g;g_data_output_stream_put_uint16;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdataoutputstream.h;"gboolean g_data_output_stream_put_uint16 (GDataOutputStream *stream, guint16 data, GCancellable *cancellable, GError **error);";function g_data_output_stream_put_uint16(stream, data, cancellable, error) bind(c)
g;g_data_output_stream_put_uint32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdataoutputstream.h;"gboolean g_data_output_stream_put_uint32 (GDataOutputStream *stream, guint32 data, GCancellable *cancellable, GError **error);";function g_data_output_stream_put_uint32(stream, data, cancellable, error) bind(c)
g;g_data_output_stream_put_uint64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdataoutputstream.h;"gboolean g_data_output_stream_put_uint64 (GDataOutputStream *stream, guint64 data, GCancellable *cancellable, GError **error);";function g_data_output_stream_put_uint64(stream, data, cancellable, error) bind(c)
g;g_data_output_stream_set_byte_order;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdataoutputstream.h;"void g_data_output_stream_set_byte_order (GDataOutputStream *stream, GDataStreamByteOrder order);";subroutine g_data_output_stream_set_byte_order(stream, order) bind(c)
g;g_datagram_based_condition_check;;glib-auto.f90;/usr/include/glib-2.0/gio/gdatagrambased.h;"GIOCondition g_datagram_based_condition_check (GDatagramBased *datagram_based, GIOCondition condition);";function g_datagram_based_condition_check(datagram_based, condition) bind(c)
g;g_datagram_based_condition_wait;;glib-auto.f90;/usr/include/glib-2.0/gio/gdatagrambased.h;"gboolean g_datagram_based_condition_wait (GDatagramBased *datagram_based, GIOCondition condition, gint64 timeout, GCancellable *cancellable, GError **error);";function g_datagram_based_condition_wait(datagram_based, condition, timeout, cancellable, error) bind(c)
g;g_datagram_based_create_source;;glib-auto.f90;/usr/include/glib-2.0/gio/gdatagrambased.h;"GSource * g_datagram_based_create_source (GDatagramBased *datagram_based, GIOCondition condition, GCancellable *cancellable);";function g_datagram_based_create_source(datagram_based, condition, cancellable) bind(c)
g;g_datagram_based_get_type;;glib-auto.f90;/usr/include/glib-2.0/gio/gdatagrambased.h;"GType g_datagram_based_get_type (void);";function g_datagram_based_get_type() bind(c)
g;g_datagram_based_receive_messages;;glib-auto.f90;/usr/include/glib-2.0/gio/gdatagrambased.h;"gint g_datagram_based_receive_messages (GDatagramBased *datagram_based, GInputMessage *messages, guint num_messages, gint flags, gint64 timeout, GCancellable *cancellable, GError **error);";function g_datagram_based_receive_messages(datagram_based, messages, num_messages, flags, timeout, cancellable, error) bind(c)
g;g_datagram_based_send_messages;;glib-auto.f90;/usr/include/glib-2.0/gio/gdatagrambased.h;"gint g_datagram_based_send_messages (GDatagramBased *datagram_based, GOutputMessage *messages, guint num_messages, gint flags, gint64 timeout, GCancellable *cancellable, GError **error);";function g_datagram_based_send_messages(datagram_based, messages, num_messages, flags, timeout, cancellable, error) bind(c)
g;g_datalist_clear;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"void g_datalist_clear (GData **datalist);";subroutine g_datalist_clear(datalist) bind(c)
g;g_datalist_foreach;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"void g_datalist_foreach (GData **datalist, GDataForeachFunc func, gpointer user_data);";subroutine g_datalist_foreach(datalist, func, user_data) bind(c)
g;g_datalist_get_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"gpointer g_datalist_get_data (GData **datalist, const gchar *key);";function g_datalist_get_data(datalist, key) bind(c)
g;g_datalist_get_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"guint g_datalist_get_flags (GData **datalist);";function g_datalist_get_flags(datalist) bind(c)
g;g_datalist_id_dup_data;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"gpointer g_datalist_id_dup_data (GData **datalist, GQuark key_id, GDuplicateFunc dup_func, gpointer user_data);";function g_datalist_id_dup_data(datalist, key_id, dup_func, user_data) bind(c)
g;g_datalist_id_get_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"gpointer g_datalist_id_get_data (GData **datalist, GQuark key_id);";function g_datalist_id_get_data(datalist, key_id) bind(c)
g;g_datalist_id_remove_no_notify;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"gpointer g_datalist_id_remove_no_notify (GData **datalist, GQuark key_id);";function g_datalist_id_remove_no_notify(datalist, key_id) bind(c)
g;g_datalist_id_replace_data;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"gboolean g_datalist_id_replace_data (GData **datalist, GQuark key_id, gpointer oldval, gpointer newval, GDestroyNotify destroy, GDestroyNotify *old_destroy);";function g_datalist_id_replace_data(datalist, key_id, oldval, newval, destroy, old_destroy) bind(c)
g;g_datalist_id_set_data_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"void g_datalist_id_set_data_full (GData **datalist, GQuark key_id, gpointer data, GDestroyNotify destroy_func);";subroutine g_datalist_id_set_data_full(datalist, key_id, data, destroy_func) bind(c)
g;g_datalist_init;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"void g_datalist_init (GData **datalist);";subroutine g_datalist_init(datalist) bind(c)
g;g_datalist_set_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"void g_datalist_set_flags (GData **datalist, guint flags);";subroutine g_datalist_set_flags(datalist, flags) bind(c)
g;g_datalist_unset_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"void g_datalist_unset_flags (GData **datalist, guint flags);";subroutine g_datalist_unset_flags(datalist, flags) bind(c)
g;g_dataset_destroy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"void g_dataset_destroy (gconstpointer dataset_location);";subroutine g_dataset_destroy(dataset_location) bind(c)
g;g_dataset_foreach;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"void g_dataset_foreach (gconstpointer dataset_location, GDataForeachFunc func, gpointer user_data);";subroutine g_dataset_foreach(dataset_location, func, user_data) bind(c)
g;g_dataset_id_get_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"gpointer g_dataset_id_get_data (gconstpointer dataset_location, GQuark key_id);";function g_dataset_id_get_data(dataset_location, key_id) bind(c)
g;g_dataset_id_remove_no_notify;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"gpointer g_dataset_id_remove_no_notify (gconstpointer dataset_location, GQuark key_id);";function g_dataset_id_remove_no_notify(dataset_location, key_id) bind(c)
g;g_dataset_id_set_data_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdataset.h;"void g_dataset_id_set_data_full (gconstpointer dataset_location, GQuark key_id, gpointer data, GDestroyNotify destroy_func);";subroutine g_dataset_id_set_data_full(dataset_location, key_id, data, destroy_func) bind(c)
g;g_date_add_days;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_add_days (GDate *date, guint n_days);";subroutine g_date_add_days(date, n_days) bind(c)
g;g_date_add_months;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_add_months (GDate *date, guint n_months);";subroutine g_date_add_months(date, n_months) bind(c)
g;g_date_add_years;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_add_years (GDate *date, guint n_years);";subroutine g_date_add_years(date, n_years) bind(c)
g;g_date_clamp;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_clamp (GDate *date, const GDate *min_date, const GDate *max_date);";subroutine g_date_clamp(date, min_date, max_date) bind(c)
g;g_date_clear;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_clear (GDate *date, guint n_dates);";subroutine g_date_clear(date, n_dates) bind(c)
g;g_date_compare;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gint g_date_compare (const GDate *lhs, const GDate *rhs);";function g_date_compare(lhs, rhs) bind(c)
g;g_date_copy;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"GDate* g_date_copy (const GDate *date);";function g_date_copy(date) bind(c)
g;g_date_days_between;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gint g_date_days_between (const GDate *date1, const GDate *date2);";function g_date_days_between(date1, date2) bind(c)
g;g_date_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_free (GDate *date);";subroutine g_date_free(date) bind(c)
g;g_date_get_day;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"GDateDay g_date_get_day (const GDate *date);";function g_date_get_day(date) bind(c)
g;g_date_get_day_of_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"guint g_date_get_day_of_year (const GDate *date);";function g_date_get_day_of_year(date) bind(c)
g;g_date_get_days_in_month;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"guint8 g_date_get_days_in_month (GDateMonth month, GDateYear year) G_GNUC_CONST;";function g_date_get_days_in_month(month, year) bind(c)
g;g_date_get_iso8601_week_of_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"guint g_date_get_iso8601_week_of_year (const GDate *date);";function g_date_get_iso8601_week_of_year(date) bind(c)
g;g_date_get_julian;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"guint32 g_date_get_julian (const GDate *date);";function g_date_get_julian(date) bind(c)
g;g_date_get_monday_week_of_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"guint g_date_get_monday_week_of_year (const GDate *date);";function g_date_get_monday_week_of_year(date) bind(c)
g;g_date_get_monday_weeks_in_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"guint8 g_date_get_monday_weeks_in_year (GDateYear year) G_GNUC_CONST;";function g_date_get_monday_weeks_in_year(year) bind(c)
g;g_date_get_month;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"GDateMonth g_date_get_month (const GDate *date);";function g_date_get_month(date) bind(c)
g;g_date_get_sunday_week_of_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"guint g_date_get_sunday_week_of_year (const GDate *date);";function g_date_get_sunday_week_of_year(date) bind(c)
g;g_date_get_sunday_weeks_in_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"guint8 g_date_get_sunday_weeks_in_year (GDateYear year) G_GNUC_CONST;";function g_date_get_sunday_weeks_in_year(year) bind(c)
g;g_date_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_date_get_type (void) G_GNUC_CONST;";function g_date_get_type() bind(c)
g;g_date_get_weekday;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"GDateWeekday g_date_get_weekday (const GDate *date);";function g_date_get_weekday(date) bind(c)
g;g_date_get_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"GDateYear g_date_get_year (const GDate *date);";function g_date_get_year(date) bind(c)
g;g_date_is_first_of_month;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gboolean g_date_is_first_of_month (const GDate *date);";function g_date_is_first_of_month(date) bind(c)
g;g_date_is_last_of_month;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gboolean g_date_is_last_of_month (const GDate *date);";function g_date_is_last_of_month(date) bind(c)
g;g_date_is_leap_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gboolean g_date_is_leap_year (GDateYear year) G_GNUC_CONST;";function g_date_is_leap_year(year) bind(c)
g;g_date_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"GDate* g_date_new (void);";function g_date_new() bind(c)
g;g_date_new_dmy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"GDate* g_date_new_dmy (GDateDay day, GDateMonth month, GDateYear year);";function g_date_new_dmy(day, month, year) bind(c)
g;g_date_new_julian;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"GDate* g_date_new_julian (guint32 julian_day);";function g_date_new_julian(julian_day) bind(c)
g;g_date_order;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_order (GDate *date1, GDate *date2);";subroutine g_date_order(date1, date2) bind(c)
g;g_date_set_day;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_set_day (GDate *date, GDateDay day);";subroutine g_date_set_day(date, day) bind(c)
g;g_date_set_dmy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_set_dmy (GDate *date, GDateDay day, GDateMonth month, GDateYear y);";subroutine g_date_set_dmy(date, day, month, y) bind(c)
g;g_date_set_julian;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_set_julian (GDate *date, guint32 julian_date);";subroutine g_date_set_julian(date, julian_date) bind(c)
g;g_date_set_month;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_set_month (GDate *date, GDateMonth month);";subroutine g_date_set_month(date, month) bind(c)
g;g_date_set_parse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_set_parse (GDate *date, const gchar *str);";subroutine g_date_set_parse(date, str) bind(c)
g;g_date_set_time_t;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_set_time_t (GDate *date, time_t timet);";subroutine g_date_set_time_t(date, timet) bind(c)
g;g_date_set_time_val;GLIB_DEPRECATED_IN_2_62_FOR(g_date_set_time_t);glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_set_time_val (GDate *date, GTimeVal *timeval);";subroutine g_date_set_time_val(date, timeval) bind(c)
g;g_date_set_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_set_year (GDate *date, GDateYear year);";subroutine g_date_set_year(date, year) bind(c)
g;g_date_strftime;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gsize g_date_strftime (gchar *s, gsize slen, const gchar *format, const GDate *date);";function g_date_strftime(s, slen, format, date) bind(c)
g;g_date_subtract_days;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_subtract_days (GDate *date, guint n_days);";subroutine g_date_subtract_days(date, n_days) bind(c)
g;g_date_subtract_months;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_subtract_months (GDate *date, guint n_months);";subroutine g_date_subtract_months(date, n_months) bind(c)
g;g_date_subtract_years;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_subtract_years (GDate *date, guint n_years);";subroutine g_date_subtract_years(date, n_years) bind(c)
g;g_date_time_add;;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_add (GDateTime *datetime, GTimeSpan timespan);";function g_date_time_add(datetime, timespan) bind(c)
g;g_date_time_add_days;;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_add_days (GDateTime *datetime, gint days);";function g_date_time_add_days(datetime, days) bind(c)
g;g_date_time_add_full;;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_add_full (GDateTime *datetime, gint years, gint months, gint days, gint hours, gint minutes, gdouble seconds);";function g_date_time_add_full(datetime, years, months, days, hours, minutes, seconds) bind(c)
g;g_date_time_add_hours;;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_add_hours (GDateTime *datetime, gint hours);";function g_date_time_add_hours(datetime, hours) bind(c)
g;g_date_time_add_minutes;;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_add_minutes (GDateTime *datetime, gint minutes);";function g_date_time_add_minutes(datetime, minutes) bind(c)
g;g_date_time_add_months;;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_add_months (GDateTime *datetime, gint months);";function g_date_time_add_months(datetime, months) bind(c)
g;g_date_time_add_seconds;;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_add_seconds (GDateTime *datetime, gdouble seconds);";function g_date_time_add_seconds(datetime, seconds) bind(c)
g;g_date_time_add_weeks;;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_add_weeks (GDateTime *datetime, gint weeks);";function g_date_time_add_weeks(datetime, weeks) bind(c)
g;g_date_time_add_years;;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_add_years (GDateTime *datetime, gint years);";function g_date_time_add_years(datetime, years) bind(c)
g;g_date_time_compare;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint g_date_time_compare (gconstpointer dt1, gconstpointer dt2);";function g_date_time_compare(dt1, dt2) bind(c)
g;g_date_time_difference;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GTimeSpan g_date_time_difference (GDateTime *end, GDateTime *begin);";function g_date_time_difference(end, begin) bind(c)
g;g_date_time_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gboolean g_date_time_equal (gconstpointer dt1, gconstpointer dt2);";function g_date_time_equal(dt1, dt2) bind(c)
g;g_date_time_format;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gchar * g_date_time_format (GDateTime *datetime, const gchar *format) G_GNUC_MALLOC;";function g_date_time_format(datetime, format) bind(c)
g;g_date_time_format_iso8601;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gchar * g_date_time_format_iso8601 (GDateTime *datetime) G_GNUC_MALLOC;";function g_date_time_format_iso8601(datetime) bind(c)
g;g_date_time_get_day_of_month;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint g_date_time_get_day_of_month (GDateTime *datetime);";function g_date_time_get_day_of_month(datetime) bind(c)
g;g_date_time_get_day_of_week;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint g_date_time_get_day_of_week (GDateTime *datetime);";function g_date_time_get_day_of_week(datetime) bind(c)
g;g_date_time_get_day_of_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint g_date_time_get_day_of_year (GDateTime *datetime);";function g_date_time_get_day_of_year(datetime) bind(c)
g;g_date_time_get_hour;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint g_date_time_get_hour (GDateTime *datetime);";function g_date_time_get_hour(datetime) bind(c)
g;g_date_time_get_microsecond;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint g_date_time_get_microsecond (GDateTime *datetime);";function g_date_time_get_microsecond(datetime) bind(c)
g;g_date_time_get_minute;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint g_date_time_get_minute (GDateTime *datetime);";function g_date_time_get_minute(datetime) bind(c)
g;g_date_time_get_month;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint g_date_time_get_month (GDateTime *datetime);";function g_date_time_get_month(datetime) bind(c)
g;g_date_time_get_second;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint g_date_time_get_second (GDateTime *datetime);";function g_date_time_get_second(datetime) bind(c)
g;g_date_time_get_seconds;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gdouble g_date_time_get_seconds (GDateTime *datetime);";function g_date_time_get_seconds(datetime) bind(c)
g;g_date_time_get_timezone;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GTimeZone * g_date_time_get_timezone (GDateTime *datetime);";function g_date_time_get_timezone(datetime) bind(c)
g;g_date_time_get_timezone_abbreviation;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"const gchar * g_date_time_get_timezone_abbreviation (GDateTime *datetime);";function g_date_time_get_timezone_abbreviation(datetime) bind(c)
g;g_date_time_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_date_time_get_type (void) G_GNUC_CONST;";function g_date_time_get_type() bind(c)
g;g_date_time_get_utc_offset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GTimeSpan g_date_time_get_utc_offset (GDateTime *datetime);";function g_date_time_get_utc_offset(datetime) bind(c)
g;g_date_time_get_week_numbering_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint g_date_time_get_week_numbering_year (GDateTime *datetime);";function g_date_time_get_week_numbering_year(datetime) bind(c)
g;g_date_time_get_week_of_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint g_date_time_get_week_of_year (GDateTime *datetime);";function g_date_time_get_week_of_year(datetime) bind(c)
g;g_date_time_get_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint g_date_time_get_year (GDateTime *datetime);";function g_date_time_get_year(datetime) bind(c)
g;g_date_time_get_ymd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"void g_date_time_get_ymd (GDateTime *datetime, gint *year, gint *month, gint *day);";subroutine g_date_time_get_ymd(datetime, year, month, day) bind(c)
g;g_date_time_hash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"guint g_date_time_hash (gconstpointer datetime);";function g_date_time_hash(datetime) bind(c)
g;g_date_time_is_daylight_savings;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gboolean g_date_time_is_daylight_savings (GDateTime *datetime);";function g_date_time_is_daylight_savings(datetime) bind(c)
g;g_date_time_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_new (GTimeZone *tz, gint year, gint month, gint day, gint hour, gint minute, gdouble seconds);";function g_date_time_new(tz, year, month, day, hour, minute, seconds) bind(c)
g;g_date_time_new_from_iso8601;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_new_from_iso8601 (const gchar *text, GTimeZone *default_tz);";function g_date_time_new_from_iso8601(text, default_tz) bind(c)
g;g_date_time_new_from_timeval_local;GLIB_DEPRECATED_IN_2_62_FOR(g_date_time_new_from_unix_local);glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_new_from_timeval_local (const GTimeVal *tv);";function g_date_time_new_from_timeval_local(tv) bind(c)
g;g_date_time_new_from_timeval_utc;GLIB_DEPRECATED_IN_2_62_FOR(g_date_time_new_from_unix_utc);glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_new_from_timeval_utc (const GTimeVal *tv);";function g_date_time_new_from_timeval_utc(tv) bind(c)
g;g_date_time_new_from_unix_local;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_new_from_unix_local (gint64 t);";function g_date_time_new_from_unix_local(t) bind(c)
g;g_date_time_new_from_unix_utc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_new_from_unix_utc (gint64 t);";function g_date_time_new_from_unix_utc(t) bind(c)
g;g_date_time_new_local;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_new_local (gint year, gint month, gint day, gint hour, gint minute, gdouble seconds);";function g_date_time_new_local(year, month, day, hour, minute, seconds) bind(c)
g;g_date_time_new_now;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_new_now (GTimeZone *tz);";function g_date_time_new_now(tz) bind(c)
g;g_date_time_new_now_local;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_new_now_local (void);";function g_date_time_new_now_local() bind(c)
g;g_date_time_new_now_utc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_new_now_utc (void);";function g_date_time_new_now_utc() bind(c)
g;g_date_time_new_utc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_new_utc (gint year, gint month, gint day, gint hour, gint minute, gdouble seconds);";function g_date_time_new_utc(year, month, day, hour, minute, seconds) bind(c)
g;g_date_time_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_ref (GDateTime *datetime);";function g_date_time_ref(datetime) bind(c)
g;g_date_time_to_local;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_to_local (GDateTime *datetime);";function g_date_time_to_local(datetime) bind(c)
g;g_date_time_to_timeval;GLIB_DEPRECATED_IN_2_62_FOR(g_date_time_to_unix);glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gboolean g_date_time_to_timeval (GDateTime *datetime, GTimeVal *tv);";function g_date_time_to_timeval(datetime, tv) bind(c)
g;g_date_time_to_timezone;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_to_timezone (GDateTime *datetime, GTimeZone *tz);";function g_date_time_to_timezone(datetime, tz) bind(c)
g;g_date_time_to_unix;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"gint64 g_date_time_to_unix (GDateTime *datetime);";function g_date_time_to_unix(datetime) bind(c)
g;g_date_time_to_utc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"GDateTime * g_date_time_to_utc (GDateTime *datetime);";function g_date_time_to_utc(datetime) bind(c)
g;g_date_time_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdatetime.h;"void g_date_time_unref (GDateTime *datetime);";subroutine g_date_time_unref(datetime) bind(c)
g;g_date_to_struct_tm;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"void g_date_to_struct_tm (const GDate *date, struct tm *tm);";subroutine g_date_to_struct_tm(date, tm) bind(c)
g;g_date_valid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gboolean g_date_valid (const GDate *date);";function g_date_valid(date) bind(c)
g;g_date_valid_day;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gboolean g_date_valid_day (GDateDay day) G_GNUC_CONST;";function g_date_valid_day(day) bind(c)
g;g_date_valid_dmy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gboolean g_date_valid_dmy (GDateDay day, GDateMonth month, GDateYear year) G_GNUC_CONST;";function g_date_valid_dmy(day, month, year) bind(c)
g;g_date_valid_julian;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gboolean g_date_valid_julian (guint32 julian_date) G_GNUC_CONST;";function g_date_valid_julian(julian_date) bind(c)
g;g_date_valid_month;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gboolean g_date_valid_month (GDateMonth month) G_GNUC_CONST;";function g_date_valid_month(month) bind(c)
g;g_date_valid_weekday;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gboolean g_date_valid_weekday (GDateWeekday weekday) G_GNUC_CONST;";function g_date_valid_weekday(weekday) bind(c)
g;g_date_valid_year;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdate.h;"gboolean g_date_valid_year (GDateYear year) G_GNUC_CONST;";function g_date_valid_year(year) bind(c)
g;g_dbus_action_group_get;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusactiongroup.h;"GDBusActionGroup * g_dbus_action_group_get (GDBusConnection *connection, const gchar *bus_name, const gchar *object_path);";function g_dbus_action_group_get(connection, bus_name, object_path) bind(c)
g;g_dbus_action_group_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusactiongroup.h;"GType g_dbus_action_group_get_type (void) G_GNUC_CONST;";function g_dbus_action_group_get_type() bind(c)
g;g_dbus_address_escape_value;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusaddress.h;"gchar *g_dbus_address_escape_value (const gchar *string);";function g_dbus_address_escape_value(string) bind(c)
g;g_dbus_address_get_for_bus_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusaddress.h;"gchar *g_dbus_address_get_for_bus_sync (GBusType bus_type, GCancellable *cancellable, GError **error);";function g_dbus_address_get_for_bus_sync(bus_type, cancellable, error) bind(c)
g;g_dbus_address_get_stream;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusaddress.h;"void g_dbus_address_get_stream (const gchar *address, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_address_get_stream(address, cancellable, callback, user_data) bind(c)
g;g_dbus_address_get_stream_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusaddress.h;"GIOStream *g_dbus_address_get_stream_finish (GAsyncResult *res, gchar **out_guid, GError **error);";function g_dbus_address_get_stream_finish(res, out_guid, error) bind(c)
g;g_dbus_address_get_stream_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusaddress.h;"GIOStream *g_dbus_address_get_stream_sync (const gchar *address, gchar **out_guid, GCancellable *cancellable, GError **error);";function g_dbus_address_get_stream_sync(address, out_guid, cancellable, error) bind(c)
g;g_dbus_annotation_info_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GType g_dbus_annotation_info_get_type (void) G_GNUC_CONST;";function g_dbus_annotation_info_get_type() bind(c)
g;g_dbus_annotation_info_lookup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"const gchar *g_dbus_annotation_info_lookup (GDBusAnnotationInfo **annotations, const gchar *name);";function g_dbus_annotation_info_lookup(annotations, name) bind(c)
g;g_dbus_annotation_info_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GDBusAnnotationInfo *g_dbus_annotation_info_ref (GDBusAnnotationInfo *info);";function g_dbus_annotation_info_ref(info) bind(c)
g;g_dbus_annotation_info_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"void g_dbus_annotation_info_unref (GDBusAnnotationInfo *info);";subroutine g_dbus_annotation_info_unref(info) bind(c)
g;g_dbus_arg_info_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GType g_dbus_arg_info_get_type (void) G_GNUC_CONST;";function g_dbus_arg_info_get_type() bind(c)
g;g_dbus_arg_info_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GDBusArgInfo *g_dbus_arg_info_ref (GDBusArgInfo *info);";function g_dbus_arg_info_ref(info) bind(c)
g;g_dbus_arg_info_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"void g_dbus_arg_info_unref (GDBusArgInfo *info);";subroutine g_dbus_arg_info_unref(info) bind(c)
g;g_dbus_auth_observer_allow_mechanism;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusauthobserver.h;"gboolean g_dbus_auth_observer_allow_mechanism (GDBusAuthObserver *observer, const gchar *mechanism);";function g_dbus_auth_observer_allow_mechanism(observer, mechanism) bind(c)
g;g_dbus_auth_observer_authorize_authenticated_peer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusauthobserver.h;"gboolean g_dbus_auth_observer_authorize_authenticated_peer (GDBusAuthObserver *observer, GIOStream *stream, GCredentials *credentials);";function g_dbus_auth_observer_authorize_authenticated_peer(observer, stream, credentials) bind(c)
g;g_dbus_auth_observer_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusauthobserver.h;"GType g_dbus_auth_observer_get_type (void) G_GNUC_CONST;";function g_dbus_auth_observer_get_type() bind(c)
g;g_dbus_auth_observer_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusauthobserver.h;"GDBusAuthObserver *g_dbus_auth_observer_new (void);";function g_dbus_auth_observer_new() bind(c)
g;g_dbus_connection_add_filter;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"guint g_dbus_connection_add_filter (GDBusConnection *connection, GDBusMessageFilterFunction filter_function, gpointer user_data, GDestroyNotify user_data_free_func);";function g_dbus_connection_add_filter(connection, filter_function, user_data, user_data_free_func) bind(c)
g;g_dbus_connection_call;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"void g_dbus_connection_call (GDBusConnection *connection, const gchar *bus_name, const gchar *object_path, const gchar *interface_name, const gchar *method_name, GVariant *parameters, const GVariantType *reply_type, GDBusCallFlags flags, gint timeout_msec, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_connection_call(connection, bus_name, object_path, interface_name, method_name, parameters, reply_type, flags, timeout_msec, cancellable, callback, user_data) bind(c)
g;g_dbus_connection_call_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GVariant *g_dbus_connection_call_finish (GDBusConnection *connection, GAsyncResult *res, GError **error);";function g_dbus_connection_call_finish(connection, res, error) bind(c)
g;g_dbus_connection_call_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GVariant *g_dbus_connection_call_sync (GDBusConnection *connection, const gchar *bus_name, const gchar *object_path, const gchar *interface_name, const gchar *method_name, GVariant *parameters, const GVariantType *reply_type, GDBusCallFlags flags, gint timeout_msec, GCancellable *cancellable, GError **error);";function g_dbus_connection_call_sync(connection, bus_name, object_path, interface_name, method_name, parameters, reply_type, flags, timeout_msec, cancellable, error) bind(c)
g;g_dbus_connection_call_with_unix_fd_list;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"void g_dbus_connection_call_with_unix_fd_list (GDBusConnection *connection, const gchar *bus_name, const gchar *object_path, const gchar *interface_name, const gchar *method_name, GVariant *parameters, const GVariantType *reply_type, GDBusCallFlags flags, gint timeout_msec, GUnixFDList *fd_list, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_connection_call_with_unix_fd_list(connection, bus_name, object_path, interface_name, method_name, parameters, reply_type, flags, timeout_msec, fd_list, cancellable, callback, user_data) bind(c)
g;g_dbus_connection_call_with_unix_fd_list_finish;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GVariant *g_dbus_connection_call_with_unix_fd_list_finish (GDBusConnection *connection, GUnixFDList **out_fd_list, GAsyncResult *res, GError **error);";function g_dbus_connection_call_with_unix_fd_list_finish(connection, out_fd_list, res, error) bind(c)
g;g_dbus_connection_call_with_unix_fd_list_sync;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GVariant *g_dbus_connection_call_with_unix_fd_list_sync (GDBusConnection *connection, const gchar *bus_name, const gchar *object_path, const gchar *interface_name, const gchar *method_name, GVariant *parameters, const GVariantType *reply_type, GDBusCallFlags flags, gint timeout_msec, GUnixFDList *fd_list, GUnixFDList **out_fd_list, GCancellable *cancellable, GError **error);";function g_dbus_connection_call_with_unix_fd_list_sync(connection, bus_name, object_path, interface_name, method_name, parameters, reply_type, flags, timeout_msec, fd_list, out_fd_list, cancellable, error) bind(c)
g;g_dbus_connection_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"void g_dbus_connection_close (GDBusConnection *connection, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_connection_close(connection, cancellable, callback, user_data) bind(c)
g;g_dbus_connection_close_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"gboolean g_dbus_connection_close_finish (GDBusConnection *connection, GAsyncResult *res, GError **error);";function g_dbus_connection_close_finish(connection, res, error) bind(c)
g;g_dbus_connection_close_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"gboolean g_dbus_connection_close_sync (GDBusConnection *connection, GCancellable *cancellable, GError **error);";function g_dbus_connection_close_sync(connection, cancellable, error) bind(c)
g;g_dbus_connection_emit_signal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"gboolean g_dbus_connection_emit_signal (GDBusConnection *connection, const gchar *destination_bus_name, const gchar *object_path, const gchar *interface_name, const gchar *signal_name, GVariant *parameters, GError **error);";function g_dbus_connection_emit_signal(connection, destination_bus_name, object_path, interface_name, signal_name, parameters, error) bind(c)
g;g_dbus_connection_export_action_group;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroupexporter.h;"guint g_dbus_connection_export_action_group (GDBusConnection *connection, const gchar *object_path, GActionGroup *action_group, GError **error);";function g_dbus_connection_export_action_group(connection, object_path, action_group, error) bind(c)
g;g_dbus_connection_export_menu_model;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenuexporter.h;"guint g_dbus_connection_export_menu_model (GDBusConnection *connection, const gchar *object_path, GMenuModel *menu, GError **error);";function g_dbus_connection_export_menu_model(connection, object_path, menu, error) bind(c)
g;g_dbus_connection_flush;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"void g_dbus_connection_flush (GDBusConnection *connection, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_connection_flush(connection, cancellable, callback, user_data) bind(c)
g;g_dbus_connection_flush_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"gboolean g_dbus_connection_flush_finish (GDBusConnection *connection, GAsyncResult *res, GError **error);";function g_dbus_connection_flush_finish(connection, res, error) bind(c)
g;g_dbus_connection_flush_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"gboolean g_dbus_connection_flush_sync (GDBusConnection *connection, GCancellable *cancellable, GError **error);";function g_dbus_connection_flush_sync(connection, cancellable, error) bind(c)
g;g_dbus_connection_get_capabilities;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GDBusCapabilityFlags g_dbus_connection_get_capabilities (GDBusConnection *connection);";function g_dbus_connection_get_capabilities(connection) bind(c)
g;g_dbus_connection_get_exit_on_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"gboolean g_dbus_connection_get_exit_on_close (GDBusConnection *connection);";function g_dbus_connection_get_exit_on_close(connection) bind(c)
g;g_dbus_connection_get_flags;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GDBusConnectionFlags g_dbus_connection_get_flags (GDBusConnection *connection);";function g_dbus_connection_get_flags(connection) bind(c)
g;g_dbus_connection_get_guid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"const gchar *g_dbus_connection_get_guid (GDBusConnection *connection);";function g_dbus_connection_get_guid(connection) bind(c)
g;g_dbus_connection_get_last_serial;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"guint32 g_dbus_connection_get_last_serial (GDBusConnection *connection);";function g_dbus_connection_get_last_serial(connection) bind(c)
g;g_dbus_connection_get_peer_credentials;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GCredentials *g_dbus_connection_get_peer_credentials (GDBusConnection *connection);";function g_dbus_connection_get_peer_credentials(connection) bind(c)
g;g_dbus_connection_get_stream;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GIOStream *g_dbus_connection_get_stream (GDBusConnection *connection);";function g_dbus_connection_get_stream(connection) bind(c)
g;g_dbus_connection_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GType g_dbus_connection_get_type (void) G_GNUC_CONST;";function g_dbus_connection_get_type() bind(c)
g;g_dbus_connection_get_unique_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"const gchar *g_dbus_connection_get_unique_name (GDBusConnection *connection);";function g_dbus_connection_get_unique_name(connection) bind(c)
g;g_dbus_connection_is_closed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"gboolean g_dbus_connection_is_closed (GDBusConnection *connection);";function g_dbus_connection_is_closed(connection) bind(c)
g;g_dbus_connection_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"void g_dbus_connection_new (GIOStream *stream, const gchar *guid, GDBusConnectionFlags flags, GDBusAuthObserver *observer, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_connection_new(stream, guid, flags, observer, cancellable, callback, user_data) bind(c)
g;g_dbus_connection_new_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GDBusConnection *g_dbus_connection_new_finish (GAsyncResult *res, GError **error);";function g_dbus_connection_new_finish(res, error) bind(c)
g;g_dbus_connection_new_for_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"void g_dbus_connection_new_for_address (const gchar *address, GDBusConnectionFlags flags, GDBusAuthObserver *observer, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_connection_new_for_address(address, flags, observer, cancellable, callback, user_data) bind(c)
g;g_dbus_connection_new_for_address_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GDBusConnection *g_dbus_connection_new_for_address_finish (GAsyncResult *res, GError **error);";function g_dbus_connection_new_for_address_finish(res, error) bind(c)
g;g_dbus_connection_new_for_address_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GDBusConnection *g_dbus_connection_new_for_address_sync (const gchar *address, GDBusConnectionFlags flags, GDBusAuthObserver *observer, GCancellable *cancellable, GError **error);";function g_dbus_connection_new_for_address_sync(address, flags, observer, cancellable, error) bind(c)
g;g_dbus_connection_new_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GDBusConnection *g_dbus_connection_new_sync (GIOStream *stream, const gchar *guid, GDBusConnectionFlags flags, GDBusAuthObserver *observer, GCancellable *cancellable, GError **error);";function g_dbus_connection_new_sync(stream, guid, flags, observer, cancellable, error) bind(c)
g;g_dbus_connection_register_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"guint g_dbus_connection_register_object (GDBusConnection *connection, const gchar *object_path, GDBusInterfaceInfo *interface_info, const GDBusInterfaceVTable *vtable, gpointer user_data, GDestroyNotify user_data_free_func, GError **error);";function g_dbus_connection_register_object(connection, object_path, interface_info, vtable, user_data, user_data_free_func, error) bind(c)
g;g_dbus_connection_register_object_with_closures;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"guint g_dbus_connection_register_object_with_closures (GDBusConnection *connection, const gchar *object_path, GDBusInterfaceInfo *interface_info, GClosure *method_call_closure, GClosure *get_property_closure, GClosure *set_property_closure, GError **error);";function g_dbus_connection_register_object_with_closures(connection, object_path, interface_info, method_call_closure, get_property_closure, set_property_closure, error) bind(c)
g;g_dbus_connection_register_subtree;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"guint g_dbus_connection_register_subtree (GDBusConnection *connection, const gchar *object_path, const GDBusSubtreeVTable *vtable, GDBusSubtreeFlags flags, gpointer user_data, GDestroyNotify user_data_free_func, GError **error);";function g_dbus_connection_register_subtree(connection, object_path, vtable, flags, user_data, user_data_free_func, error) bind(c)
g;g_dbus_connection_remove_filter;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"void g_dbus_connection_remove_filter (GDBusConnection *connection, guint filter_id);";subroutine g_dbus_connection_remove_filter(connection, filter_id) bind(c)
g;g_dbus_connection_send_message;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"gboolean g_dbus_connection_send_message (GDBusConnection *connection, GDBusMessage *message, GDBusSendMessageFlags flags, volatile guint32 *out_serial, GError **error);";function g_dbus_connection_send_message(connection, message, flags, out_serial, error) bind(c)
g;g_dbus_connection_send_message_with_reply;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"void g_dbus_connection_send_message_with_reply (GDBusConnection *connection, GDBusMessage *message, GDBusSendMessageFlags flags, gint timeout_msec, volatile guint32 *out_serial, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_connection_send_message_with_reply(connection, message, flags, timeout_msec, out_serial, cancellable, callback, user_data) bind(c)
g;g_dbus_connection_send_message_with_reply_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GDBusMessage *g_dbus_connection_send_message_with_reply_finish (GDBusConnection *connection, GAsyncResult *res, GError **error);";function g_dbus_connection_send_message_with_reply_finish(connection, res, error) bind(c)
g;g_dbus_connection_send_message_with_reply_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"GDBusMessage *g_dbus_connection_send_message_with_reply_sync (GDBusConnection *connection, GDBusMessage *message, GDBusSendMessageFlags flags, gint timeout_msec, volatile guint32 *out_serial, GCancellable *cancellable, GError **error);";function g_dbus_connection_send_message_with_reply_sync(connection, message, flags, timeout_msec, out_serial, cancellable, error) bind(c)
g;g_dbus_connection_set_exit_on_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"void g_dbus_connection_set_exit_on_close (GDBusConnection *connection, gboolean exit_on_close);";subroutine g_dbus_connection_set_exit_on_close(connection, exit_on_close) bind(c)
g;g_dbus_connection_signal_subscribe;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"guint g_dbus_connection_signal_subscribe (GDBusConnection *connection, const gchar *sender, const gchar *interface_name, const gchar *member, const gchar *object_path, const gchar *arg0, GDBusSignalFlags flags, GDBusSignalCallback callback, gpointer user_data, GDestroyNotify user_data_free_func);";function g_dbus_connection_signal_subscribe(connection, sender, interface_name, member, object_path, arg0, flags, callback, user_data, user_data_free_func) bind(c)
g;g_dbus_connection_signal_unsubscribe;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"void g_dbus_connection_signal_unsubscribe (GDBusConnection *connection, guint subscription_id);";subroutine g_dbus_connection_signal_unsubscribe(connection, subscription_id) bind(c)
g;g_dbus_connection_start_message_processing;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"void g_dbus_connection_start_message_processing (GDBusConnection *connection);";subroutine g_dbus_connection_start_message_processing(connection) bind(c)
g;g_dbus_connection_unexport_action_group;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gactiongroupexporter.h;"void g_dbus_connection_unexport_action_group (GDBusConnection *connection, guint export_id);";subroutine g_dbus_connection_unexport_action_group(connection, export_id) bind(c)
g;g_dbus_connection_unexport_menu_model;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenuexporter.h;"void g_dbus_connection_unexport_menu_model (GDBusConnection *connection, guint export_id);";subroutine g_dbus_connection_unexport_menu_model(connection, export_id) bind(c)
g;g_dbus_connection_unregister_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"gboolean g_dbus_connection_unregister_object (GDBusConnection *connection, guint registration_id);";function g_dbus_connection_unregister_object(connection, registration_id) bind(c)
g;g_dbus_connection_unregister_subtree;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusconnection.h;"gboolean g_dbus_connection_unregister_subtree (GDBusConnection *connection, guint registration_id);";function g_dbus_connection_unregister_subtree(connection, registration_id) bind(c)
g;g_dbus_error_encode_gerror;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbuserror.h;"gchar *g_dbus_error_encode_gerror (const GError *error);";function g_dbus_error_encode_gerror(error) bind(c)
g;g_dbus_error_get_remote_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbuserror.h;"gchar *g_dbus_error_get_remote_error (const GError *error);";function g_dbus_error_get_remote_error(error) bind(c)
g;g_dbus_error_is_remote_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbuserror.h;"gboolean g_dbus_error_is_remote_error (const GError *error);";function g_dbus_error_is_remote_error(error) bind(c)
g;g_dbus_error_new_for_dbus_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbuserror.h;"GError *g_dbus_error_new_for_dbus_error (const gchar *dbus_error_name, const gchar *dbus_error_message);";function g_dbus_error_new_for_dbus_error(dbus_error_name, dbus_error_message) bind(c)
g;g_dbus_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbuserror.h;"GQuark g_dbus_error_quark (void);";function g_dbus_error_quark() bind(c)
g;g_dbus_error_register_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbuserror.h;"gboolean g_dbus_error_register_error (GQuark error_domain, gint error_code, const gchar *dbus_error_name);";function g_dbus_error_register_error(error_domain, error_code, dbus_error_name) bind(c)
g;g_dbus_error_register_error_domain;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbuserror.h;"void g_dbus_error_register_error_domain (const gchar *error_domain_quark_name, volatile gsize *quark_volatile, const GDBusErrorEntry *entries, guint num_entries);";subroutine g_dbus_error_register_error_domain(error_domain_quark_name, quark_volatile, entries, num_entries) bind(c)
g;g_dbus_error_set_dbus_error_valist;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbuserror.h;"void g_dbus_error_set_dbus_error_valist (GError **error, const gchar *dbus_error_name, const gchar *dbus_error_message, const gchar *format, va_list var_args) G_GNUC_PRINTF(4, 0);";subroutine g_dbus_error_set_dbus_error_valist(error, dbus_error_name, dbus_error_message, format, var_args) bind(c)
g;g_dbus_error_strip_remote_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbuserror.h;"gboolean g_dbus_error_strip_remote_error (GError *error);";function g_dbus_error_strip_remote_error(error) bind(c)
g;g_dbus_error_unregister_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbuserror.h;"gboolean g_dbus_error_unregister_error (GQuark error_domain, gint error_code, const gchar *dbus_error_name);";function g_dbus_error_unregister_error(error_domain, error_code, dbus_error_name) bind(c)
g;g_dbus_generate_guid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusutils.h;"gchar *g_dbus_generate_guid (void);";function g_dbus_generate_guid() bind(c)
g;g_dbus_gvalue_to_gvariant;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusutils.h;"GVariant *g_dbus_gvalue_to_gvariant (const GValue *gvalue, const GVariantType *type);";function g_dbus_gvalue_to_gvariant(gvalue, type) bind(c)
g;g_dbus_gvariant_to_gvalue;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusutils.h;"void g_dbus_gvariant_to_gvalue (GVariant *value, GValue *out_gvalue);";subroutine g_dbus_gvariant_to_gvalue(value, out_gvalue) bind(c)
g;g_dbus_interface_dup_object;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterface.h;"GDBusObject *g_dbus_interface_dup_object (GDBusInterface *interface_);";function g_dbus_interface_dup_object(interface_) bind(c)
g;g_dbus_interface_get_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterface.h;"GDBusInterfaceInfo *g_dbus_interface_get_info (GDBusInterface *interface_);";function g_dbus_interface_get_info(interface_) bind(c)
g;g_dbus_interface_get_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterface.h;"GDBusObject *g_dbus_interface_get_object (GDBusInterface *interface_);";function g_dbus_interface_get_object(interface_) bind(c)
g;g_dbus_interface_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterface.h;"GType g_dbus_interface_get_type (void) G_GNUC_CONST;";function g_dbus_interface_get_type() bind(c)
g;g_dbus_interface_info_cache_build;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"void g_dbus_interface_info_cache_build (GDBusInterfaceInfo *info);";subroutine g_dbus_interface_info_cache_build(info) bind(c)
g;g_dbus_interface_info_cache_release;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"void g_dbus_interface_info_cache_release (GDBusInterfaceInfo *info);";subroutine g_dbus_interface_info_cache_release(info) bind(c)
g;g_dbus_interface_info_generate_xml;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"void g_dbus_interface_info_generate_xml (GDBusInterfaceInfo *info, guint indent, GString *string_builder);";subroutine g_dbus_interface_info_generate_xml(info, indent, string_builder) bind(c)
g;g_dbus_interface_info_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GType g_dbus_interface_info_get_type (void) G_GNUC_CONST;";function g_dbus_interface_info_get_type() bind(c)
g;g_dbus_interface_info_lookup_method;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GDBusMethodInfo *g_dbus_interface_info_lookup_method (GDBusInterfaceInfo *info, const gchar *name);";function g_dbus_interface_info_lookup_method(info, name) bind(c)
g;g_dbus_interface_info_lookup_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GDBusPropertyInfo *g_dbus_interface_info_lookup_property (GDBusInterfaceInfo *info, const gchar *name);";function g_dbus_interface_info_lookup_property(info, name) bind(c)
g;g_dbus_interface_info_lookup_signal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GDBusSignalInfo *g_dbus_interface_info_lookup_signal (GDBusInterfaceInfo *info, const gchar *name);";function g_dbus_interface_info_lookup_signal(info, name) bind(c)
g;g_dbus_interface_info_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GDBusInterfaceInfo *g_dbus_interface_info_ref (GDBusInterfaceInfo *info);";function g_dbus_interface_info_ref(info) bind(c)
g;g_dbus_interface_info_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"void g_dbus_interface_info_unref (GDBusInterfaceInfo *info);";subroutine g_dbus_interface_info_unref(info) bind(c)
g;g_dbus_interface_set_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterface.h;"void g_dbus_interface_set_object (GDBusInterface *interface_, GDBusObject *object);";subroutine g_dbus_interface_set_object(interface_, object) bind(c)
g;g_dbus_interface_skeleton_export;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"gboolean g_dbus_interface_skeleton_export (GDBusInterfaceSkeleton *interface_, GDBusConnection *connection, const gchar *object_path, GError **error);";function g_dbus_interface_skeleton_export(interface_, connection, object_path, error) bind(c)
g;g_dbus_interface_skeleton_flush;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"void g_dbus_interface_skeleton_flush (GDBusInterfaceSkeleton *interface_);";subroutine g_dbus_interface_skeleton_flush(interface_) bind(c)
g;g_dbus_interface_skeleton_get_connection;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"GDBusConnection *g_dbus_interface_skeleton_get_connection (GDBusInterfaceSkeleton *interface_);";function g_dbus_interface_skeleton_get_connection(interface_) bind(c)
g;g_dbus_interface_skeleton_get_connections;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"GList *g_dbus_interface_skeleton_get_connections (GDBusInterfaceSkeleton *interface_);";function g_dbus_interface_skeleton_get_connections(interface_) bind(c)
g;g_dbus_interface_skeleton_get_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"GDBusInterfaceSkeletonFlags g_dbus_interface_skeleton_get_flags (GDBusInterfaceSkeleton *interface_);";function g_dbus_interface_skeleton_get_flags(interface_) bind(c)
g;g_dbus_interface_skeleton_get_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"GDBusInterfaceInfo *g_dbus_interface_skeleton_get_info (GDBusInterfaceSkeleton *interface_);";function g_dbus_interface_skeleton_get_info(interface_) bind(c)
g;g_dbus_interface_skeleton_get_object_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"const gchar *g_dbus_interface_skeleton_get_object_path (GDBusInterfaceSkeleton *interface_);";function g_dbus_interface_skeleton_get_object_path(interface_) bind(c)
g;g_dbus_interface_skeleton_get_properties;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"GVariant *g_dbus_interface_skeleton_get_properties (GDBusInterfaceSkeleton *interface_);";function g_dbus_interface_skeleton_get_properties(interface_) bind(c)
g;g_dbus_interface_skeleton_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"GType g_dbus_interface_skeleton_get_type (void) G_GNUC_CONST;";function g_dbus_interface_skeleton_get_type() bind(c)
g;g_dbus_interface_skeleton_get_vtable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"GDBusInterfaceVTable *g_dbus_interface_skeleton_get_vtable (GDBusInterfaceSkeleton *interface_);";function g_dbus_interface_skeleton_get_vtable(interface_) bind(c)
g;g_dbus_interface_skeleton_has_connection;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"gboolean g_dbus_interface_skeleton_has_connection (GDBusInterfaceSkeleton *interface_, GDBusConnection *connection);";function g_dbus_interface_skeleton_has_connection(interface_, connection) bind(c)
g;g_dbus_interface_skeleton_set_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"void g_dbus_interface_skeleton_set_flags (GDBusInterfaceSkeleton *interface_, GDBusInterfaceSkeletonFlags flags);";subroutine g_dbus_interface_skeleton_set_flags(interface_, flags) bind(c)
g;g_dbus_interface_skeleton_unexport;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"void g_dbus_interface_skeleton_unexport (GDBusInterfaceSkeleton *interface_);";subroutine g_dbus_interface_skeleton_unexport(interface_) bind(c)
g;g_dbus_interface_skeleton_unexport_from_connection;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h;"void g_dbus_interface_skeleton_unexport_from_connection (GDBusInterfaceSkeleton *interface_, GDBusConnection *connection);";subroutine g_dbus_interface_skeleton_unexport_from_connection(interface_, connection) bind(c)
g;g_dbus_is_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusaddress.h;"gboolean g_dbus_is_address (const gchar *string);";function g_dbus_is_address(string) bind(c)
g;g_dbus_is_guid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusutils.h;"gboolean g_dbus_is_guid (const gchar *string);";function g_dbus_is_guid(string) bind(c)
g;g_dbus_is_interface_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusutils.h;"gboolean g_dbus_is_interface_name (const gchar *string);";function g_dbus_is_interface_name(string) bind(c)
g;g_dbus_is_member_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusutils.h;"gboolean g_dbus_is_member_name (const gchar *string);";function g_dbus_is_member_name(string) bind(c)
g;g_dbus_is_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusutils.h;"gboolean g_dbus_is_name (const gchar *string);";function g_dbus_is_name(string) bind(c)
g;g_dbus_is_supported_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusaddress.h;"gboolean g_dbus_is_supported_address (const gchar *string, GError **error);";function g_dbus_is_supported_address(string, error) bind(c)
g;g_dbus_is_unique_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusutils.h;"gboolean g_dbus_is_unique_name (const gchar *string);";function g_dbus_is_unique_name(string) bind(c)
g;g_dbus_menu_model_get;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmenumodel.h;"GDBusMenuModel * g_dbus_menu_model_get (GDBusConnection *connection, const gchar *bus_name, const gchar *object_path);";function g_dbus_menu_model_get(connection, bus_name, object_path) bind(c)
g;g_dbus_menu_model_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmenumodel.h;"GType g_dbus_menu_model_get_type (void) G_GNUC_CONST;";function g_dbus_menu_model_get_type() bind(c)
g;g_dbus_message_bytes_needed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"gssize g_dbus_message_bytes_needed (guchar *blob, gsize blob_len, GError **error);";function g_dbus_message_bytes_needed(blob, blob_len, error) bind(c)
g;g_dbus_message_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GDBusMessage *g_dbus_message_copy (GDBusMessage *message, GError **error);";function g_dbus_message_copy(message, error) bind(c)
g;g_dbus_message_get_arg0;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"const gchar *g_dbus_message_get_arg0 (GDBusMessage *message);";function g_dbus_message_get_arg0(message) bind(c)
g;g_dbus_message_get_body;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GVariant *g_dbus_message_get_body (GDBusMessage *message);";function g_dbus_message_get_body(message) bind(c)
g;g_dbus_message_get_byte_order;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GDBusMessageByteOrder g_dbus_message_get_byte_order (GDBusMessage *message);";function g_dbus_message_get_byte_order(message) bind(c)
g;g_dbus_message_get_destination;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"const gchar *g_dbus_message_get_destination (GDBusMessage *message);";function g_dbus_message_get_destination(message) bind(c)
g;g_dbus_message_get_error_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"const gchar *g_dbus_message_get_error_name (GDBusMessage *message);";function g_dbus_message_get_error_name(message) bind(c)
g;g_dbus_message_get_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GDBusMessageFlags g_dbus_message_get_flags (GDBusMessage *message);";function g_dbus_message_get_flags(message) bind(c)
g;g_dbus_message_get_header;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GVariant *g_dbus_message_get_header (GDBusMessage *message, GDBusMessageHeaderField header_field);";function g_dbus_message_get_header(message, header_field) bind(c)
g;g_dbus_message_get_header_fields;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"guchar *g_dbus_message_get_header_fields (GDBusMessage *message);";function g_dbus_message_get_header_fields(message) bind(c)
g;g_dbus_message_get_interface;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"const gchar *g_dbus_message_get_interface (GDBusMessage *message);";function g_dbus_message_get_interface(message) bind(c)
g;g_dbus_message_get_locked;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"gboolean g_dbus_message_get_locked (GDBusMessage *message);";function g_dbus_message_get_locked(message) bind(c)
g;g_dbus_message_get_member;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"const gchar *g_dbus_message_get_member (GDBusMessage *message);";function g_dbus_message_get_member(message) bind(c)
g;g_dbus_message_get_message_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GDBusMessageType g_dbus_message_get_message_type (GDBusMessage *message);";function g_dbus_message_get_message_type(message) bind(c)
g;g_dbus_message_get_num_unix_fds;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"guint32 g_dbus_message_get_num_unix_fds (GDBusMessage *message);";function g_dbus_message_get_num_unix_fds(message) bind(c)
g;g_dbus_message_get_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"const gchar *g_dbus_message_get_path (GDBusMessage *message);";function g_dbus_message_get_path(message) bind(c)
g;g_dbus_message_get_reply_serial;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"guint32 g_dbus_message_get_reply_serial (GDBusMessage *message);";function g_dbus_message_get_reply_serial(message) bind(c)
g;g_dbus_message_get_sender;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"const gchar *g_dbus_message_get_sender (GDBusMessage *message);";function g_dbus_message_get_sender(message) bind(c)
g;g_dbus_message_get_serial;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"guint32 g_dbus_message_get_serial (GDBusMessage *message);";function g_dbus_message_get_serial(message) bind(c)
g;g_dbus_message_get_signature;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"const gchar *g_dbus_message_get_signature (GDBusMessage *message);";function g_dbus_message_get_signature(message) bind(c)
g;g_dbus_message_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GType g_dbus_message_get_type (void) G_GNUC_CONST;";function g_dbus_message_get_type() bind(c)
g;g_dbus_message_get_unix_fd_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GUnixFDList *g_dbus_message_get_unix_fd_list (GDBusMessage *message);";function g_dbus_message_get_unix_fd_list(message) bind(c)
g;g_dbus_message_lock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_lock (GDBusMessage *message);";subroutine g_dbus_message_lock(message) bind(c)
g;g_dbus_message_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GDBusMessage *g_dbus_message_new (void);";function g_dbus_message_new() bind(c)
g;g_dbus_message_new_from_blob;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GDBusMessage *g_dbus_message_new_from_blob (guchar *blob, gsize blob_len, GDBusCapabilityFlags capabilities, GError **error);";function g_dbus_message_new_from_blob(blob, blob_len, capabilities, error) bind(c)
g;g_dbus_message_new_method_call;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GDBusMessage *g_dbus_message_new_method_call (const gchar *name, const gchar *path, const gchar *interface_, const gchar *method);";function g_dbus_message_new_method_call(name, path, interface_, method) bind(c)
g;g_dbus_message_new_method_error_literal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GDBusMessage *g_dbus_message_new_method_error_literal (GDBusMessage *method_call_message, const gchar *error_name, const gchar *error_message);";function g_dbus_message_new_method_error_literal(method_call_message, error_name, error_message) bind(c)
g;g_dbus_message_new_method_error_valist;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GDBusMessage *g_dbus_message_new_method_error_valist (GDBusMessage *method_call_message, const gchar *error_name, const gchar *error_message_format, va_list var_args);";function g_dbus_message_new_method_error_valist(method_call_message, error_name, error_message_format, var_args) bind(c)
g;g_dbus_message_new_method_reply;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GDBusMessage *g_dbus_message_new_method_reply (GDBusMessage *method_call_message);";function g_dbus_message_new_method_reply(method_call_message) bind(c)
g;g_dbus_message_new_signal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"GDBusMessage *g_dbus_message_new_signal (const gchar *path, const gchar *interface_, const gchar *signal);";function g_dbus_message_new_signal(path, interface_, signal) bind(c)
g;g_dbus_message_print;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"gchar *g_dbus_message_print (GDBusMessage *message, guint indent);";function g_dbus_message_print(message, indent) bind(c)
g;g_dbus_message_set_body;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_body (GDBusMessage *message, GVariant *body);";subroutine g_dbus_message_set_body(message, body) bind(c)
g;g_dbus_message_set_byte_order;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_byte_order (GDBusMessage *message, GDBusMessageByteOrder byte_order);";subroutine g_dbus_message_set_byte_order(message, byte_order) bind(c)
g;g_dbus_message_set_destination;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_destination (GDBusMessage *message, const gchar *value);";subroutine g_dbus_message_set_destination(message, value) bind(c)
g;g_dbus_message_set_error_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_error_name (GDBusMessage *message, const gchar *value);";subroutine g_dbus_message_set_error_name(message, value) bind(c)
g;g_dbus_message_set_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_flags (GDBusMessage *message, GDBusMessageFlags flags);";subroutine g_dbus_message_set_flags(message, flags) bind(c)
g;g_dbus_message_set_header;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_header (GDBusMessage *message, GDBusMessageHeaderField header_field, GVariant *value);";subroutine g_dbus_message_set_header(message, header_field, value) bind(c)
g;g_dbus_message_set_interface;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_interface (GDBusMessage *message, const gchar *value);";subroutine g_dbus_message_set_interface(message, value) bind(c)
g;g_dbus_message_set_member;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_member (GDBusMessage *message, const gchar *value);";subroutine g_dbus_message_set_member(message, value) bind(c)
g;g_dbus_message_set_message_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_message_type (GDBusMessage *message, GDBusMessageType type);";subroutine g_dbus_message_set_message_type(message, type) bind(c)
g;g_dbus_message_set_num_unix_fds;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_num_unix_fds (GDBusMessage *message, guint32 value);";subroutine g_dbus_message_set_num_unix_fds(message, value) bind(c)
g;g_dbus_message_set_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_path (GDBusMessage *message, const gchar *value);";subroutine g_dbus_message_set_path(message, value) bind(c)
g;g_dbus_message_set_reply_serial;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_reply_serial (GDBusMessage *message, guint32 value);";subroutine g_dbus_message_set_reply_serial(message, value) bind(c)
g;g_dbus_message_set_sender;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_sender (GDBusMessage *message, const gchar *value);";subroutine g_dbus_message_set_sender(message, value) bind(c)
g;g_dbus_message_set_serial;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_serial (GDBusMessage *message, guint32 serial);";subroutine g_dbus_message_set_serial(message, serial) bind(c)
g;g_dbus_message_set_signature;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_signature (GDBusMessage *message, const gchar *value);";subroutine g_dbus_message_set_signature(message, value) bind(c)
g;g_dbus_message_set_unix_fd_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"void g_dbus_message_set_unix_fd_list (GDBusMessage *message, GUnixFDList *fd_list);";subroutine g_dbus_message_set_unix_fd_list(message, fd_list) bind(c)
g;g_dbus_message_to_blob;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"guchar *g_dbus_message_to_blob (GDBusMessage *message, gsize *out_size, GDBusCapabilityFlags capabilities, GError **error);";function g_dbus_message_to_blob(message, out_size, capabilities, error) bind(c)
g;g_dbus_message_to_gerror;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmessage.h;"gboolean g_dbus_message_to_gerror (GDBusMessage *message, GError **error);";function g_dbus_message_to_gerror(message, error) bind(c)
g;g_dbus_method_info_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GType g_dbus_method_info_get_type (void) G_GNUC_CONST;";function g_dbus_method_info_get_type() bind(c)
g;g_dbus_method_info_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GDBusMethodInfo *g_dbus_method_info_ref (GDBusMethodInfo *info);";function g_dbus_method_info_ref(info) bind(c)
g;g_dbus_method_info_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"void g_dbus_method_info_unref (GDBusMethodInfo *info);";subroutine g_dbus_method_info_unref(info) bind(c)
g;g_dbus_method_invocation_get_connection;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"GDBusConnection *g_dbus_method_invocation_get_connection (GDBusMethodInvocation *invocation);";function g_dbus_method_invocation_get_connection(invocation) bind(c)
g;g_dbus_method_invocation_get_interface_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"const gchar *g_dbus_method_invocation_get_interface_name (GDBusMethodInvocation *invocation);";function g_dbus_method_invocation_get_interface_name(invocation) bind(c)
g;g_dbus_method_invocation_get_message;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"GDBusMessage *g_dbus_method_invocation_get_message (GDBusMethodInvocation *invocation);";function g_dbus_method_invocation_get_message(invocation) bind(c)
g;g_dbus_method_invocation_get_method_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"const GDBusMethodInfo *g_dbus_method_invocation_get_method_info (GDBusMethodInvocation *invocation);";function g_dbus_method_invocation_get_method_info(invocation) bind(c)
g;g_dbus_method_invocation_get_method_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"const gchar *g_dbus_method_invocation_get_method_name (GDBusMethodInvocation *invocation);";function g_dbus_method_invocation_get_method_name(invocation) bind(c)
g;g_dbus_method_invocation_get_object_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"const gchar *g_dbus_method_invocation_get_object_path (GDBusMethodInvocation *invocation);";function g_dbus_method_invocation_get_object_path(invocation) bind(c)
g;g_dbus_method_invocation_get_parameters;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"GVariant *g_dbus_method_invocation_get_parameters (GDBusMethodInvocation *invocation);";function g_dbus_method_invocation_get_parameters(invocation) bind(c)
g;g_dbus_method_invocation_get_property_info;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"const GDBusPropertyInfo *g_dbus_method_invocation_get_property_info (GDBusMethodInvocation *invocation);";function g_dbus_method_invocation_get_property_info(invocation) bind(c)
g;g_dbus_method_invocation_get_sender;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"const gchar *g_dbus_method_invocation_get_sender (GDBusMethodInvocation *invocation);";function g_dbus_method_invocation_get_sender(invocation) bind(c)
g;g_dbus_method_invocation_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"GType g_dbus_method_invocation_get_type (void) G_GNUC_CONST;";function g_dbus_method_invocation_get_type() bind(c)
g;g_dbus_method_invocation_get_user_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"gpointer g_dbus_method_invocation_get_user_data (GDBusMethodInvocation *invocation);";function g_dbus_method_invocation_get_user_data(invocation) bind(c)
g;g_dbus_method_invocation_return_dbus_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"void g_dbus_method_invocation_return_dbus_error (GDBusMethodInvocation *invocation, const gchar *error_name, const gchar *error_message);";subroutine g_dbus_method_invocation_return_dbus_error(invocation, error_name, error_message) bind(c)
g;g_dbus_method_invocation_return_error_literal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"void g_dbus_method_invocation_return_error_literal (GDBusMethodInvocation *invocation, GQuark domain, gint code, const gchar *message);";subroutine g_dbus_method_invocation_return_error_literal(invocation, domain, code, message) bind(c)
g;g_dbus_method_invocation_return_error_valist;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"void g_dbus_method_invocation_return_error_valist (GDBusMethodInvocation *invocation, GQuark domain, gint code, const gchar *format, va_list var_args) G_GNUC_PRINTF(4, 0);";subroutine g_dbus_method_invocation_return_error_valist(invocation, domain, code, format, var_args) bind(c)
g;g_dbus_method_invocation_return_gerror;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"void g_dbus_method_invocation_return_gerror (GDBusMethodInvocation *invocation, const GError *error);";subroutine g_dbus_method_invocation_return_gerror(invocation, error) bind(c)
g;g_dbus_method_invocation_return_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"void g_dbus_method_invocation_return_value (GDBusMethodInvocation *invocation, GVariant *parameters);";subroutine g_dbus_method_invocation_return_value(invocation, parameters) bind(c)
g;g_dbus_method_invocation_return_value_with_unix_fd_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"void g_dbus_method_invocation_return_value_with_unix_fd_list (GDBusMethodInvocation *invocation, GVariant *parameters, GUnixFDList *fd_list);";subroutine g_dbus_method_invocation_return_value_with_unix_fd_list(invocation, parameters, fd_list) bind(c)
g;g_dbus_method_invocation_take_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusmethodinvocation.h;"void g_dbus_method_invocation_take_error (GDBusMethodInvocation *invocation, GError *error);";subroutine g_dbus_method_invocation_take_error(invocation, error) bind(c)
g;g_dbus_node_info_generate_xml;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"void g_dbus_node_info_generate_xml (GDBusNodeInfo *info, guint indent, GString *string_builder);";subroutine g_dbus_node_info_generate_xml(info, indent, string_builder) bind(c)
g;g_dbus_node_info_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GType g_dbus_node_info_get_type (void) G_GNUC_CONST;";function g_dbus_node_info_get_type() bind(c)
g;g_dbus_node_info_lookup_interface;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GDBusInterfaceInfo *g_dbus_node_info_lookup_interface (GDBusNodeInfo *info, const gchar *name);";function g_dbus_node_info_lookup_interface(info, name) bind(c)
g;g_dbus_node_info_new_for_xml;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GDBusNodeInfo *g_dbus_node_info_new_for_xml (const gchar *xml_data, GError **error);";function g_dbus_node_info_new_for_xml(xml_data, error) bind(c)
g;g_dbus_node_info_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GDBusNodeInfo *g_dbus_node_info_ref (GDBusNodeInfo *info);";function g_dbus_node_info_ref(info) bind(c)
g;g_dbus_node_info_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"void g_dbus_node_info_unref (GDBusNodeInfo *info);";subroutine g_dbus_node_info_unref(info) bind(c)
g;g_dbus_object_get_interface;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobject.h;"GDBusInterface *g_dbus_object_get_interface (GDBusObject *object, const gchar *interface_name);";function g_dbus_object_get_interface(object, interface_name) bind(c)
g;g_dbus_object_get_interfaces;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobject.h;"GList *g_dbus_object_get_interfaces (GDBusObject *object);";function g_dbus_object_get_interfaces(object) bind(c)
g;g_dbus_object_get_object_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobject.h;"const gchar *g_dbus_object_get_object_path (GDBusObject *object);";function g_dbus_object_get_object_path(object) bind(c)
g;g_dbus_object_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobject.h;"GType g_dbus_object_get_type (void) G_GNUC_CONST;";function g_dbus_object_get_type() bind(c)
g;g_dbus_object_manager_client_get_connection;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h;"GDBusConnection *g_dbus_object_manager_client_get_connection (GDBusObjectManagerClient *manager);";function g_dbus_object_manager_client_get_connection(manager) bind(c)
g;g_dbus_object_manager_client_get_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h;"GDBusObjectManagerClientFlags g_dbus_object_manager_client_get_flags (GDBusObjectManagerClient *manager);";function g_dbus_object_manager_client_get_flags(manager) bind(c)
g;g_dbus_object_manager_client_get_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h;"const gchar *g_dbus_object_manager_client_get_name (GDBusObjectManagerClient *manager);";function g_dbus_object_manager_client_get_name(manager) bind(c)
g;g_dbus_object_manager_client_get_name_owner;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h;"gchar *g_dbus_object_manager_client_get_name_owner (GDBusObjectManagerClient *manager);";function g_dbus_object_manager_client_get_name_owner(manager) bind(c)
g;g_dbus_object_manager_client_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h;"GType g_dbus_object_manager_client_get_type (void) G_GNUC_CONST;";function g_dbus_object_manager_client_get_type() bind(c)
g;g_dbus_object_manager_client_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h;"void g_dbus_object_manager_client_new (GDBusConnection *connection, GDBusObjectManagerClientFlags flags, const gchar *name, const gchar *object_path, GDBusProxyTypeFunc get_proxy_type_func, gpointer get_proxy_type_user_data, GDestroyNotify get_proxy_type_destroy_notify, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_object_manager_client_new(connection, flags, name, object_path, get_proxy_type_func, get_proxy_type_user_data, get_proxy_type_destroy_notify, cancellable, callback, user_data) bind(c)
g;g_dbus_object_manager_client_new_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h;"GDBusObjectManager *g_dbus_object_manager_client_new_finish (GAsyncResult *res, GError **error);";function g_dbus_object_manager_client_new_finish(res, error) bind(c)
g;g_dbus_object_manager_client_new_for_bus;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h;"void g_dbus_object_manager_client_new_for_bus (GBusType bus_type, GDBusObjectManagerClientFlags flags, const gchar *name, const gchar *object_path, GDBusProxyTypeFunc get_proxy_type_func, gpointer get_proxy_type_user_data, GDestroyNotify get_proxy_type_destroy_notify, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_object_manager_client_new_for_bus(bus_type, flags, name, object_path, get_proxy_type_func, get_proxy_type_user_data, get_proxy_type_destroy_notify, cancellable, callback, user_data) bind(c)
g;g_dbus_object_manager_client_new_for_bus_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h;"GDBusObjectManager *g_dbus_object_manager_client_new_for_bus_finish (GAsyncResult *res, GError **error);";function g_dbus_object_manager_client_new_for_bus_finish(res, error) bind(c)
g;g_dbus_object_manager_client_new_for_bus_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h;"GDBusObjectManager *g_dbus_object_manager_client_new_for_bus_sync (GBusType bus_type, GDBusObjectManagerClientFlags flags, const gchar *name, const gchar *object_path, GDBusProxyTypeFunc get_proxy_type_func, gpointer get_proxy_type_user_data, GDestroyNotify get_proxy_type_destroy_notify, GCancellable *cancellable, GError **error);";function g_dbus_object_manager_client_new_for_bus_sync(bus_type, flags, name, object_path, get_proxy_type_func, get_proxy_type_user_data, get_proxy_type_destroy_notify, cancellable, error) bind(c)
g;g_dbus_object_manager_client_new_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h;"GDBusObjectManager *g_dbus_object_manager_client_new_sync (GDBusConnection *connection, GDBusObjectManagerClientFlags flags, const gchar *name, const gchar *object_path, GDBusProxyTypeFunc get_proxy_type_func, gpointer get_proxy_type_user_data, GDestroyNotify get_proxy_type_destroy_notify, GCancellable *cancellable, GError **error);";function g_dbus_object_manager_client_new_sync(connection, flags, name, object_path, get_proxy_type_func, get_proxy_type_user_data, get_proxy_type_destroy_notify, cancellable, error) bind(c)
g;g_dbus_object_manager_get_interface;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanager.h;"GDBusInterface *g_dbus_object_manager_get_interface (GDBusObjectManager *manager, const gchar *object_path, const gchar *interface_name);";function g_dbus_object_manager_get_interface(manager, object_path, interface_name) bind(c)
g;g_dbus_object_manager_get_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanager.h;"GDBusObject *g_dbus_object_manager_get_object (GDBusObjectManager *manager, const gchar *object_path);";function g_dbus_object_manager_get_object(manager, object_path) bind(c)
g;g_dbus_object_manager_get_object_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanager.h;"const gchar *g_dbus_object_manager_get_object_path (GDBusObjectManager *manager);";function g_dbus_object_manager_get_object_path(manager) bind(c)
g;g_dbus_object_manager_get_objects;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanager.h;"GList *g_dbus_object_manager_get_objects (GDBusObjectManager *manager);";function g_dbus_object_manager_get_objects(manager) bind(c)
g;g_dbus_object_manager_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanager.h;"GType g_dbus_object_manager_get_type (void) G_GNUC_CONST;";function g_dbus_object_manager_get_type() bind(c)
g;g_dbus_object_manager_server_export;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h;"void g_dbus_object_manager_server_export (GDBusObjectManagerServer *manager, GDBusObjectSkeleton *object);";subroutine g_dbus_object_manager_server_export(manager, object) bind(c)
g;g_dbus_object_manager_server_export_uniquely;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h;"void g_dbus_object_manager_server_export_uniquely (GDBusObjectManagerServer *manager, GDBusObjectSkeleton *object);";subroutine g_dbus_object_manager_server_export_uniquely(manager, object) bind(c)
g;g_dbus_object_manager_server_get_connection;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h;"GDBusConnection *g_dbus_object_manager_server_get_connection (GDBusObjectManagerServer *manager);";function g_dbus_object_manager_server_get_connection(manager) bind(c)
g;g_dbus_object_manager_server_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h;"GType g_dbus_object_manager_server_get_type (void) G_GNUC_CONST;";function g_dbus_object_manager_server_get_type() bind(c)
g;g_dbus_object_manager_server_is_exported;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h;"gboolean g_dbus_object_manager_server_is_exported (GDBusObjectManagerServer *manager, GDBusObjectSkeleton *object);";function g_dbus_object_manager_server_is_exported(manager, object) bind(c)
g;g_dbus_object_manager_server_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h;"GDBusObjectManagerServer *g_dbus_object_manager_server_new (const gchar *object_path);";function g_dbus_object_manager_server_new(object_path) bind(c)
g;g_dbus_object_manager_server_set_connection;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h;"void g_dbus_object_manager_server_set_connection (GDBusObjectManagerServer *manager, GDBusConnection *connection);";subroutine g_dbus_object_manager_server_set_connection(manager, connection) bind(c)
g;g_dbus_object_manager_server_unexport;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h;"gboolean g_dbus_object_manager_server_unexport (GDBusObjectManagerServer *manager, const gchar *object_path);";function g_dbus_object_manager_server_unexport(manager, object_path) bind(c)
g;g_dbus_object_proxy_get_connection;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectproxy.h;"GDBusConnection *g_dbus_object_proxy_get_connection (GDBusObjectProxy *proxy);";function g_dbus_object_proxy_get_connection(proxy) bind(c)
g;g_dbus_object_proxy_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectproxy.h;"GType g_dbus_object_proxy_get_type (void) G_GNUC_CONST;";function g_dbus_object_proxy_get_type() bind(c)
g;g_dbus_object_proxy_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectproxy.h;"GDBusObjectProxy *g_dbus_object_proxy_new (GDBusConnection *connection, const gchar *object_path);";function g_dbus_object_proxy_new(connection, object_path) bind(c)
g;g_dbus_object_skeleton_add_interface;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectskeleton.h;"void g_dbus_object_skeleton_add_interface (GDBusObjectSkeleton *object, GDBusInterfaceSkeleton *interface_);";subroutine g_dbus_object_skeleton_add_interface(object, interface_) bind(c)
g;g_dbus_object_skeleton_flush;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectskeleton.h;"void g_dbus_object_skeleton_flush (GDBusObjectSkeleton *object);";subroutine g_dbus_object_skeleton_flush(object) bind(c)
g;g_dbus_object_skeleton_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectskeleton.h;"GType g_dbus_object_skeleton_get_type (void) G_GNUC_CONST;";function g_dbus_object_skeleton_get_type() bind(c)
g;g_dbus_object_skeleton_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectskeleton.h;"GDBusObjectSkeleton *g_dbus_object_skeleton_new (const gchar *object_path);";function g_dbus_object_skeleton_new(object_path) bind(c)
g;g_dbus_object_skeleton_remove_interface;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectskeleton.h;"void g_dbus_object_skeleton_remove_interface (GDBusObjectSkeleton *object, GDBusInterfaceSkeleton *interface_);";subroutine g_dbus_object_skeleton_remove_interface(object, interface_) bind(c)
g;g_dbus_object_skeleton_remove_interface_by_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectskeleton.h;"void g_dbus_object_skeleton_remove_interface_by_name (GDBusObjectSkeleton *object, const gchar *interface_name);";subroutine g_dbus_object_skeleton_remove_interface_by_name(object, interface_name) bind(c)
g;g_dbus_object_skeleton_set_object_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusobjectskeleton.h;"void g_dbus_object_skeleton_set_object_path (GDBusObjectSkeleton *object, const gchar *object_path);";subroutine g_dbus_object_skeleton_set_object_path(object, object_path) bind(c)
g;g_dbus_property_info_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GType g_dbus_property_info_get_type (void) G_GNUC_CONST;";function g_dbus_property_info_get_type() bind(c)
g;g_dbus_property_info_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GDBusPropertyInfo *g_dbus_property_info_ref (GDBusPropertyInfo *info);";function g_dbus_property_info_ref(info) bind(c)
g;g_dbus_property_info_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"void g_dbus_property_info_unref (GDBusPropertyInfo *info);";subroutine g_dbus_property_info_unref(info) bind(c)
g;g_dbus_proxy_call;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"void g_dbus_proxy_call (GDBusProxy *proxy, const gchar *method_name, GVariant *parameters, GDBusCallFlags flags, gint timeout_msec, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_proxy_call(proxy, method_name, parameters, flags, timeout_msec, cancellable, callback, user_data) bind(c)
g;g_dbus_proxy_call_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GVariant *g_dbus_proxy_call_finish (GDBusProxy *proxy, GAsyncResult *res, GError **error);";function g_dbus_proxy_call_finish(proxy, res, error) bind(c)
g;g_dbus_proxy_call_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GVariant *g_dbus_proxy_call_sync (GDBusProxy *proxy, const gchar *method_name, GVariant *parameters, GDBusCallFlags flags, gint timeout_msec, GCancellable *cancellable, GError **error);";function g_dbus_proxy_call_sync(proxy, method_name, parameters, flags, timeout_msec, cancellable, error) bind(c)
g;g_dbus_proxy_call_with_unix_fd_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"void g_dbus_proxy_call_with_unix_fd_list (GDBusProxy *proxy, const gchar *method_name, GVariant *parameters, GDBusCallFlags flags, gint timeout_msec, GUnixFDList *fd_list, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_proxy_call_with_unix_fd_list(proxy, method_name, parameters, flags, timeout_msec, fd_list, cancellable, callback, user_data) bind(c)
g;g_dbus_proxy_call_with_unix_fd_list_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GVariant *g_dbus_proxy_call_with_unix_fd_list_finish (GDBusProxy *proxy, GUnixFDList **out_fd_list, GAsyncResult *res, GError **error);";function g_dbus_proxy_call_with_unix_fd_list_finish(proxy, out_fd_list, res, error) bind(c)
g;g_dbus_proxy_call_with_unix_fd_list_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GVariant *g_dbus_proxy_call_with_unix_fd_list_sync (GDBusProxy *proxy, const gchar *method_name, GVariant *parameters, GDBusCallFlags flags, gint timeout_msec, GUnixFDList *fd_list, GUnixFDList **out_fd_list, GCancellable *cancellable, GError **error);";function g_dbus_proxy_call_with_unix_fd_list_sync(proxy, method_name, parameters, flags, timeout_msec, fd_list, out_fd_list, cancellable, error) bind(c)
g;g_dbus_proxy_get_cached_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GVariant *g_dbus_proxy_get_cached_property (GDBusProxy *proxy, const gchar *property_name);";function g_dbus_proxy_get_cached_property(proxy, property_name) bind(c)
g;g_dbus_proxy_get_cached_property_names;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"gchar **g_dbus_proxy_get_cached_property_names (GDBusProxy *proxy);";function g_dbus_proxy_get_cached_property_names(proxy) bind(c)
g;g_dbus_proxy_get_connection;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GDBusConnection *g_dbus_proxy_get_connection (GDBusProxy *proxy);";function g_dbus_proxy_get_connection(proxy) bind(c)
g;g_dbus_proxy_get_default_timeout;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"gint g_dbus_proxy_get_default_timeout (GDBusProxy *proxy);";function g_dbus_proxy_get_default_timeout(proxy) bind(c)
g;g_dbus_proxy_get_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GDBusProxyFlags g_dbus_proxy_get_flags (GDBusProxy *proxy);";function g_dbus_proxy_get_flags(proxy) bind(c)
g;g_dbus_proxy_get_interface_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GDBusInterfaceInfo *g_dbus_proxy_get_interface_info (GDBusProxy *proxy);";function g_dbus_proxy_get_interface_info(proxy) bind(c)
g;g_dbus_proxy_get_interface_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"const gchar *g_dbus_proxy_get_interface_name (GDBusProxy *proxy);";function g_dbus_proxy_get_interface_name(proxy) bind(c)
g;g_dbus_proxy_get_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"const gchar *g_dbus_proxy_get_name (GDBusProxy *proxy);";function g_dbus_proxy_get_name(proxy) bind(c)
g;g_dbus_proxy_get_name_owner;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"gchar *g_dbus_proxy_get_name_owner (GDBusProxy *proxy);";function g_dbus_proxy_get_name_owner(proxy) bind(c)
g;g_dbus_proxy_get_object_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"const gchar *g_dbus_proxy_get_object_path (GDBusProxy *proxy);";function g_dbus_proxy_get_object_path(proxy) bind(c)
g;g_dbus_proxy_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GType g_dbus_proxy_get_type (void) G_GNUC_CONST;";function g_dbus_proxy_get_type() bind(c)
g;g_dbus_proxy_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"void g_dbus_proxy_new (GDBusConnection *connection, GDBusProxyFlags flags, GDBusInterfaceInfo *info, const gchar *name, const gchar *object_path, const gchar *interface_name, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_proxy_new(connection, flags, info, name, object_path, interface_name, cancellable, callback, user_data) bind(c)
g;g_dbus_proxy_new_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GDBusProxy *g_dbus_proxy_new_finish (GAsyncResult *res, GError **error);";function g_dbus_proxy_new_finish(res, error) bind(c)
g;g_dbus_proxy_new_for_bus;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"void g_dbus_proxy_new_for_bus (GBusType bus_type, GDBusProxyFlags flags, GDBusInterfaceInfo *info, const gchar *name, const gchar *object_path, const gchar *interface_name, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dbus_proxy_new_for_bus(bus_type, flags, info, name, object_path, interface_name, cancellable, callback, user_data) bind(c)
g;g_dbus_proxy_new_for_bus_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GDBusProxy *g_dbus_proxy_new_for_bus_finish (GAsyncResult *res, GError **error);";function g_dbus_proxy_new_for_bus_finish(res, error) bind(c)
g;g_dbus_proxy_new_for_bus_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GDBusProxy *g_dbus_proxy_new_for_bus_sync (GBusType bus_type, GDBusProxyFlags flags, GDBusInterfaceInfo *info, const gchar *name, const gchar *object_path, const gchar *interface_name, GCancellable *cancellable, GError **error);";function g_dbus_proxy_new_for_bus_sync(bus_type, flags, info, name, object_path, interface_name, cancellable, error) bind(c)
g;g_dbus_proxy_new_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"GDBusProxy *g_dbus_proxy_new_sync (GDBusConnection *connection, GDBusProxyFlags flags, GDBusInterfaceInfo *info, const gchar *name, const gchar *object_path, const gchar *interface_name, GCancellable *cancellable, GError **error);";function g_dbus_proxy_new_sync(connection, flags, info, name, object_path, interface_name, cancellable, error) bind(c)
g;g_dbus_proxy_set_cached_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"void g_dbus_proxy_set_cached_property (GDBusProxy *proxy, const gchar *property_name, GVariant *value);";subroutine g_dbus_proxy_set_cached_property(proxy, property_name, value) bind(c)
g;g_dbus_proxy_set_default_timeout;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"void g_dbus_proxy_set_default_timeout (GDBusProxy *proxy, gint timeout_msec);";subroutine g_dbus_proxy_set_default_timeout(proxy, timeout_msec) bind(c)
g;g_dbus_proxy_set_interface_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusproxy.h;"void g_dbus_proxy_set_interface_info (GDBusProxy *proxy, GDBusInterfaceInfo *info);";subroutine g_dbus_proxy_set_interface_info(proxy, info) bind(c)
g;g_dbus_server_get_client_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusserver.h;"const gchar *g_dbus_server_get_client_address (GDBusServer *server);";function g_dbus_server_get_client_address(server) bind(c)
g;g_dbus_server_get_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusserver.h;"GDBusServerFlags g_dbus_server_get_flags (GDBusServer *server);";function g_dbus_server_get_flags(server) bind(c)
g;g_dbus_server_get_guid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusserver.h;"const gchar *g_dbus_server_get_guid (GDBusServer *server);";function g_dbus_server_get_guid(server) bind(c)
g;g_dbus_server_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusserver.h;"GType g_dbus_server_get_type (void) G_GNUC_CONST;";function g_dbus_server_get_type() bind(c)
g;g_dbus_server_is_active;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusserver.h;"gboolean g_dbus_server_is_active (GDBusServer *server);";function g_dbus_server_is_active(server) bind(c)
g;g_dbus_server_new_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusserver.h;"GDBusServer *g_dbus_server_new_sync (const gchar *address, GDBusServerFlags flags, const gchar *guid, GDBusAuthObserver *observer, GCancellable *cancellable, GError **error);";function g_dbus_server_new_sync(address, flags, guid, observer, cancellable, error) bind(c)
g;g_dbus_server_start;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusserver.h;"void g_dbus_server_start (GDBusServer *server);";subroutine g_dbus_server_start(server) bind(c)
g;g_dbus_server_stop;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusserver.h;"void g_dbus_server_stop (GDBusServer *server);";subroutine g_dbus_server_stop(server) bind(c)
g;g_dbus_signal_info_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GType g_dbus_signal_info_get_type (void) G_GNUC_CONST;";function g_dbus_signal_info_get_type() bind(c)
g;g_dbus_signal_info_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"GDBusSignalInfo *g_dbus_signal_info_ref (GDBusSignalInfo *info);";function g_dbus_signal_info_ref(info) bind(c)
g;g_dbus_signal_info_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdbusintrospection.h;"void g_dbus_signal_info_unref (GDBusSignalInfo *info);";subroutine g_dbus_signal_info_unref(info) bind(c)
g;g_dcgettext;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ggettext.h;"const gchar *g_dcgettext (const gchar *domain, const gchar *msgid, gint category) G_GNUC_FORMAT(2);";function g_dcgettext(domain, msgid, category) bind(c)
g;g_dgettext;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ggettext.h;"const gchar *g_dgettext (const gchar *domain, const gchar *msgid) G_GNUC_FORMAT(2);";function g_dgettext(domain, msgid) bind(c)
g;g_dir_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdir.h;"void g_dir_close (GDir *dir);";subroutine g_dir_close(dir) bind(c)
g;g_dir_make_tmp;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gchar *g_dir_make_tmp (const gchar *tmpl, GError **error);";function g_dir_make_tmp(tmpl, error) bind(c)
g;g_dir_open;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdir.h;"GDir * g_dir_open (const gchar *path, guint flags, GError **error);";function g_dir_open(path, flags, error) bind(c)
g;g_dir_read_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdir.h;"const gchar * g_dir_read_name (GDir *dir);";function g_dir_read_name(dir) bind(c)
g;g_dir_rewind;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gdir.h;"void g_dir_rewind (GDir *dir);";subroutine g_dir_rewind(dir) bind(c)
g;g_direct_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_direct_equal (gconstpointer v1, gconstpointer v2) G_GNUC_CONST;";function g_direct_equal(v1, v2) bind(c)
g;g_direct_hash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"guint g_direct_hash (gconstpointer v) G_GNUC_CONST;";function g_direct_hash(v) bind(c)
g;g_dngettext;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ggettext.h;"const gchar *g_dngettext (const gchar *domain, const gchar *msgid, const gchar *msgid_plural, gulong n) G_GNUC_FORMAT(3);";function g_dngettext(domain, msgid, msgid_plural, n) bind(c)
g;g_double_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_double_equal (gconstpointer v1, gconstpointer v2);";function g_double_equal(v1, v2) bind(c)
g;g_double_hash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"guint g_double_hash (gconstpointer v);";function g_double_hash(v) bind(c)
g;g_dpgettext;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ggettext.h;"const gchar *g_dpgettext (const gchar *domain, const gchar *msgctxtid, gsize msgidoffset) G_GNUC_FORMAT(2);";function g_dpgettext(domain, msgctxtid, msgidoffset) bind(c)
g;g_dpgettext2;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ggettext.h;"const gchar *g_dpgettext2 (const gchar *domain, const gchar *context, const gchar *msgid) G_GNUC_FORMAT(3);";function g_dpgettext2(domain, context, msgid) bind(c)
g;g_drive_can_eject;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_can_eject (GDrive *drive);";function g_drive_can_eject(drive) bind(c)
g;g_drive_can_poll_for_media;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_can_poll_for_media (GDrive *drive);";function g_drive_can_poll_for_media(drive) bind(c)
g;g_drive_can_start;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_can_start (GDrive *drive);";function g_drive_can_start(drive) bind(c)
g;g_drive_can_start_degraded;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_can_start_degraded (GDrive *drive);";function g_drive_can_start_degraded(drive) bind(c)
g;g_drive_can_stop;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_can_stop (GDrive *drive);";function g_drive_can_stop(drive) bind(c)
g;g_drive_eject;GLIB_DEPRECATED_FOR(g_drive_eject_with_operation);glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"void g_drive_eject (GDrive *drive, GMountUnmountFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_drive_eject(drive, flags, cancellable, callback, user_data) bind(c)
g;g_drive_eject_finish;GLIB_DEPRECATED_FOR(g_drive_eject_with_operation_finish);glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_eject_finish (GDrive *drive, GAsyncResult *result, GError **error);";function g_drive_eject_finish(drive, result, error) bind(c)
g;g_drive_eject_with_operation;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"void g_drive_eject_with_operation (GDrive *drive, GMountUnmountFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_drive_eject_with_operation(drive, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_drive_eject_with_operation_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_eject_with_operation_finish (GDrive *drive, GAsyncResult *result, GError **error);";function g_drive_eject_with_operation_finish(drive, result, error) bind(c)
g;g_drive_enumerate_identifiers;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"char ** g_drive_enumerate_identifiers (GDrive *drive);";function g_drive_enumerate_identifiers(drive) bind(c)
g;g_drive_get_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"GIcon * g_drive_get_icon (GDrive *drive);";function g_drive_get_icon(drive) bind(c)
g;g_drive_get_identifier;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"char * g_drive_get_identifier (GDrive *drive, const char *kind);";function g_drive_get_identifier(drive, kind) bind(c)
g;g_drive_get_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"char * g_drive_get_name (GDrive *drive);";function g_drive_get_name(drive) bind(c)
g;g_drive_get_sort_key;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"const gchar *g_drive_get_sort_key (GDrive *drive);";function g_drive_get_sort_key(drive) bind(c)
g;g_drive_get_start_stop_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"GDriveStartStopType g_drive_get_start_stop_type (GDrive *drive);";function g_drive_get_start_stop_type(drive) bind(c)
g;g_drive_get_symbolic_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"GIcon * g_drive_get_symbolic_icon (GDrive *drive);";function g_drive_get_symbolic_icon(drive) bind(c)
g;g_drive_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"GType g_drive_get_type (void) G_GNUC_CONST;";function g_drive_get_type() bind(c)
g;g_drive_get_volumes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"GList * g_drive_get_volumes (GDrive *drive);";function g_drive_get_volumes(drive) bind(c)
g;g_drive_has_media;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_has_media (GDrive *drive);";function g_drive_has_media(drive) bind(c)
g;g_drive_has_volumes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_has_volumes (GDrive *drive);";function g_drive_has_volumes(drive) bind(c)
g;g_drive_is_media_check_automatic;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_is_media_check_automatic (GDrive *drive);";function g_drive_is_media_check_automatic(drive) bind(c)
g;g_drive_is_media_removable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_is_media_removable (GDrive *drive);";function g_drive_is_media_removable(drive) bind(c)
g;g_drive_is_removable;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_is_removable (GDrive *drive);";function g_drive_is_removable(drive) bind(c)
g;g_drive_poll_for_media;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"void g_drive_poll_for_media (GDrive *drive, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_drive_poll_for_media(drive, cancellable, callback, user_data) bind(c)
g;g_drive_poll_for_media_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_poll_for_media_finish (GDrive *drive, GAsyncResult *result, GError **error);";function g_drive_poll_for_media_finish(drive, result, error) bind(c)
g;g_drive_start;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"void g_drive_start (GDrive *drive, GDriveStartFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_drive_start(drive, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_drive_start_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_start_finish (GDrive *drive, GAsyncResult *result, GError **error);";function g_drive_start_finish(drive, result, error) bind(c)
g;g_drive_stop;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"void g_drive_stop (GDrive *drive, GMountUnmountFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_drive_stop(drive, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_drive_stop_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gdrive.h;"gboolean g_drive_stop_finish (GDrive *drive, GAsyncResult *result, GError **error);";function g_drive_stop_finish(drive, result, error) bind(c)
g;g_dtls_client_connection_get_accepted_cas;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsclientconnection.h;"GList * g_dtls_client_connection_get_accepted_cas (GDtlsClientConnection *conn);";function g_dtls_client_connection_get_accepted_cas(conn) bind(c)
g;g_dtls_client_connection_get_server_identity;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsclientconnection.h;"GSocketConnectable *g_dtls_client_connection_get_server_identity (GDtlsClientConnection *conn);";function g_dtls_client_connection_get_server_identity(conn) bind(c)
g;g_dtls_client_connection_get_type;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsclientconnection.h;"GType g_dtls_client_connection_get_type (void) G_GNUC_CONST;";function g_dtls_client_connection_get_type() bind(c)
g;g_dtls_client_connection_get_validation_flags;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsclientconnection.h;"GTlsCertificateFlags g_dtls_client_connection_get_validation_flags (GDtlsClientConnection *conn);";function g_dtls_client_connection_get_validation_flags(conn) bind(c)
g;g_dtls_client_connection_new;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsclientconnection.h;"GDatagramBased *g_dtls_client_connection_new (GDatagramBased *base_socket, GSocketConnectable *server_identity, GError **error);";function g_dtls_client_connection_new(base_socket, server_identity, error) bind(c)
g;g_dtls_client_connection_set_server_identity;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsclientconnection.h;"void g_dtls_client_connection_set_server_identity (GDtlsClientConnection *conn, GSocketConnectable *identity);";subroutine g_dtls_client_connection_set_server_identity(conn, identity) bind(c)
g;g_dtls_client_connection_set_validation_flags;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsclientconnection.h;"void g_dtls_client_connection_set_validation_flags (GDtlsClientConnection *conn, GTlsCertificateFlags flags);";subroutine g_dtls_client_connection_set_validation_flags(conn, flags) bind(c)
g;g_dtls_connection_close;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"gboolean g_dtls_connection_close (GDtlsConnection *conn, GCancellable *cancellable, GError **error);";function g_dtls_connection_close(conn, cancellable, error) bind(c)
g;g_dtls_connection_close_async;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"void g_dtls_connection_close_async (GDtlsConnection *conn, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dtls_connection_close_async(conn, io_priority, cancellable, callback, user_data) bind(c)
g;g_dtls_connection_close_finish;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"gboolean g_dtls_connection_close_finish (GDtlsConnection *conn, GAsyncResult *result, GError **error);";function g_dtls_connection_close_finish(conn, result, error) bind(c)
g;g_dtls_connection_emit_accept_certificate;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"gboolean g_dtls_connection_emit_accept_certificate (GDtlsConnection *conn, GTlsCertificate *peer_cert, GTlsCertificateFlags errors);";function g_dtls_connection_emit_accept_certificate(conn, peer_cert, errors) bind(c)
g;g_dtls_connection_get_certificate;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"GTlsCertificate *g_dtls_connection_get_certificate (GDtlsConnection *conn);";function g_dtls_connection_get_certificate(conn) bind(c)
g;g_dtls_connection_get_channel_binding_data;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"gboolean g_dtls_connection_get_channel_binding_data (GDtlsConnection *conn, GTlsChannelBindingType type, GByteArray *data, GError **error);";function g_dtls_connection_get_channel_binding_data(conn, type, data, error) bind(c)
g;g_dtls_connection_get_database;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"GTlsDatabase *g_dtls_connection_get_database (GDtlsConnection *conn);";function g_dtls_connection_get_database(conn) bind(c)
g;g_dtls_connection_get_interaction;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"GTlsInteraction *g_dtls_connection_get_interaction (GDtlsConnection *conn);";function g_dtls_connection_get_interaction(conn) bind(c)
g;g_dtls_connection_get_negotiated_protocol;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"const gchar * g_dtls_connection_get_negotiated_protocol (GDtlsConnection *conn);";function g_dtls_connection_get_negotiated_protocol(conn) bind(c)
g;g_dtls_connection_get_peer_certificate;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"GTlsCertificate *g_dtls_connection_get_peer_certificate (GDtlsConnection *conn);";function g_dtls_connection_get_peer_certificate(conn) bind(c)
g;g_dtls_connection_get_peer_certificate_errors;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"GTlsCertificateFlags g_dtls_connection_get_peer_certificate_errors (GDtlsConnection *conn);";function g_dtls_connection_get_peer_certificate_errors(conn) bind(c)
g;g_dtls_connection_get_require_close_notify;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"gboolean g_dtls_connection_get_require_close_notify (GDtlsConnection *conn);";function g_dtls_connection_get_require_close_notify(conn) bind(c)
g;g_dtls_connection_get_type;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"GType g_dtls_connection_get_type (void) G_GNUC_CONST;";function g_dtls_connection_get_type() bind(c)
g;g_dtls_connection_handshake;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"gboolean g_dtls_connection_handshake (GDtlsConnection *conn, GCancellable *cancellable, GError **error);";function g_dtls_connection_handshake(conn, cancellable, error) bind(c)
g;g_dtls_connection_handshake_async;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"void g_dtls_connection_handshake_async (GDtlsConnection *conn, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dtls_connection_handshake_async(conn, io_priority, cancellable, callback, user_data) bind(c)
g;g_dtls_connection_handshake_finish;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"gboolean g_dtls_connection_handshake_finish (GDtlsConnection *conn, GAsyncResult *result, GError **error);";function g_dtls_connection_handshake_finish(conn, result, error) bind(c)
g;g_dtls_connection_set_advertised_protocols;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"void g_dtls_connection_set_advertised_protocols (GDtlsConnection *conn, const gchar * const *protocols);";subroutine g_dtls_connection_set_advertised_protocols(conn, protocols) bind(c)
g;g_dtls_connection_set_certificate;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"void g_dtls_connection_set_certificate (GDtlsConnection *conn, GTlsCertificate *certificate);";subroutine g_dtls_connection_set_certificate(conn, certificate) bind(c)
g;g_dtls_connection_set_database;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"void g_dtls_connection_set_database (GDtlsConnection *conn, GTlsDatabase *database);";subroutine g_dtls_connection_set_database(conn, database) bind(c)
g;g_dtls_connection_set_interaction;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"void g_dtls_connection_set_interaction (GDtlsConnection *conn, GTlsInteraction *interaction);";subroutine g_dtls_connection_set_interaction(conn, interaction) bind(c)
g;g_dtls_connection_set_require_close_notify;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"void g_dtls_connection_set_require_close_notify (GDtlsConnection *conn, gboolean require_close_notify);";subroutine g_dtls_connection_set_require_close_notify(conn, require_close_notify) bind(c)
g;g_dtls_connection_shutdown;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"gboolean g_dtls_connection_shutdown (GDtlsConnection *conn, gboolean shutdown_read, gboolean shutdown_write, GCancellable *cancellable, GError **error);";function g_dtls_connection_shutdown(conn, shutdown_read, shutdown_write, cancellable, error) bind(c)
g;g_dtls_connection_shutdown_async;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"void g_dtls_connection_shutdown_async (GDtlsConnection *conn, gboolean shutdown_read, gboolean shutdown_write, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_dtls_connection_shutdown_async(conn, shutdown_read, shutdown_write, io_priority, cancellable, callback, user_data) bind(c)
g;g_dtls_connection_shutdown_finish;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsconnection.h;"gboolean g_dtls_connection_shutdown_finish (GDtlsConnection *conn, GAsyncResult *result, GError **error);";function g_dtls_connection_shutdown_finish(conn, result, error) bind(c)
g;g_dtls_server_connection_get_type;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsserverconnection.h;"GType g_dtls_server_connection_get_type (void) G_GNUC_CONST;";function g_dtls_server_connection_get_type() bind(c)
g;g_dtls_server_connection_new;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gdtlsserverconnection.h;"GDatagramBased *g_dtls_server_connection_new (GDatagramBased *base_socket, GTlsCertificate *certificate, GError **error);";function g_dtls_server_connection_new(base_socket, certificate, error) bind(c)
g;g_emblem_get_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gemblem.h;"GIcon *g_emblem_get_icon (GEmblem *emblem);";function g_emblem_get_icon(emblem) bind(c)
g;g_emblem_get_origin;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gemblem.h;"GEmblemOrigin g_emblem_get_origin (GEmblem *emblem);";function g_emblem_get_origin(emblem) bind(c)
g;g_emblem_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gemblem.h;"GType g_emblem_get_type (void) G_GNUC_CONST;";function g_emblem_get_type() bind(c)
g;g_emblem_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gemblem.h;"GEmblem *g_emblem_new (GIcon *icon);";function g_emblem_new(icon) bind(c)
g;g_emblem_new_with_origin;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gemblem.h;"GEmblem *g_emblem_new_with_origin (GIcon *icon, GEmblemOrigin origin);";function g_emblem_new_with_origin(icon, origin) bind(c)
g;g_emblemed_icon_add_emblem;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gemblemedicon.h;"void g_emblemed_icon_add_emblem (GEmblemedIcon *emblemed, GEmblem *emblem);";subroutine g_emblemed_icon_add_emblem(emblemed, emblem) bind(c)
g;g_emblemed_icon_clear_emblems;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gemblemedicon.h;"void g_emblemed_icon_clear_emblems (GEmblemedIcon *emblemed);";subroutine g_emblemed_icon_clear_emblems(emblemed) bind(c)
g;g_emblemed_icon_get_emblems;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gemblemedicon.h;"GList *g_emblemed_icon_get_emblems (GEmblemedIcon *emblemed);";function g_emblemed_icon_get_emblems(emblemed) bind(c)
g;g_emblemed_icon_get_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gemblemedicon.h;"GIcon *g_emblemed_icon_get_icon (GEmblemedIcon *emblemed);";function g_emblemed_icon_get_icon(emblemed) bind(c)
g;g_emblemed_icon_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gemblemedicon.h;"GType g_emblemed_icon_get_type (void) G_GNUC_CONST;";function g_emblemed_icon_get_type() bind(c)
g;g_emblemed_icon_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gemblemedicon.h;"GIcon *g_emblemed_icon_new (GIcon *icon, GEmblem *emblem);";function g_emblemed_icon_new(icon, emblem) bind(c)
g;g_enum_complete_type_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"void g_enum_complete_type_info (GType g_enum_type, GTypeInfo *info, const GEnumValue *const_values);";subroutine g_enum_complete_type_info(g_enum_type, info, const_values) bind(c)
g;g_enum_get_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"GEnumValue* g_enum_get_value (GEnumClass *enum_class, gint value);";function g_enum_get_value(enum_class, value) bind(c)
g;g_enum_get_value_by_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"GEnumValue* g_enum_get_value_by_name (GEnumClass *enum_class, const gchar *name);";function g_enum_get_value_by_name(enum_class, name) bind(c)
g;g_enum_get_value_by_nick;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"GEnumValue* g_enum_get_value_by_nick (GEnumClass *enum_class, const gchar *nick);";function g_enum_get_value_by_nick(enum_class, nick) bind(c)
g;g_enum_register_static;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"GType g_enum_register_static (const gchar *name, const GEnumValue *const_static_values);";function g_enum_register_static(name, const_static_values) bind(c)
g;g_enum_to_string;GLIB_AVAILABLE_IN_2_54;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"gchar *g_enum_to_string (GType g_enum_type, gint value);";function g_enum_to_string(g_enum_type, value) bind(c)
g;g_environ_getenv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/genviron.h;"const gchar * g_environ_getenv (gchar **envp, const gchar *variable);";function g_environ_getenv(envp, variable) bind(c)
g;g_environ_setenv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/genviron.h;"gchar ** g_environ_setenv (gchar **envp, const gchar *variable, const gchar *value, gboolean overwrite) G_GNUC_WARN_UNUSED_RESULT;";function g_environ_setenv(envp, variable, value, overwrite) bind(c)
g;g_environ_unsetenv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/genviron.h;"gchar ** g_environ_unsetenv (gchar **envp, const gchar *variable) G_GNUC_WARN_UNUSED_RESULT;";function g_environ_unsetenv(envp, variable) bind(c)
g;g_error_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gerror.h;"GError* g_error_copy (const GError *error);";function g_error_copy(error) bind(c)
g;g_error_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gerror.h;"void g_error_free (GError *error);";subroutine g_error_free(error) bind(c)
g;g_error_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_error_get_type (void) G_GNUC_CONST;";function g_error_get_type() bind(c)
g;g_error_matches;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gerror.h;"gboolean g_error_matches (const GError *error, GQuark domain, gint code);";function g_error_matches(error, domain, code) bind(c)
g;g_error_new_literal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gerror.h;"GError* g_error_new_literal (GQuark domain, gint code, const gchar *message);";function g_error_new_literal(domain, code, message) bind(c)
g;g_error_new_valist;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gerror.h;"GError* g_error_new_valist (GQuark domain, gint code, const gchar *format, va_list args) G_GNUC_PRINTF(3, 0);";function g_error_new_valist(domain, code, format, args) bind(c)
g;g_file_append_to;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileOutputStream * g_file_append_to (GFile *file, GFileCreateFlags flags, GCancellable *cancellable, GError **error);";function g_file_append_to(file, flags, cancellable, error) bind(c)
g;g_file_append_to_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_append_to_async (GFile *file, GFileCreateFlags flags, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_append_to_async(file, flags, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_append_to_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileOutputStream * g_file_append_to_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_append_to_finish(file, res, error) bind(c)
g;g_file_attribute_info_list_add;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileattribute.h;"void g_file_attribute_info_list_add (GFileAttributeInfoList *list, const char *name, GFileAttributeType type, GFileAttributeInfoFlags flags);";subroutine g_file_attribute_info_list_add(list, name, type, flags) bind(c)
g;g_file_attribute_info_list_dup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileattribute.h;"GFileAttributeInfoList * g_file_attribute_info_list_dup (GFileAttributeInfoList *list);";function g_file_attribute_info_list_dup(list) bind(c)
g;g_file_attribute_info_list_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileattribute.h;"GType g_file_attribute_info_list_get_type (void);";function g_file_attribute_info_list_get_type() bind(c)
g;g_file_attribute_info_list_lookup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileattribute.h;"const GFileAttributeInfo *g_file_attribute_info_list_lookup (GFileAttributeInfoList *list, const char *name);";function g_file_attribute_info_list_lookup(list, name) bind(c)
g;g_file_attribute_info_list_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileattribute.h;"GFileAttributeInfoList * g_file_attribute_info_list_new (void);";function g_file_attribute_info_list_new() bind(c)
g;g_file_attribute_info_list_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileattribute.h;"GFileAttributeInfoList * g_file_attribute_info_list_ref (GFileAttributeInfoList *list);";function g_file_attribute_info_list_ref(list) bind(c)
g;g_file_attribute_info_list_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileattribute.h;"void g_file_attribute_info_list_unref (GFileAttributeInfoList *list);";subroutine g_file_attribute_info_list_unref(list) bind(c)
g;g_file_attribute_matcher_enumerate_namespace;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gboolean g_file_attribute_matcher_enumerate_namespace (GFileAttributeMatcher *matcher, const char *ns);";function g_file_attribute_matcher_enumerate_namespace(matcher, ns) bind(c)
g;g_file_attribute_matcher_enumerate_next;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"const char * g_file_attribute_matcher_enumerate_next (GFileAttributeMatcher *matcher);";function g_file_attribute_matcher_enumerate_next(matcher) bind(c)
g;g_file_attribute_matcher_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GType g_file_attribute_matcher_get_type (void) G_GNUC_CONST;";function g_file_attribute_matcher_get_type() bind(c)
g;g_file_attribute_matcher_matches;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gboolean g_file_attribute_matcher_matches (GFileAttributeMatcher *matcher, const char *attribute);";function g_file_attribute_matcher_matches(matcher, attribute) bind(c)
g;g_file_attribute_matcher_matches_only;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gboolean g_file_attribute_matcher_matches_only (GFileAttributeMatcher *matcher, const char *attribute);";function g_file_attribute_matcher_matches_only(matcher, attribute) bind(c)
g;g_file_attribute_matcher_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GFileAttributeMatcher *g_file_attribute_matcher_new (const char *attributes);";function g_file_attribute_matcher_new(attributes) bind(c)
g;g_file_attribute_matcher_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GFileAttributeMatcher *g_file_attribute_matcher_ref (GFileAttributeMatcher *matcher);";function g_file_attribute_matcher_ref(matcher) bind(c)
g;g_file_attribute_matcher_subtract;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GFileAttributeMatcher *g_file_attribute_matcher_subtract (GFileAttributeMatcher *matcher, GFileAttributeMatcher *subtract);";function g_file_attribute_matcher_subtract(matcher, subtract) bind(c)
g;g_file_attribute_matcher_to_string;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"char * g_file_attribute_matcher_to_string (GFileAttributeMatcher *matcher);";function g_file_attribute_matcher_to_string(matcher) bind(c)
g;g_file_attribute_matcher_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_attribute_matcher_unref (GFileAttributeMatcher *matcher);";subroutine g_file_attribute_matcher_unref(matcher) bind(c)
g;g_file_build_attribute_list_for_copy;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"char * g_file_build_attribute_list_for_copy (GFile *file, GFileCopyFlags flags, GCancellable *cancellable, GError **error);";function g_file_build_attribute_list_for_copy(file, flags, cancellable, error) bind(c)
g;g_file_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_copy (GFile *source, GFile *destination, GFileCopyFlags flags, GCancellable *cancellable, GFileProgressCallback progress_callback, gpointer progress_callback_data, GError **error);";function g_file_copy(source, destination, flags, cancellable, progress_callback, progress_callback_data, error) bind(c)
g;g_file_copy_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_copy_async (GFile *source, GFile *destination, GFileCopyFlags flags, int io_priority, GCancellable *cancellable, GFileProgressCallback progress_callback, gpointer progress_callback_data, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_copy_async(source, destination, flags, io_priority, cancellable, progress_callback, progress_callback_data, callback, user_data) bind(c)
g;g_file_copy_attributes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_copy_attributes (GFile *source, GFile *destination, GFileCopyFlags flags, GCancellable *cancellable, GError **error);";function g_file_copy_attributes(source, destination, flags, cancellable, error) bind(c)
g;g_file_copy_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_copy_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_copy_finish(file, res, error) bind(c)
g;g_file_create;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileOutputStream * g_file_create (GFile *file, GFileCreateFlags flags, GCancellable *cancellable, GError **error);";function g_file_create(file, flags, cancellable, error) bind(c)
g;g_file_create_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_create_async (GFile *file, GFileCreateFlags flags, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_create_async(file, flags, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_create_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileOutputStream * g_file_create_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_create_finish(file, res, error) bind(c)
g;g_file_create_readwrite;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileIOStream * g_file_create_readwrite (GFile *file, GFileCreateFlags flags, GCancellable *cancellable, GError **error);";function g_file_create_readwrite(file, flags, cancellable, error) bind(c)
g;g_file_create_readwrite_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_create_readwrite_async (GFile *file, GFileCreateFlags flags, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_create_readwrite_async(file, flags, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_create_readwrite_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileIOStream * g_file_create_readwrite_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_create_readwrite_finish(file, res, error) bind(c)
g;g_file_delete;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_delete (GFile *file, GCancellable *cancellable, GError **error);";function g_file_delete(file, cancellable, error) bind(c)
g;g_file_delete_async;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_delete_async (GFile *file, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_delete_async(file, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_delete_finish;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_delete_finish (GFile *file, GAsyncResult *result, GError **error);";function g_file_delete_finish(file, result, error) bind(c)
g;g_file_dup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_dup (GFile *file);";function g_file_dup(file) bind(c)
g;g_file_eject_mountable;GLIB_DEPRECATED_FOR(g_file_eject_mountable_with_operation);glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_eject_mountable (GFile *file, GMountUnmountFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_eject_mountable(file, flags, cancellable, callback, user_data) bind(c)
g;g_file_eject_mountable_finish;GLIB_DEPRECATED_FOR(g_file_eject_mountable_with_operation_finish);glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_eject_mountable_finish (GFile *file, GAsyncResult *result, GError **error);";function g_file_eject_mountable_finish(file, result, error) bind(c)
g;g_file_eject_mountable_with_operation;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_eject_mountable_with_operation (GFile *file, GMountUnmountFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_eject_mountable_with_operation(file, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_file_eject_mountable_with_operation_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_eject_mountable_with_operation_finish (GFile *file, GAsyncResult *result, GError **error);";function g_file_eject_mountable_with_operation_finish(file, result, error) bind(c)
g;g_file_enumerate_children;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileEnumerator * g_file_enumerate_children (GFile *file, const char *attributes, GFileQueryInfoFlags flags, GCancellable *cancellable, GError **error);";function g_file_enumerate_children(file, attributes, flags, cancellable, error) bind(c)
g;g_file_enumerate_children_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_enumerate_children_async (GFile *file, const char *attributes, GFileQueryInfoFlags flags, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_enumerate_children_async(file, attributes, flags, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_enumerate_children_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileEnumerator * g_file_enumerate_children_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_enumerate_children_finish(file, res, error) bind(c)
g;g_file_enumerator_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"gboolean g_file_enumerator_close (GFileEnumerator *enumerator, GCancellable *cancellable, GError **error);";function g_file_enumerator_close(enumerator, cancellable, error) bind(c)
g;g_file_enumerator_close_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"void g_file_enumerator_close_async (GFileEnumerator *enumerator, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_enumerator_close_async(enumerator, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_enumerator_close_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"gboolean g_file_enumerator_close_finish (GFileEnumerator *enumerator, GAsyncResult *result, GError **error);";function g_file_enumerator_close_finish(enumerator, result, error) bind(c)
g;g_file_enumerator_get_child;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"GFile * g_file_enumerator_get_child (GFileEnumerator *enumerator, GFileInfo *info);";function g_file_enumerator_get_child(enumerator, info) bind(c)
g;g_file_enumerator_get_container;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"GFile * g_file_enumerator_get_container (GFileEnumerator *enumerator);";function g_file_enumerator_get_container(enumerator) bind(c)
g;g_file_enumerator_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"GType g_file_enumerator_get_type (void) G_GNUC_CONST;";function g_file_enumerator_get_type() bind(c)
g;g_file_enumerator_has_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"gboolean g_file_enumerator_has_pending (GFileEnumerator *enumerator);";function g_file_enumerator_has_pending(enumerator) bind(c)
g;g_file_enumerator_is_closed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"gboolean g_file_enumerator_is_closed (GFileEnumerator *enumerator);";function g_file_enumerator_is_closed(enumerator) bind(c)
g;g_file_enumerator_iterate;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"gboolean g_file_enumerator_iterate (GFileEnumerator *direnum, GFileInfo **out_info, GFile **out_child, GCancellable *cancellable, GError **error);";function g_file_enumerator_iterate(direnum, out_info, out_child, cancellable, error) bind(c)
g;g_file_enumerator_next_file;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"GFileInfo *g_file_enumerator_next_file (GFileEnumerator *enumerator, GCancellable *cancellable, GError **error);";function g_file_enumerator_next_file(enumerator, cancellable, error) bind(c)
g;g_file_enumerator_next_files_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"void g_file_enumerator_next_files_async (GFileEnumerator *enumerator, int num_files, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_enumerator_next_files_async(enumerator, num_files, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_enumerator_next_files_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"GList * g_file_enumerator_next_files_finish (GFileEnumerator *enumerator, GAsyncResult *result, GError **error);";function g_file_enumerator_next_files_finish(enumerator, result, error) bind(c)
g;g_file_enumerator_set_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileenumerator.h;"void g_file_enumerator_set_pending (GFileEnumerator *enumerator, gboolean pending);";subroutine g_file_enumerator_set_pending(enumerator, pending) bind(c)
g;g_file_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_equal (GFile *file1, GFile *file2);";function g_file_equal(file1, file2) bind(c)
g;g_file_error_from_errno;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"GFileError g_file_error_from_errno (gint err_no);";function g_file_error_from_errno(err_no) bind(c)
g;g_file_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"GQuark g_file_error_quark (void);";function g_file_error_quark() bind(c)
g;g_file_find_enclosing_mount;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GMount * g_file_find_enclosing_mount (GFile *file, GCancellable *cancellable, GError **error);";function g_file_find_enclosing_mount(file, cancellable, error) bind(c)
g;g_file_find_enclosing_mount_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_find_enclosing_mount_async (GFile *file, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_find_enclosing_mount_async(file, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_find_enclosing_mount_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GMount * g_file_find_enclosing_mount_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_find_enclosing_mount_finish(file, res, error) bind(c)
g;g_file_get_basename;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"char * g_file_get_basename (GFile *file);";function g_file_get_basename(file) bind(c)
g;g_file_get_child;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_get_child (GFile *file, const char *name);";function g_file_get_child(file, name) bind(c)
g;g_file_get_child_for_display_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_get_child_for_display_name (GFile *file, const char *display_name, GError **error);";function g_file_get_child_for_display_name(file, display_name, error) bind(c)
g;g_file_get_contents;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gboolean g_file_get_contents (const gchar *filename, gchar **contents, gsize *length, GError **error);";function g_file_get_contents(filename, contents, length, error) bind(c)
g;g_file_get_parent;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_get_parent (GFile *file);";function g_file_get_parent(file) bind(c)
g;g_file_get_parse_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"char * g_file_get_parse_name (GFile *file);";function g_file_get_parse_name(file) bind(c)
g;g_file_get_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"char * g_file_get_path (GFile *file);";function g_file_get_path(file) bind(c)
g;g_file_get_relative_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"char * g_file_get_relative_path (GFile *parent, GFile *descendant);";function g_file_get_relative_path(parent, descendant) bind(c)
g;g_file_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GType g_file_get_type (void) G_GNUC_CONST;";function g_file_get_type() bind(c)
g;g_file_get_uri;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"char * g_file_get_uri (GFile *file);";function g_file_get_uri(file) bind(c)
g;g_file_get_uri_scheme;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"char * g_file_get_uri_scheme (GFile *file);";function g_file_get_uri_scheme(file) bind(c)
g;g_file_has_parent;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_has_parent (GFile *file, GFile *parent);";function g_file_has_parent(file, parent) bind(c)
g;g_file_has_prefix;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_has_prefix (GFile *file, GFile *prefix);";function g_file_has_prefix(file, prefix) bind(c)
g;g_file_has_uri_scheme;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_has_uri_scheme (GFile *file, const char *uri_scheme);";function g_file_has_uri_scheme(file, uri_scheme) bind(c)
g;g_file_hash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"guint g_file_hash (gconstpointer file);";function g_file_hash(file) bind(c)
g;g_file_icon_get_file;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileicon.h;"GFile * g_file_icon_get_file (GFileIcon *icon);";function g_file_icon_get_file(icon) bind(c)
g;g_file_icon_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileicon.h;"GType g_file_icon_get_type (void) G_GNUC_CONST;";function g_file_icon_get_type() bind(c)
g;g_file_icon_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileicon.h;"GIcon * g_file_icon_new (GFile *file);";function g_file_icon_new(file) bind(c)
g;g_file_info_clear_status;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_clear_status (GFileInfo *info);";subroutine g_file_info_clear_status(info) bind(c)
g;g_file_info_copy_into;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_copy_into (GFileInfo *src_info, GFileInfo *dest_info);";subroutine g_file_info_copy_into(src_info, dest_info) bind(c)
g;g_file_info_dup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GFileInfo * g_file_info_dup (GFileInfo *other);";function g_file_info_dup(other) bind(c)
g;g_file_info_get_attribute_as_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"char * g_file_info_get_attribute_as_string (GFileInfo *info, const char *attribute);";function g_file_info_get_attribute_as_string(info, attribute) bind(c)
g;g_file_info_get_attribute_boolean;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gboolean g_file_info_get_attribute_boolean (GFileInfo *info, const char *attribute);";function g_file_info_get_attribute_boolean(info, attribute) bind(c)
g;g_file_info_get_attribute_byte_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"const char * g_file_info_get_attribute_byte_string (GFileInfo *info, const char *attribute);";function g_file_info_get_attribute_byte_string(info, attribute) bind(c)
g;g_file_info_get_attribute_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gboolean g_file_info_get_attribute_data (GFileInfo *info, const char *attribute, GFileAttributeType *type, gpointer *value_pp, GFileAttributeStatus *status);";function g_file_info_get_attribute_data(info, attribute, type, value_pp, status) bind(c)
g;g_file_info_get_attribute_int32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gint32 g_file_info_get_attribute_int32 (GFileInfo *info, const char *attribute);";function g_file_info_get_attribute_int32(info, attribute) bind(c)
g;g_file_info_get_attribute_int64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gint64 g_file_info_get_attribute_int64 (GFileInfo *info, const char *attribute);";function g_file_info_get_attribute_int64(info, attribute) bind(c)
g;g_file_info_get_attribute_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GObject * g_file_info_get_attribute_object (GFileInfo *info, const char *attribute);";function g_file_info_get_attribute_object(info, attribute) bind(c)
g;g_file_info_get_attribute_status;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GFileAttributeStatus g_file_info_get_attribute_status (GFileInfo *info, const char *attribute);";function g_file_info_get_attribute_status(info, attribute) bind(c)
g;g_file_info_get_attribute_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"const char * g_file_info_get_attribute_string (GFileInfo *info, const char *attribute);";function g_file_info_get_attribute_string(info, attribute) bind(c)
g;g_file_info_get_attribute_stringv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"char ** g_file_info_get_attribute_stringv (GFileInfo *info, const char *attribute);";function g_file_info_get_attribute_stringv(info, attribute) bind(c)
g;g_file_info_get_attribute_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GFileAttributeType g_file_info_get_attribute_type (GFileInfo *info, const char *attribute);";function g_file_info_get_attribute_type(info, attribute) bind(c)
g;g_file_info_get_attribute_uint32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"guint32 g_file_info_get_attribute_uint32 (GFileInfo *info, const char *attribute);";function g_file_info_get_attribute_uint32(info, attribute) bind(c)
g;g_file_info_get_attribute_uint64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"guint64 g_file_info_get_attribute_uint64 (GFileInfo *info, const char *attribute);";function g_file_info_get_attribute_uint64(info, attribute) bind(c)
g;g_file_info_get_content_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"const char * g_file_info_get_content_type (GFileInfo *info);";function g_file_info_get_content_type(info) bind(c)
g;g_file_info_get_deletion_date;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GDateTime * g_file_info_get_deletion_date (GFileInfo *info);";function g_file_info_get_deletion_date(info) bind(c)
g;g_file_info_get_display_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"const char * g_file_info_get_display_name (GFileInfo *info);";function g_file_info_get_display_name(info) bind(c)
g;g_file_info_get_edit_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"const char * g_file_info_get_edit_name (GFileInfo *info);";function g_file_info_get_edit_name(info) bind(c)
g;g_file_info_get_etag;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"const char * g_file_info_get_etag (GFileInfo *info);";function g_file_info_get_etag(info) bind(c)
g;g_file_info_get_file_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GFileType g_file_info_get_file_type (GFileInfo *info);";function g_file_info_get_file_type(info) bind(c)
g;g_file_info_get_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GIcon * g_file_info_get_icon (GFileInfo *info);";function g_file_info_get_icon(info) bind(c)
g;g_file_info_get_is_backup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gboolean g_file_info_get_is_backup (GFileInfo *info);";function g_file_info_get_is_backup(info) bind(c)
g;g_file_info_get_is_hidden;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gboolean g_file_info_get_is_hidden (GFileInfo *info);";function g_file_info_get_is_hidden(info) bind(c)
g;g_file_info_get_is_symlink;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gboolean g_file_info_get_is_symlink (GFileInfo *info);";function g_file_info_get_is_symlink(info) bind(c)
g;g_file_info_get_modification_date_time;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GDateTime * g_file_info_get_modification_date_time (GFileInfo *info);";function g_file_info_get_modification_date_time(info) bind(c)
g;g_file_info_get_modification_time;GLIB_DEPRECATED_IN_2_62_FOR(g_file_info_get_modification_date_time);glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_get_modification_time (GFileInfo *info, GTimeVal *result);";subroutine g_file_info_get_modification_time(info, result) bind(c)
g;g_file_info_get_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"const char * g_file_info_get_name (GFileInfo *info);";function g_file_info_get_name(info) bind(c)
g;g_file_info_get_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"goffset g_file_info_get_size (GFileInfo *info);";function g_file_info_get_size(info) bind(c)
g;g_file_info_get_sort_order;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gint32 g_file_info_get_sort_order (GFileInfo *info);";function g_file_info_get_sort_order(info) bind(c)
g;g_file_info_get_symbolic_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GIcon * g_file_info_get_symbolic_icon (GFileInfo *info);";function g_file_info_get_symbolic_icon(info) bind(c)
g;g_file_info_get_symlink_target;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"const char * g_file_info_get_symlink_target (GFileInfo *info);";function g_file_info_get_symlink_target(info) bind(c)
g;g_file_info_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GType g_file_info_get_type (void) G_GNUC_CONST;";function g_file_info_get_type() bind(c)
g;g_file_info_has_attribute;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gboolean g_file_info_has_attribute (GFileInfo *info, const char *attribute);";function g_file_info_has_attribute(info, attribute) bind(c)
g;g_file_info_has_namespace;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gboolean g_file_info_has_namespace (GFileInfo *info, const char *name_space);";function g_file_info_has_namespace(info, name_space) bind(c)
g;g_file_info_list_attributes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"char ** g_file_info_list_attributes (GFileInfo *info, const char *name_space);";function g_file_info_list_attributes(info, name_space) bind(c)
g;g_file_info_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"GFileInfo * g_file_info_new (void);";function g_file_info_new() bind(c)
g;g_file_info_remove_attribute;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_remove_attribute (GFileInfo *info, const char *attribute);";subroutine g_file_info_remove_attribute(info, attribute) bind(c)
g;g_file_info_set_attribute;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_attribute (GFileInfo *info, const char *attribute, GFileAttributeType type, gpointer value_p);";subroutine g_file_info_set_attribute(info, attribute, type, value_p) bind(c)
g;g_file_info_set_attribute_boolean;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_attribute_boolean (GFileInfo *info, const char *attribute, gboolean attr_value);";subroutine g_file_info_set_attribute_boolean(info, attribute, attr_value) bind(c)
g;g_file_info_set_attribute_byte_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_attribute_byte_string (GFileInfo *info, const char *attribute, const char *attr_value);";subroutine g_file_info_set_attribute_byte_string(info, attribute, attr_value) bind(c)
g;g_file_info_set_attribute_int32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_attribute_int32 (GFileInfo *info, const char *attribute, gint32 attr_value);";subroutine g_file_info_set_attribute_int32(info, attribute, attr_value) bind(c)
g;g_file_info_set_attribute_int64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_attribute_int64 (GFileInfo *info, const char *attribute, gint64 attr_value);";subroutine g_file_info_set_attribute_int64(info, attribute, attr_value) bind(c)
g;g_file_info_set_attribute_mask;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_attribute_mask (GFileInfo *info, GFileAttributeMatcher *mask);";subroutine g_file_info_set_attribute_mask(info, mask) bind(c)
g;g_file_info_set_attribute_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_attribute_object (GFileInfo *info, const char *attribute, GObject *attr_value);";subroutine g_file_info_set_attribute_object(info, attribute, attr_value) bind(c)
g;g_file_info_set_attribute_status;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"gboolean g_file_info_set_attribute_status (GFileInfo *info, const char *attribute, GFileAttributeStatus status);";function g_file_info_set_attribute_status(info, attribute, status) bind(c)
g;g_file_info_set_attribute_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_attribute_string (GFileInfo *info, const char *attribute, const char *attr_value);";subroutine g_file_info_set_attribute_string(info, attribute, attr_value) bind(c)
g;g_file_info_set_attribute_stringv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_attribute_stringv (GFileInfo *info, const char *attribute, char **attr_value);";subroutine g_file_info_set_attribute_stringv(info, attribute, attr_value) bind(c)
g;g_file_info_set_attribute_uint32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_attribute_uint32 (GFileInfo *info, const char *attribute, guint32 attr_value);";subroutine g_file_info_set_attribute_uint32(info, attribute, attr_value) bind(c)
g;g_file_info_set_attribute_uint64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_attribute_uint64 (GFileInfo *info, const char *attribute, guint64 attr_value);";subroutine g_file_info_set_attribute_uint64(info, attribute, attr_value) bind(c)
g;g_file_info_set_content_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_content_type (GFileInfo *info, const char *content_type);";subroutine g_file_info_set_content_type(info, content_type) bind(c)
g;g_file_info_set_display_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_display_name (GFileInfo *info, const char *display_name);";subroutine g_file_info_set_display_name(info, display_name) bind(c)
g;g_file_info_set_edit_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_edit_name (GFileInfo *info, const char *edit_name);";subroutine g_file_info_set_edit_name(info, edit_name) bind(c)
g;g_file_info_set_file_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_file_type (GFileInfo *info, GFileType type);";subroutine g_file_info_set_file_type(info, type) bind(c)
g;g_file_info_set_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_icon (GFileInfo *info, GIcon *icon);";subroutine g_file_info_set_icon(info, icon) bind(c)
g;g_file_info_set_is_hidden;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_is_hidden (GFileInfo *info, gboolean is_hidden);";subroutine g_file_info_set_is_hidden(info, is_hidden) bind(c)
g;g_file_info_set_is_symlink;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_is_symlink (GFileInfo *info, gboolean is_symlink);";subroutine g_file_info_set_is_symlink(info, is_symlink) bind(c)
g;g_file_info_set_modification_date_time;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_modification_date_time (GFileInfo *info, GDateTime *mtime);";subroutine g_file_info_set_modification_date_time(info, mtime) bind(c)
g;g_file_info_set_modification_time;GLIB_DEPRECATED_IN_2_62_FOR(g_file_info_set_modification_date_time);glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_modification_time (GFileInfo *info, GTimeVal *mtime);";subroutine g_file_info_set_modification_time(info, mtime) bind(c)
g;g_file_info_set_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_name (GFileInfo *info, const char *name);";subroutine g_file_info_set_name(info, name) bind(c)
g;g_file_info_set_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_size (GFileInfo *info, goffset size);";subroutine g_file_info_set_size(info, size) bind(c)
g;g_file_info_set_sort_order;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_sort_order (GFileInfo *info, gint32 sort_order);";subroutine g_file_info_set_sort_order(info, sort_order) bind(c)
g;g_file_info_set_symbolic_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_symbolic_icon (GFileInfo *info, GIcon *icon);";subroutine g_file_info_set_symbolic_icon(info, icon) bind(c)
g;g_file_info_set_symlink_target;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_set_symlink_target (GFileInfo *info, const char *symlink_target);";subroutine g_file_info_set_symlink_target(info, symlink_target) bind(c)
g;g_file_info_unset_attribute_mask;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinfo.h;"void g_file_info_unset_attribute_mask (GFileInfo *info);";subroutine g_file_info_unset_attribute_mask(info) bind(c)
g;g_file_input_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinputstream.h;"GType g_file_input_stream_get_type (void) G_GNUC_CONST;";function g_file_input_stream_get_type() bind(c)
g;g_file_input_stream_query_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinputstream.h;"GFileInfo *g_file_input_stream_query_info (GFileInputStream *stream, const char *attributes, GCancellable *cancellable, GError **error);";function g_file_input_stream_query_info(stream, attributes, cancellable, error) bind(c)
g;g_file_input_stream_query_info_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinputstream.h;"void g_file_input_stream_query_info_async (GFileInputStream *stream, const char *attributes, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_input_stream_query_info_async(stream, attributes, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_input_stream_query_info_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileinputstream.h;"GFileInfo *g_file_input_stream_query_info_finish (GFileInputStream *stream, GAsyncResult *result, GError **error);";function g_file_input_stream_query_info_finish(stream, result, error) bind(c)
g;g_file_io_stream_get_etag;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileiostream.h;"char * g_file_io_stream_get_etag (GFileIOStream *stream);";function g_file_io_stream_get_etag(stream) bind(c)
g;g_file_io_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileiostream.h;"GType g_file_io_stream_get_type (void) G_GNUC_CONST;";function g_file_io_stream_get_type() bind(c)
g;g_file_io_stream_query_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileiostream.h;"GFileInfo *g_file_io_stream_query_info (GFileIOStream *stream, const char *attributes, GCancellable *cancellable, GError **error);";function g_file_io_stream_query_info(stream, attributes, cancellable, error) bind(c)
g;g_file_io_stream_query_info_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileiostream.h;"void g_file_io_stream_query_info_async (GFileIOStream *stream, const char *attributes, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_io_stream_query_info_async(stream, attributes, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_io_stream_query_info_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileiostream.h;"GFileInfo *g_file_io_stream_query_info_finish (GFileIOStream *stream, GAsyncResult *result, GError **error);";function g_file_io_stream_query_info_finish(stream, result, error) bind(c)
g;g_file_is_native;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_is_native (GFile *file);";function g_file_is_native(file) bind(c)
g;g_file_load_bytes;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GBytes *g_file_load_bytes (GFile *file, GCancellable *cancellable, gchar **etag_out, GError **error);";function g_file_load_bytes(file, cancellable, etag_out, error) bind(c)
g;g_file_load_bytes_async;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_load_bytes_async (GFile *file, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_load_bytes_async(file, cancellable, callback, user_data) bind(c)
g;g_file_load_bytes_finish;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GBytes *g_file_load_bytes_finish (GFile *file, GAsyncResult *result, gchar **etag_out, GError **error);";function g_file_load_bytes_finish(file, result, etag_out, error) bind(c)
g;g_file_load_contents;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_load_contents (GFile *file, GCancellable *cancellable, char **contents, gsize *length, char **etag_out, GError **error);";function g_file_load_contents(file, cancellable, contents, length, etag_out, error) bind(c)
g;g_file_load_contents_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_load_contents_async (GFile *file, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_load_contents_async(file, cancellable, callback, user_data) bind(c)
g;g_file_load_contents_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_load_contents_finish (GFile *file, GAsyncResult *res, char **contents, gsize *length, char **etag_out, GError **error);";function g_file_load_contents_finish(file, res, contents, length, etag_out, error) bind(c)
g;g_file_load_partial_contents_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_load_partial_contents_async (GFile *file, GCancellable *cancellable, GFileReadMoreCallback read_more_callback, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_load_partial_contents_async(file, cancellable, read_more_callback, callback, user_data) bind(c)
g;g_file_load_partial_contents_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_load_partial_contents_finish (GFile *file, GAsyncResult *res, char **contents, gsize *length, char **etag_out, GError **error);";function g_file_load_partial_contents_finish(file, res, contents, length, etag_out, error) bind(c)
g;g_file_make_directory;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_make_directory (GFile *file, GCancellable *cancellable, GError **error);";function g_file_make_directory(file, cancellable, error) bind(c)
g;g_file_make_directory_async;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_make_directory_async (GFile *file, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_make_directory_async(file, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_make_directory_finish;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_make_directory_finish (GFile *file, GAsyncResult *result, GError **error);";function g_file_make_directory_finish(file, result, error) bind(c)
g;g_file_make_directory_with_parents;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_make_directory_with_parents (GFile *file, GCancellable *cancellable, GError **error);";function g_file_make_directory_with_parents(file, cancellable, error) bind(c)
g;g_file_make_symbolic_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_make_symbolic_link (GFile *file, const char *symlink_value, GCancellable *cancellable, GError **error);";function g_file_make_symbolic_link(file, symlink_value, cancellable, error) bind(c)
g;g_file_measure_disk_usage;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_measure_disk_usage (GFile *file, GFileMeasureFlags flags, GCancellable *cancellable, GFileMeasureProgressCallback progress_callback, gpointer progress_data, guint64 *disk_usage, guint64 *num_dirs, guint64 *num_files, GError **error);";function g_file_measure_disk_usage(file, flags, cancellable, progress_callback, progress_data, disk_usage, num_dirs, num_files, error) bind(c)
g;g_file_measure_disk_usage_async;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_measure_disk_usage_async (GFile *file, GFileMeasureFlags flags, gint io_priority, GCancellable *cancellable, GFileMeasureProgressCallback progress_callback, gpointer progress_data, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_measure_disk_usage_async(file, flags, io_priority, cancellable, progress_callback, progress_data, callback, user_data) bind(c)
g;g_file_measure_disk_usage_finish;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_measure_disk_usage_finish (GFile *file, GAsyncResult *result, guint64 *disk_usage, guint64 *num_dirs, guint64 *num_files, GError **error);";function g_file_measure_disk_usage_finish(file, result, disk_usage, num_dirs, num_files, error) bind(c)
g;g_file_monitor;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileMonitor* g_file_monitor (GFile *file, GFileMonitorFlags flags, GCancellable *cancellable, GError **error);";function g_file_monitor(file, flags, cancellable, error) bind(c)
g;g_file_monitor_cancel;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilemonitor.h;"gboolean g_file_monitor_cancel (GFileMonitor *monitor);";function g_file_monitor_cancel(monitor) bind(c)
g;g_file_monitor_directory;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileMonitor* g_file_monitor_directory (GFile *file, GFileMonitorFlags flags, GCancellable *cancellable, GError **error);";function g_file_monitor_directory(file, flags, cancellable, error) bind(c)
g;g_file_monitor_emit_event;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilemonitor.h;"void g_file_monitor_emit_event (GFileMonitor *monitor, GFile *child, GFile *other_file, GFileMonitorEvent event_type);";subroutine g_file_monitor_emit_event(monitor, child, other_file, event_type) bind(c)
g;g_file_monitor_file;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileMonitor* g_file_monitor_file (GFile *file, GFileMonitorFlags flags, GCancellable *cancellable, GError **error);";function g_file_monitor_file(file, flags, cancellable, error) bind(c)
g;g_file_monitor_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilemonitor.h;"GType g_file_monitor_get_type (void) G_GNUC_CONST;";function g_file_monitor_get_type() bind(c)
g;g_file_monitor_is_cancelled;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilemonitor.h;"gboolean g_file_monitor_is_cancelled (GFileMonitor *monitor);";function g_file_monitor_is_cancelled(monitor) bind(c)
g;g_file_monitor_set_rate_limit;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilemonitor.h;"void g_file_monitor_set_rate_limit (GFileMonitor *monitor, gint limit_msecs);";subroutine g_file_monitor_set_rate_limit(monitor, limit_msecs) bind(c)
g;g_file_mount_enclosing_volume;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_mount_enclosing_volume (GFile *location, GMountMountFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_mount_enclosing_volume(location, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_file_mount_enclosing_volume_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_mount_enclosing_volume_finish (GFile *location, GAsyncResult *result, GError **error);";function g_file_mount_enclosing_volume_finish(location, result, error) bind(c)
g;g_file_mount_mountable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_mount_mountable (GFile *file, GMountMountFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_mount_mountable(file, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_file_mount_mountable_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_mount_mountable_finish (GFile *file, GAsyncResult *result, GError **error);";function g_file_mount_mountable_finish(file, result, error) bind(c)
g;g_file_move;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_move (GFile *source, GFile *destination, GFileCopyFlags flags, GCancellable *cancellable, GFileProgressCallback progress_callback, gpointer progress_callback_data, GError **error);";function g_file_move(source, destination, flags, cancellable, progress_callback, progress_callback_data, error) bind(c)
g;g_file_new_for_commandline_arg;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_new_for_commandline_arg (const char *arg);";function g_file_new_for_commandline_arg(arg) bind(c)
g;g_file_new_for_commandline_arg_and_cwd;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_new_for_commandline_arg_and_cwd (const gchar *arg, const gchar *cwd);";function g_file_new_for_commandline_arg_and_cwd(arg, cwd) bind(c)
g;g_file_new_for_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_new_for_path (const char *path);";function g_file_new_for_path(path) bind(c)
g;g_file_new_for_uri;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_new_for_uri (const char *uri);";function g_file_new_for_uri(uri) bind(c)
g;g_file_new_tmp;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_new_tmp (const char *tmpl, GFileIOStream **iostream, GError **error);";function g_file_new_tmp(tmpl, iostream, error) bind(c)
g;g_file_open_readwrite;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileIOStream * g_file_open_readwrite (GFile *file, GCancellable *cancellable, GError **error);";function g_file_open_readwrite(file, cancellable, error) bind(c)
g;g_file_open_readwrite_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_open_readwrite_async (GFile *file, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_open_readwrite_async(file, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_open_readwrite_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileIOStream * g_file_open_readwrite_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_open_readwrite_finish(file, res, error) bind(c)
g;g_file_open_tmp;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gint g_file_open_tmp (const gchar *tmpl, gchar **name_used, GError **error);";function g_file_open_tmp(tmpl, name_used, error) bind(c)
g;g_file_output_stream_get_etag;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileoutputstream.h;"char * g_file_output_stream_get_etag (GFileOutputStream *stream);";function g_file_output_stream_get_etag(stream) bind(c)
g;g_file_output_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileoutputstream.h;"GType g_file_output_stream_get_type (void) G_GNUC_CONST;";function g_file_output_stream_get_type() bind(c)
g;g_file_output_stream_query_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileoutputstream.h;"GFileInfo *g_file_output_stream_query_info (GFileOutputStream *stream, const char *attributes, GCancellable *cancellable, GError **error);";function g_file_output_stream_query_info(stream, attributes, cancellable, error) bind(c)
g;g_file_output_stream_query_info_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileoutputstream.h;"void g_file_output_stream_query_info_async (GFileOutputStream *stream, const char *attributes, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_output_stream_query_info_async(stream, attributes, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_output_stream_query_info_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfileoutputstream.h;"GFileInfo *g_file_output_stream_query_info_finish (GFileOutputStream *stream, GAsyncResult *result, GError **error);";function g_file_output_stream_query_info_finish(stream, result, error) bind(c)
g;g_file_parse_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_parse_name (const char *parse_name);";function g_file_parse_name(parse_name) bind(c)
g;g_file_peek_path;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"const char * g_file_peek_path (GFile *file);";function g_file_peek_path(file) bind(c)
g;g_file_poll_mountable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_poll_mountable (GFile *file, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_poll_mountable(file, cancellable, callback, user_data) bind(c)
g;g_file_poll_mountable_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_poll_mountable_finish (GFile *file, GAsyncResult *result, GError **error);";function g_file_poll_mountable_finish(file, result, error) bind(c)
g;g_file_query_default_handler;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GAppInfo *g_file_query_default_handler (GFile *file, GCancellable *cancellable, GError **error);";function g_file_query_default_handler(file, cancellable, error) bind(c)
g;g_file_query_default_handler_async;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_query_default_handler_async (GFile *file, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_query_default_handler_async(file, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_query_default_handler_finish;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GAppInfo *g_file_query_default_handler_finish (GFile *file, GAsyncResult *result, GError **error);";function g_file_query_default_handler_finish(file, result, error) bind(c)
g;g_file_query_exists;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_query_exists (GFile *file, GCancellable *cancellable);";function g_file_query_exists(file, cancellable) bind(c)
g;g_file_query_file_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileType g_file_query_file_type (GFile *file, GFileQueryInfoFlags flags, GCancellable *cancellable);";function g_file_query_file_type(file, flags, cancellable) bind(c)
g;g_file_query_filesystem_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileInfo * g_file_query_filesystem_info (GFile *file, const char *attributes, GCancellable *cancellable, GError **error);";function g_file_query_filesystem_info(file, attributes, cancellable, error) bind(c)
g;g_file_query_filesystem_info_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_query_filesystem_info_async (GFile *file, const char *attributes, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_query_filesystem_info_async(file, attributes, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_query_filesystem_info_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileInfo * g_file_query_filesystem_info_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_query_filesystem_info_finish(file, res, error) bind(c)
g;g_file_query_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileInfo * g_file_query_info (GFile *file, const char *attributes, GFileQueryInfoFlags flags, GCancellable *cancellable, GError **error);";function g_file_query_info(file, attributes, flags, cancellable, error) bind(c)
g;g_file_query_info_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_query_info_async (GFile *file, const char *attributes, GFileQueryInfoFlags flags, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_query_info_async(file, attributes, flags, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_query_info_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileInfo * g_file_query_info_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_query_info_finish(file, res, error) bind(c)
g;g_file_query_settable_attributes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileAttributeInfoList *g_file_query_settable_attributes (GFile *file, GCancellable *cancellable, GError **error);";function g_file_query_settable_attributes(file, cancellable, error) bind(c)
g;g_file_query_writable_namespaces;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileAttributeInfoList *g_file_query_writable_namespaces (GFile *file, GCancellable *cancellable, GError **error);";function g_file_query_writable_namespaces(file, cancellable, error) bind(c)
g;g_file_read;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileInputStream * g_file_read (GFile *file, GCancellable *cancellable, GError **error);";function g_file_read(file, cancellable, error) bind(c)
g;g_file_read_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_read_async (GFile *file, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_read_async(file, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_read_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileInputStream * g_file_read_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_read_finish(file, res, error) bind(c)
g;g_file_read_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gchar *g_file_read_link (const gchar *filename, GError **error);";function g_file_read_link(filename, error) bind(c)
g;g_file_replace;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileOutputStream * g_file_replace (GFile *file, const char *etag, gboolean make_backup, GFileCreateFlags flags, GCancellable *cancellable, GError **error);";function g_file_replace(file, etag, make_backup, flags, cancellable, error) bind(c)
g;g_file_replace_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_replace_async (GFile *file, const char *etag, gboolean make_backup, GFileCreateFlags flags, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_replace_async(file, etag, make_backup, flags, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_replace_contents;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_replace_contents (GFile *file, const char *contents, gsize length, const char *etag, gboolean make_backup, GFileCreateFlags flags, char **new_etag, GCancellable *cancellable, GError **error);";function g_file_replace_contents(file, contents, length, etag, make_backup, flags, new_etag, cancellable, error) bind(c)
g;g_file_replace_contents_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_replace_contents_async (GFile *file, const char *contents, gsize length, const char *etag, gboolean make_backup, GFileCreateFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_replace_contents_async(file, contents, length, etag, make_backup, flags, cancellable, callback, user_data) bind(c)
g;g_file_replace_contents_bytes_async;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_replace_contents_bytes_async (GFile *file, GBytes *contents, const char *etag, gboolean make_backup, GFileCreateFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_replace_contents_bytes_async(file, contents, etag, make_backup, flags, cancellable, callback, user_data) bind(c)
g;g_file_replace_contents_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_replace_contents_finish (GFile *file, GAsyncResult *res, char **new_etag, GError **error);";function g_file_replace_contents_finish(file, res, new_etag, error) bind(c)
g;g_file_replace_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileOutputStream * g_file_replace_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_replace_finish(file, res, error) bind(c)
g;g_file_replace_readwrite;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileIOStream * g_file_replace_readwrite (GFile *file, const char *etag, gboolean make_backup, GFileCreateFlags flags, GCancellable *cancellable, GError **error);";function g_file_replace_readwrite(file, etag, make_backup, flags, cancellable, error) bind(c)
g;g_file_replace_readwrite_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_replace_readwrite_async (GFile *file, const char *etag, gboolean make_backup, GFileCreateFlags flags, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_replace_readwrite_async(file, etag, make_backup, flags, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_replace_readwrite_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFileIOStream * g_file_replace_readwrite_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_replace_readwrite_finish(file, res, error) bind(c)
g;g_file_resolve_relative_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_resolve_relative_path (GFile *file, const char *relative_path);";function g_file_resolve_relative_path(file, relative_path) bind(c)
g;g_file_set_attribute;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_set_attribute (GFile *file, const char *attribute, GFileAttributeType type, gpointer value_p, GFileQueryInfoFlags flags, GCancellable *cancellable, GError **error);";function g_file_set_attribute(file, attribute, type, value_p, flags, cancellable, error) bind(c)
g;g_file_set_attribute_byte_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_set_attribute_byte_string (GFile *file, const char *attribute, const char *value, GFileQueryInfoFlags flags, GCancellable *cancellable, GError **error);";function g_file_set_attribute_byte_string(file, attribute, value, flags, cancellable, error) bind(c)
g;g_file_set_attribute_int32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_set_attribute_int32 (GFile *file, const char *attribute, gint32 value, GFileQueryInfoFlags flags, GCancellable *cancellable, GError **error);";function g_file_set_attribute_int32(file, attribute, value, flags, cancellable, error) bind(c)
g;g_file_set_attribute_int64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_set_attribute_int64 (GFile *file, const char *attribute, gint64 value, GFileQueryInfoFlags flags, GCancellable *cancellable, GError **error);";function g_file_set_attribute_int64(file, attribute, value, flags, cancellable, error) bind(c)
g;g_file_set_attribute_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_set_attribute_string (GFile *file, const char *attribute, const char *value, GFileQueryInfoFlags flags, GCancellable *cancellable, GError **error);";function g_file_set_attribute_string(file, attribute, value, flags, cancellable, error) bind(c)
g;g_file_set_attribute_uint32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_set_attribute_uint32 (GFile *file, const char *attribute, guint32 value, GFileQueryInfoFlags flags, GCancellable *cancellable, GError **error);";function g_file_set_attribute_uint32(file, attribute, value, flags, cancellable, error) bind(c)
g;g_file_set_attribute_uint64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_set_attribute_uint64 (GFile *file, const char *attribute, guint64 value, GFileQueryInfoFlags flags, GCancellable *cancellable, GError **error);";function g_file_set_attribute_uint64(file, attribute, value, flags, cancellable, error) bind(c)
g;g_file_set_attributes_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_set_attributes_async (GFile *file, GFileInfo *info, GFileQueryInfoFlags flags, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_set_attributes_async(file, info, flags, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_set_attributes_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_set_attributes_finish (GFile *file, GAsyncResult *result, GFileInfo **info, GError **error);";function g_file_set_attributes_finish(file, result, info, error) bind(c)
g;g_file_set_attributes_from_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_set_attributes_from_info (GFile *file, GFileInfo *info, GFileQueryInfoFlags flags, GCancellable *cancellable, GError **error);";function g_file_set_attributes_from_info(file, info, flags, cancellable, error) bind(c)
g;g_file_set_contents;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gboolean g_file_set_contents (const gchar *filename, const gchar *contents, gssize length, GError **error);";function g_file_set_contents(filename, contents, length, error) bind(c)
g;g_file_set_display_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_set_display_name (GFile *file, const char *display_name, GCancellable *cancellable, GError **error);";function g_file_set_display_name(file, display_name, cancellable, error) bind(c)
g;g_file_set_display_name_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_set_display_name_async (GFile *file, const char *display_name, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_set_display_name_async(file, display_name, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_set_display_name_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"GFile * g_file_set_display_name_finish (GFile *file, GAsyncResult *res, GError **error);";function g_file_set_display_name_finish(file, res, error) bind(c)
g;g_file_start_mountable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_start_mountable (GFile *file, GDriveStartFlags flags, GMountOperation *start_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_start_mountable(file, flags, start_operation, cancellable, callback, user_data) bind(c)
g;g_file_start_mountable_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_start_mountable_finish (GFile *file, GAsyncResult *result, GError **error);";function g_file_start_mountable_finish(file, result, error) bind(c)
g;g_file_stop_mountable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_stop_mountable (GFile *file, GMountUnmountFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_stop_mountable(file, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_file_stop_mountable_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_stop_mountable_finish (GFile *file, GAsyncResult *result, GError **error);";function g_file_stop_mountable_finish(file, result, error) bind(c)
g;g_file_supports_thread_contexts;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_supports_thread_contexts (GFile *file);";function g_file_supports_thread_contexts(file) bind(c)
g;g_file_test;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gboolean g_file_test (const gchar *filename, GFileTest test);";function g_file_test(filename, test) bind(c)
g;g_file_trash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_trash (GFile *file, GCancellable *cancellable, GError **error);";function g_file_trash(file, cancellable, error) bind(c)
g;g_file_trash_async;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_trash_async (GFile *file, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_trash_async(file, io_priority, cancellable, callback, user_data) bind(c)
g;g_file_trash_finish;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_trash_finish (GFile *file, GAsyncResult *result, GError **error);";function g_file_trash_finish(file, result, error) bind(c)
g;g_file_unmount_mountable;GLIB_DEPRECATED_FOR(g_file_unmount_mountable_with_operation);glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_unmount_mountable (GFile *file, GMountUnmountFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_unmount_mountable(file, flags, cancellable, callback, user_data) bind(c)
g;g_file_unmount_mountable_finish;GLIB_DEPRECATED_FOR(g_file_unmount_mountable_with_operation_finish);glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_unmount_mountable_finish (GFile *file, GAsyncResult *result, GError **error);";function g_file_unmount_mountable_finish(file, result, error) bind(c)
g;g_file_unmount_mountable_with_operation;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"void g_file_unmount_mountable_with_operation (GFile *file, GMountUnmountFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_file_unmount_mountable_with_operation(file, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_file_unmount_mountable_with_operation_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfile.h;"gboolean g_file_unmount_mountable_with_operation_finish (GFile *file, GAsyncResult *result, GError **error);";function g_file_unmount_mountable_with_operation_finish(file, result, error) bind(c)
g;g_filename_completer_get_completion_suffix;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilenamecompleter.h;"char * g_filename_completer_get_completion_suffix (GFilenameCompleter *completer, const char *initial_text);";function g_filename_completer_get_completion_suffix(completer, initial_text) bind(c)
g;g_filename_completer_get_completions;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilenamecompleter.h;"char ** g_filename_completer_get_completions (GFilenameCompleter *completer, const char *initial_text);";function g_filename_completer_get_completions(completer, initial_text) bind(c)
g;g_filename_completer_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilenamecompleter.h;"GType g_filename_completer_get_type (void) G_GNUC_CONST;";function g_filename_completer_get_type() bind(c)
g;g_filename_completer_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilenamecompleter.h;"GFilenameCompleter *g_filename_completer_new (void);";function g_filename_completer_new() bind(c)
g;g_filename_completer_set_dirs_only;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilenamecompleter.h;"void g_filename_completer_set_dirs_only (GFilenameCompleter *completer, gboolean dirs_only);";subroutine g_filename_completer_set_dirs_only(completer, dirs_only) bind(c)
g;g_filename_display_basename;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gchar *g_filename_display_basename (const gchar *filename) G_GNUC_MALLOC;";function g_filename_display_basename(filename) bind(c)
g;g_filename_display_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gchar *g_filename_display_name (const gchar *filename) G_GNUC_MALLOC;";function g_filename_display_name(filename) bind(c)
g;g_filename_from_uri;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gchar *g_filename_from_uri (const gchar *uri, gchar **hostname, GError **error) G_GNUC_MALLOC;";function g_filename_from_uri(uri, hostname, error) bind(c)
g;g_filename_from_utf8;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gchar* g_filename_from_utf8 (const gchar *utf8string, gssize len, gsize *bytes_read, gsize *bytes_written, GError **error) G_GNUC_MALLOC;";function g_filename_from_utf8(utf8string, len, bytes_read, bytes_written, error) bind(c)
g;g_filename_to_uri;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gchar *g_filename_to_uri (const gchar *filename, const gchar *hostname, GError **error) G_GNUC_MALLOC;";function g_filename_to_uri(filename, hostname, error) bind(c)
g;g_filename_to_utf8;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gchar* g_filename_to_utf8 (const gchar *opsysstring, gssize len, gsize *bytes_read, gsize *bytes_written, GError **error) G_GNUC_MALLOC;";function g_filename_to_utf8(opsysstring, len, bytes_read, bytes_written, error) bind(c)
g;g_filter_input_stream_get_base_stream;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilterinputstream.h;"GInputStream * g_filter_input_stream_get_base_stream (GFilterInputStream *stream);";function g_filter_input_stream_get_base_stream(stream) bind(c)
g;g_filter_input_stream_get_close_base_stream;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilterinputstream.h;"gboolean g_filter_input_stream_get_close_base_stream (GFilterInputStream *stream);";function g_filter_input_stream_get_close_base_stream(stream) bind(c)
g;g_filter_input_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilterinputstream.h;"GType g_filter_input_stream_get_type (void) G_GNUC_CONST;";function g_filter_input_stream_get_type() bind(c)
g;g_filter_input_stream_set_close_base_stream;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilterinputstream.h;"void g_filter_input_stream_set_close_base_stream (GFilterInputStream *stream, gboolean close_base);";subroutine g_filter_input_stream_set_close_base_stream(stream, close_base) bind(c)
g;g_filter_output_stream_get_base_stream;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilteroutputstream.h;"GOutputStream * g_filter_output_stream_get_base_stream (GFilterOutputStream *stream);";function g_filter_output_stream_get_base_stream(stream) bind(c)
g;g_filter_output_stream_get_close_base_stream;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilteroutputstream.h;"gboolean g_filter_output_stream_get_close_base_stream (GFilterOutputStream *stream);";function g_filter_output_stream_get_close_base_stream(stream) bind(c)
g;g_filter_output_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilteroutputstream.h;"GType g_filter_output_stream_get_type (void) G_GNUC_CONST;";function g_filter_output_stream_get_type() bind(c)
g;g_filter_output_stream_set_close_base_stream;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gfilteroutputstream.h;"void g_filter_output_stream_set_close_base_stream (GFilterOutputStream *stream, gboolean close_base);";subroutine g_filter_output_stream_set_close_base_stream(stream, close_base) bind(c)
g;g_find_program_in_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"gchar* g_find_program_in_path (const gchar *program);";function g_find_program_in_path(program) bind(c)
g;g_flags_complete_type_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"void g_flags_complete_type_info (GType g_flags_type, GTypeInfo *info, const GFlagsValue *const_values);";subroutine g_flags_complete_type_info(g_flags_type, info, const_values) bind(c)
g;g_flags_get_first_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"GFlagsValue* g_flags_get_first_value (GFlagsClass *flags_class, guint value);";function g_flags_get_first_value(flags_class, value) bind(c)
g;g_flags_get_value_by_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"GFlagsValue* g_flags_get_value_by_name (GFlagsClass *flags_class, const gchar *name);";function g_flags_get_value_by_name(flags_class, name) bind(c)
g;g_flags_get_value_by_nick;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"GFlagsValue* g_flags_get_value_by_nick (GFlagsClass *flags_class, const gchar *nick);";function g_flags_get_value_by_nick(flags_class, nick) bind(c)
g;g_flags_register_static;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"GType g_flags_register_static (const gchar *name, const GFlagsValue *const_static_values);";function g_flags_register_static(name, const_static_values) bind(c)
g;g_flags_to_string;GLIB_AVAILABLE_IN_2_54;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"gchar *g_flags_to_string (GType flags_type, guint value);";function g_flags_to_string(flags_type, value) bind(c)
g;g_fopen;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"FILE *g_fopen (const gchar *filename, const gchar *mode);";function g_fopen(filename, mode) bind(c)
g;g_format_size;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"gchar *g_format_size (guint64 size);";function g_format_size(size) bind(c)
g;g_format_size_for_display;GLIB_DEPRECATED_IN_2_30_FOR(g_format_size);glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"gchar *g_format_size_for_display (goffset size);";function g_format_size_for_display(size) bind(c)
g;g_format_size_full;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"gchar *g_format_size_full (guint64 size, GFormatSizeFlags flags);";function g_format_size_full(size, flags) bind(c)
g;g_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"void g_free (gpointer mem);";subroutine g_free(mem) bind(c)
g;g_freopen;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"FILE *g_freopen (const gchar *filename, const gchar *mode, FILE *stream);";function g_freopen(filename, mode, stream) bind(c)
g;g_fsync;GLIB_AVAILABLE_IN_2_64;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"gint g_fsync (gint fd);";function g_fsync(fd) bind(c)
g;g_get_application_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * g_get_application_name (void);";function g_get_application_name() bind(c)
g;g_get_charset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gcharset.h;"gboolean g_get_charset (const char **charset);";function g_get_charset(charset) bind(c)
g;g_get_codeset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gcharset.h;"gchar * g_get_codeset (void);";function g_get_codeset() bind(c)
g;g_get_console_charset;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/gcharset.h;"gboolean g_get_console_charset (const char **charset);";function g_get_console_charset(charset) bind(c)
g;g_get_current_dir;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gchar *g_get_current_dir (void);";function g_get_current_dir() bind(c)
g;g_get_current_time;GLIB_DEPRECATED_IN_2_62_FOR(g_get_real_time);glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_get_current_time (GTimeVal *result);";subroutine g_get_current_time(result) bind(c)
g;g_get_environ;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/genviron.h;"gchar ** g_get_environ (void);";function g_get_environ() bind(c)
g;g_get_filename_charsets;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gboolean g_get_filename_charsets (const gchar ***filename_charsets);";function g_get_filename_charsets(filename_charsets) bind(c)
g;g_get_home_dir;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * g_get_home_dir (void);";function g_get_home_dir() bind(c)
g;g_get_host_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * g_get_host_name (void);";function g_get_host_name() bind(c)
g;g_get_language_names;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gcharset.h;"const gchar * const * g_get_language_names (void);";function g_get_language_names() bind(c)
g;g_get_language_names_with_category;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/gcharset.h;"const gchar * const * g_get_language_names_with_category (const gchar *category_name);";function g_get_language_names_with_category(category_name) bind(c)
g;g_get_locale_variants;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gcharset.h;"gchar ** g_get_locale_variants (const gchar *locale);";function g_get_locale_variants(locale) bind(c)
g;g_get_monotonic_time;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gint64 g_get_monotonic_time (void);";function g_get_monotonic_time() bind(c)
g;g_get_num_processors;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"guint g_get_num_processors (void);";function g_get_num_processors() bind(c)
g;g_get_os_info;GLIB_AVAILABLE_IN_2_64;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"gchar * g_get_os_info (const gchar *key_name);";function g_get_os_info(key_name) bind(c)
g;g_get_prgname;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * g_get_prgname (void);";function g_get_prgname() bind(c)
g;g_get_real_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * g_get_real_name (void);";function g_get_real_name() bind(c)
g;g_get_real_time;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gint64 g_get_real_time (void);";function g_get_real_time() bind(c)
g;g_get_system_config_dirs;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * const * g_get_system_config_dirs (void);";function g_get_system_config_dirs() bind(c)
g;g_get_system_data_dirs;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * const * g_get_system_data_dirs (void);";function g_get_system_data_dirs() bind(c)
g;g_get_tmp_dir;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * g_get_tmp_dir (void);";function g_get_tmp_dir() bind(c)
g;g_get_user_cache_dir;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * g_get_user_cache_dir (void);";function g_get_user_cache_dir() bind(c)
g;g_get_user_config_dir;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * g_get_user_config_dir (void);";function g_get_user_config_dir() bind(c)
g;g_get_user_data_dir;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * g_get_user_data_dir (void);";function g_get_user_data_dir() bind(c)
g;g_get_user_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * g_get_user_name (void);";function g_get_user_name() bind(c)
g;g_get_user_runtime_dir;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * g_get_user_runtime_dir (void);";function g_get_user_runtime_dir() bind(c)
g;g_get_user_special_dir;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * g_get_user_special_dir (GUserDirectory directory);";function g_get_user_special_dir(directory) bind(c)
g;g_getenv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/genviron.h;"const gchar * g_getenv (const gchar *variable);";function g_getenv(variable) bind(c)
g;g_gstring_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_gstring_get_type (void) G_GNUC_CONST;";function g_gstring_get_type() bind(c)
g;g_gtype_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"GType g_gtype_get_type (void);";function g_gtype_get_type() bind(c)
g;g_hash_table_add;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_hash_table_add (GHashTable *hash_table, gpointer key);";function g_hash_table_add(hash_table, key) bind(c)
g;g_hash_table_contains;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_hash_table_contains (GHashTable *hash_table, gconstpointer key);";function g_hash_table_contains(hash_table, key) bind(c)
g;g_hash_table_destroy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"void g_hash_table_destroy (GHashTable *hash_table);";subroutine g_hash_table_destroy(hash_table) bind(c)
g;g_hash_table_find;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gpointer g_hash_table_find (GHashTable *hash_table, GHRFunc predicate, gpointer user_data);";function g_hash_table_find(hash_table, predicate, user_data) bind(c)
g;g_hash_table_foreach;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"void g_hash_table_foreach (GHashTable *hash_table, GHFunc func, gpointer user_data);";subroutine g_hash_table_foreach(hash_table, func, user_data) bind(c)
g;g_hash_table_foreach_remove;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"guint g_hash_table_foreach_remove (GHashTable *hash_table, GHRFunc func, gpointer user_data);";function g_hash_table_foreach_remove(hash_table, func, user_data) bind(c)
g;g_hash_table_foreach_steal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"guint g_hash_table_foreach_steal (GHashTable *hash_table, GHRFunc func, gpointer user_data);";function g_hash_table_foreach_steal(hash_table, func, user_data) bind(c)
g;g_hash_table_get_keys;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"GList * g_hash_table_get_keys (GHashTable *hash_table);";function g_hash_table_get_keys(hash_table) bind(c)
g;g_hash_table_get_keys_as_array;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gpointer * g_hash_table_get_keys_as_array (GHashTable *hash_table, guint *length);";function g_hash_table_get_keys_as_array(hash_table, length) bind(c)
g;g_hash_table_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_hash_table_get_type (void) G_GNUC_CONST;";function g_hash_table_get_type() bind(c)
g;g_hash_table_get_values;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"GList * g_hash_table_get_values (GHashTable *hash_table);";function g_hash_table_get_values(hash_table) bind(c)
g;g_hash_table_insert;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_hash_table_insert (GHashTable *hash_table, gpointer key, gpointer value);";function g_hash_table_insert(hash_table, key, value) bind(c)
g;g_hash_table_iter_get_hash_table;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"GHashTable* g_hash_table_iter_get_hash_table (GHashTableIter *iter);";function g_hash_table_iter_get_hash_table(iter) bind(c)
g;g_hash_table_iter_init;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"void g_hash_table_iter_init (GHashTableIter *iter, GHashTable *hash_table);";subroutine g_hash_table_iter_init(iter, hash_table) bind(c)
g;g_hash_table_iter_next;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_hash_table_iter_next (GHashTableIter *iter, gpointer *key, gpointer *value);";function g_hash_table_iter_next(iter, key, value) bind(c)
g;g_hash_table_iter_remove;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"void g_hash_table_iter_remove (GHashTableIter *iter);";subroutine g_hash_table_iter_remove(iter) bind(c)
g;g_hash_table_iter_replace;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"void g_hash_table_iter_replace (GHashTableIter *iter, gpointer value);";subroutine g_hash_table_iter_replace(iter, value) bind(c)
g;g_hash_table_iter_steal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"void g_hash_table_iter_steal (GHashTableIter *iter);";subroutine g_hash_table_iter_steal(iter) bind(c)
g;g_hash_table_lookup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gpointer g_hash_table_lookup (GHashTable *hash_table, gconstpointer key);";function g_hash_table_lookup(hash_table, key) bind(c)
g;g_hash_table_lookup_extended;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_hash_table_lookup_extended (GHashTable *hash_table, gconstpointer lookup_key, gpointer *orig_key, gpointer *value);";function g_hash_table_lookup_extended(hash_table, lookup_key, orig_key, value) bind(c)
g;g_hash_table_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"GHashTable* g_hash_table_new (GHashFunc hash_func, GEqualFunc key_equal_func);";function g_hash_table_new(hash_func, key_equal_func) bind(c)
g;g_hash_table_new_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"GHashTable* g_hash_table_new_full (GHashFunc hash_func, GEqualFunc key_equal_func, GDestroyNotify key_destroy_func, GDestroyNotify value_destroy_func);";function g_hash_table_new_full(hash_func, key_equal_func, key_destroy_func, value_destroy_func) bind(c)
g;g_hash_table_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"GHashTable* g_hash_table_ref (GHashTable *hash_table);";function g_hash_table_ref(hash_table) bind(c)
g;g_hash_table_remove;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_hash_table_remove (GHashTable *hash_table, gconstpointer key);";function g_hash_table_remove(hash_table, key) bind(c)
g;g_hash_table_remove_all;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"void g_hash_table_remove_all (GHashTable *hash_table);";subroutine g_hash_table_remove_all(hash_table) bind(c)
g;g_hash_table_replace;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_hash_table_replace (GHashTable *hash_table, gpointer key, gpointer value);";function g_hash_table_replace(hash_table, key, value) bind(c)
g;g_hash_table_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"guint g_hash_table_size (GHashTable *hash_table);";function g_hash_table_size(hash_table) bind(c)
g;g_hash_table_steal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_hash_table_steal (GHashTable *hash_table, gconstpointer key);";function g_hash_table_steal(hash_table, key) bind(c)
g;g_hash_table_steal_all;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"void g_hash_table_steal_all (GHashTable *hash_table);";subroutine g_hash_table_steal_all(hash_table) bind(c)
g;g_hash_table_steal_extended;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_hash_table_steal_extended (GHashTable *hash_table, gconstpointer lookup_key, gpointer *stolen_key, gpointer *stolen_value);";function g_hash_table_steal_extended(hash_table, lookup_key, stolen_key, stolen_value) bind(c)
g;g_hash_table_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"void g_hash_table_unref (GHashTable *hash_table);";subroutine g_hash_table_unref(hash_table) bind(c)
g;g_hmac_copy;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/ghmac.h;"GHmac * g_hmac_copy (const GHmac *hmac);";function g_hmac_copy(hmac) bind(c)
g;g_hmac_get_digest;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/ghmac.h;"void g_hmac_get_digest (GHmac *hmac, guint8 *buffer, gsize *digest_len);";subroutine g_hmac_get_digest(hmac, buffer, digest_len) bind(c)
g;g_hmac_get_string;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/ghmac.h;"const gchar * g_hmac_get_string (GHmac *hmac);";function g_hmac_get_string(hmac) bind(c)
g;g_hmac_new;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/ghmac.h;"GHmac * g_hmac_new (GChecksumType digest_type, const guchar *key, gsize key_len);";function g_hmac_new(digest_type, key, key_len) bind(c)
g;g_hmac_ref;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/ghmac.h;"GHmac * g_hmac_ref (GHmac *hmac);";function g_hmac_ref(hmac) bind(c)
g;g_hmac_unref;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/ghmac.h;"void g_hmac_unref (GHmac *hmac);";subroutine g_hmac_unref(hmac) bind(c)
g;g_hmac_update;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/ghmac.h;"void g_hmac_update (GHmac *hmac, const guchar *data, gssize length);";subroutine g_hmac_update(hmac, data, length) bind(c)
g;g_hook_alloc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"GHook* g_hook_alloc (GHookList *hook_list);";function g_hook_alloc(hook_list) bind(c)
g;g_hook_compare_ids;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"gint g_hook_compare_ids (GHook *new_hook, GHook *sibling);";function g_hook_compare_ids(new_hook, sibling) bind(c)
g;g_hook_destroy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"gboolean g_hook_destroy (GHookList *hook_list, gulong hook_id);";function g_hook_destroy(hook_list, hook_id) bind(c)
g;g_hook_destroy_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"void g_hook_destroy_link (GHookList *hook_list, GHook *hook);";subroutine g_hook_destroy_link(hook_list, hook) bind(c)
g;g_hook_find;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"GHook* g_hook_find (GHookList *hook_list, gboolean need_valids, GHookFindFunc func, gpointer data);";function g_hook_find(hook_list, need_valids, func, data) bind(c)
g;g_hook_find_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"GHook* g_hook_find_data (GHookList *hook_list, gboolean need_valids, gpointer data);";function g_hook_find_data(hook_list, need_valids, data) bind(c)
g;g_hook_find_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"GHook* g_hook_find_func (GHookList *hook_list, gboolean need_valids, gpointer func);";function g_hook_find_func(hook_list, need_valids, func) bind(c)
g;g_hook_find_func_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"GHook* g_hook_find_func_data (GHookList *hook_list, gboolean need_valids, gpointer func, gpointer data);";function g_hook_find_func_data(hook_list, need_valids, func, data) bind(c)
g;g_hook_first_valid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"GHook* g_hook_first_valid (GHookList *hook_list, gboolean may_be_in_call);";function g_hook_first_valid(hook_list, may_be_in_call) bind(c)
g;g_hook_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"void g_hook_free (GHookList *hook_list, GHook *hook);";subroutine g_hook_free(hook_list, hook) bind(c)
g;g_hook_get;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"GHook* g_hook_get (GHookList *hook_list, gulong hook_id);";function g_hook_get(hook_list, hook_id) bind(c)
g;g_hook_insert_before;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"void g_hook_insert_before (GHookList *hook_list, GHook *sibling, GHook *hook);";subroutine g_hook_insert_before(hook_list, sibling, hook) bind(c)
g;g_hook_insert_sorted;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"void g_hook_insert_sorted (GHookList *hook_list, GHook *hook, GHookCompareFunc func);";subroutine g_hook_insert_sorted(hook_list, hook, func) bind(c)
g;g_hook_list_clear;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"void g_hook_list_clear (GHookList *hook_list);";subroutine g_hook_list_clear(hook_list) bind(c)
g;g_hook_list_init;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"void g_hook_list_init (GHookList *hook_list, guint hook_size);";subroutine g_hook_list_init(hook_list, hook_size) bind(c)
g;g_hook_list_invoke;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"void g_hook_list_invoke (GHookList *hook_list, gboolean may_recurse);";subroutine g_hook_list_invoke(hook_list, may_recurse) bind(c)
g;g_hook_list_invoke_check;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"void g_hook_list_invoke_check (GHookList *hook_list, gboolean may_recurse);";subroutine g_hook_list_invoke_check(hook_list, may_recurse) bind(c)
g;g_hook_list_marshal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"void g_hook_list_marshal (GHookList *hook_list, gboolean may_recurse, GHookMarshaller marshaller, gpointer marshal_data);";subroutine g_hook_list_marshal(hook_list, may_recurse, marshaller, marshal_data) bind(c)
g;g_hook_list_marshal_check;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"void g_hook_list_marshal_check (GHookList *hook_list, gboolean may_recurse, GHookCheckMarshaller marshaller, gpointer marshal_data);";subroutine g_hook_list_marshal_check(hook_list, may_recurse, marshaller, marshal_data) bind(c)
g;g_hook_next_valid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"GHook* g_hook_next_valid (GHookList *hook_list, GHook *hook, gboolean may_be_in_call);";function g_hook_next_valid(hook_list, hook, may_be_in_call) bind(c)
g;g_hook_prepend;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"void g_hook_prepend (GHookList *hook_list, GHook *hook);";subroutine g_hook_prepend(hook_list, hook) bind(c)
g;g_hook_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"GHook * g_hook_ref (GHookList *hook_list, GHook *hook);";function g_hook_ref(hook_list, hook) bind(c)
g;g_hook_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghook.h;"void g_hook_unref (GHookList *hook_list, GHook *hook);";subroutine g_hook_unref(hook_list, hook) bind(c)
g;g_hostname_is_ascii_encoded;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghostutils.h;"gboolean g_hostname_is_ascii_encoded (const gchar *hostname);";function g_hostname_is_ascii_encoded(hostname) bind(c)
g;g_hostname_is_ip_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghostutils.h;"gboolean g_hostname_is_ip_address (const gchar *hostname);";function g_hostname_is_ip_address(hostname) bind(c)
g;g_hostname_is_non_ascii;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghostutils.h;"gboolean g_hostname_is_non_ascii (const gchar *hostname);";function g_hostname_is_non_ascii(hostname) bind(c)
g;g_hostname_to_ascii;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghostutils.h;"gchar *g_hostname_to_ascii (const gchar *hostname);";function g_hostname_to_ascii(hostname) bind(c)
g;g_hostname_to_unicode;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghostutils.h;"gchar *g_hostname_to_unicode (const gchar *hostname);";function g_hostname_to_unicode(hostname) bind(c)
g;g_icon_deserialize;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gicon.h;"GIcon * g_icon_deserialize (GVariant *value);";function g_icon_deserialize(value) bind(c)
g;g_icon_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gicon.h;"gboolean g_icon_equal (GIcon *icon1, GIcon *icon2);";function g_icon_equal(icon1, icon2) bind(c)
g;g_icon_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gicon.h;"GType g_icon_get_type (void) G_GNUC_CONST;";function g_icon_get_type() bind(c)
g;g_icon_hash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gicon.h;"guint g_icon_hash (gconstpointer icon);";function g_icon_hash(icon) bind(c)
g;g_icon_new_for_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gicon.h;"GIcon *g_icon_new_for_string (const gchar *str, GError **error);";function g_icon_new_for_string(str, error) bind(c)
g;g_icon_serialize;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gicon.h;"GVariant * g_icon_serialize (GIcon *icon);";function g_icon_serialize(icon) bind(c)
g;g_icon_to_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gicon.h;"gchar *g_icon_to_string (GIcon *icon);";function g_icon_to_string(icon) bind(c)
g;g_iconv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gsize g_iconv (GIConv converter, gchar **inbuf, gsize *inbytes_left, gchar **outbuf, gsize *outbytes_left);";function g_iconv(converter, inbuf, inbytes_left, outbuf, outbytes_left) bind(c)
g;g_iconv_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gint g_iconv_close (GIConv converter);";function g_iconv_close(converter) bind(c)
g;g_iconv_open;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"GIConv g_iconv_open (const gchar *to_codeset, const gchar *from_codeset);";function g_iconv_open(to_codeset, from_codeset) bind(c)
g;g_idle_add;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"guint g_idle_add (GSourceFunc function, gpointer data);";function g_idle_add(function, data) bind(c)
g;g_idle_add_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"guint g_idle_add_full (gint priority, GSourceFunc function, gpointer data, GDestroyNotify notify);";function g_idle_add_full(priority, function, data, notify) bind(c)
g;g_idle_remove_by_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_idle_remove_by_data (gpointer data);";function g_idle_remove_by_data(data) bind(c)
g;g_idle_source_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GSource *g_idle_source_new (void);";function g_idle_source_new() bind(c)
g;g_inet_address_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gboolean g_inet_address_equal (GInetAddress *address, GInetAddress *other_address);";function g_inet_address_equal(address, other_address) bind(c)
g;g_inet_address_get_family;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"GSocketFamily g_inet_address_get_family (GInetAddress *address);";function g_inet_address_get_family(address) bind(c)
g;g_inet_address_get_is_any;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gboolean g_inet_address_get_is_any (GInetAddress *address);";function g_inet_address_get_is_any(address) bind(c)
g;g_inet_address_get_is_link_local;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gboolean g_inet_address_get_is_link_local (GInetAddress *address);";function g_inet_address_get_is_link_local(address) bind(c)
g;g_inet_address_get_is_loopback;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gboolean g_inet_address_get_is_loopback (GInetAddress *address);";function g_inet_address_get_is_loopback(address) bind(c)
g;g_inet_address_get_is_mc_global;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gboolean g_inet_address_get_is_mc_global (GInetAddress *address);";function g_inet_address_get_is_mc_global(address) bind(c)
g;g_inet_address_get_is_mc_link_local;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gboolean g_inet_address_get_is_mc_link_local (GInetAddress *address);";function g_inet_address_get_is_mc_link_local(address) bind(c)
g;g_inet_address_get_is_mc_node_local;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gboolean g_inet_address_get_is_mc_node_local (GInetAddress *address);";function g_inet_address_get_is_mc_node_local(address) bind(c)
g;g_inet_address_get_is_mc_org_local;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gboolean g_inet_address_get_is_mc_org_local (GInetAddress *address);";function g_inet_address_get_is_mc_org_local(address) bind(c)
g;g_inet_address_get_is_mc_site_local;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gboolean g_inet_address_get_is_mc_site_local (GInetAddress *address);";function g_inet_address_get_is_mc_site_local(address) bind(c)
g;g_inet_address_get_is_multicast;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gboolean g_inet_address_get_is_multicast (GInetAddress *address);";function g_inet_address_get_is_multicast(address) bind(c)
g;g_inet_address_get_is_site_local;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gboolean g_inet_address_get_is_site_local (GInetAddress *address);";function g_inet_address_get_is_site_local(address) bind(c)
g;g_inet_address_get_native_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gsize g_inet_address_get_native_size (GInetAddress *address);";function g_inet_address_get_native_size(address) bind(c)
g;g_inet_address_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"GType g_inet_address_get_type (void) G_GNUC_CONST;";function g_inet_address_get_type() bind(c)
g;g_inet_address_mask_equal;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddressmask.h;"gboolean g_inet_address_mask_equal (GInetAddressMask *mask, GInetAddressMask *mask2);";function g_inet_address_mask_equal(mask, mask2) bind(c)
g;g_inet_address_mask_get_address;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddressmask.h;"GInetAddress *g_inet_address_mask_get_address (GInetAddressMask *mask);";function g_inet_address_mask_get_address(mask) bind(c)
g;g_inet_address_mask_get_family;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddressmask.h;"GSocketFamily g_inet_address_mask_get_family (GInetAddressMask *mask);";function g_inet_address_mask_get_family(mask) bind(c)
g;g_inet_address_mask_get_length;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddressmask.h;"guint g_inet_address_mask_get_length (GInetAddressMask *mask);";function g_inet_address_mask_get_length(mask) bind(c)
g;g_inet_address_mask_get_type;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddressmask.h;"GType g_inet_address_mask_get_type (void) G_GNUC_CONST;";function g_inet_address_mask_get_type() bind(c)
g;g_inet_address_mask_matches;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddressmask.h;"gboolean g_inet_address_mask_matches (GInetAddressMask *mask, GInetAddress *address);";function g_inet_address_mask_matches(mask, address) bind(c)
g;g_inet_address_mask_new;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddressmask.h;"GInetAddressMask *g_inet_address_mask_new (GInetAddress *addr, guint length, GError **error);";function g_inet_address_mask_new(addr, length, error) bind(c)
g;g_inet_address_mask_new_from_string;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddressmask.h;"GInetAddressMask *g_inet_address_mask_new_from_string (const gchar *mask_string, GError **error);";function g_inet_address_mask_new_from_string(mask_string, error) bind(c)
g;g_inet_address_mask_to_string;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddressmask.h;"gchar *g_inet_address_mask_to_string (GInetAddressMask *mask);";function g_inet_address_mask_to_string(mask) bind(c)
g;g_inet_address_new_any;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"GInetAddress * g_inet_address_new_any (GSocketFamily family);";function g_inet_address_new_any(family) bind(c)
g;g_inet_address_new_from_bytes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"GInetAddress * g_inet_address_new_from_bytes (const guint8 *bytes, GSocketFamily family);";function g_inet_address_new_from_bytes(bytes, family) bind(c)
g;g_inet_address_new_from_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"GInetAddress * g_inet_address_new_from_string (const gchar *string);";function g_inet_address_new_from_string(string) bind(c)
g;g_inet_address_new_loopback;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"GInetAddress * g_inet_address_new_loopback (GSocketFamily family);";function g_inet_address_new_loopback(family) bind(c)
g;g_inet_address_to_bytes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"const guint8 * g_inet_address_to_bytes (GInetAddress *address);";function g_inet_address_to_bytes(address) bind(c)
g;g_inet_address_to_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetaddress.h;"gchar * g_inet_address_to_string (GInetAddress *address);";function g_inet_address_to_string(address) bind(c)
g;g_inet_socket_address_get_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetsocketaddress.h;"GInetAddress * g_inet_socket_address_get_address (GInetSocketAddress *address);";function g_inet_socket_address_get_address(address) bind(c)
g;g_inet_socket_address_get_flowinfo;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/ginetsocketaddress.h;"guint32 g_inet_socket_address_get_flowinfo (GInetSocketAddress *address);";function g_inet_socket_address_get_flowinfo(address) bind(c)
g;g_inet_socket_address_get_port;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetsocketaddress.h;"guint16 g_inet_socket_address_get_port (GInetSocketAddress *address);";function g_inet_socket_address_get_port(address) bind(c)
g;g_inet_socket_address_get_scope_id;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/ginetsocketaddress.h;"guint32 g_inet_socket_address_get_scope_id (GInetSocketAddress *address);";function g_inet_socket_address_get_scope_id(address) bind(c)
g;g_inet_socket_address_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetsocketaddress.h;"GType g_inet_socket_address_get_type (void) G_GNUC_CONST;";function g_inet_socket_address_get_type() bind(c)
g;g_inet_socket_address_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginetsocketaddress.h;"GSocketAddress *g_inet_socket_address_new (GInetAddress *address, guint16 port);";function g_inet_socket_address_new(address, port) bind(c)
g;g_inet_socket_address_new_from_string;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/ginetsocketaddress.h;"GSocketAddress *g_inet_socket_address_new_from_string (const char *address, guint port);";function g_inet_socket_address_new_from_string(address, port) bind(c)
g;g_initable_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginitable.h;"GType g_initable_get_type (void) G_GNUC_CONST;";function g_initable_get_type() bind(c)
g;g_initable_init;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginitable.h;"gboolean g_initable_init (GInitable *initable, GCancellable *cancellable, GError **error);";function g_initable_init(initable, cancellable, error) bind(c)
g;g_initable_new_valist;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginitable.h;"GObject* g_initable_new_valist (GType object_type, const gchar *first_property_name, va_list var_args, GCancellable *cancellable, GError **error);";function g_initable_new_valist(object_type, first_property_name, var_args, cancellable, error) bind(c)
g;g_initable_newv;GLIB_DEPRECATED_IN_2_54_FOR(g_object_new_with_properties and g_initable_init);glib-auto.f90;/usr/include/glib-2.0/gio/ginitable.h;"gpointer g_initable_newv (GType object_type, guint n_parameters, GParameter *parameters, GCancellable *cancellable, GError **error);";function g_initable_newv(object_type, n_parameters, parameters, cancellable, error) bind(c)
g;g_initially_unowned_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"GType g_initially_unowned_get_type (void);";function g_initially_unowned_get_type() bind(c)
g;g_input_stream_clear_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"void g_input_stream_clear_pending (GInputStream *stream);";subroutine g_input_stream_clear_pending(stream) bind(c)
g;g_input_stream_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"gboolean g_input_stream_close (GInputStream *stream, GCancellable *cancellable, GError **error);";function g_input_stream_close(stream, cancellable, error) bind(c)
g;g_input_stream_close_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"void g_input_stream_close_async (GInputStream *stream, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_input_stream_close_async(stream, io_priority, cancellable, callback, user_data) bind(c)
g;g_input_stream_close_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"gboolean g_input_stream_close_finish (GInputStream *stream, GAsyncResult *result, GError **error);";function g_input_stream_close_finish(stream, result, error) bind(c)
g;g_input_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"GType g_input_stream_get_type (void) G_GNUC_CONST;";function g_input_stream_get_type() bind(c)
g;g_input_stream_has_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"gboolean g_input_stream_has_pending (GInputStream *stream);";function g_input_stream_has_pending(stream) bind(c)
g;g_input_stream_is_closed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"gboolean g_input_stream_is_closed (GInputStream *stream);";function g_input_stream_is_closed(stream) bind(c)
g;g_input_stream_read;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"gssize g_input_stream_read (GInputStream *stream, void *buffer, gsize count, GCancellable *cancellable, GError **error);";function g_input_stream_read(stream, buffer, count, cancellable, error) bind(c)
g;g_input_stream_read_all;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"gboolean g_input_stream_read_all (GInputStream *stream, void *buffer, gsize count, gsize *bytes_read, GCancellable *cancellable, GError **error);";function g_input_stream_read_all(stream, buffer, count, bytes_read, cancellable, error) bind(c)
g;g_input_stream_read_all_async;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"void g_input_stream_read_all_async (GInputStream *stream, void *buffer, gsize count, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_input_stream_read_all_async(stream, buffer, count, io_priority, cancellable, callback, user_data) bind(c)
g;g_input_stream_read_all_finish;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"gboolean g_input_stream_read_all_finish (GInputStream *stream, GAsyncResult *result, gsize *bytes_read, GError **error);";function g_input_stream_read_all_finish(stream, result, bytes_read, error) bind(c)
g;g_input_stream_read_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"void g_input_stream_read_async (GInputStream *stream, void *buffer, gsize count, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_input_stream_read_async(stream, buffer, count, io_priority, cancellable, callback, user_data) bind(c)
g;g_input_stream_read_bytes;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"GBytes *g_input_stream_read_bytes (GInputStream *stream, gsize count, GCancellable *cancellable, GError **error);";function g_input_stream_read_bytes(stream, count, cancellable, error) bind(c)
g;g_input_stream_read_bytes_async;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"void g_input_stream_read_bytes_async (GInputStream *stream, gsize count, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_input_stream_read_bytes_async(stream, count, io_priority, cancellable, callback, user_data) bind(c)
g;g_input_stream_read_bytes_finish;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"GBytes *g_input_stream_read_bytes_finish (GInputStream *stream, GAsyncResult *result, GError **error);";function g_input_stream_read_bytes_finish(stream, result, error) bind(c)
g;g_input_stream_read_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"gssize g_input_stream_read_finish (GInputStream *stream, GAsyncResult *result, GError **error);";function g_input_stream_read_finish(stream, result, error) bind(c)
g;g_input_stream_set_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"gboolean g_input_stream_set_pending (GInputStream *stream, GError **error);";function g_input_stream_set_pending(stream, error) bind(c)
g;g_input_stream_skip;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"gssize g_input_stream_skip (GInputStream *stream, gsize count, GCancellable *cancellable, GError **error);";function g_input_stream_skip(stream, count, cancellable, error) bind(c)
g;g_input_stream_skip_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"void g_input_stream_skip_async (GInputStream *stream, gsize count, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_input_stream_skip_async(stream, count, io_priority, cancellable, callback, user_data) bind(c)
g;g_input_stream_skip_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/ginputstream.h;"gssize g_input_stream_skip_finish (GInputStream *stream, GAsyncResult *result, GError **error);";function g_input_stream_skip_finish(stream, result, error) bind(c)
g;g_int64_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_int64_equal (gconstpointer v1, gconstpointer v2);";function g_int64_equal(v1, v2) bind(c)
g;g_int64_hash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"guint g_int64_hash (gconstpointer v);";function g_int64_hash(v) bind(c)
g;g_int_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_int_equal (gconstpointer v1, gconstpointer v2);";function g_int_equal(v1, v2) bind(c)
g;g_int_hash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"guint g_int_hash (gconstpointer v);";function g_int_hash(v) bind(c)
g;g_intern_static_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gquark.h;"const gchar * g_intern_static_string (const gchar *string);";function g_intern_static_string(string) bind(c)
g;g_intern_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gquark.h;"const gchar * g_intern_string (const gchar *string);";function g_intern_string(string) bind(c)
g;g_io_add_watch;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"guint g_io_add_watch (GIOChannel *channel, GIOCondition condition, GIOFunc func, gpointer user_data);";function g_io_add_watch(channel, condition, func, user_data) bind(c)
g;g_io_add_watch_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"guint g_io_add_watch_full (GIOChannel *channel, gint priority, GIOCondition condition, GIOFunc func, gpointer user_data, GDestroyNotify notify);";function g_io_add_watch_full(channel, priority, condition, func, user_data, notify) bind(c)
g;g_io_channel_close;GLIB_DEPRECATED_FOR(g_io_channel_shutdown);glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"void g_io_channel_close (GIOChannel *channel);";subroutine g_io_channel_close(channel) bind(c)
g;g_io_channel_error_from_errno;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOChannelError g_io_channel_error_from_errno (gint en);";function g_io_channel_error_from_errno(en) bind(c)
g;g_io_channel_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GQuark g_io_channel_error_quark (void);";function g_io_channel_error_quark() bind(c)
g;g_io_channel_flush;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOStatus g_io_channel_flush (GIOChannel *channel, GError **error);";function g_io_channel_flush(channel, error) bind(c)
g;g_io_channel_get_buffer_condition;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOCondition g_io_channel_get_buffer_condition (GIOChannel *channel);";function g_io_channel_get_buffer_condition(channel) bind(c)
g;g_io_channel_get_buffer_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"gsize g_io_channel_get_buffer_size (GIOChannel *channel);";function g_io_channel_get_buffer_size(channel) bind(c)
g;g_io_channel_get_buffered;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"gboolean g_io_channel_get_buffered (GIOChannel *channel);";function g_io_channel_get_buffered(channel) bind(c)
g;g_io_channel_get_close_on_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"gboolean g_io_channel_get_close_on_unref (GIOChannel *channel);";function g_io_channel_get_close_on_unref(channel) bind(c)
g;g_io_channel_get_encoding;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"const gchar * g_io_channel_get_encoding (GIOChannel *channel);";function g_io_channel_get_encoding(channel) bind(c)
g;g_io_channel_get_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOFlags g_io_channel_get_flags (GIOChannel *channel);";function g_io_channel_get_flags(channel) bind(c)
g;g_io_channel_get_line_term;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"const gchar * g_io_channel_get_line_term (GIOChannel *channel, gint *length);";function g_io_channel_get_line_term(channel, length) bind(c)
g;g_io_channel_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_io_channel_get_type (void) G_GNUC_CONST;";function g_io_channel_get_type() bind(c)
g;g_io_channel_init;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"void g_io_channel_init (GIOChannel *channel);";subroutine g_io_channel_init(channel) bind(c)
g;g_io_channel_new_file;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOChannel* g_io_channel_new_file (const gchar *filename, const gchar *mode, GError **error);";function g_io_channel_new_file(filename, mode, error) bind(c)
g;g_io_channel_read;GLIB_DEPRECATED_FOR(g_io_channel_read_chars);glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOError g_io_channel_read (GIOChannel *channel, gchar *buf, gsize count, gsize *bytes_read);";function g_io_channel_read(channel, buf, count, bytes_read) bind(c)
g;g_io_channel_read_chars;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOStatus g_io_channel_read_chars (GIOChannel *channel, gchar *buf, gsize count, gsize *bytes_read, GError **error);";function g_io_channel_read_chars(channel, buf, count, bytes_read, error) bind(c)
g;g_io_channel_read_line;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOStatus g_io_channel_read_line (GIOChannel *channel, gchar **str_return, gsize *length, gsize *terminator_pos, GError **error);";function g_io_channel_read_line(channel, str_return, length, terminator_pos, error) bind(c)
g;g_io_channel_read_line_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOStatus g_io_channel_read_line_string (GIOChannel *channel, GString *buffer, gsize *terminator_pos, GError **error);";function g_io_channel_read_line_string(channel, buffer, terminator_pos, error) bind(c)
g;g_io_channel_read_to_end;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOStatus g_io_channel_read_to_end (GIOChannel *channel, gchar **str_return, gsize *length, GError **error);";function g_io_channel_read_to_end(channel, str_return, length, error) bind(c)
g;g_io_channel_read_unichar;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOStatus g_io_channel_read_unichar (GIOChannel *channel, gunichar *thechar, GError **error);";function g_io_channel_read_unichar(channel, thechar, error) bind(c)
g;g_io_channel_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOChannel *g_io_channel_ref (GIOChannel *channel);";function g_io_channel_ref(channel) bind(c)
g;g_io_channel_seek;GLIB_DEPRECATED_FOR(g_io_channel_seek_position);glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOError g_io_channel_seek (GIOChannel *channel, gint64 offset, GSeekType type);";function g_io_channel_seek(channel, offset, type) bind(c)
g;g_io_channel_seek_position;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOStatus g_io_channel_seek_position (GIOChannel *channel, gint64 offset, GSeekType type, GError **error);";function g_io_channel_seek_position(channel, offset, type, error) bind(c)
g;g_io_channel_set_buffer_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"void g_io_channel_set_buffer_size (GIOChannel *channel, gsize size);";subroutine g_io_channel_set_buffer_size(channel, size) bind(c)
g;g_io_channel_set_buffered;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"void g_io_channel_set_buffered (GIOChannel *channel, gboolean buffered);";subroutine g_io_channel_set_buffered(channel, buffered) bind(c)
g;g_io_channel_set_close_on_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"void g_io_channel_set_close_on_unref (GIOChannel *channel, gboolean do_close);";subroutine g_io_channel_set_close_on_unref(channel, do_close) bind(c)
g;g_io_channel_set_encoding;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOStatus g_io_channel_set_encoding (GIOChannel *channel, const gchar *encoding, GError **error);";function g_io_channel_set_encoding(channel, encoding, error) bind(c)
g;g_io_channel_set_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOStatus g_io_channel_set_flags (GIOChannel *channel, GIOFlags flags, GError **error);";function g_io_channel_set_flags(channel, flags, error) bind(c)
g;g_io_channel_set_line_term;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"void g_io_channel_set_line_term (GIOChannel *channel, const gchar *line_term, gint length);";subroutine g_io_channel_set_line_term(channel, line_term, length) bind(c)
g;g_io_channel_shutdown;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOStatus g_io_channel_shutdown (GIOChannel *channel, gboolean flush, GError **err);";function g_io_channel_shutdown(channel, flush, err) bind(c)
g;g_io_channel_unix_get_fd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"gint g_io_channel_unix_get_fd (GIOChannel *channel);";function g_io_channel_unix_get_fd(channel) bind(c)
g;g_io_channel_unix_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOChannel* g_io_channel_unix_new (int fd);";function g_io_channel_unix_new(fd) bind(c)
g;g_io_channel_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"void g_io_channel_unref (GIOChannel *channel);";subroutine g_io_channel_unref(channel) bind(c)
g;g_io_channel_win32_get_fd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"gint g_io_channel_win32_get_fd (GIOChannel *channel);";function g_io_channel_win32_get_fd(channel) bind(c)
g;g_io_channel_win32_make_pollfd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"void g_io_channel_win32_make_pollfd (GIOChannel *channel, GIOCondition condition, GPollFD *fd);";subroutine g_io_channel_win32_make_pollfd(channel, condition, fd) bind(c)
g;g_io_channel_win32_new_fd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOChannel* g_io_channel_win32_new_fd (gint fd);";function g_io_channel_win32_new_fd(fd) bind(c)
g;g_io_channel_win32_new_socket;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOChannel *g_io_channel_win32_new_socket (gint socket);";function g_io_channel_win32_new_socket(socket) bind(c)
g;g_io_channel_win32_new_stream_socket;GLIB_DEPRECATED_FOR(g_io_channel_win32_new_socket);glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOChannel *g_io_channel_win32_new_stream_socket (gint socket);";function g_io_channel_win32_new_stream_socket(socket) bind(c)
g;g_io_channel_win32_poll;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"gint g_io_channel_win32_poll (GPollFD *fds, gint n_fds, gint timeout_);";function g_io_channel_win32_poll(fds, n_fds, timeout_) bind(c)
g;g_io_channel_win32_set_debug;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"void g_io_channel_win32_set_debug (GIOChannel *channel, gboolean flag);";subroutine g_io_channel_win32_set_debug(channel, flag) bind(c)
g;g_io_channel_write;GLIB_DEPRECATED_FOR(g_io_channel_write_chars);glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOError g_io_channel_write (GIOChannel *channel, const gchar *buf, gsize count, gsize *bytes_written);";function g_io_channel_write(channel, buf, count, bytes_written) bind(c)
g;g_io_channel_write_chars;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOStatus g_io_channel_write_chars (GIOChannel *channel, const gchar *buf, gssize count, gsize *bytes_written, GError **error);";function g_io_channel_write_chars(channel, buf, count, bytes_written, error) bind(c)
g;g_io_channel_write_unichar;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GIOStatus g_io_channel_write_unichar (GIOChannel *channel, gunichar thechar, GError **error);";function g_io_channel_write_unichar(channel, thechar, error) bind(c)
g;g_io_condition_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_io_condition_get_type (void) G_GNUC_CONST;";function g_io_condition_get_type() bind(c)
g;g_io_create_watch;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/giochannel.h;"GSource * g_io_create_watch (GIOChannel *channel, GIOCondition condition);";function g_io_create_watch(channel, condition) bind(c)
g;g_io_error_from_errno;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gioerror.h;"GIOErrorEnum g_io_error_from_errno (gint err_no);";function g_io_error_from_errno(err_no) bind(c)
g;g_io_error_from_win32_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gioerror.h;"GIOErrorEnum g_io_error_from_win32_error (gint error_code);";function g_io_error_from_win32_error(error_code) bind(c)
g;g_io_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gioerror.h;"GQuark g_io_error_quark (void);";function g_io_error_quark() bind(c)
g;g_io_extension_get_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"const char * g_io_extension_get_name (GIOExtension *extension);";function g_io_extension_get_name(extension) bind(c)
g;g_io_extension_get_priority;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"gint g_io_extension_get_priority (GIOExtension *extension);";function g_io_extension_get_priority(extension) bind(c)
g;g_io_extension_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GType g_io_extension_get_type (GIOExtension *extension);";function g_io_extension_get_type(extension) bind(c)
g;g_io_extension_point_get_extension_by_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GIOExtension * g_io_extension_point_get_extension_by_name (GIOExtensionPoint *extension_point, const char *name);";function g_io_extension_point_get_extension_by_name(extension_point, name) bind(c)
g;g_io_extension_point_get_extensions;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GList *g_io_extension_point_get_extensions (GIOExtensionPoint *extension_point);";function g_io_extension_point_get_extensions(extension_point) bind(c)
g;g_io_extension_point_get_required_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GType g_io_extension_point_get_required_type (GIOExtensionPoint *extension_point);";function g_io_extension_point_get_required_type(extension_point) bind(c)
g;g_io_extension_point_implement;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GIOExtension * g_io_extension_point_implement (const char *extension_point_name, GType type, const char *extension_name, gint priority);";function g_io_extension_point_implement(extension_point_name, type, extension_name, priority) bind(c)
g;g_io_extension_point_lookup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GIOExtensionPoint *g_io_extension_point_lookup (const char *name);";function g_io_extension_point_lookup(name) bind(c)
g;g_io_extension_point_register;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GIOExtensionPoint *g_io_extension_point_register (const char *name);";function g_io_extension_point_register(name) bind(c)
g;g_io_extension_point_set_required_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"void g_io_extension_point_set_required_type (GIOExtensionPoint *extension_point, GType type);";subroutine g_io_extension_point_set_required_type(extension_point, type) bind(c)
g;g_io_extension_ref_class;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GTypeClass* g_io_extension_ref_class (GIOExtension *extension);";function g_io_extension_ref_class(extension) bind(c)
g;g_io_module_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GType g_io_module_get_type (void) G_GNUC_CONST;";function g_io_module_get_type() bind(c)
g;g_io_module_load;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"void g_io_module_load (GIOModule *module);";subroutine g_io_module_load(module) bind(c)
g;g_io_module_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GIOModule *g_io_module_new (const gchar *filename);";function g_io_module_new(filename) bind(c)
g;g_io_module_query;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"char **g_io_module_query (void);";function g_io_module_query() bind(c)
g;g_io_module_scope_block;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"void g_io_module_scope_block (GIOModuleScope *scope, const gchar *basename);";subroutine g_io_module_scope_block(scope, basename) bind(c)
g;g_io_module_scope_free;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"void g_io_module_scope_free (GIOModuleScope *scope);";subroutine g_io_module_scope_free(scope) bind(c)
g;g_io_module_scope_new;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GIOModuleScope * g_io_module_scope_new (GIOModuleScopeFlags flags);";function g_io_module_scope_new(flags) bind(c)
g;g_io_module_unload;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"void g_io_module_unload (GIOModule *module);";subroutine g_io_module_unload(module) bind(c)
g;g_io_modules_load_all_in_directory;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GList *g_io_modules_load_all_in_directory (const gchar *dirname);";function g_io_modules_load_all_in_directory(dirname) bind(c)
g;g_io_modules_load_all_in_directory_with_scope;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"GList *g_io_modules_load_all_in_directory_with_scope (const gchar *dirname, GIOModuleScope *scope);";function g_io_modules_load_all_in_directory_with_scope(dirname, scope) bind(c)
g;g_io_modules_scan_all_in_directory;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"void g_io_modules_scan_all_in_directory (const char *dirname);";subroutine g_io_modules_scan_all_in_directory(dirname) bind(c)
g;g_io_modules_scan_all_in_directory_with_scope;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gio/giomodule.h;"void g_io_modules_scan_all_in_directory_with_scope (const gchar *dirname, GIOModuleScope *scope);";subroutine g_io_modules_scan_all_in_directory_with_scope(dirname, scope) bind(c)
g;g_io_scheduler_cancel_all_jobs;GLIB_DEPRECATED_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gioscheduler.h;"void g_io_scheduler_cancel_all_jobs (void);";subroutine g_io_scheduler_cancel_all_jobs() bind(c)
g;g_io_scheduler_job_send_to_mainloop;GLIB_DEPRECATED_IN_2_36_FOR (g_main_context_invoke);glib-auto.f90;/usr/include/glib-2.0/gio/gioscheduler.h;"gboolean g_io_scheduler_job_send_to_mainloop (GIOSchedulerJob *job, GSourceFunc func, gpointer user_data, GDestroyNotify notify);";function g_io_scheduler_job_send_to_mainloop(job, func, user_data, notify) bind(c)
g;g_io_scheduler_job_send_to_mainloop_async;GLIB_DEPRECATED_IN_2_36_FOR (g_main_context_invoke);glib-auto.f90;/usr/include/glib-2.0/gio/gioscheduler.h;"void g_io_scheduler_job_send_to_mainloop_async (GIOSchedulerJob *job, GSourceFunc func, gpointer user_data, GDestroyNotify notify);";subroutine g_io_scheduler_job_send_to_mainloop_async(job, func, user_data, notify) bind(c)
g;g_io_scheduler_push_job;"GLIB_DEPRECATED_IN_2_36_FOR (""GThreadPool or g_task_run_in_thread"")";glib-auto.f90;/usr/include/glib-2.0/gio/gioscheduler.h;"void g_io_scheduler_push_job (GIOSchedulerJobFunc job_func, gpointer user_data, GDestroyNotify notify, gint io_priority, GCancellable *cancellable);";subroutine g_io_scheduler_push_job(job_func, user_data, notify, io_priority, cancellable) bind(c)
g;g_io_stream_clear_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giostream.h;"void g_io_stream_clear_pending (GIOStream *stream);";subroutine g_io_stream_clear_pending(stream) bind(c)
g;g_io_stream_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giostream.h;"gboolean g_io_stream_close (GIOStream *stream, GCancellable *cancellable, GError **error);";function g_io_stream_close(stream, cancellable, error) bind(c)
g;g_io_stream_close_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giostream.h;"void g_io_stream_close_async (GIOStream *stream, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_io_stream_close_async(stream, io_priority, cancellable, callback, user_data) bind(c)
g;g_io_stream_close_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giostream.h;"gboolean g_io_stream_close_finish (GIOStream *stream, GAsyncResult *result, GError **error);";function g_io_stream_close_finish(stream, result, error) bind(c)
g;g_io_stream_get_input_stream;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giostream.h;"GInputStream * g_io_stream_get_input_stream (GIOStream *stream);";function g_io_stream_get_input_stream(stream) bind(c)
g;g_io_stream_get_output_stream;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giostream.h;"GOutputStream *g_io_stream_get_output_stream (GIOStream *stream);";function g_io_stream_get_output_stream(stream) bind(c)
g;g_io_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giostream.h;"GType g_io_stream_get_type (void) G_GNUC_CONST;";function g_io_stream_get_type() bind(c)
g;g_io_stream_has_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giostream.h;"gboolean g_io_stream_has_pending (GIOStream *stream);";function g_io_stream_has_pending(stream) bind(c)
g;g_io_stream_is_closed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giostream.h;"gboolean g_io_stream_is_closed (GIOStream *stream);";function g_io_stream_is_closed(stream) bind(c)
g;g_io_stream_set_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giostream.h;"gboolean g_io_stream_set_pending (GIOStream *stream, GError **error);";function g_io_stream_set_pending(stream, error) bind(c)
g;g_io_stream_splice_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giostream.h;"void g_io_stream_splice_async (GIOStream *stream1, GIOStream *stream2, GIOStreamSpliceFlags flags, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_io_stream_splice_async(stream1, stream2, flags, io_priority, cancellable, callback, user_data) bind(c)
g;g_io_stream_splice_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/giostream.h;"gboolean g_io_stream_splice_finish (GAsyncResult *result, GError **error);";function g_io_stream_splice_finish(result, error) bind(c)
g;g_key_file_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"GQuark g_key_file_error_quark (void);";function g_key_file_error_quark() bind(c)
g;g_key_file_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_free (GKeyFile *key_file);";subroutine g_key_file_free(key_file) bind(c)
g;g_key_file_get_boolean;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_get_boolean (GKeyFile *key_file, const gchar *group_name, const gchar *key, GError **error);";function g_key_file_get_boolean(key_file, group_name, key, error) bind(c)
g;g_key_file_get_boolean_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean *g_key_file_get_boolean_list (GKeyFile *key_file, const gchar *group_name, const gchar *key, gsize *length, GError **error) G_GNUC_MALLOC;";function g_key_file_get_boolean_list(key_file, group_name, key, length, error) bind(c)
g;g_key_file_get_comment;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gchar *g_key_file_get_comment (GKeyFile *key_file, const gchar *group_name, const gchar *key, GError **error) G_GNUC_MALLOC;";function g_key_file_get_comment(key_file, group_name, key, error) bind(c)
g;g_key_file_get_double;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gdouble g_key_file_get_double (GKeyFile *key_file, const gchar *group_name, const gchar *key, GError **error);";function g_key_file_get_double(key_file, group_name, key, error) bind(c)
g;g_key_file_get_double_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gdouble *g_key_file_get_double_list (GKeyFile *key_file, const gchar *group_name, const gchar *key, gsize *length, GError **error) G_GNUC_MALLOC;";function g_key_file_get_double_list(key_file, group_name, key, length, error) bind(c)
g;g_key_file_get_groups;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gchar **g_key_file_get_groups (GKeyFile *key_file, gsize *length);";function g_key_file_get_groups(key_file, length) bind(c)
g;g_key_file_get_int64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gint64 g_key_file_get_int64 (GKeyFile *key_file, const gchar *group_name, const gchar *key, GError **error);";function g_key_file_get_int64(key_file, group_name, key, error) bind(c)
g;g_key_file_get_integer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gint g_key_file_get_integer (GKeyFile *key_file, const gchar *group_name, const gchar *key, GError **error);";function g_key_file_get_integer(key_file, group_name, key, error) bind(c)
g;g_key_file_get_integer_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gint *g_key_file_get_integer_list (GKeyFile *key_file, const gchar *group_name, const gchar *key, gsize *length, GError **error) G_GNUC_MALLOC;";function g_key_file_get_integer_list(key_file, group_name, key, length, error) bind(c)
g;g_key_file_get_keys;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gchar **g_key_file_get_keys (GKeyFile *key_file, const gchar *group_name, gsize *length, GError **error);";function g_key_file_get_keys(key_file, group_name, length, error) bind(c)
g;g_key_file_get_locale_for_key;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gchar *g_key_file_get_locale_for_key (GKeyFile *key_file, const gchar *group_name, const gchar *key, const gchar *locale) G_GNUC_MALLOC;";function g_key_file_get_locale_for_key(key_file, group_name, key, locale) bind(c)
g;g_key_file_get_locale_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gchar *g_key_file_get_locale_string (GKeyFile *key_file, const gchar *group_name, const gchar *key, const gchar *locale, GError **error) G_GNUC_MALLOC;";function g_key_file_get_locale_string(key_file, group_name, key, locale, error) bind(c)
g;g_key_file_get_locale_string_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gchar **g_key_file_get_locale_string_list (GKeyFile *key_file, const gchar *group_name, const gchar *key, const gchar *locale, gsize *length, GError **error);";function g_key_file_get_locale_string_list(key_file, group_name, key, locale, length, error) bind(c)
g;g_key_file_get_start_group;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gchar *g_key_file_get_start_group (GKeyFile *key_file) G_GNUC_MALLOC;";function g_key_file_get_start_group(key_file) bind(c)
g;g_key_file_get_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gchar *g_key_file_get_string (GKeyFile *key_file, const gchar *group_name, const gchar *key, GError **error) G_GNUC_MALLOC;";function g_key_file_get_string(key_file, group_name, key, error) bind(c)
g;g_key_file_get_string_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gchar **g_key_file_get_string_list (GKeyFile *key_file, const gchar *group_name, const gchar *key, gsize *length, GError **error);";function g_key_file_get_string_list(key_file, group_name, key, length, error) bind(c)
g;g_key_file_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_key_file_get_type (void) G_GNUC_CONST;";function g_key_file_get_type() bind(c)
g;g_key_file_get_uint64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"guint64 g_key_file_get_uint64 (GKeyFile *key_file, const gchar *group_name, const gchar *key, GError **error);";function g_key_file_get_uint64(key_file, group_name, key, error) bind(c)
g;g_key_file_get_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gchar *g_key_file_get_value (GKeyFile *key_file, const gchar *group_name, const gchar *key, GError **error) G_GNUC_MALLOC;";function g_key_file_get_value(key_file, group_name, key, error) bind(c)
g;g_key_file_has_group;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_has_group (GKeyFile *key_file, const gchar *group_name);";function g_key_file_has_group(key_file, group_name) bind(c)
g;g_key_file_has_key;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_has_key (GKeyFile *key_file, const gchar *group_name, const gchar *key, GError **error);";function g_key_file_has_key(key_file, group_name, key, error) bind(c)
g;g_key_file_load_from_bytes;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_load_from_bytes (GKeyFile *key_file, GBytes *bytes, GKeyFileFlags flags, GError **error);";function g_key_file_load_from_bytes(key_file, bytes, flags, error) bind(c)
g;g_key_file_load_from_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_load_from_data (GKeyFile *key_file, const gchar *data, gsize length, GKeyFileFlags flags, GError **error);";function g_key_file_load_from_data(key_file, data, length, flags, error) bind(c)
g;g_key_file_load_from_data_dirs;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_load_from_data_dirs (GKeyFile *key_file, const gchar *file, gchar **full_path, GKeyFileFlags flags, GError **error);";function g_key_file_load_from_data_dirs(key_file, file, full_path, flags, error) bind(c)
g;g_key_file_load_from_dirs;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_load_from_dirs (GKeyFile *key_file, const gchar *file, const gchar **search_dirs, gchar **full_path, GKeyFileFlags flags, GError **error);";function g_key_file_load_from_dirs(key_file, file, search_dirs, full_path, flags, error) bind(c)
g;g_key_file_load_from_file;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_load_from_file (GKeyFile *key_file, const gchar *file, GKeyFileFlags flags, GError **error);";function g_key_file_load_from_file(key_file, file, flags, error) bind(c)
g;g_key_file_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"GKeyFile *g_key_file_new (void);";function g_key_file_new() bind(c)
g;g_key_file_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"GKeyFile *g_key_file_ref (GKeyFile *key_file);";function g_key_file_ref(key_file) bind(c)
g;g_key_file_remove_comment;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_remove_comment (GKeyFile *key_file, const gchar *group_name, const gchar *key, GError **error);";function g_key_file_remove_comment(key_file, group_name, key, error) bind(c)
g;g_key_file_remove_group;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_remove_group (GKeyFile *key_file, const gchar *group_name, GError **error);";function g_key_file_remove_group(key_file, group_name, error) bind(c)
g;g_key_file_remove_key;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_remove_key (GKeyFile *key_file, const gchar *group_name, const gchar *key, GError **error);";function g_key_file_remove_key(key_file, group_name, key, error) bind(c)
g;g_key_file_save_to_file;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_save_to_file (GKeyFile *key_file, const gchar *filename, GError **error);";function g_key_file_save_to_file(key_file, filename, error) bind(c)
g;g_key_file_set_boolean;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_boolean (GKeyFile *key_file, const gchar *group_name, const gchar *key, gboolean value);";subroutine g_key_file_set_boolean(key_file, group_name, key, value) bind(c)
g;g_key_file_set_boolean_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_boolean_list (GKeyFile *key_file, const gchar *group_name, const gchar *key, gboolean list[], gsize length);";subroutine g_key_file_set_boolean_list(key_file, group_name, key, list, length) bind(c)
g;g_key_file_set_comment;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gboolean g_key_file_set_comment (GKeyFile *key_file, const gchar *group_name, const gchar *key, const gchar *comment, GError **error);";function g_key_file_set_comment(key_file, group_name, key, comment, error) bind(c)
g;g_key_file_set_double;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_double (GKeyFile *key_file, const gchar *group_name, const gchar *key, gdouble value);";subroutine g_key_file_set_double(key_file, group_name, key, value) bind(c)
g;g_key_file_set_double_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_double_list (GKeyFile *key_file, const gchar *group_name, const gchar *key, gdouble list[], gsize length);";subroutine g_key_file_set_double_list(key_file, group_name, key, list, length) bind(c)
g;g_key_file_set_int64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_int64 (GKeyFile *key_file, const gchar *group_name, const gchar *key, gint64 value);";subroutine g_key_file_set_int64(key_file, group_name, key, value) bind(c)
g;g_key_file_set_integer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_integer (GKeyFile *key_file, const gchar *group_name, const gchar *key, gint value);";subroutine g_key_file_set_integer(key_file, group_name, key, value) bind(c)
g;g_key_file_set_integer_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_integer_list (GKeyFile *key_file, const gchar *group_name, const gchar *key, gint list[], gsize length);";subroutine g_key_file_set_integer_list(key_file, group_name, key, list, length) bind(c)
g;g_key_file_set_list_separator;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_list_separator (GKeyFile *key_file, gchar separator);";subroutine g_key_file_set_list_separator(key_file, separator) bind(c)
g;g_key_file_set_locale_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_locale_string (GKeyFile *key_file, const gchar *group_name, const gchar *key, const gchar *locale, const gchar *string);";subroutine g_key_file_set_locale_string(key_file, group_name, key, locale, string) bind(c)
g;g_key_file_set_locale_string_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_locale_string_list (GKeyFile *key_file, const gchar *group_name, const gchar *key, const gchar *locale, const gchar * const list[], gsize length);";subroutine g_key_file_set_locale_string_list(key_file, group_name, key, locale, list, length) bind(c)
g;g_key_file_set_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_string (GKeyFile *key_file, const gchar *group_name, const gchar *key, const gchar *string);";subroutine g_key_file_set_string(key_file, group_name, key, string) bind(c)
g;g_key_file_set_string_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_string_list (GKeyFile *key_file, const gchar *group_name, const gchar *key, const gchar * const list[], gsize length);";subroutine g_key_file_set_string_list(key_file, group_name, key, list, length) bind(c)
g;g_key_file_set_uint64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_uint64 (GKeyFile *key_file, const gchar *group_name, const gchar *key, guint64 value);";subroutine g_key_file_set_uint64(key_file, group_name, key, value) bind(c)
g;g_key_file_set_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_set_value (GKeyFile *key_file, const gchar *group_name, const gchar *key, const gchar *value);";subroutine g_key_file_set_value(key_file, group_name, key, value) bind(c)
g;g_key_file_to_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"gchar *g_key_file_to_data (GKeyFile *key_file, gsize *length, GError **error) G_GNUC_MALLOC;";function g_key_file_to_data(key_file, length, error) bind(c)
g;g_key_file_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gkeyfile.h;"void g_key_file_unref (GKeyFile *key_file);";subroutine g_key_file_unref(key_file) bind(c)
g;g_keyfile_settings_backend_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsbackend.h;"GSettingsBackend * g_keyfile_settings_backend_new (const gchar *filename, const gchar *root_path, const gchar *root_group);";function g_keyfile_settings_backend_new(filename, root_path, root_group) bind(c)
g;g_list_alloc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_alloc (void) G_GNUC_WARN_UNUSED_RESULT;";function g_list_alloc() bind(c)
g;g_list_append;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_append (GList *list, gpointer data) G_GNUC_WARN_UNUSED_RESULT;";function g_list_append(list, data) bind(c)
g;g_list_concat;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_concat (GList *list1, GList *list2) G_GNUC_WARN_UNUSED_RESULT;";function g_list_concat(list1, list2) bind(c)
g;g_list_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_copy (GList *list) G_GNUC_WARN_UNUSED_RESULT;";function g_list_copy(list) bind(c)
g;g_list_copy_deep;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_copy_deep (GList *list, GCopyFunc func, gpointer user_data) G_GNUC_WARN_UNUSED_RESULT;";function g_list_copy_deep(list, func, user_data) bind(c)
g;g_list_delete_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_delete_link (GList *list, GList *link_) G_GNUC_WARN_UNUSED_RESULT;";function g_list_delete_link(list, link_) bind(c)
g;g_list_find;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_find (GList *list, gconstpointer data);";function g_list_find(list, data) bind(c)
g;g_list_find_custom;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_find_custom (GList *list, gconstpointer data, GCompareFunc func);";function g_list_find_custom(list, data, func) bind(c)
g;g_list_first;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_first (GList *list);";function g_list_first(list) bind(c)
g;g_list_foreach;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"void g_list_foreach (GList *list, GFunc func, gpointer user_data);";subroutine g_list_foreach(list, func, user_data) bind(c)
g;g_list_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"void g_list_free (GList *list);";subroutine g_list_free(list) bind(c)
g;g_list_free_1;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"void g_list_free_1 (GList *list);";subroutine g_list_free_1(list) bind(c)
g;g_list_free_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"void g_list_free_full (GList *list, GDestroyNotify free_func);";subroutine g_list_free_full(list, free_func) bind(c)
g;g_list_index;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"gint g_list_index (GList *list, gconstpointer data);";function g_list_index(list, data) bind(c)
g;g_list_insert;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_insert (GList *list, gpointer data, gint position) G_GNUC_WARN_UNUSED_RESULT;";function g_list_insert(list, data, position) bind(c)
g;g_list_insert_before;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_insert_before (GList *list, GList *sibling, gpointer data) G_GNUC_WARN_UNUSED_RESULT;";function g_list_insert_before(list, sibling, data) bind(c)
g;g_list_insert_before_link;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_insert_before_link (GList *list, GList *sibling, GList *link_) G_GNUC_WARN_UNUSED_RESULT;";function g_list_insert_before_link(list, sibling, link_) bind(c)
g;g_list_insert_sorted;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_insert_sorted (GList *list, gpointer data, GCompareFunc func) G_GNUC_WARN_UNUSED_RESULT;";function g_list_insert_sorted(list, data, func) bind(c)
g;g_list_insert_sorted_with_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_insert_sorted_with_data (GList *list, gpointer data, GCompareDataFunc func, gpointer user_data) G_GNUC_WARN_UNUSED_RESULT;";function g_list_insert_sorted_with_data(list, data, func, user_data) bind(c)
g;g_list_last;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_last (GList *list);";function g_list_last(list) bind(c)
g;g_list_length;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"guint g_list_length (GList *list);";function g_list_length(list) bind(c)
g;g_list_model_get_item;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/glistmodel.h;"gpointer g_list_model_get_item (GListModel *list, guint position);";function g_list_model_get_item(list, position) bind(c)
g;g_list_model_get_n_items;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/glistmodel.h;"guint g_list_model_get_n_items (GListModel *list);";function g_list_model_get_n_items(list) bind(c)
g;g_list_model_get_object;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/glistmodel.h;"GObject * g_list_model_get_object (GListModel *list, guint position);";function g_list_model_get_object(list, position) bind(c)
g;g_list_model_items_changed;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/glistmodel.h;"void g_list_model_items_changed (GListModel *list, guint position, guint removed, guint added);";subroutine g_list_model_items_changed(list, position, removed, added) bind(c)
g;g_list_nth;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_nth (GList *list, guint n);";function g_list_nth(list, n) bind(c)
g;g_list_nth_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"gpointer g_list_nth_data (GList *list, guint n);";function g_list_nth_data(list, n) bind(c)
g;g_list_nth_prev;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_nth_prev (GList *list, guint n);";function g_list_nth_prev(list, n) bind(c)
g;g_list_pop_allocator;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_list_pop_allocator (void);";subroutine g_list_pop_allocator() bind(c)
g;g_list_position;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"gint g_list_position (GList *list, GList *llink);";function g_list_position(list, llink) bind(c)
g;g_list_prepend;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_prepend (GList *list, gpointer data) G_GNUC_WARN_UNUSED_RESULT;";function g_list_prepend(list, data) bind(c)
g;g_list_push_allocator;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_list_push_allocator (GAllocator *allocator);";subroutine g_list_push_allocator(allocator) bind(c)
g;g_list_remove;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_remove (GList *list, gconstpointer data) G_GNUC_WARN_UNUSED_RESULT;";function g_list_remove(list, data) bind(c)
g;g_list_remove_all;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_remove_all (GList *list, gconstpointer data) G_GNUC_WARN_UNUSED_RESULT;";function g_list_remove_all(list, data) bind(c)
g;g_list_remove_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_remove_link (GList *list, GList *llink) G_GNUC_WARN_UNUSED_RESULT;";function g_list_remove_link(list, llink) bind(c)
g;g_list_reverse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_reverse (GList *list) G_GNUC_WARN_UNUSED_RESULT;";function g_list_reverse(list) bind(c)
g;g_list_sort;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_sort (GList *list, GCompareFunc compare_func) G_GNUC_WARN_UNUSED_RESULT;";function g_list_sort(list, compare_func) bind(c)
g;g_list_sort_with_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/glist.h;"GList* g_list_sort_with_data (GList *list, GCompareDataFunc compare_func, gpointer user_data) G_GNUC_WARN_UNUSED_RESULT;";function g_list_sort_with_data(list, compare_func, user_data) bind(c)
g;g_list_store_append;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gliststore.h;"void g_list_store_append (GListStore *store, gpointer item);";subroutine g_list_store_append(store, item) bind(c)
g;g_list_store_find;GLIB_AVAILABLE_IN_2_64;glib-auto.f90;/usr/include/glib-2.0/gio/gliststore.h;"gboolean g_list_store_find (GListStore *store, gpointer item, guint *position);";function g_list_store_find(store, item, position) bind(c)
g;g_list_store_find_with_equal_func;GLIB_AVAILABLE_IN_2_64;glib-auto.f90;/usr/include/glib-2.0/gio/gliststore.h;"gboolean g_list_store_find_with_equal_func (GListStore *store, gpointer item, GEqualFunc equal_func, guint *position);";function g_list_store_find_with_equal_func(store, item, equal_func, position) bind(c)
g;g_list_store_insert;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gliststore.h;"void g_list_store_insert (GListStore *store, guint position, gpointer item);";subroutine g_list_store_insert(store, position, item) bind(c)
g;g_list_store_insert_sorted;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gliststore.h;"guint g_list_store_insert_sorted (GListStore *store, gpointer item, GCompareDataFunc compare_func, gpointer user_data);";function g_list_store_insert_sorted(store, item, compare_func, user_data) bind(c)
g;g_list_store_remove;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gliststore.h;"void g_list_store_remove (GListStore *store, guint position);";subroutine g_list_store_remove(store, position) bind(c)
g;g_list_store_remove_all;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gliststore.h;"void g_list_store_remove_all (GListStore *store);";subroutine g_list_store_remove_all(store) bind(c)
g;g_list_store_sort;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gliststore.h;"void g_list_store_sort (GListStore *store, GCompareDataFunc compare_func, gpointer user_data);";subroutine g_list_store_sort(store, compare_func, user_data) bind(c)
g;g_list_store_splice;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gliststore.h;"void g_list_store_splice (GListStore *store, guint position, guint n_removals, gpointer *additions, guint n_additions);";subroutine g_list_store_splice(store, position, n_removals, additions, n_additions) bind(c)
g;g_listenv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/genviron.h;"gchar ** g_listenv (void);";function g_listenv() bind(c)
g;g_loadable_icon_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gloadableicon.h;"GType g_loadable_icon_get_type (void) G_GNUC_CONST;";function g_loadable_icon_get_type() bind(c)
g;g_loadable_icon_load;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gloadableicon.h;"GInputStream *g_loadable_icon_load (GLoadableIcon *icon, int size, char **type, GCancellable *cancellable, GError **error);";function g_loadable_icon_load(icon, size, type, cancellable, error) bind(c)
g;g_loadable_icon_load_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gloadableicon.h;"void g_loadable_icon_load_async (GLoadableIcon *icon, int size, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_loadable_icon_load_async(icon, size, cancellable, callback, user_data) bind(c)
g;g_loadable_icon_load_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gloadableicon.h;"GInputStream *g_loadable_icon_load_finish (GLoadableIcon *icon, GAsyncResult *res, char **type, GError **error);";function g_loadable_icon_load_finish(icon, res, type, error) bind(c)
g;g_locale_from_utf8;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gchar* g_locale_from_utf8 (const gchar *utf8string, gssize len, gsize *bytes_read, gsize *bytes_written, GError **error) G_GNUC_MALLOC;";function g_locale_from_utf8(utf8string, len, bytes_read, bytes_written, error) bind(c)
g;g_locale_to_utf8;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gchar* g_locale_to_utf8 (const gchar *opsysstring, gssize len, gsize *bytes_read, gsize *bytes_written, GError **error) G_GNUC_MALLOC;";function g_locale_to_utf8(opsysstring, len, bytes_read, bytes_written, error) bind(c)
g;g_log_default_handler;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"void g_log_default_handler (const gchar *log_domain, GLogLevelFlags log_level, const gchar *message, gpointer unused_data);";subroutine g_log_default_handler(log_domain, log_level, message, unused_data) bind(c)
g;g_log_remove_handler;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"void g_log_remove_handler (const gchar *log_domain, guint handler_id);";subroutine g_log_remove_handler(log_domain, handler_id) bind(c)
g;g_log_set_always_fatal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"GLogLevelFlags g_log_set_always_fatal (GLogLevelFlags fatal_mask);";function g_log_set_always_fatal(fatal_mask) bind(c)
g;g_log_set_default_handler;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"GLogFunc g_log_set_default_handler (GLogFunc log_func, gpointer user_data);";function g_log_set_default_handler(log_func, user_data) bind(c)
g;g_log_set_fatal_mask;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"GLogLevelFlags g_log_set_fatal_mask (const gchar *log_domain, GLogLevelFlags fatal_mask);";function g_log_set_fatal_mask(log_domain, fatal_mask) bind(c)
g;g_log_set_handler;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"guint g_log_set_handler (const gchar *log_domain, GLogLevelFlags log_levels, GLogFunc log_func, gpointer user_data);";function g_log_set_handler(log_domain, log_levels, log_func, user_data) bind(c)
g;g_log_set_handler_full;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"guint g_log_set_handler_full (const gchar *log_domain, GLogLevelFlags log_levels, GLogFunc log_func, gpointer user_data, GDestroyNotify destroy);";function g_log_set_handler_full(log_domain, log_levels, log_func, user_data, destroy) bind(c)
g;g_log_set_writer_func;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"void g_log_set_writer_func (GLogWriterFunc func, gpointer user_data, GDestroyNotify user_data_free);";subroutine g_log_set_writer_func(func, user_data, user_data_free) bind(c)
g;g_log_structured_array;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"void g_log_structured_array (GLogLevelFlags log_level, const GLogField *fields, gsize n_fields);";subroutine g_log_structured_array(log_level, fields, n_fields) bind(c)
g;g_log_variant;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"void g_log_variant (const gchar *log_domain, GLogLevelFlags log_level, GVariant *fields);";subroutine g_log_variant(log_domain, log_level, fields) bind(c)
g;g_log_writer_default;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"GLogWriterOutput g_log_writer_default (GLogLevelFlags log_level, const GLogField *fields, gsize n_fields, gpointer user_data);";function g_log_writer_default(log_level, fields, n_fields, user_data) bind(c)
g;g_log_writer_default_set_use_stderr;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"void g_log_writer_default_set_use_stderr (gboolean use_stderr);";subroutine g_log_writer_default_set_use_stderr(use_stderr) bind(c)
g;g_log_writer_default_would_drop;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"gboolean g_log_writer_default_would_drop (GLogLevelFlags log_level, const char *log_domain);";function g_log_writer_default_would_drop(log_level, log_domain) bind(c)
g;g_log_writer_format_fields;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"gchar *g_log_writer_format_fields (GLogLevelFlags log_level, const GLogField *fields, gsize n_fields, gboolean use_color);";function g_log_writer_format_fields(log_level, fields, n_fields, use_color) bind(c)
g;g_log_writer_is_journald;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"gboolean g_log_writer_is_journald (gint output_fd);";function g_log_writer_is_journald(output_fd) bind(c)
g;g_log_writer_journald;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"GLogWriterOutput g_log_writer_journald (GLogLevelFlags log_level, const GLogField *fields, gsize n_fields, gpointer user_data);";function g_log_writer_journald(log_level, fields, n_fields, user_data) bind(c)
g;g_log_writer_standard_streams;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"GLogWriterOutput g_log_writer_standard_streams (GLogLevelFlags log_level, const GLogField *fields, gsize n_fields, gpointer user_data);";function g_log_writer_standard_streams(log_level, fields, n_fields, user_data) bind(c)
g;g_log_writer_supports_color;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"gboolean g_log_writer_supports_color (gint output_fd);";function g_log_writer_supports_color(output_fd) bind(c)
g;g_logv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"void g_logv (const gchar *log_domain, GLogLevelFlags log_level, const gchar *format, va_list args) G_GNUC_PRINTF(3, 0);";subroutine g_logv(log_domain, log_level, format, args) bind(c)
g;g_lstat;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_lstat (const gchar *filename, GStatBuf *buf);";function g_lstat(filename, buf) bind(c)
g;g_main_context_acquire;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_main_context_acquire (GMainContext *context);";function g_main_context_acquire(context) bind(c)
g;g_main_context_add_poll;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_context_add_poll (GMainContext *context, GPollFD *fd, gint priority);";subroutine g_main_context_add_poll(context, fd, priority) bind(c)
g;g_main_context_check;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_main_context_check (GMainContext *context, gint max_priority, GPollFD *fds, gint n_fds);";function g_main_context_check(context, max_priority, fds, n_fds) bind(c)
g;g_main_context_default;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GMainContext *g_main_context_default (void);";function g_main_context_default() bind(c)
g;g_main_context_dispatch;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_context_dispatch (GMainContext *context);";subroutine g_main_context_dispatch(context) bind(c)
g;g_main_context_find_source_by_funcs_user_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GSource *g_main_context_find_source_by_funcs_user_data (GMainContext *context, GSourceFuncs *funcs, gpointer user_data);";function g_main_context_find_source_by_funcs_user_data(context, funcs, user_data) bind(c)
g;g_main_context_find_source_by_id;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GSource *g_main_context_find_source_by_id (GMainContext *context, guint source_id);";function g_main_context_find_source_by_id(context, source_id) bind(c)
g;g_main_context_find_source_by_user_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GSource *g_main_context_find_source_by_user_data (GMainContext *context, gpointer user_data);";function g_main_context_find_source_by_user_data(context, user_data) bind(c)
g;g_main_context_get_poll_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GPollFunc g_main_context_get_poll_func (GMainContext *context);";function g_main_context_get_poll_func(context) bind(c)
g;g_main_context_get_thread_default;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GMainContext *g_main_context_get_thread_default (void);";function g_main_context_get_thread_default() bind(c)
g;g_main_context_get_type;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_main_context_get_type (void) G_GNUC_CONST;";function g_main_context_get_type() bind(c)
g;g_main_context_invoke;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_context_invoke (GMainContext *context, GSourceFunc function, gpointer data);";subroutine g_main_context_invoke(context, function, data) bind(c)
g;g_main_context_invoke_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_context_invoke_full (GMainContext *context, gint priority, GSourceFunc function, gpointer data, GDestroyNotify notify);";subroutine g_main_context_invoke_full(context, priority, function, data, notify) bind(c)
g;g_main_context_is_owner;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_main_context_is_owner (GMainContext *context);";function g_main_context_is_owner(context) bind(c)
g;g_main_context_iteration;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_main_context_iteration (GMainContext *context, gboolean may_block);";function g_main_context_iteration(context, may_block) bind(c)
g;g_main_context_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GLIB_AVAILABLE_TYPE_IN_2_64 GMainContext *g_main_context_new (void);";function g_main_context_new() bind(c)
g;g_main_context_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_main_context_pending (GMainContext *context);";function g_main_context_pending(context) bind(c)
g;g_main_context_pop_thread_default;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_context_pop_thread_default (GMainContext *context);";subroutine g_main_context_pop_thread_default(context) bind(c)
g;g_main_context_prepare;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_main_context_prepare (GMainContext *context, gint *priority);";function g_main_context_prepare(context, priority) bind(c)
g;g_main_context_push_thread_default;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_context_push_thread_default (GMainContext *context);";subroutine g_main_context_push_thread_default(context) bind(c)
g;g_main_context_query;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gint g_main_context_query (GMainContext *context, gint max_priority, gint *timeout_, GPollFD *fds, gint n_fds);";function g_main_context_query(context, max_priority, timeout_, fds, n_fds) bind(c)
g;g_main_context_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GMainContext *g_main_context_ref (GMainContext *context);";function g_main_context_ref(context) bind(c)
g;g_main_context_ref_thread_default;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GMainContext *g_main_context_ref_thread_default (void);";function g_main_context_ref_thread_default() bind(c)
g;g_main_context_release;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_context_release (GMainContext *context);";subroutine g_main_context_release(context) bind(c)
g;g_main_context_remove_poll;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_context_remove_poll (GMainContext *context, GPollFD *fd);";subroutine g_main_context_remove_poll(context, fd) bind(c)
g;g_main_context_set_poll_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_context_set_poll_func (GMainContext *context, GPollFunc func);";subroutine g_main_context_set_poll_func(context, func) bind(c)
g;g_main_context_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_context_unref (GMainContext *context);";subroutine g_main_context_unref(context) bind(c)
g;g_main_context_wait;GLIB_DEPRECATED_IN_2_58_FOR(g_main_context_is_owner);glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_main_context_wait (GMainContext *context, GCond *cond, GMutex *mutex);";function g_main_context_wait(context, cond, mutex) bind(c)
g;g_main_context_wakeup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_context_wakeup (GMainContext *context);";subroutine g_main_context_wakeup(context) bind(c)
g;g_main_current_source;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GSource *g_main_current_source (void);";function g_main_current_source() bind(c)
g;g_main_depth;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gint g_main_depth (void);";function g_main_depth() bind(c)
g;g_main_loop_get_context;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GMainContext *g_main_loop_get_context (GMainLoop *loop);";function g_main_loop_get_context(loop) bind(c)
g;g_main_loop_get_type;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_main_loop_get_type (void) G_GNUC_CONST;";function g_main_loop_get_type() bind(c)
g;g_main_loop_is_running;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_main_loop_is_running (GMainLoop *loop);";function g_main_loop_is_running(loop) bind(c)
g;g_main_loop_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GLIB_AVAILABLE_STATIC_INLINE_IN_2_64 GLIB_AVAILABLE_STATIC_INLINE_IN_2_64 GMainLoop *g_main_loop_new (GMainContext *context, gboolean is_running);";function g_main_loop_new(context, is_running) bind(c)
g;g_main_loop_quit;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_loop_quit (GMainLoop *loop);";subroutine g_main_loop_quit(loop) bind(c)
g;g_main_loop_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GMainLoop *g_main_loop_ref (GMainLoop *loop);";function g_main_loop_ref(loop) bind(c)
g;g_main_loop_run;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_loop_run (GMainLoop *loop);";subroutine g_main_loop_run(loop) bind(c)
g;g_main_loop_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_main_loop_unref (GMainLoop *loop);";subroutine g_main_loop_unref(loop) bind(c)
g;g_malloc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gpointer g_malloc (gsize n_bytes) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE(1);";function g_malloc(n_bytes) bind(c)
g;g_malloc0;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gpointer g_malloc0 (gsize n_bytes) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE(1);";function g_malloc0(n_bytes) bind(c)
g;g_malloc0_n;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gpointer g_malloc0_n (gsize n_blocks, gsize n_block_bytes) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE2(1,2);";function g_malloc0_n(n_blocks, n_block_bytes) bind(c)
g;g_malloc_n;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gpointer g_malloc_n (gsize n_blocks, gsize n_block_bytes) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE2(1,2);";function g_malloc_n(n_blocks, n_block_bytes) bind(c)
g;g_mapped_file_free;GLIB_DEPRECATED_FOR(g_mapped_file_unref);glib-auto.f90;/usr/include/glib-2.0/glib/gmappedfile.h;"void g_mapped_file_free (GMappedFile *file);";subroutine g_mapped_file_free(file) bind(c)
g;g_mapped_file_get_bytes;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gmappedfile.h;"GBytes * g_mapped_file_get_bytes (GMappedFile *file);";function g_mapped_file_get_bytes(file) bind(c)
g;g_mapped_file_get_contents;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmappedfile.h;"gchar *g_mapped_file_get_contents (GMappedFile *file);";function g_mapped_file_get_contents(file) bind(c)
g;g_mapped_file_get_length;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmappedfile.h;"gsize g_mapped_file_get_length (GMappedFile *file);";function g_mapped_file_get_length(file) bind(c)
g;g_mapped_file_get_type;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_mapped_file_get_type (void) G_GNUC_CONST;";function g_mapped_file_get_type() bind(c)
g;g_mapped_file_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmappedfile.h;"GMappedFile *g_mapped_file_new (const gchar *filename, gboolean writable, GError **error);";function g_mapped_file_new(filename, writable, error) bind(c)
g;g_mapped_file_new_from_fd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmappedfile.h;"GMappedFile *g_mapped_file_new_from_fd (gint fd, gboolean writable, GError **error);";function g_mapped_file_new_from_fd(fd, writable, error) bind(c)
g;g_mapped_file_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmappedfile.h;"GMappedFile *g_mapped_file_ref (GMappedFile *file);";function g_mapped_file_ref(file) bind(c)
g;g_mapped_file_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmappedfile.h;"void g_mapped_file_unref (GMappedFile *file);";subroutine g_mapped_file_unref(file) bind(c)
g;g_markup_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"GQuark g_markup_error_quark (void);";function g_markup_error_quark() bind(c)
g;g_markup_escape_text;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"gchar* g_markup_escape_text (const gchar *text, gssize length);";function g_markup_escape_text(text, length) bind(c)
g;g_markup_parse_context_end_parse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"gboolean g_markup_parse_context_end_parse (GMarkupParseContext *context, GError **error);";function g_markup_parse_context_end_parse(context, error) bind(c)
g;g_markup_parse_context_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"void g_markup_parse_context_free (GMarkupParseContext *context);";subroutine g_markup_parse_context_free(context) bind(c)
g;g_markup_parse_context_get_element;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"const gchar * g_markup_parse_context_get_element (GMarkupParseContext *context);";function g_markup_parse_context_get_element(context) bind(c)
g;g_markup_parse_context_get_element_stack;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"const GSList * g_markup_parse_context_get_element_stack (GMarkupParseContext *context);";function g_markup_parse_context_get_element_stack(context) bind(c)
g;g_markup_parse_context_get_position;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"void g_markup_parse_context_get_position (GMarkupParseContext *context, gint *line_number, gint *char_number);";subroutine g_markup_parse_context_get_position(context, line_number, char_number) bind(c)
g;g_markup_parse_context_get_type;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_markup_parse_context_get_type (void) G_GNUC_CONST;";function g_markup_parse_context_get_type() bind(c)
g;g_markup_parse_context_get_user_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"gpointer g_markup_parse_context_get_user_data (GMarkupParseContext *context);";function g_markup_parse_context_get_user_data(context) bind(c)
g;g_markup_parse_context_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"GMarkupParseContext *g_markup_parse_context_new (const GMarkupParser *parser, GMarkupParseFlags flags, gpointer user_data, GDestroyNotify user_data_dnotify);";function g_markup_parse_context_new(parser, flags, user_data, user_data_dnotify) bind(c)
g;g_markup_parse_context_parse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"gboolean g_markup_parse_context_parse (GMarkupParseContext *context, const gchar *text, gssize text_len, GError **error);";function g_markup_parse_context_parse(context, text, text_len, error) bind(c)
g;g_markup_parse_context_pop;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"gpointer g_markup_parse_context_pop (GMarkupParseContext *context);";function g_markup_parse_context_pop(context) bind(c)
g;g_markup_parse_context_push;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"void g_markup_parse_context_push (GMarkupParseContext *context, const GMarkupParser *parser, gpointer user_data);";subroutine g_markup_parse_context_push(context, parser, user_data) bind(c)
g;g_markup_parse_context_ref;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"GMarkupParseContext *g_markup_parse_context_ref (GMarkupParseContext *context);";function g_markup_parse_context_ref(context) bind(c)
g;g_markup_parse_context_unref;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"void g_markup_parse_context_unref (GMarkupParseContext *context);";subroutine g_markup_parse_context_unref(context) bind(c)
g;g_markup_vprintf_escaped;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmarkup.h;"gchar *g_markup_vprintf_escaped (const char *format, va_list args) G_GNUC_PRINTF(1, 0);";function g_markup_vprintf_escaped(format, args) bind(c)
g;g_match_info_expand_references;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gchar *g_match_info_expand_references(const GMatchInfo *match_info, const gchar *string_to_expand, GError **error);";function g_match_info_expand_references(match_info, string_to_expand, error) bind(c)
g;g_match_info_fetch;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gchar *g_match_info_fetch (const GMatchInfo *match_info, gint match_num);";function g_match_info_fetch(match_info, match_num) bind(c)
g;g_match_info_fetch_all;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gchar **g_match_info_fetch_all (const GMatchInfo *match_info);";function g_match_info_fetch_all(match_info) bind(c)
g;g_match_info_fetch_named;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gchar *g_match_info_fetch_named (const GMatchInfo *match_info, const gchar *name);";function g_match_info_fetch_named(match_info, name) bind(c)
g;g_match_info_fetch_named_pos;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gboolean g_match_info_fetch_named_pos (const GMatchInfo *match_info, const gchar *name, gint *start_pos, gint *end_pos);";function g_match_info_fetch_named_pos(match_info, name, start_pos, end_pos) bind(c)
g;g_match_info_fetch_pos;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gboolean g_match_info_fetch_pos (const GMatchInfo *match_info, gint match_num, gint *start_pos, gint *end_pos);";function g_match_info_fetch_pos(match_info, match_num, start_pos, end_pos) bind(c)
g;g_match_info_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"void g_match_info_free (GMatchInfo *match_info);";subroutine g_match_info_free(match_info) bind(c)
g;g_match_info_get_match_count;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gint g_match_info_get_match_count (const GMatchInfo *match_info);";function g_match_info_get_match_count(match_info) bind(c)
g;g_match_info_get_regex;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"GRegex *g_match_info_get_regex (const GMatchInfo *match_info);";function g_match_info_get_regex(match_info) bind(c)
g;g_match_info_get_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"const gchar *g_match_info_get_string (const GMatchInfo *match_info);";function g_match_info_get_string(match_info) bind(c)
g;g_match_info_get_type;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_match_info_get_type (void) G_GNUC_CONST;";function g_match_info_get_type() bind(c)
g;g_match_info_is_partial_match;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gboolean g_match_info_is_partial_match (const GMatchInfo *match_info);";function g_match_info_is_partial_match(match_info) bind(c)
g;g_match_info_matches;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gboolean g_match_info_matches (const GMatchInfo *match_info);";function g_match_info_matches(match_info) bind(c)
g;g_match_info_next;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gboolean g_match_info_next (GMatchInfo *match_info, GError **error);";function g_match_info_next(match_info, error) bind(c)
g;g_match_info_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"GMatchInfo *g_match_info_ref (GMatchInfo *match_info);";function g_match_info_ref(match_info) bind(c)
g;g_match_info_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"void g_match_info_unref (GMatchInfo *match_info);";subroutine g_match_info_unref(match_info) bind(c)
g;g_mem_chunk_alloc;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"gpointer g_mem_chunk_alloc (GMemChunk *mem_chunk);";function g_mem_chunk_alloc(mem_chunk) bind(c)
g;g_mem_chunk_alloc0;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"gpointer g_mem_chunk_alloc0 (GMemChunk *mem_chunk);";function g_mem_chunk_alloc0(mem_chunk) bind(c)
g;g_mem_chunk_clean;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_mem_chunk_clean (GMemChunk *mem_chunk);";subroutine g_mem_chunk_clean(mem_chunk) bind(c)
g;g_mem_chunk_destroy;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_mem_chunk_destroy (GMemChunk *mem_chunk);";subroutine g_mem_chunk_destroy(mem_chunk) bind(c)
g;g_mem_chunk_free;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_mem_chunk_free (GMemChunk *mem_chunk, gpointer mem);";subroutine g_mem_chunk_free(mem_chunk, mem) bind(c)
g;g_mem_chunk_info;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_mem_chunk_info (void);";subroutine g_mem_chunk_info() bind(c)
g;g_mem_chunk_new;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"GMemChunk * g_mem_chunk_new (const gchar *name, gint atom_size, gsize area_size, gint type);";function g_mem_chunk_new(name, atom_size, area_size, type) bind(c)
g;g_mem_chunk_print;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_mem_chunk_print (GMemChunk *mem_chunk);";subroutine g_mem_chunk_print(mem_chunk) bind(c)
g;g_mem_chunk_reset;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_mem_chunk_reset (GMemChunk *mem_chunk);";subroutine g_mem_chunk_reset(mem_chunk) bind(c)
g;g_mem_is_system_malloc;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gboolean g_mem_is_system_malloc (void);";function g_mem_is_system_malloc() bind(c)
g;g_mem_profile;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"void g_mem_profile (void);";subroutine g_mem_profile() bind(c)
g;g_mem_set_vtable;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"GLIB_AVAILABLE_STATIC_INLINE_IN_2_44 void g_mem_set_vtable (GMemVTable *vtable);";subroutine g_mem_set_vtable(vtable) bind(c)
g;g_memdup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gpointer g_memdup (gconstpointer mem, guint byte_size) G_GNUC_ALLOC_SIZE(2);";function g_memdup(mem, byte_size) bind(c)
g;g_memory_input_stream_add_bytes;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryinputstream.h;"void g_memory_input_stream_add_bytes (GMemoryInputStream *stream, GBytes *bytes);";subroutine g_memory_input_stream_add_bytes(stream, bytes) bind(c)
g;g_memory_input_stream_add_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryinputstream.h;"void g_memory_input_stream_add_data (GMemoryInputStream *stream, const void *data, gssize len, GDestroyNotify destroy);";subroutine g_memory_input_stream_add_data(stream, data, len, destroy) bind(c)
g;g_memory_input_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryinputstream.h;"GType g_memory_input_stream_get_type (void) G_GNUC_CONST;";function g_memory_input_stream_get_type() bind(c)
g;g_memory_input_stream_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryinputstream.h;"GInputStream * g_memory_input_stream_new (void);";function g_memory_input_stream_new() bind(c)
g;g_memory_input_stream_new_from_bytes;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryinputstream.h;"GInputStream * g_memory_input_stream_new_from_bytes (GBytes *bytes);";function g_memory_input_stream_new_from_bytes(bytes) bind(c)
g;g_memory_input_stream_new_from_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryinputstream.h;"GInputStream * g_memory_input_stream_new_from_data (const void *data, gssize len, GDestroyNotify destroy);";function g_memory_input_stream_new_from_data(data, len, destroy) bind(c)
g;g_memory_output_stream_get_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryoutputstream.h;"gpointer g_memory_output_stream_get_data (GMemoryOutputStream *ostream);";function g_memory_output_stream_get_data(ostream) bind(c)
g;g_memory_output_stream_get_data_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryoutputstream.h;"gsize g_memory_output_stream_get_data_size (GMemoryOutputStream *ostream);";function g_memory_output_stream_get_data_size(ostream) bind(c)
g;g_memory_output_stream_get_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryoutputstream.h;"gsize g_memory_output_stream_get_size (GMemoryOutputStream *ostream);";function g_memory_output_stream_get_size(ostream) bind(c)
g;g_memory_output_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryoutputstream.h;"GType g_memory_output_stream_get_type (void) G_GNUC_CONST;";function g_memory_output_stream_get_type() bind(c)
g;g_memory_output_stream_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryoutputstream.h;"GOutputStream *g_memory_output_stream_new (gpointer data, gsize size, GReallocFunc realloc_function, GDestroyNotify destroy_function);";function g_memory_output_stream_new(data, size, realloc_function, destroy_function) bind(c)
g;g_memory_output_stream_new_resizable;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryoutputstream.h;"GOutputStream *g_memory_output_stream_new_resizable (void);";function g_memory_output_stream_new_resizable() bind(c)
g;g_memory_output_stream_steal_as_bytes;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryoutputstream.h;"GBytes * g_memory_output_stream_steal_as_bytes (GMemoryOutputStream *ostream);";function g_memory_output_stream_steal_as_bytes(ostream) bind(c)
g;g_memory_output_stream_steal_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmemoryoutputstream.h;"gpointer g_memory_output_stream_steal_data (GMemoryOutputStream *ostream);";function g_memory_output_stream_steal_data(ostream) bind(c)
g;g_memory_settings_backend_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsbackend.h;"GSettingsBackend * g_memory_settings_backend_new (void);";function g_memory_settings_backend_new() bind(c)
g;g_menu_append;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_append (GMenu *menu, const gchar *label, const gchar *detailed_action);";subroutine g_menu_append(menu, label, detailed_action) bind(c)
g;g_menu_append_item;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_append_item (GMenu *menu, GMenuItem *item);";subroutine g_menu_append_item(menu, item) bind(c)
g;g_menu_append_section;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_append_section (GMenu *menu, const gchar *label, GMenuModel *section);";subroutine g_menu_append_section(menu, label, section) bind(c)
g;g_menu_append_submenu;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_append_submenu (GMenu *menu, const gchar *label, GMenuModel *submenu);";subroutine g_menu_append_submenu(menu, label, submenu) bind(c)
g;g_menu_attribute_iter_get_name;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"const gchar * g_menu_attribute_iter_get_name (GMenuAttributeIter *iter);";function g_menu_attribute_iter_get_name(iter) bind(c)
g;g_menu_attribute_iter_get_next;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"gboolean g_menu_attribute_iter_get_next (GMenuAttributeIter *iter, const gchar **out_name, GVariant **value);";function g_menu_attribute_iter_get_next(iter, out_name, value) bind(c)
g;g_menu_attribute_iter_get_type;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"GType g_menu_attribute_iter_get_type (void) G_GNUC_CONST;";function g_menu_attribute_iter_get_type() bind(c)
g;g_menu_attribute_iter_get_value;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"GVariant * g_menu_attribute_iter_get_value (GMenuAttributeIter *iter);";function g_menu_attribute_iter_get_value(iter) bind(c)
g;g_menu_attribute_iter_next;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"gboolean g_menu_attribute_iter_next (GMenuAttributeIter *iter);";function g_menu_attribute_iter_next(iter) bind(c)
g;g_menu_freeze;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_freeze (GMenu *menu);";subroutine g_menu_freeze(menu) bind(c)
g;g_menu_get_type;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"GType g_menu_get_type (void) G_GNUC_CONST;";function g_menu_get_type() bind(c)
g;g_menu_insert;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_insert (GMenu *menu, gint position, const gchar *label, const gchar *detailed_action);";subroutine g_menu_insert(menu, position, label, detailed_action) bind(c)
g;g_menu_insert_item;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_insert_item (GMenu *menu, gint position, GMenuItem *item);";subroutine g_menu_insert_item(menu, position, item) bind(c)
g;g_menu_insert_section;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_insert_section (GMenu *menu, gint position, const gchar *label, GMenuModel *section);";subroutine g_menu_insert_section(menu, position, label, section) bind(c)
g;g_menu_insert_submenu;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_insert_submenu (GMenu *menu, gint position, const gchar *label, GMenuModel *submenu);";subroutine g_menu_insert_submenu(menu, position, label, submenu) bind(c)
g;g_menu_item_get_attribute_value;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"GVariant * g_menu_item_get_attribute_value (GMenuItem *menu_item, const gchar *attribute, const GVariantType *expected_type);";function g_menu_item_get_attribute_value(menu_item, attribute, expected_type) bind(c)
g;g_menu_item_get_link;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"GMenuModel *g_menu_item_get_link (GMenuItem *menu_item, const gchar *link);";function g_menu_item_get_link(menu_item, link) bind(c)
g;g_menu_item_get_type;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"GType g_menu_item_get_type (void) G_GNUC_CONST;";function g_menu_item_get_type() bind(c)
g;g_menu_item_new;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"GMenuItem * g_menu_item_new (const gchar *label, const gchar *detailed_action);";function g_menu_item_new(label, detailed_action) bind(c)
g;g_menu_item_new_from_model;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"GMenuItem * g_menu_item_new_from_model (GMenuModel *model, gint item_index);";function g_menu_item_new_from_model(model, item_index) bind(c)
g;g_menu_item_new_section;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"GMenuItem * g_menu_item_new_section (const gchar *label, GMenuModel *section);";function g_menu_item_new_section(label, section) bind(c)
g;g_menu_item_new_submenu;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"GMenuItem * g_menu_item_new_submenu (const gchar *label, GMenuModel *submenu);";function g_menu_item_new_submenu(label, submenu) bind(c)
g;g_menu_item_set_action_and_target_value;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_item_set_action_and_target_value (GMenuItem *menu_item, const gchar *action, GVariant *target_value);";subroutine g_menu_item_set_action_and_target_value(menu_item, action, target_value) bind(c)
g;g_menu_item_set_attribute_value;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_item_set_attribute_value (GMenuItem *menu_item, const gchar *attribute, GVariant *value);";subroutine g_menu_item_set_attribute_value(menu_item, attribute, value) bind(c)
g;g_menu_item_set_detailed_action;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_item_set_detailed_action (GMenuItem *menu_item, const gchar *detailed_action);";subroutine g_menu_item_set_detailed_action(menu_item, detailed_action) bind(c)
g;g_menu_item_set_icon;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_item_set_icon (GMenuItem *menu_item, GIcon *icon);";subroutine g_menu_item_set_icon(menu_item, icon) bind(c)
g;g_menu_item_set_label;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_item_set_label (GMenuItem *menu_item, const gchar *label);";subroutine g_menu_item_set_label(menu_item, label) bind(c)
g;g_menu_item_set_link;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_item_set_link (GMenuItem *menu_item, const gchar *link, GMenuModel *model);";subroutine g_menu_item_set_link(menu_item, link, model) bind(c)
g;g_menu_item_set_section;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_item_set_section (GMenuItem *menu_item, GMenuModel *section);";subroutine g_menu_item_set_section(menu_item, section) bind(c)
g;g_menu_item_set_submenu;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_item_set_submenu (GMenuItem *menu_item, GMenuModel *submenu);";subroutine g_menu_item_set_submenu(menu_item, submenu) bind(c)
g;g_menu_link_iter_get_name;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"const gchar * g_menu_link_iter_get_name (GMenuLinkIter *iter);";function g_menu_link_iter_get_name(iter) bind(c)
g;g_menu_link_iter_get_next;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"gboolean g_menu_link_iter_get_next (GMenuLinkIter *iter, const gchar **out_link, GMenuModel **value);";function g_menu_link_iter_get_next(iter, out_link, value) bind(c)
g;g_menu_link_iter_get_type;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"GType g_menu_link_iter_get_type (void) G_GNUC_CONST;";function g_menu_link_iter_get_type() bind(c)
g;g_menu_link_iter_get_value;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"GMenuModel * g_menu_link_iter_get_value (GMenuLinkIter *iter);";function g_menu_link_iter_get_value(iter) bind(c)
g;g_menu_link_iter_next;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"gboolean g_menu_link_iter_next (GMenuLinkIter *iter);";function g_menu_link_iter_next(iter) bind(c)
g;g_menu_model_get_item_attribute_value;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"GVariant * g_menu_model_get_item_attribute_value (GMenuModel *model, gint item_index, const gchar *attribute, const GVariantType *expected_type);";function g_menu_model_get_item_attribute_value(model, item_index, attribute, expected_type) bind(c)
g;g_menu_model_get_item_link;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"GMenuModel * g_menu_model_get_item_link (GMenuModel *model, gint item_index, const gchar *link);";function g_menu_model_get_item_link(model, item_index, link) bind(c)
g;g_menu_model_get_n_items;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"gint g_menu_model_get_n_items (GMenuModel *model);";function g_menu_model_get_n_items(model) bind(c)
g;g_menu_model_get_type;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"GType g_menu_model_get_type (void) G_GNUC_CONST;";function g_menu_model_get_type() bind(c)
g;g_menu_model_is_mutable;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"gboolean g_menu_model_is_mutable (GMenuModel *model);";function g_menu_model_is_mutable(model) bind(c)
g;g_menu_model_items_changed;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"void g_menu_model_items_changed (GMenuModel *model, gint position, gint removed, gint added);";subroutine g_menu_model_items_changed(model, position, removed, added) bind(c)
g;g_menu_model_iterate_item_attributes;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"GMenuAttributeIter * g_menu_model_iterate_item_attributes (GMenuModel *model, gint item_index);";function g_menu_model_iterate_item_attributes(model, item_index) bind(c)
g;g_menu_model_iterate_item_links;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenumodel.h;"GMenuLinkIter * g_menu_model_iterate_item_links (GMenuModel *model, gint item_index);";function g_menu_model_iterate_item_links(model, item_index) bind(c)
g;g_menu_new;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"GMenu * g_menu_new (void);";function g_menu_new() bind(c)
g;g_menu_prepend;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_prepend (GMenu *menu, const gchar *label, const gchar *detailed_action);";subroutine g_menu_prepend(menu, label, detailed_action) bind(c)
g;g_menu_prepend_item;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_prepend_item (GMenu *menu, GMenuItem *item);";subroutine g_menu_prepend_item(menu, item) bind(c)
g;g_menu_prepend_section;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_prepend_section (GMenu *menu, const gchar *label, GMenuModel *section);";subroutine g_menu_prepend_section(menu, label, section) bind(c)
g;g_menu_prepend_submenu;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_prepend_submenu (GMenu *menu, const gchar *label, GMenuModel *submenu);";subroutine g_menu_prepend_submenu(menu, label, submenu) bind(c)
g;g_menu_remove;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_remove (GMenu *menu, gint position);";subroutine g_menu_remove(menu, position) bind(c)
g;g_menu_remove_all;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gmenu.h;"void g_menu_remove_all (GMenu *menu);";subroutine g_menu_remove_all(menu) bind(c)
g;g_mkdir;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_mkdir (const gchar *filename, int mode);";function g_mkdir(filename, mode) bind(c)
g;g_mkdir_with_parents;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gint g_mkdir_with_parents (const gchar *pathname, gint mode);";function g_mkdir_with_parents(pathname, mode) bind(c)
g;g_mkdtemp;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gchar *g_mkdtemp (gchar *tmpl);";function g_mkdtemp(tmpl) bind(c)
g;g_mkdtemp_full;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gchar *g_mkdtemp_full (gchar *tmpl, gint mode);";function g_mkdtemp_full(tmpl, mode) bind(c)
g;g_mkstemp;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gint g_mkstemp (gchar *tmpl);";function g_mkstemp(tmpl) bind(c)
g;g_mkstemp_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gint g_mkstemp_full (gchar *tmpl, gint flags, gint mode);";function g_mkstemp_full(tmpl, flags, mode) bind(c)
g;g_module_build_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gmodule.h;"gchar* g_module_build_path (const gchar *directory, const gchar *module_name);";function g_module_build_path(directory, module_name) bind(c)
g;g_module_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gmodule.h;"gboolean g_module_close (GModule *module);";function g_module_close(module) bind(c)
g;g_module_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gmodule.h;"const gchar * g_module_error (void);";function g_module_error() bind(c)
g;g_module_make_resident;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gmodule.h;"void g_module_make_resident (GModule *module);";subroutine g_module_make_resident(module) bind(c)
g;g_module_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gmodule.h;"const gchar * g_module_name (GModule *module);";function g_module_name(module) bind(c)
g;g_module_open;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gmodule.h;"GModule* g_module_open (const gchar *file_name, GModuleFlags flags);";function g_module_open(file_name, flags) bind(c)
g;g_module_supported;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gmodule.h;"gboolean g_module_supported (void) G_GNUC_CONST;";function g_module_supported() bind(c)
g;g_module_symbol;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gmodule.h;"gboolean g_module_symbol (GModule *module, const gchar *symbol_name, gpointer *symbol);";function g_module_symbol(module, symbol_name, symbol) bind(c)
g;g_mount_can_eject;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"gboolean g_mount_can_eject (GMount *mount);";function g_mount_can_eject(mount) bind(c)
g;g_mount_can_unmount;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"gboolean g_mount_can_unmount (GMount *mount);";function g_mount_can_unmount(mount) bind(c)
g;g_mount_eject;GLIB_DEPRECATED_FOR(g_mount_eject_with_operation);glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"void g_mount_eject (GMount *mount, GMountUnmountFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_mount_eject(mount, flags, cancellable, callback, user_data) bind(c)
g;g_mount_eject_finish;GLIB_DEPRECATED_FOR(g_mount_eject_with_operation_finish);glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"gboolean g_mount_eject_finish (GMount *mount, GAsyncResult *result, GError **error);";function g_mount_eject_finish(mount, result, error) bind(c)
g;g_mount_eject_with_operation;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"void g_mount_eject_with_operation (GMount *mount, GMountUnmountFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_mount_eject_with_operation(mount, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_mount_eject_with_operation_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"gboolean g_mount_eject_with_operation_finish (GMount *mount, GAsyncResult *result, GError **error);";function g_mount_eject_with_operation_finish(mount, result, error) bind(c)
g;g_mount_get_default_location;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"GFile * g_mount_get_default_location (GMount *mount);";function g_mount_get_default_location(mount) bind(c)
g;g_mount_get_drive;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"GDrive * g_mount_get_drive (GMount *mount);";function g_mount_get_drive(mount) bind(c)
g;g_mount_get_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"GIcon * g_mount_get_icon (GMount *mount);";function g_mount_get_icon(mount) bind(c)
g;g_mount_get_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"char * g_mount_get_name (GMount *mount);";function g_mount_get_name(mount) bind(c)
g;g_mount_get_root;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"GFile * g_mount_get_root (GMount *mount);";function g_mount_get_root(mount) bind(c)
g;g_mount_get_sort_key;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"const gchar *g_mount_get_sort_key (GMount *mount);";function g_mount_get_sort_key(mount) bind(c)
g;g_mount_get_symbolic_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"GIcon * g_mount_get_symbolic_icon (GMount *mount);";function g_mount_get_symbolic_icon(mount) bind(c)
g;g_mount_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"GType g_mount_get_type (void) G_GNUC_CONST;";function g_mount_get_type() bind(c)
g;g_mount_get_uuid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"char * g_mount_get_uuid (GMount *mount);";function g_mount_get_uuid(mount) bind(c)
g;g_mount_get_volume;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"GVolume * g_mount_get_volume (GMount *mount);";function g_mount_get_volume(mount) bind(c)
g;g_mount_guess_content_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"void g_mount_guess_content_type (GMount *mount, gboolean force_rescan, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_mount_guess_content_type(mount, force_rescan, cancellable, callback, user_data) bind(c)
g;g_mount_guess_content_type_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"gchar ** g_mount_guess_content_type_finish (GMount *mount, GAsyncResult *result, GError **error);";function g_mount_guess_content_type_finish(mount, result, error) bind(c)
g;g_mount_guess_content_type_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"gchar ** g_mount_guess_content_type_sync (GMount *mount, gboolean force_rescan, GCancellable *cancellable, GError **error);";function g_mount_guess_content_type_sync(mount, force_rescan, cancellable, error) bind(c)
g;g_mount_is_shadowed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"gboolean g_mount_is_shadowed (GMount *mount);";function g_mount_is_shadowed(mount) bind(c)
g;g_mount_operation_get_anonymous;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"gboolean g_mount_operation_get_anonymous (GMountOperation *op);";function g_mount_operation_get_anonymous(op) bind(c)
g;g_mount_operation_get_choice;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"int g_mount_operation_get_choice (GMountOperation *op);";function g_mount_operation_get_choice(op) bind(c)
g;g_mount_operation_get_domain;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"const char * g_mount_operation_get_domain (GMountOperation *op);";function g_mount_operation_get_domain(op) bind(c)
g;g_mount_operation_get_is_tcrypt_hidden_volume;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"gboolean g_mount_operation_get_is_tcrypt_hidden_volume (GMountOperation *op);";function g_mount_operation_get_is_tcrypt_hidden_volume(op) bind(c)
g;g_mount_operation_get_is_tcrypt_system_volume;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"gboolean g_mount_operation_get_is_tcrypt_system_volume (GMountOperation *op);";function g_mount_operation_get_is_tcrypt_system_volume(op) bind(c)
g;g_mount_operation_get_password;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"const char * g_mount_operation_get_password (GMountOperation *op);";function g_mount_operation_get_password(op) bind(c)
g;g_mount_operation_get_password_save;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"GPasswordSave g_mount_operation_get_password_save (GMountOperation *op);";function g_mount_operation_get_password_save(op) bind(c)
g;g_mount_operation_get_pim;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"guint g_mount_operation_get_pim (GMountOperation *op);";function g_mount_operation_get_pim(op) bind(c)
g;g_mount_operation_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"GType g_mount_operation_get_type (void) G_GNUC_CONST;";function g_mount_operation_get_type() bind(c)
g;g_mount_operation_get_username;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"const char * g_mount_operation_get_username (GMountOperation *op);";function g_mount_operation_get_username(op) bind(c)
g;g_mount_operation_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"GMountOperation * g_mount_operation_new (void);";function g_mount_operation_new() bind(c)
g;g_mount_operation_reply;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"void g_mount_operation_reply (GMountOperation *op, GMountOperationResult result);";subroutine g_mount_operation_reply(op, result) bind(c)
g;g_mount_operation_set_anonymous;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"void g_mount_operation_set_anonymous (GMountOperation *op, gboolean anonymous);";subroutine g_mount_operation_set_anonymous(op, anonymous) bind(c)
g;g_mount_operation_set_choice;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"void g_mount_operation_set_choice (GMountOperation *op, int choice);";subroutine g_mount_operation_set_choice(op, choice) bind(c)
g;g_mount_operation_set_domain;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"void g_mount_operation_set_domain (GMountOperation *op, const char *domain);";subroutine g_mount_operation_set_domain(op, domain) bind(c)
g;g_mount_operation_set_is_tcrypt_hidden_volume;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"void g_mount_operation_set_is_tcrypt_hidden_volume (GMountOperation *op, gboolean hidden_volume);";subroutine g_mount_operation_set_is_tcrypt_hidden_volume(op, hidden_volume) bind(c)
g;g_mount_operation_set_is_tcrypt_system_volume;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"void g_mount_operation_set_is_tcrypt_system_volume (GMountOperation *op, gboolean system_volume);";subroutine g_mount_operation_set_is_tcrypt_system_volume(op, system_volume) bind(c)
g;g_mount_operation_set_password;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"void g_mount_operation_set_password (GMountOperation *op, const char *password);";subroutine g_mount_operation_set_password(op, password) bind(c)
g;g_mount_operation_set_password_save;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"void g_mount_operation_set_password_save (GMountOperation *op, GPasswordSave save);";subroutine g_mount_operation_set_password_save(op, save) bind(c)
g;g_mount_operation_set_pim;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"void g_mount_operation_set_pim (GMountOperation *op, guint pim);";subroutine g_mount_operation_set_pim(op, pim) bind(c)
g;g_mount_operation_set_username;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmountoperation.h;"void g_mount_operation_set_username (GMountOperation *op, const char *username);";subroutine g_mount_operation_set_username(op, username) bind(c)
g;g_mount_remount;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"void g_mount_remount (GMount *mount, GMountMountFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_mount_remount(mount, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_mount_remount_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"gboolean g_mount_remount_finish (GMount *mount, GAsyncResult *result, GError **error);";function g_mount_remount_finish(mount, result, error) bind(c)
g;g_mount_shadow;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"void g_mount_shadow (GMount *mount);";subroutine g_mount_shadow(mount) bind(c)
g;g_mount_unmount;GLIB_DEPRECATED_FOR(g_mount_unmount_with_operation);glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"void g_mount_unmount (GMount *mount, GMountUnmountFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_mount_unmount(mount, flags, cancellable, callback, user_data) bind(c)
g;g_mount_unmount_finish;GLIB_DEPRECATED_FOR(g_mount_unmount_with_operation_finish);glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"gboolean g_mount_unmount_finish (GMount *mount, GAsyncResult *result, GError **error);";function g_mount_unmount_finish(mount, result, error) bind(c)
g;g_mount_unmount_with_operation;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"void g_mount_unmount_with_operation (GMount *mount, GMountUnmountFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_mount_unmount_with_operation(mount, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_mount_unmount_with_operation_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"gboolean g_mount_unmount_with_operation_finish (GMount *mount, GAsyncResult *result, GError **error);";function g_mount_unmount_with_operation_finish(mount, result, error) bind(c)
g;g_mount_unshadow;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gmount.h;"void g_mount_unshadow (GMount *mount);";subroutine g_mount_unshadow(mount) bind(c)
g;g_mutex_clear;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_mutex_clear (GMutex *mutex);";subroutine g_mutex_clear(mutex) bind(c)
g;g_mutex_free;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_mutex_free (GMutex *mutex);";subroutine g_mutex_free(mutex) bind(c)
g;g_mutex_init;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_mutex_init (GMutex *mutex);";subroutine g_mutex_init(mutex) bind(c)
g;g_mutex_lock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_mutex_lock (GMutex *mutex);";subroutine g_mutex_lock(mutex) bind(c)
g;g_mutex_new;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"GMutex * g_mutex_new (void);";function g_mutex_new() bind(c)
g;g_mutex_trylock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"gboolean g_mutex_trylock (GMutex *mutex);";function g_mutex_trylock(mutex) bind(c)
g;g_mutex_unlock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_mutex_unlock (GMutex *mutex);";subroutine g_mutex_unlock(mutex) bind(c)
g;g_native_socket_address_get_type;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gnativesocketaddress.h;"GType g_native_socket_address_get_type (void) G_GNUC_CONST;";function g_native_socket_address_get_type() bind(c)
g;g_native_socket_address_new;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gnativesocketaddress.h;"GSocketAddress *g_native_socket_address_new (gpointer native, gsize len);";function g_native_socket_address_new(native, len) bind(c)
g;g_native_volume_monitor_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnativevolumemonitor.h;"GType g_native_volume_monitor_get_type (void) G_GNUC_CONST;";function g_native_volume_monitor_get_type() bind(c)
g;g_network_address_get_hostname;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkaddress.h;"const gchar *g_network_address_get_hostname (GNetworkAddress *addr);";function g_network_address_get_hostname(addr) bind(c)
g;g_network_address_get_port;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkaddress.h;"guint16 g_network_address_get_port (GNetworkAddress *addr);";function g_network_address_get_port(addr) bind(c)
g;g_network_address_get_scheme;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkaddress.h;"const gchar *g_network_address_get_scheme (GNetworkAddress *addr);";function g_network_address_get_scheme(addr) bind(c)
g;g_network_address_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkaddress.h;"GType g_network_address_get_type (void) G_GNUC_CONST;";function g_network_address_get_type() bind(c)
g;g_network_address_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkaddress.h;"GSocketConnectable *g_network_address_new (const gchar *hostname, guint16 port);";function g_network_address_new(hostname, port) bind(c)
g;g_network_address_new_loopback;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkaddress.h;"GSocketConnectable *g_network_address_new_loopback (guint16 port);";function g_network_address_new_loopback(port) bind(c)
g;g_network_address_parse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkaddress.h;"GSocketConnectable *g_network_address_parse (const gchar *host_and_port, guint16 default_port, GError **error);";function g_network_address_parse(host_and_port, default_port, error) bind(c)
g;g_network_address_parse_uri;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkaddress.h;"GSocketConnectable *g_network_address_parse_uri (const gchar *uri, guint16 default_port, GError **error);";function g_network_address_parse_uri(uri, default_port, error) bind(c)
g;g_network_monitor_can_reach;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkmonitor.h;"gboolean g_network_monitor_can_reach (GNetworkMonitor *monitor, GSocketConnectable *connectable, GCancellable *cancellable, GError **error);";function g_network_monitor_can_reach(monitor, connectable, cancellable, error) bind(c)
g;g_network_monitor_can_reach_async;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkmonitor.h;"void g_network_monitor_can_reach_async (GNetworkMonitor *monitor, GSocketConnectable *connectable, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_network_monitor_can_reach_async(monitor, connectable, cancellable, callback, user_data) bind(c)
g;g_network_monitor_can_reach_finish;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkmonitor.h;"gboolean g_network_monitor_can_reach_finish (GNetworkMonitor *monitor, GAsyncResult *result, GError **error);";function g_network_monitor_can_reach_finish(monitor, result, error) bind(c)
g;g_network_monitor_get_connectivity;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkmonitor.h;"GNetworkConnectivity g_network_monitor_get_connectivity (GNetworkMonitor *monitor);";function g_network_monitor_get_connectivity(monitor) bind(c)
g;g_network_monitor_get_default;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkmonitor.h;"GNetworkMonitor *g_network_monitor_get_default (void);";function g_network_monitor_get_default() bind(c)
g;g_network_monitor_get_network_available;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkmonitor.h;"gboolean g_network_monitor_get_network_available (GNetworkMonitor *monitor);";function g_network_monitor_get_network_available(monitor) bind(c)
g;g_network_monitor_get_network_metered;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkmonitor.h;"gboolean g_network_monitor_get_network_metered (GNetworkMonitor *monitor);";function g_network_monitor_get_network_metered(monitor) bind(c)
g;g_network_monitor_get_type;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkmonitor.h;"GType g_network_monitor_get_type (void) G_GNUC_CONST;";function g_network_monitor_get_type() bind(c)
g;g_network_service_get_domain;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkservice.h;"const gchar *g_network_service_get_domain (GNetworkService *srv);";function g_network_service_get_domain(srv) bind(c)
g;g_network_service_get_protocol;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkservice.h;"const gchar *g_network_service_get_protocol (GNetworkService *srv);";function g_network_service_get_protocol(srv) bind(c)
g;g_network_service_get_scheme;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkservice.h;"const gchar *g_network_service_get_scheme (GNetworkService *srv);";function g_network_service_get_scheme(srv) bind(c)
g;g_network_service_get_service;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkservice.h;"const gchar *g_network_service_get_service (GNetworkService *srv);";function g_network_service_get_service(srv) bind(c)
g;g_network_service_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkservice.h;"GType g_network_service_get_type (void) G_GNUC_CONST;";function g_network_service_get_type() bind(c)
g;g_network_service_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkservice.h;"GSocketConnectable *g_network_service_new (const gchar *service, const gchar *protocol, const gchar *domain);";function g_network_service_new(service, protocol, domain) bind(c)
g;g_network_service_set_scheme;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworkservice.h;"void g_network_service_set_scheme (GNetworkService *srv, const gchar *scheme);";subroutine g_network_service_set_scheme(srv, scheme) bind(c)
g;g_networking_init;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gnetworking.h;"void g_networking_init (void);";subroutine g_networking_init() bind(c)
g;g_node_child_index;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"gint g_node_child_index (GNode *node, gpointer data);";function g_node_child_index(node, data) bind(c)
g;g_node_child_position;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"gint g_node_child_position (GNode *node, GNode *child);";function g_node_child_position(node, child) bind(c)
g;g_node_children_foreach;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"void g_node_children_foreach (GNode *node, GTraverseFlags flags, GNodeForeachFunc func, gpointer data);";subroutine g_node_children_foreach(node, flags, func, data) bind(c)
g;g_node_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_copy (GNode *node);";function g_node_copy(node) bind(c)
g;g_node_copy_deep;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_copy_deep (GNode *node, GCopyFunc copy_func, gpointer data);";function g_node_copy_deep(node, copy_func, data) bind(c)
g;g_node_depth;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"guint g_node_depth (GNode *node);";function g_node_depth(node) bind(c)
g;g_node_destroy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"void g_node_destroy (GNode *root);";subroutine g_node_destroy(root) bind(c)
g;g_node_find;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_find (GNode *root, GTraverseType order, GTraverseFlags flags, gpointer data);";function g_node_find(root, order, flags, data) bind(c)
g;g_node_find_child;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_find_child (GNode *node, GTraverseFlags flags, gpointer data);";function g_node_find_child(node, flags, data) bind(c)
g;g_node_first_sibling;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_first_sibling (GNode *node);";function g_node_first_sibling(node) bind(c)
g;g_node_get_root;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_get_root (GNode *node);";function g_node_get_root(node) bind(c)
g;g_node_insert;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_insert (GNode *parent, gint position, GNode *node);";function g_node_insert(parent, position, node) bind(c)
g;g_node_insert_after;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_insert_after (GNode *parent, GNode *sibling, GNode *node);";function g_node_insert_after(parent, sibling, node) bind(c)
g;g_node_insert_before;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_insert_before (GNode *parent, GNode *sibling, GNode *node);";function g_node_insert_before(parent, sibling, node) bind(c)
g;g_node_is_ancestor;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"gboolean g_node_is_ancestor (GNode *node, GNode *descendant);";function g_node_is_ancestor(node, descendant) bind(c)
g;g_node_last_child;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_last_child (GNode *node);";function g_node_last_child(node) bind(c)
g;g_node_last_sibling;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_last_sibling (GNode *node);";function g_node_last_sibling(node) bind(c)
g;g_node_max_height;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"guint g_node_max_height (GNode *root);";function g_node_max_height(root) bind(c)
g;g_node_n_children;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"guint g_node_n_children (GNode *node);";function g_node_n_children(node) bind(c)
g;g_node_n_nodes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"guint g_node_n_nodes (GNode *root, GTraverseFlags flags);";function g_node_n_nodes(root, flags) bind(c)
g;g_node_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_new (gpointer data);";function g_node_new(data) bind(c)
g;g_node_nth_child;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_nth_child (GNode *node, guint n);";function g_node_nth_child(node, n) bind(c)
g;g_node_pop_allocator;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_node_pop_allocator (void);";subroutine g_node_pop_allocator() bind(c)
g;g_node_prepend;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"GNode* g_node_prepend (GNode *parent, GNode *node);";function g_node_prepend(parent, node) bind(c)
g;g_node_push_allocator;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_node_push_allocator (GAllocator *allocator);";subroutine g_node_push_allocator(allocator) bind(c)
g;g_node_reverse_children;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"void g_node_reverse_children (GNode *node);";subroutine g_node_reverse_children(node) bind(c)
g;g_node_traverse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"void g_node_traverse (GNode *root, GTraverseType order, GTraverseFlags flags, gint max_depth, GNodeTraverseFunc func, gpointer data);";subroutine g_node_traverse(root, order, flags, max_depth, func, data) bind(c)
g;g_node_unlink;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gnode.h;"void g_node_unlink (GNode *node);";subroutine g_node_unlink(node) bind(c)
g;g_notification_add_button;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gnotification.h;"void g_notification_add_button (GNotification *notification, const gchar *label, const gchar *detailed_action);";subroutine g_notification_add_button(notification, label, detailed_action) bind(c)
g;g_notification_add_button_with_target_value;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gnotification.h;"void g_notification_add_button_with_target_value (GNotification *notification, const gchar *label, const gchar *action, GVariant *target);";subroutine g_notification_add_button_with_target_value(notification, label, action, target) bind(c)
g;g_notification_get_type;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gnotification.h;"GType g_notification_get_type (void) G_GNUC_CONST;";function g_notification_get_type() bind(c)
g;g_notification_new;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gnotification.h;"GNotification * g_notification_new (const gchar *title);";function g_notification_new(title) bind(c)
g;g_notification_set_body;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gnotification.h;"void g_notification_set_body (GNotification *notification, const gchar *body);";subroutine g_notification_set_body(notification, body) bind(c)
g;g_notification_set_default_action;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gnotification.h;"void g_notification_set_default_action (GNotification *notification, const gchar *detailed_action);";subroutine g_notification_set_default_action(notification, detailed_action) bind(c)
g;g_notification_set_default_action_and_target_value;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gnotification.h;"void g_notification_set_default_action_and_target_value (GNotification *notification, const gchar *action, GVariant *target);";subroutine g_notification_set_default_action_and_target_value(notification, action, target) bind(c)
g;g_notification_set_icon;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gnotification.h;"void g_notification_set_icon (GNotification *notification, GIcon *icon);";subroutine g_notification_set_icon(notification, icon) bind(c)
g;g_notification_set_priority;GLIB_AVAILABLE_IN_2_42;glib-auto.f90;/usr/include/glib-2.0/gio/gnotification.h;"void g_notification_set_priority (GNotification *notification, GNotificationPriority priority);";subroutine g_notification_set_priority(notification, priority) bind(c)
g;g_notification_set_title;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gnotification.h;"void g_notification_set_title (GNotification *notification, const gchar *title);";subroutine g_notification_set_title(notification, title) bind(c)
g;g_notification_set_urgent;GLIB_DEPRECATED_IN_2_42_FOR(g_notification_set_priority);glib-auto.f90;/usr/include/glib-2.0/gio/gnotification.h;"void g_notification_set_urgent (GNotification *notification, gboolean urgent);";subroutine g_notification_set_urgent(notification, urgent) bind(c)
g;g_null_settings_backend_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsbackend.h;"GSettingsBackend * g_null_settings_backend_new (void);";function g_null_settings_backend_new() bind(c)
g;g_nullify_pointer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"void g_nullify_pointer (gpointer *nullify_location);";subroutine g_nullify_pointer(nullify_location) bind(c)
g;g_number_parser_error_quark;GLIB_AVAILABLE_IN_2_54;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"GQuark g_number_parser_error_quark (void);";function g_number_parser_error_quark() bind(c)
g;g_object_add_toggle_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_add_toggle_ref (GObject *object, GToggleNotify notify, gpointer data);";subroutine g_object_add_toggle_ref(object, notify, data) bind(c)
g;g_object_add_weak_pointer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_add_weak_pointer (GObject *object, gpointer *weak_pointer_location);";subroutine g_object_add_weak_pointer(object, weak_pointer_location) bind(c)
g;g_object_bind_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"GBinding *g_object_bind_property (gpointer source, const gchar *source_property, gpointer target, const gchar *target_property, GBindingFlags flags);";function g_object_bind_property(source, source_property, target, target_property, flags) bind(c)
g;g_object_bind_property_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"GBinding *g_object_bind_property_full (gpointer source, const gchar *source_property, gpointer target, const gchar *target_property, GBindingFlags flags, GBindingTransformFunc transform_to, GBindingTransformFunc transform_from, gpointer user_data, GDestroyNotify notify);";function g_object_bind_property_full(source, source_property, target, target_property, flags, transform_to, transform_from, user_data, notify) bind(c)
g;g_object_bind_property_with_closures;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gbinding.h;"GBinding *g_object_bind_property_with_closures (gpointer source, const gchar *source_property, gpointer target, const gchar *target_property, GBindingFlags flags, GClosure *transform_to, GClosure *transform_from);";function g_object_bind_property_with_closures(source, source_property, target, target_property, flags, transform_to, transform_from) bind(c)
g;g_object_class_find_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"GParamSpec* g_object_class_find_property (GObjectClass *oclass, const gchar *property_name);";function g_object_class_find_property(oclass, property_name) bind(c)
g;g_object_class_install_properties;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_class_install_properties (GObjectClass *oclass, guint n_pspecs, GParamSpec **pspecs);";subroutine g_object_class_install_properties(oclass, n_pspecs, pspecs) bind(c)
g;g_object_class_install_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_class_install_property (GObjectClass *oclass, guint property_id, GParamSpec *pspec);";subroutine g_object_class_install_property(oclass, property_id, pspec) bind(c)
g;g_object_class_list_properties;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"GParamSpec**g_object_class_list_properties (GObjectClass *oclass, guint *n_properties);";function g_object_class_list_properties(oclass, n_properties) bind(c)
g;g_object_class_override_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_class_override_property (GObjectClass *oclass, guint property_id, const gchar *name);";subroutine g_object_class_override_property(oclass, property_id, name) bind(c)
g;g_object_compat_control;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gsize g_object_compat_control (gsize what, gpointer data);";function g_object_compat_control(what, data) bind(c)
g;g_object_dup_data;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gpointer g_object_dup_data (GObject *object, const gchar *key, GDuplicateFunc dup_func, gpointer user_data);";function g_object_dup_data(object, key, dup_func, user_data) bind(c)
g;g_object_dup_qdata;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gpointer g_object_dup_qdata (GObject *object, GQuark quark, GDuplicateFunc dup_func, gpointer user_data);";function g_object_dup_qdata(object, quark, dup_func, user_data) bind(c)
g;g_object_force_floating;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_force_floating (GObject *object);";subroutine g_object_force_floating(object) bind(c)
g;g_object_freeze_notify;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_freeze_notify (GObject *object);";subroutine g_object_freeze_notify(object) bind(c)
g;g_object_get_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gpointer g_object_get_data (GObject *object, const gchar *key);";function g_object_get_data(object, key) bind(c)
g;g_object_get_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_get_property (GObject *object, const gchar *property_name, GValue *value);";subroutine g_object_get_property(object, property_name, value) bind(c)
g;g_object_get_qdata;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gpointer g_object_get_qdata (GObject *object, GQuark quark);";function g_object_get_qdata(object, quark) bind(c)
g;g_object_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"GType g_object_get_type (void) G_GNUC_CONST;";function g_object_get_type() bind(c)
g;g_object_get_valist;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_get_valist (GObject *object, const gchar *first_property_name, va_list var_args);";subroutine g_object_get_valist(object, first_property_name, var_args) bind(c)
g;g_object_interface_find_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"GParamSpec* g_object_interface_find_property (gpointer g_iface, const gchar *property_name);";function g_object_interface_find_property(g_iface, property_name) bind(c)
g;g_object_interface_install_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_interface_install_property (gpointer g_iface, GParamSpec *pspec);";subroutine g_object_interface_install_property(g_iface, pspec) bind(c)
g;g_object_interface_list_properties;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"GParamSpec**g_object_interface_list_properties (gpointer g_iface, guint *n_properties_p);";function g_object_interface_list_properties(g_iface, n_properties_p) bind(c)
g;g_object_is_floating;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gboolean g_object_is_floating (gpointer object);";function g_object_is_floating(object) bind(c)
g;g_object_new_valist;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"GObject* g_object_new_valist (GType object_type, const gchar *first_property_name, va_list var_args);";function g_object_new_valist(object_type, first_property_name, var_args) bind(c)
g;g_object_newv;GLIB_DEPRECATED_IN_2_54_FOR(g_object_new_with_properties);glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gpointer g_object_newv (GType object_type, guint n_parameters, GParameter *parameters);";function g_object_newv(object_type, n_parameters, parameters) bind(c)
g;g_object_notify;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_notify (GObject *object, const gchar *property_name);";subroutine g_object_notify(object, property_name) bind(c)
g;g_object_notify_by_pspec;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_notify_by_pspec (GObject *object, GParamSpec *pspec);";subroutine g_object_notify_by_pspec(object, pspec) bind(c)
g;g_object_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gpointer g_object_ref (gpointer object);";function g_object_ref(object) bind(c)
g;g_object_ref_sink;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gpointer g_object_ref_sink (gpointer object);";function g_object_ref_sink(object) bind(c)
g;g_object_remove_toggle_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_remove_toggle_ref (GObject *object, GToggleNotify notify, gpointer data);";subroutine g_object_remove_toggle_ref(object, notify, data) bind(c)
g;g_object_remove_weak_pointer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_remove_weak_pointer (GObject *object, gpointer *weak_pointer_location);";subroutine g_object_remove_weak_pointer(object, weak_pointer_location) bind(c)
g;g_object_replace_data;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gboolean g_object_replace_data (GObject *object, const gchar *key, gpointer oldval, gpointer newval, GDestroyNotify destroy, GDestroyNotify *old_destroy);";function g_object_replace_data(object, key, oldval, newval, destroy, old_destroy) bind(c)
g;g_object_replace_qdata;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gboolean g_object_replace_qdata (GObject *object, GQuark quark, gpointer oldval, gpointer newval, GDestroyNotify destroy, GDestroyNotify *old_destroy);";function g_object_replace_qdata(object, quark, oldval, newval, destroy, old_destroy) bind(c)
g;g_object_run_dispose;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_run_dispose (GObject *object);";subroutine g_object_run_dispose(object) bind(c)
g;g_object_set_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_set_data (GObject *object, const gchar *key, gpointer data);";subroutine g_object_set_data(object, key, data) bind(c)
g;g_object_set_data_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_set_data_full (GObject *object, const gchar *key, gpointer data, GDestroyNotify destroy);";subroutine g_object_set_data_full(object, key, data, destroy) bind(c)
g;g_object_set_property;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_set_property (GObject *object, const gchar *property_name, const GValue *value);";subroutine g_object_set_property(object, property_name, value) bind(c)
g;g_object_set_qdata;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_set_qdata (GObject *object, GQuark quark, gpointer data);";subroutine g_object_set_qdata(object, quark, data) bind(c)
g;g_object_set_qdata_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_set_qdata_full (GObject *object, GQuark quark, gpointer data, GDestroyNotify destroy);";subroutine g_object_set_qdata_full(object, quark, data, destroy) bind(c)
g;g_object_set_valist;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_set_valist (GObject *object, const gchar *first_property_name, va_list var_args);";subroutine g_object_set_valist(object, first_property_name, var_args) bind(c)
g;g_object_steal_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gpointer g_object_steal_data (GObject *object, const gchar *key);";function g_object_steal_data(object, key) bind(c)
g;g_object_steal_qdata;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gpointer g_object_steal_qdata (GObject *object, GQuark quark);";function g_object_steal_qdata(object, quark) bind(c)
g;g_object_thaw_notify;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_thaw_notify (GObject *object);";subroutine g_object_thaw_notify(object) bind(c)
g;g_object_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_unref (gpointer object);";subroutine g_object_unref(object) bind(c)
g;g_object_watch_closure;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_watch_closure (GObject *object, GClosure *closure);";subroutine g_object_watch_closure(object, closure) bind(c)
g;g_object_weak_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_weak_ref (GObject *object, GWeakNotify notify, gpointer data);";subroutine g_object_weak_ref(object, notify, data) bind(c)
g;g_object_weak_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_object_weak_unref (GObject *object, GWeakNotify notify, gpointer data);";subroutine g_object_weak_unref(object, notify, data) bind(c)
g;g_on_error_query;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbacktrace.h;"void g_on_error_query (const gchar *prg_name);";subroutine g_on_error_query(prg_name) bind(c)
g;g_on_error_stack_trace;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbacktrace.h;"void g_on_error_stack_trace (const gchar *prg_name);";subroutine g_on_error_stack_trace(prg_name) bind(c)
g;g_once_impl;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"gpointer g_once_impl (GOnce *once, GThreadFunc func, gpointer arg);";function g_once_impl(once, func, arg) bind(c)
g;g_once_init_enter;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"gboolean g_once_init_enter (volatile void *location);";function g_once_init_enter(location) bind(c)
g;g_once_init_enter_impl;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"gboolean g_once_init_enter_impl (volatile gsize *location);";function g_once_init_enter_impl(location) bind(c)
g;g_once_init_leave;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_once_init_leave (volatile void *location, gsize result);";subroutine g_once_init_leave(location, result) bind(c)
g;g_open;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_open (const gchar *filename, int flags, int mode);";function g_open(filename, flags, mode) bind(c)
g;g_option_context_add_group;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_context_add_group (GOptionContext *context, GOptionGroup *group);";subroutine g_option_context_add_group(context, group) bind(c)
g;g_option_context_add_main_entries;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_context_add_main_entries (GOptionContext *context, const GOptionEntry *entries, const gchar *translation_domain);";subroutine g_option_context_add_main_entries(context, entries, translation_domain) bind(c)
g;g_option_context_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_context_free (GOptionContext *context);";subroutine g_option_context_free(context) bind(c)
g;g_option_context_get_description;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"const gchar * g_option_context_get_description (GOptionContext *context);";function g_option_context_get_description(context) bind(c)
g;g_option_context_get_help;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"gchar *g_option_context_get_help (GOptionContext *context, gboolean main_help, GOptionGroup *group);";function g_option_context_get_help(context, main_help, group) bind(c)
g;g_option_context_get_help_enabled;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"gboolean g_option_context_get_help_enabled (GOptionContext *context);";function g_option_context_get_help_enabled(context) bind(c)
g;g_option_context_get_ignore_unknown_options;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"gboolean g_option_context_get_ignore_unknown_options (GOptionContext *context);";function g_option_context_get_ignore_unknown_options(context) bind(c)
g;g_option_context_get_main_group;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"GOptionGroup *g_option_context_get_main_group (GOptionContext *context);";function g_option_context_get_main_group(context) bind(c)
g;g_option_context_get_strict_posix;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"gboolean g_option_context_get_strict_posix (GOptionContext *context);";function g_option_context_get_strict_posix(context) bind(c)
g;g_option_context_get_summary;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"const gchar * g_option_context_get_summary (GOptionContext *context);";function g_option_context_get_summary(context) bind(c)
g;g_option_context_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"GOptionContext *g_option_context_new (const gchar *parameter_string);";function g_option_context_new(parameter_string) bind(c)
g;g_option_context_parse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"gboolean g_option_context_parse (GOptionContext *context, gint *argc, gchar ***argv, GError **error);";function g_option_context_parse(context, argc, argv, error) bind(c)
g;g_option_context_parse_strv;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"gboolean g_option_context_parse_strv (GOptionContext *context, gchar ***arguments, GError **error);";function g_option_context_parse_strv(context, arguments, error) bind(c)
g;g_option_context_set_description;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_context_set_description (GOptionContext *context, const gchar *description);";subroutine g_option_context_set_description(context, description) bind(c)
g;g_option_context_set_help_enabled;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_context_set_help_enabled (GOptionContext *context, gboolean help_enabled);";subroutine g_option_context_set_help_enabled(context, help_enabled) bind(c)
g;g_option_context_set_ignore_unknown_options;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_context_set_ignore_unknown_options (GOptionContext *context, gboolean ignore_unknown);";subroutine g_option_context_set_ignore_unknown_options(context, ignore_unknown) bind(c)
g;g_option_context_set_main_group;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_context_set_main_group (GOptionContext *context, GOptionGroup *group);";subroutine g_option_context_set_main_group(context, group) bind(c)
g;g_option_context_set_strict_posix;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_context_set_strict_posix (GOptionContext *context, gboolean strict_posix);";subroutine g_option_context_set_strict_posix(context, strict_posix) bind(c)
g;g_option_context_set_summary;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_context_set_summary (GOptionContext *context, const gchar *summary);";subroutine g_option_context_set_summary(context, summary) bind(c)
g;g_option_context_set_translate_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_context_set_translate_func (GOptionContext *context, GTranslateFunc func, gpointer data, GDestroyNotify destroy_notify);";subroutine g_option_context_set_translate_func(context, func, data, destroy_notify) bind(c)
g;g_option_context_set_translation_domain;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_context_set_translation_domain (GOptionContext *context, const gchar *domain);";subroutine g_option_context_set_translation_domain(context, domain) bind(c)
g;g_option_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"GQuark g_option_error_quark (void);";function g_option_error_quark() bind(c)
g;g_option_group_add_entries;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_group_add_entries (GOptionGroup *group, const GOptionEntry *entries);";subroutine g_option_group_add_entries(group, entries) bind(c)
g;g_option_group_free;GLIB_DEPRECATED_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_group_free (GOptionGroup *group);";subroutine g_option_group_free(group) bind(c)
g;g_option_group_get_type;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_option_group_get_type (void) G_GNUC_CONST;";function g_option_group_get_type() bind(c)
g;g_option_group_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"GOptionGroup *g_option_group_new (const gchar *name, const gchar *description, const gchar *help_description, gpointer user_data, GDestroyNotify destroy);";function g_option_group_new(name, description, help_description, user_data, destroy) bind(c)
g;g_option_group_ref;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"GOptionGroup *g_option_group_ref (GOptionGroup *group);";function g_option_group_ref(group) bind(c)
g;g_option_group_set_error_hook;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_group_set_error_hook (GOptionGroup *group, GOptionErrorFunc error_func);";subroutine g_option_group_set_error_hook(group, error_func) bind(c)
g;g_option_group_set_parse_hooks;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_group_set_parse_hooks (GOptionGroup *group, GOptionParseFunc pre_parse_func, GOptionParseFunc post_parse_func);";subroutine g_option_group_set_parse_hooks(group, pre_parse_func, post_parse_func) bind(c)
g;g_option_group_set_translate_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_group_set_translate_func (GOptionGroup *group, GTranslateFunc func, gpointer data, GDestroyNotify destroy_notify);";subroutine g_option_group_set_translate_func(group, func, data, destroy_notify) bind(c)
g;g_option_group_set_translation_domain;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_group_set_translation_domain (GOptionGroup *group, const gchar *domain);";subroutine g_option_group_set_translation_domain(group, domain) bind(c)
g;g_option_group_unref;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/glib/goption.h;"void g_option_group_unref (GOptionGroup *group);";subroutine g_option_group_unref(group) bind(c)
g;g_output_stream_clear_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"void g_output_stream_clear_pending (GOutputStream *stream);";subroutine g_output_stream_clear_pending(stream) bind(c)
g;g_output_stream_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_close (GOutputStream *stream, GCancellable *cancellable, GError **error);";function g_output_stream_close(stream, cancellable, error) bind(c)
g;g_output_stream_close_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"void g_output_stream_close_async (GOutputStream *stream, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_output_stream_close_async(stream, io_priority, cancellable, callback, user_data) bind(c)
g;g_output_stream_close_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_close_finish (GOutputStream *stream, GAsyncResult *result, GError **error);";function g_output_stream_close_finish(stream, result, error) bind(c)
g;g_output_stream_flush;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_flush (GOutputStream *stream, GCancellable *cancellable, GError **error);";function g_output_stream_flush(stream, cancellable, error) bind(c)
g;g_output_stream_flush_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"void g_output_stream_flush_async (GOutputStream *stream, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_output_stream_flush_async(stream, io_priority, cancellable, callback, user_data) bind(c)
g;g_output_stream_flush_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_flush_finish (GOutputStream *stream, GAsyncResult *result, GError **error);";function g_output_stream_flush_finish(stream, result, error) bind(c)
g;g_output_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"GType g_output_stream_get_type (void) G_GNUC_CONST;";function g_output_stream_get_type() bind(c)
g;g_output_stream_has_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_has_pending (GOutputStream *stream);";function g_output_stream_has_pending(stream) bind(c)
g;g_output_stream_is_closed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_is_closed (GOutputStream *stream);";function g_output_stream_is_closed(stream) bind(c)
g;g_output_stream_is_closing;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_is_closing (GOutputStream *stream);";function g_output_stream_is_closing(stream) bind(c)
g;g_output_stream_set_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_set_pending (GOutputStream *stream, GError **error);";function g_output_stream_set_pending(stream, error) bind(c)
g;g_output_stream_splice;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gssize g_output_stream_splice (GOutputStream *stream, GInputStream *source, GOutputStreamSpliceFlags flags, GCancellable *cancellable, GError **error);";function g_output_stream_splice(stream, source, flags, cancellable, error) bind(c)
g;g_output_stream_splice_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"void g_output_stream_splice_async (GOutputStream *stream, GInputStream *source, GOutputStreamSpliceFlags flags, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_output_stream_splice_async(stream, source, flags, io_priority, cancellable, callback, user_data) bind(c)
g;g_output_stream_splice_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gssize g_output_stream_splice_finish (GOutputStream *stream, GAsyncResult *result, GError **error);";function g_output_stream_splice_finish(stream, result, error) bind(c)
g;g_output_stream_vprintf;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_vprintf (GOutputStream *stream, gsize *bytes_written, GCancellable *cancellable, GError **error, const gchar *format, va_list args) G_GNUC_PRINTF (5, 0);";function g_output_stream_vprintf(stream, bytes_written, cancellable, error, format, args) bind(c)
g;g_output_stream_write;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gssize g_output_stream_write (GOutputStream *stream, const void *buffer, gsize count, GCancellable *cancellable, GError **error);";function g_output_stream_write(stream, buffer, count, cancellable, error) bind(c)
g;g_output_stream_write_all;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_write_all (GOutputStream *stream, const void *buffer, gsize count, gsize *bytes_written, GCancellable *cancellable, GError **error);";function g_output_stream_write_all(stream, buffer, count, bytes_written, cancellable, error) bind(c)
g;g_output_stream_write_all_async;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"void g_output_stream_write_all_async (GOutputStream *stream, const void *buffer, gsize count, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_output_stream_write_all_async(stream, buffer, count, io_priority, cancellable, callback, user_data) bind(c)
g;g_output_stream_write_all_finish;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_write_all_finish (GOutputStream *stream, GAsyncResult *result, gsize *bytes_written, GError **error);";function g_output_stream_write_all_finish(stream, result, bytes_written, error) bind(c)
g;g_output_stream_write_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"void g_output_stream_write_async (GOutputStream *stream, const void *buffer, gsize count, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_output_stream_write_async(stream, buffer, count, io_priority, cancellable, callback, user_data) bind(c)
g;g_output_stream_write_bytes;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gssize g_output_stream_write_bytes (GOutputStream *stream, GBytes *bytes, GCancellable *cancellable, GError **error);";function g_output_stream_write_bytes(stream, bytes, cancellable, error) bind(c)
g;g_output_stream_write_bytes_async;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"void g_output_stream_write_bytes_async (GOutputStream *stream, GBytes *bytes, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_output_stream_write_bytes_async(stream, bytes, io_priority, cancellable, callback, user_data) bind(c)
g;g_output_stream_write_bytes_finish;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gssize g_output_stream_write_bytes_finish (GOutputStream *stream, GAsyncResult *result, GError **error);";function g_output_stream_write_bytes_finish(stream, result, error) bind(c)
g;g_output_stream_write_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gssize g_output_stream_write_finish (GOutputStream *stream, GAsyncResult *result, GError **error);";function g_output_stream_write_finish(stream, result, error) bind(c)
g;g_output_stream_writev;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_writev (GOutputStream *stream, const GOutputVector *vectors, gsize n_vectors, gsize *bytes_written, GCancellable *cancellable, GError **error);";function g_output_stream_writev(stream, vectors, n_vectors, bytes_written, cancellable, error) bind(c)
g;g_output_stream_writev_all;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_writev_all (GOutputStream *stream, GOutputVector *vectors, gsize n_vectors, gsize *bytes_written, GCancellable *cancellable, GError **error);";function g_output_stream_writev_all(stream, vectors, n_vectors, bytes_written, cancellable, error) bind(c)
g;g_output_stream_writev_all_async;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"void g_output_stream_writev_all_async (GOutputStream *stream, GOutputVector *vectors, gsize n_vectors, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_output_stream_writev_all_async(stream, vectors, n_vectors, io_priority, cancellable, callback, user_data) bind(c)
g;g_output_stream_writev_all_finish;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_writev_all_finish (GOutputStream *stream, GAsyncResult *result, gsize *bytes_written, GError **error);";function g_output_stream_writev_all_finish(stream, result, bytes_written, error) bind(c)
g;g_output_stream_writev_async;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"void g_output_stream_writev_async (GOutputStream *stream, const GOutputVector *vectors, gsize n_vectors, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_output_stream_writev_async(stream, vectors, n_vectors, io_priority, cancellable, callback, user_data) bind(c)
g;g_output_stream_writev_finish;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/goutputstream.h;"gboolean g_output_stream_writev_finish (GOutputStream *stream, GAsyncResult *result, gsize *bytes_written, GError **error);";function g_output_stream_writev_finish(stream, result, bytes_written, error) bind(c)
g;g_param_spec_boolean;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_boolean (const gchar *name, const gchar *nick, const gchar *blurb, gboolean default_value, GParamFlags flags);";function g_param_spec_boolean(name, nick, blurb, default_value, flags) bind(c)
g;g_param_spec_boxed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_boxed (const gchar *name, const gchar *nick, const gchar *blurb, GType boxed_type, GParamFlags flags);";function g_param_spec_boxed(name, nick, blurb, boxed_type, flags) bind(c)
g;g_param_spec_char;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_char (const gchar *name, const gchar *nick, const gchar *blurb, gint8 minimum, gint8 maximum, gint8 default_value, GParamFlags flags);";function g_param_spec_char(name, nick, blurb, minimum, maximum, default_value, flags) bind(c)
g;g_param_spec_double;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_double (const gchar *name, const gchar *nick, const gchar *blurb, gdouble minimum, gdouble maximum, gdouble default_value, GParamFlags flags);";function g_param_spec_double(name, nick, blurb, minimum, maximum, default_value, flags) bind(c)
g;g_param_spec_enum;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_enum (const gchar *name, const gchar *nick, const gchar *blurb, GType enum_type, gint default_value, GParamFlags flags);";function g_param_spec_enum(name, nick, blurb, enum_type, default_value, flags) bind(c)
g;g_param_spec_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_flags (const gchar *name, const gchar *nick, const gchar *blurb, GType flags_type, guint default_value, GParamFlags flags);";function g_param_spec_flags(name, nick, blurb, flags_type, default_value, flags) bind(c)
g;g_param_spec_float;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_float (const gchar *name, const gchar *nick, const gchar *blurb, gfloat minimum, gfloat maximum, gfloat default_value, GParamFlags flags);";function g_param_spec_float(name, nick, blurb, minimum, maximum, default_value, flags) bind(c)
g;g_param_spec_get_blurb;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"const gchar * g_param_spec_get_blurb (GParamSpec *pspec);";function g_param_spec_get_blurb(pspec) bind(c)
g;g_param_spec_get_default_value;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"const GValue * g_param_spec_get_default_value (GParamSpec *pspec);";function g_param_spec_get_default_value(pspec) bind(c)
g;g_param_spec_get_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"const gchar * g_param_spec_get_name (GParamSpec *pspec);";function g_param_spec_get_name(pspec) bind(c)
g;g_param_spec_get_name_quark;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"GQuark g_param_spec_get_name_quark (GParamSpec *pspec);";function g_param_spec_get_name_quark(pspec) bind(c)
g;g_param_spec_get_nick;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"const gchar * g_param_spec_get_nick (GParamSpec *pspec);";function g_param_spec_get_nick(pspec) bind(c)
g;g_param_spec_get_qdata;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"gpointer g_param_spec_get_qdata (GParamSpec *pspec, GQuark quark);";function g_param_spec_get_qdata(pspec, quark) bind(c)
g;g_param_spec_get_redirect_target;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"GParamSpec* g_param_spec_get_redirect_target (GParamSpec *pspec);";function g_param_spec_get_redirect_target(pspec) bind(c)
g;g_param_spec_gtype;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_gtype (const gchar *name, const gchar *nick, const gchar *blurb, GType is_a_type, GParamFlags flags);";function g_param_spec_gtype(name, nick, blurb, is_a_type, flags) bind(c)
g;g_param_spec_int;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_int (const gchar *name, const gchar *nick, const gchar *blurb, gint minimum, gint maximum, gint default_value, GParamFlags flags);";function g_param_spec_int(name, nick, blurb, minimum, maximum, default_value, flags) bind(c)
g;g_param_spec_int64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_int64 (const gchar *name, const gchar *nick, const gchar *blurb, gint64 minimum, gint64 maximum, gint64 default_value, GParamFlags flags);";function g_param_spec_int64(name, nick, blurb, minimum, maximum, default_value, flags) bind(c)
g;g_param_spec_internal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"gpointer g_param_spec_internal (GType param_type, const gchar *name, const gchar *nick, const gchar *blurb, GParamFlags flags);";function g_param_spec_internal(param_type, name, nick, blurb, flags) bind(c)
g;g_param_spec_is_valid_name;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"gboolean g_param_spec_is_valid_name (const gchar *name);";function g_param_spec_is_valid_name(name) bind(c)
g;g_param_spec_long;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_long (const gchar *name, const gchar *nick, const gchar *blurb, glong minimum, glong maximum, glong default_value, GParamFlags flags);";function g_param_spec_long(name, nick, blurb, minimum, maximum, default_value, flags) bind(c)
g;g_param_spec_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_object (const gchar *name, const gchar *nick, const gchar *blurb, GType object_type, GParamFlags flags);";function g_param_spec_object(name, nick, blurb, object_type, flags) bind(c)
g;g_param_spec_override;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_override (const gchar *name, GParamSpec *overridden);";function g_param_spec_override(name, overridden) bind(c)
g;g_param_spec_param;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_param (const gchar *name, const gchar *nick, const gchar *blurb, GType param_type, GParamFlags flags);";function g_param_spec_param(name, nick, blurb, param_type, flags) bind(c)
g;g_param_spec_pointer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_pointer (const gchar *name, const gchar *nick, const gchar *blurb, GParamFlags flags);";function g_param_spec_pointer(name, nick, blurb, flags) bind(c)
g;g_param_spec_pool_insert;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"void g_param_spec_pool_insert (GParamSpecPool *pool, GParamSpec *pspec, GType owner_type);";subroutine g_param_spec_pool_insert(pool, pspec, owner_type) bind(c)
g;g_param_spec_pool_list;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"GParamSpec** g_param_spec_pool_list (GParamSpecPool *pool, GType owner_type, guint *n_pspecs_p);";function g_param_spec_pool_list(pool, owner_type, n_pspecs_p) bind(c)
g;g_param_spec_pool_list_owned;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"GList* g_param_spec_pool_list_owned (GParamSpecPool *pool, GType owner_type);";function g_param_spec_pool_list_owned(pool, owner_type) bind(c)
g;g_param_spec_pool_lookup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"GParamSpec* g_param_spec_pool_lookup (GParamSpecPool *pool, const gchar *param_name, GType owner_type, gboolean walk_ancestors);";function g_param_spec_pool_lookup(pool, param_name, owner_type, walk_ancestors) bind(c)
g;g_param_spec_pool_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"GParamSpecPool* g_param_spec_pool_new (gboolean type_prefixing);";function g_param_spec_pool_new(type_prefixing) bind(c)
g;g_param_spec_pool_remove;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"void g_param_spec_pool_remove (GParamSpecPool *pool, GParamSpec *pspec);";subroutine g_param_spec_pool_remove(pool, pspec) bind(c)
g;g_param_spec_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"GParamSpec* g_param_spec_ref (GParamSpec *pspec);";function g_param_spec_ref(pspec) bind(c)
g;g_param_spec_ref_sink;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"GParamSpec* g_param_spec_ref_sink (GParamSpec *pspec);";function g_param_spec_ref_sink(pspec) bind(c)
g;g_param_spec_set_qdata;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"void g_param_spec_set_qdata (GParamSpec *pspec, GQuark quark, gpointer data);";subroutine g_param_spec_set_qdata(pspec, quark, data) bind(c)
g;g_param_spec_set_qdata_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"void g_param_spec_set_qdata_full (GParamSpec *pspec, GQuark quark, gpointer data, GDestroyNotify destroy);";subroutine g_param_spec_set_qdata_full(pspec, quark, data, destroy) bind(c)
g;g_param_spec_sink;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"void g_param_spec_sink (GParamSpec *pspec);";subroutine g_param_spec_sink(pspec) bind(c)
g;g_param_spec_steal_qdata;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"gpointer g_param_spec_steal_qdata (GParamSpec *pspec, GQuark quark);";function g_param_spec_steal_qdata(pspec, quark) bind(c)
g;g_param_spec_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_string (const gchar *name, const gchar *nick, const gchar *blurb, const gchar *default_value, GParamFlags flags);";function g_param_spec_string(name, nick, blurb, default_value, flags) bind(c)
g;g_param_spec_uchar;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_uchar (const gchar *name, const gchar *nick, const gchar *blurb, guint8 minimum, guint8 maximum, guint8 default_value, GParamFlags flags);";function g_param_spec_uchar(name, nick, blurb, minimum, maximum, default_value, flags) bind(c)
g;g_param_spec_uint;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_uint (const gchar *name, const gchar *nick, const gchar *blurb, guint minimum, guint maximum, guint default_value, GParamFlags flags);";function g_param_spec_uint(name, nick, blurb, minimum, maximum, default_value, flags) bind(c)
g;g_param_spec_uint64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_uint64 (const gchar *name, const gchar *nick, const gchar *blurb, guint64 minimum, guint64 maximum, guint64 default_value, GParamFlags flags);";function g_param_spec_uint64(name, nick, blurb, minimum, maximum, default_value, flags) bind(c)
g;g_param_spec_ulong;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_ulong (const gchar *name, const gchar *nick, const gchar *blurb, gulong minimum, gulong maximum, gulong default_value, GParamFlags flags);";function g_param_spec_ulong(name, nick, blurb, minimum, maximum, default_value, flags) bind(c)
g;g_param_spec_unichar;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_unichar (const gchar *name, const gchar *nick, const gchar *blurb, gunichar default_value, GParamFlags flags);";function g_param_spec_unichar(name, nick, blurb, default_value, flags) bind(c)
g;g_param_spec_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"void g_param_spec_unref (GParamSpec *pspec);";subroutine g_param_spec_unref(pspec) bind(c)
g;g_param_spec_value_array;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_value_array (const gchar *name, const gchar *nick, const gchar *blurb, GParamSpec *element_spec, GParamFlags flags);";function g_param_spec_value_array(name, nick, blurb, element_spec, flags) bind(c)
g;g_param_spec_variant;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparamspecs.h;"GParamSpec* g_param_spec_variant (const gchar *name, const gchar *nick, const gchar *blurb, const GVariantType *type, GVariant *default_value, GParamFlags flags);";function g_param_spec_variant(name, nick, blurb, type, default_value, flags) bind(c)
g;g_param_type_register_static;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"GType g_param_type_register_static (const gchar *name, const GParamSpecTypeInfo *pspec_info);";function g_param_type_register_static(name, pspec_info) bind(c)
g;g_param_value_convert;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"gboolean g_param_value_convert (GParamSpec *pspec, const GValue *src_value, GValue *dest_value, gboolean strict_validation);";function g_param_value_convert(pspec, src_value, dest_value, strict_validation) bind(c)
g;g_param_value_defaults;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"gboolean g_param_value_defaults (GParamSpec *pspec, const GValue *value);";function g_param_value_defaults(pspec, value) bind(c)
g;g_param_value_set_default;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"void g_param_value_set_default (GParamSpec *pspec, GValue *value);";subroutine g_param_value_set_default(pspec, value) bind(c)
g;g_param_value_validate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"gboolean g_param_value_validate (GParamSpec *pspec, GValue *value);";function g_param_value_validate(pspec, value) bind(c)
g;g_param_values_cmp;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"gint g_param_values_cmp (GParamSpec *pspec, const GValue *value1, const GValue *value2);";function g_param_values_cmp(pspec, value1, value2) bind(c)
g;g_parse_debug_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"guint g_parse_debug_string (const gchar *string, const GDebugKey *keys, guint nkeys);";function g_parse_debug_string(string, keys, nkeys) bind(c)
g;g_path_get_basename;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gchar *g_path_get_basename (const gchar *file_name) G_GNUC_MALLOC;";function g_path_get_basename(file_name) bind(c)
g;g_path_get_dirname;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gchar *g_path_get_dirname (const gchar *file_name) G_GNUC_MALLOC;";function g_path_get_dirname(file_name) bind(c)
g;g_path_is_absolute;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"gboolean g_path_is_absolute (const gchar *file_name);";function g_path_is_absolute(file_name) bind(c)
g;g_path_skip_root;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gfileutils.h;"const gchar *g_path_skip_root (const gchar *file_name);";function g_path_skip_root(file_name) bind(c)
g;g_pattern_match;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gpattern.h;"gboolean g_pattern_match (GPatternSpec *pspec, guint string_length, const gchar *string, const gchar *string_reversed);";function g_pattern_match(pspec, string_length, string, string_reversed) bind(c)
g;g_pattern_match_simple;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gpattern.h;"gboolean g_pattern_match_simple (const gchar *pattern, const gchar *string);";function g_pattern_match_simple(pattern, string) bind(c)
g;g_pattern_match_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gpattern.h;"gboolean g_pattern_match_string (GPatternSpec *pspec, const gchar *string);";function g_pattern_match_string(pspec, string) bind(c)
g;g_pattern_spec_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gpattern.h;"gboolean g_pattern_spec_equal (GPatternSpec *pspec1, GPatternSpec *pspec2);";function g_pattern_spec_equal(pspec1, pspec2) bind(c)
g;g_pattern_spec_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gpattern.h;"void g_pattern_spec_free (GPatternSpec *pspec);";subroutine g_pattern_spec_free(pspec) bind(c)
g;g_pattern_spec_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gpattern.h;"GPatternSpec* g_pattern_spec_new (const gchar *pattern);";function g_pattern_spec_new(pattern) bind(c)
g;g_permission_acquire;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpermission.h;"gboolean g_permission_acquire (GPermission *permission, GCancellable *cancellable, GError **error);";function g_permission_acquire(permission, cancellable, error) bind(c)
g;g_permission_acquire_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpermission.h;"void g_permission_acquire_async (GPermission *permission, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_permission_acquire_async(permission, cancellable, callback, user_data) bind(c)
g;g_permission_acquire_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpermission.h;"gboolean g_permission_acquire_finish (GPermission *permission, GAsyncResult *result, GError **error);";function g_permission_acquire_finish(permission, result, error) bind(c)
g;g_permission_get_allowed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpermission.h;"gboolean g_permission_get_allowed (GPermission *permission);";function g_permission_get_allowed(permission) bind(c)
g;g_permission_get_can_acquire;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpermission.h;"gboolean g_permission_get_can_acquire (GPermission *permission);";function g_permission_get_can_acquire(permission) bind(c)
g;g_permission_get_can_release;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpermission.h;"gboolean g_permission_get_can_release (GPermission *permission);";function g_permission_get_can_release(permission) bind(c)
g;g_permission_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpermission.h;"GType g_permission_get_type (void);";function g_permission_get_type() bind(c)
g;g_permission_impl_update;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpermission.h;"void g_permission_impl_update (GPermission *permission, gboolean allowed, gboolean can_acquire, gboolean can_release);";subroutine g_permission_impl_update(permission, allowed, can_acquire, can_release) bind(c)
g;g_permission_release;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpermission.h;"gboolean g_permission_release (GPermission *permission, GCancellable *cancellable, GError **error);";function g_permission_release(permission, cancellable, error) bind(c)
g;g_permission_release_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpermission.h;"void g_permission_release_async (GPermission *permission, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_permission_release_async(permission, cancellable, callback, user_data) bind(c)
g;g_permission_release_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpermission.h;"gboolean g_permission_release_finish (GPermission *permission, GAsyncResult *result, GError **error);";function g_permission_release_finish(permission, result, error) bind(c)
g;g_pointer_bit_lock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbitlock.h;"void g_pointer_bit_lock (volatile void *address, gint lock_bit);";subroutine g_pointer_bit_lock(address, lock_bit) bind(c)
g;g_pointer_bit_trylock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbitlock.h;"gboolean g_pointer_bit_trylock (volatile void *address, gint lock_bit);";function g_pointer_bit_trylock(address, lock_bit) bind(c)
g;g_pointer_bit_unlock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gbitlock.h;"void g_pointer_bit_unlock (volatile void *address, gint lock_bit);";subroutine g_pointer_bit_unlock(address, lock_bit) bind(c)
g;g_pointer_type_register_static;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"GType g_pointer_type_register_static (const gchar *name);";function g_pointer_type_register_static(name) bind(c)
g;g_poll;;glib-auto.f90;/usr/include/glib-2.0/glib/gpoll.h;"gint g_poll (GPollFD *fds, guint nfds, gint timeout);";function g_poll(fds, nfds, timeout) bind(c)
g;g_pollable_input_stream_can_poll;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableinputstream.h;"gboolean g_pollable_input_stream_can_poll (GPollableInputStream *stream);";function g_pollable_input_stream_can_poll(stream) bind(c)
g;g_pollable_input_stream_create_source;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableinputstream.h;"GSource *g_pollable_input_stream_create_source (GPollableInputStream *stream, GCancellable *cancellable);";function g_pollable_input_stream_create_source(stream, cancellable) bind(c)
g;g_pollable_input_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableinputstream.h;"GType g_pollable_input_stream_get_type (void) G_GNUC_CONST;";function g_pollable_input_stream_get_type() bind(c)
g;g_pollable_input_stream_is_readable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableinputstream.h;"gboolean g_pollable_input_stream_is_readable (GPollableInputStream *stream);";function g_pollable_input_stream_is_readable(stream) bind(c)
g;g_pollable_input_stream_read_nonblocking;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableinputstream.h;"gssize g_pollable_input_stream_read_nonblocking (GPollableInputStream *stream, void *buffer, gsize count, GCancellable *cancellable, GError **error);";function g_pollable_input_stream_read_nonblocking(stream, buffer, count, cancellable, error) bind(c)
g;g_pollable_output_stream_can_poll;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableoutputstream.h;"gboolean g_pollable_output_stream_can_poll (GPollableOutputStream *stream);";function g_pollable_output_stream_can_poll(stream) bind(c)
g;g_pollable_output_stream_create_source;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableoutputstream.h;"GSource *g_pollable_output_stream_create_source (GPollableOutputStream *stream, GCancellable *cancellable);";function g_pollable_output_stream_create_source(stream, cancellable) bind(c)
g;g_pollable_output_stream_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableoutputstream.h;"GType g_pollable_output_stream_get_type (void) G_GNUC_CONST;";function g_pollable_output_stream_get_type() bind(c)
g;g_pollable_output_stream_is_writable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableoutputstream.h;"gboolean g_pollable_output_stream_is_writable (GPollableOutputStream *stream);";function g_pollable_output_stream_is_writable(stream) bind(c)
g;g_pollable_output_stream_write_nonblocking;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableoutputstream.h;"gssize g_pollable_output_stream_write_nonblocking (GPollableOutputStream *stream, const void *buffer, gsize count, GCancellable *cancellable, GError **error);";function g_pollable_output_stream_write_nonblocking(stream, buffer, count, cancellable, error) bind(c)
g;g_pollable_output_stream_writev_nonblocking;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableoutputstream.h;"GPollableReturn g_pollable_output_stream_writev_nonblocking (GPollableOutputStream *stream, const GOutputVector *vectors, gsize n_vectors, gsize *bytes_written, GCancellable *cancellable, GError **error);";function g_pollable_output_stream_writev_nonblocking(stream, vectors, n_vectors, bytes_written, cancellable, error) bind(c)
g;g_pollable_source_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableutils.h;"GSource *g_pollable_source_new (GObject *pollable_stream);";function g_pollable_source_new(pollable_stream) bind(c)
g;g_pollable_source_new_full;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableutils.h;"GSource *g_pollable_source_new_full (gpointer pollable_stream, GSource *child_source, GCancellable *cancellable);";function g_pollable_source_new_full(pollable_stream, child_source, cancellable) bind(c)
g;g_pollable_stream_read;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableutils.h;"gssize g_pollable_stream_read (GInputStream *stream, void *buffer, gsize count, gboolean blocking, GCancellable *cancellable, GError **error);";function g_pollable_stream_read(stream, buffer, count, blocking, cancellable, error) bind(c)
g;g_pollable_stream_write;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableutils.h;"gssize g_pollable_stream_write (GOutputStream *stream, const void *buffer, gsize count, gboolean blocking, GCancellable *cancellable, GError **error);";function g_pollable_stream_write(stream, buffer, count, blocking, cancellable, error) bind(c)
g;g_pollable_stream_write_all;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gpollableutils.h;"gboolean g_pollable_stream_write_all (GOutputStream *stream, const void *buffer, gsize count, gboolean blocking, gsize *bytes_written, GCancellable *cancellable, GError **error);";function g_pollable_stream_write_all(stream, buffer, count, blocking, bytes_written, cancellable, error) bind(c)
g;g_pollfd_get_type;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_pollfd_get_type (void) G_GNUC_CONST;";function g_pollfd_get_type() bind(c)
g;g_printf_string_upper_bound;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"gsize g_printf_string_upper_bound (const gchar* format, va_list args) G_GNUC_PRINTF(1, 0);";function g_printf_string_upper_bound(format, args) bind(c)
g;g_private_get;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"gpointer g_private_get (GPrivate *key);";function g_private_get(key) bind(c)
g;g_private_new;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"GPrivate * g_private_new (GDestroyNotify notify);";function g_private_new(notify) bind(c)
g;g_private_replace;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_private_replace (GPrivate *key, gpointer value);";subroutine g_private_replace(key, value) bind(c)
g;g_private_set;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_private_set (GPrivate *key, gpointer value);";subroutine g_private_set(key, value) bind(c)
g;g_propagate_error;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gerror.h;"void g_propagate_error (GError **dest, GError *src);";subroutine g_propagate_error(dest, src) bind(c)
g;g_property_action_get_type;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gpropertyaction.h;"GType g_property_action_get_type (void) G_GNUC_CONST;";function g_property_action_get_type() bind(c)
g;g_property_action_new;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gio/gpropertyaction.h;"GPropertyAction * g_property_action_new (const gchar *name, gpointer object, const gchar *property_name);";function g_property_action_new(name, object, property_name) bind(c)
g;g_proxy_address_enumerator_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyaddressenumerator.h;"GType g_proxy_address_enumerator_get_type (void) G_GNUC_CONST;";function g_proxy_address_enumerator_get_type() bind(c)
g;g_proxy_address_get_destination_hostname;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyaddress.h;"const gchar *g_proxy_address_get_destination_hostname (GProxyAddress *proxy);";function g_proxy_address_get_destination_hostname(proxy) bind(c)
g;g_proxy_address_get_destination_port;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyaddress.h;"guint16 g_proxy_address_get_destination_port (GProxyAddress *proxy);";function g_proxy_address_get_destination_port(proxy) bind(c)
g;g_proxy_address_get_destination_protocol;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyaddress.h;"const gchar *g_proxy_address_get_destination_protocol (GProxyAddress *proxy);";function g_proxy_address_get_destination_protocol(proxy) bind(c)
g;g_proxy_address_get_password;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyaddress.h;"const gchar *g_proxy_address_get_password (GProxyAddress *proxy);";function g_proxy_address_get_password(proxy) bind(c)
g;g_proxy_address_get_protocol;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyaddress.h;"const gchar *g_proxy_address_get_protocol (GProxyAddress *proxy);";function g_proxy_address_get_protocol(proxy) bind(c)
g;g_proxy_address_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyaddress.h;"GType g_proxy_address_get_type (void) G_GNUC_CONST;";function g_proxy_address_get_type() bind(c)
g;g_proxy_address_get_uri;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyaddress.h;"const gchar *g_proxy_address_get_uri (GProxyAddress *proxy);";function g_proxy_address_get_uri(proxy) bind(c)
g;g_proxy_address_get_username;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyaddress.h;"const gchar *g_proxy_address_get_username (GProxyAddress *proxy);";function g_proxy_address_get_username(proxy) bind(c)
g;g_proxy_address_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyaddress.h;"GSocketAddress *g_proxy_address_new (GInetAddress *inetaddr, guint16 port, const gchar *protocol, const gchar *dest_hostname, guint16 dest_port, const gchar *username, const gchar *password);";function g_proxy_address_new(inetaddr, port, protocol, dest_hostname, dest_port, username, password) bind(c)
g;g_proxy_connect;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxy.h;"GIOStream *g_proxy_connect (GProxy *proxy, GIOStream *connection, GProxyAddress *proxy_address, GCancellable *cancellable, GError **error);";function g_proxy_connect(proxy, connection, proxy_address, cancellable, error) bind(c)
g;g_proxy_connect_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxy.h;"void g_proxy_connect_async (GProxy *proxy, GIOStream *connection, GProxyAddress *proxy_address, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_proxy_connect_async(proxy, connection, proxy_address, cancellable, callback, user_data) bind(c)
g;g_proxy_connect_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxy.h;"GIOStream *g_proxy_connect_finish (GProxy *proxy, GAsyncResult *result, GError **error);";function g_proxy_connect_finish(proxy, result, error) bind(c)
g;g_proxy_get_default_for_protocol;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxy.h;"GProxy *g_proxy_get_default_for_protocol (const gchar *protocol);";function g_proxy_get_default_for_protocol(protocol) bind(c)
g;g_proxy_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxy.h;"GType g_proxy_get_type (void) G_GNUC_CONST;";function g_proxy_get_type() bind(c)
g;g_proxy_resolver_get_default;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyresolver.h;"GProxyResolver *g_proxy_resolver_get_default (void);";function g_proxy_resolver_get_default() bind(c)
g;g_proxy_resolver_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyresolver.h;"GType g_proxy_resolver_get_type (void) G_GNUC_CONST;";function g_proxy_resolver_get_type() bind(c)
g;g_proxy_resolver_is_supported;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyresolver.h;"gboolean g_proxy_resolver_is_supported (GProxyResolver *resolver);";function g_proxy_resolver_is_supported(resolver) bind(c)
g;g_proxy_resolver_lookup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyresolver.h;"gchar **g_proxy_resolver_lookup (GProxyResolver *resolver, const gchar *uri, GCancellable *cancellable, GError **error);";function g_proxy_resolver_lookup(resolver, uri, cancellable, error) bind(c)
g;g_proxy_resolver_lookup_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyresolver.h;"void g_proxy_resolver_lookup_async (GProxyResolver *resolver, const gchar *uri, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_proxy_resolver_lookup_async(resolver, uri, cancellable, callback, user_data) bind(c)
g;g_proxy_resolver_lookup_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxyresolver.h;"gchar **g_proxy_resolver_lookup_finish (GProxyResolver *resolver, GAsyncResult *result, GError **error);";function g_proxy_resolver_lookup_finish(resolver, result, error) bind(c)
g;g_proxy_supports_hostname;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gproxy.h;"gboolean g_proxy_supports_hostname (GProxy *proxy);";function g_proxy_supports_hostname(proxy) bind(c)
g;g_ptr_array_add;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_ptr_array_add (GPtrArray *array, gpointer data);";subroutine g_ptr_array_add(array, data) bind(c)
g;g_ptr_array_copy;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GPtrArray *g_ptr_array_copy (GPtrArray *array, GCopyFunc func, gpointer user_data);";function g_ptr_array_copy(array, func, user_data) bind(c)
g;g_ptr_array_extend;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_ptr_array_extend (GPtrArray *array_to_extend, GPtrArray *array, GCopyFunc func, gpointer user_data);";subroutine g_ptr_array_extend(array_to_extend, array, func, user_data) bind(c)
g;g_ptr_array_extend_and_steal;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_ptr_array_extend_and_steal (GPtrArray *array_to_extend, GPtrArray *array);";subroutine g_ptr_array_extend_and_steal(array_to_extend, array) bind(c)
g;g_ptr_array_find;GLIB_AVAILABLE_IN_2_54;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gboolean g_ptr_array_find (GPtrArray *haystack, gconstpointer needle, guint *index_);";function g_ptr_array_find(haystack, needle, index_) bind(c)
g;g_ptr_array_find_with_equal_func;GLIB_AVAILABLE_IN_2_54;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gboolean g_ptr_array_find_with_equal_func (GPtrArray *haystack, gconstpointer needle, GEqualFunc equal_func, guint *index_);";function g_ptr_array_find_with_equal_func(haystack, needle, equal_func, index_) bind(c)
g;g_ptr_array_foreach;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_ptr_array_foreach (GPtrArray *array, GFunc func, gpointer user_data);";subroutine g_ptr_array_foreach(array, func, user_data) bind(c)
g;g_ptr_array_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gpointer* g_ptr_array_free (GPtrArray *array, gboolean free_seg);";function g_ptr_array_free(array, free_seg) bind(c)
g;g_ptr_array_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_ptr_array_get_type (void) G_GNUC_CONST;";function g_ptr_array_get_type() bind(c)
g;g_ptr_array_insert;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_ptr_array_insert (GPtrArray *array, gint index_, gpointer data);";subroutine g_ptr_array_insert(array, index_, data) bind(c)
g;g_ptr_array_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GPtrArray* g_ptr_array_new (void);";function g_ptr_array_new() bind(c)
g;g_ptr_array_new_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GPtrArray* g_ptr_array_new_full (guint reserved_size, GDestroyNotify element_free_func);";function g_ptr_array_new_full(reserved_size, element_free_func) bind(c)
g;g_ptr_array_new_with_free_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GPtrArray* g_ptr_array_new_with_free_func (GDestroyNotify element_free_func);";function g_ptr_array_new_with_free_func(element_free_func) bind(c)
g;g_ptr_array_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GPtrArray* g_ptr_array_ref (GPtrArray *array);";function g_ptr_array_ref(array) bind(c)
g;g_ptr_array_remove;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gboolean g_ptr_array_remove (GPtrArray *array, gpointer data);";function g_ptr_array_remove(array, data) bind(c)
g;g_ptr_array_remove_fast;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gboolean g_ptr_array_remove_fast (GPtrArray *array, gpointer data);";function g_ptr_array_remove_fast(array, data) bind(c)
g;g_ptr_array_remove_index;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gpointer g_ptr_array_remove_index (GPtrArray *array, guint index_);";function g_ptr_array_remove_index(array, index_) bind(c)
g;g_ptr_array_remove_index_fast;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gpointer g_ptr_array_remove_index_fast (GPtrArray *array, guint index_);";function g_ptr_array_remove_index_fast(array, index_) bind(c)
g;g_ptr_array_remove_range;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GPtrArray *g_ptr_array_remove_range (GPtrArray *array, guint index_, guint length);";function g_ptr_array_remove_range(array, index_, length) bind(c)
g;g_ptr_array_set_free_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_ptr_array_set_free_func (GPtrArray *array, GDestroyNotify element_free_func);";subroutine g_ptr_array_set_free_func(array, element_free_func) bind(c)
g;g_ptr_array_set_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_ptr_array_set_size (GPtrArray *array, gint length);";subroutine g_ptr_array_set_size(array, length) bind(c)
g;g_ptr_array_sized_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"GPtrArray* g_ptr_array_sized_new (guint reserved_size);";function g_ptr_array_sized_new(reserved_size) bind(c)
g;g_ptr_array_sort;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_ptr_array_sort (GPtrArray *array, GCompareFunc compare_func);";subroutine g_ptr_array_sort(array, compare_func) bind(c)
g;g_ptr_array_sort_with_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_ptr_array_sort_with_data (GPtrArray *array, GCompareDataFunc compare_func, gpointer user_data);";subroutine g_ptr_array_sort_with_data(array, compare_func, user_data) bind(c)
g;g_ptr_array_steal;GLIB_AVAILABLE_IN_2_64;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gpointer* g_ptr_array_steal (GPtrArray *array, gsize *len);";function g_ptr_array_steal(array, len) bind(c)
g;g_ptr_array_steal_index;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gpointer g_ptr_array_steal_index (GPtrArray *array, guint index_);";function g_ptr_array_steal_index(array, index_) bind(c)
g;g_ptr_array_steal_index_fast;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"gpointer g_ptr_array_steal_index_fast (GPtrArray *array, guint index_);";function g_ptr_array_steal_index_fast(array, index_) bind(c)
g;g_ptr_array_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/garray.h;"void g_ptr_array_unref (GPtrArray *array);";subroutine g_ptr_array_unref(array) bind(c)
g;g_qsort_with_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqsort.h;"void g_qsort_with_data (gconstpointer pbase, gint total_elems, gsize size, GCompareDataFunc compare_func, gpointer user_data);";subroutine g_qsort_with_data(pbase, total_elems, size, compare_func, user_data) bind(c)
g;g_quark_from_static_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gquark.h;"GQuark g_quark_from_static_string (const gchar *string);";function g_quark_from_static_string(string) bind(c)
g;g_quark_from_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gquark.h;"GQuark g_quark_from_string (const gchar *string);";function g_quark_from_string(string) bind(c)
g;g_quark_to_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gquark.h;"const gchar * g_quark_to_string (GQuark quark) G_GNUC_CONST;";function g_quark_to_string(quark) bind(c)
g;g_quark_try_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gquark.h;"GQuark g_quark_try_string (const gchar *string);";function g_quark_try_string(string) bind(c)
g;g_queue_clear;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_clear (GQueue *queue);";subroutine g_queue_clear(queue) bind(c)
g;g_queue_clear_full;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_clear_full (GQueue *queue, GDestroyNotify free_func);";subroutine g_queue_clear_full(queue, free_func) bind(c)
g;g_queue_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"GQueue * g_queue_copy (GQueue *queue);";function g_queue_copy(queue) bind(c)
g;g_queue_delete_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_delete_link (GQueue *queue, GList *link_);";subroutine g_queue_delete_link(queue, link_) bind(c)
g;g_queue_find;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"GList * g_queue_find (GQueue *queue, gconstpointer data);";function g_queue_find(queue, data) bind(c)
g;g_queue_find_custom;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"GList * g_queue_find_custom (GQueue *queue, gconstpointer data, GCompareFunc func);";function g_queue_find_custom(queue, data, func) bind(c)
g;g_queue_foreach;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_foreach (GQueue *queue, GFunc func, gpointer user_data);";subroutine g_queue_foreach(queue, func, user_data) bind(c)
g;g_queue_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_free (GQueue *queue);";subroutine g_queue_free(queue) bind(c)
g;g_queue_free_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_free_full (GQueue *queue, GDestroyNotify free_func);";subroutine g_queue_free_full(queue, free_func) bind(c)
g;g_queue_get_length;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"guint g_queue_get_length (GQueue *queue);";function g_queue_get_length(queue) bind(c)
g;g_queue_index;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"gint g_queue_index (GQueue *queue, gconstpointer data);";function g_queue_index(queue, data) bind(c)
g;g_queue_init;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_init (GQueue *queue);";subroutine g_queue_init(queue) bind(c)
g;g_queue_insert_after;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_insert_after (GQueue *queue, GList *sibling, gpointer data);";subroutine g_queue_insert_after(queue, sibling, data) bind(c)
g;g_queue_insert_after_link;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_insert_after_link (GQueue *queue, GList *sibling, GList *link_);";subroutine g_queue_insert_after_link(queue, sibling, link_) bind(c)
g;g_queue_insert_before;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_insert_before (GQueue *queue, GList *sibling, gpointer data);";subroutine g_queue_insert_before(queue, sibling, data) bind(c)
g;g_queue_insert_before_link;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_insert_before_link (GQueue *queue, GList *sibling, GList *link_);";subroutine g_queue_insert_before_link(queue, sibling, link_) bind(c)
g;g_queue_insert_sorted;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_insert_sorted (GQueue *queue, gpointer data, GCompareDataFunc func, gpointer user_data);";subroutine g_queue_insert_sorted(queue, data, func, user_data) bind(c)
g;g_queue_is_empty;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"gboolean g_queue_is_empty (GQueue *queue);";function g_queue_is_empty(queue) bind(c)
g;g_queue_link_index;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"gint g_queue_link_index (GQueue *queue, GList *link_);";function g_queue_link_index(queue, link_) bind(c)
g;g_queue_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"GQueue* g_queue_new (void);";function g_queue_new() bind(c)
g;g_queue_peek_head;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"gpointer g_queue_peek_head (GQueue *queue);";function g_queue_peek_head(queue) bind(c)
g;g_queue_peek_head_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"GList* g_queue_peek_head_link (GQueue *queue);";function g_queue_peek_head_link(queue) bind(c)
g;g_queue_peek_nth;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"gpointer g_queue_peek_nth (GQueue *queue, guint n);";function g_queue_peek_nth(queue, n) bind(c)
g;g_queue_peek_nth_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"GList* g_queue_peek_nth_link (GQueue *queue, guint n);";function g_queue_peek_nth_link(queue, n) bind(c)
g;g_queue_peek_tail;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"gpointer g_queue_peek_tail (GQueue *queue);";function g_queue_peek_tail(queue) bind(c)
g;g_queue_peek_tail_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"GList* g_queue_peek_tail_link (GQueue *queue);";function g_queue_peek_tail_link(queue) bind(c)
g;g_queue_pop_head;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"gpointer g_queue_pop_head (GQueue *queue);";function g_queue_pop_head(queue) bind(c)
g;g_queue_pop_head_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"GList* g_queue_pop_head_link (GQueue *queue);";function g_queue_pop_head_link(queue) bind(c)
g;g_queue_pop_nth;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"gpointer g_queue_pop_nth (GQueue *queue, guint n);";function g_queue_pop_nth(queue, n) bind(c)
g;g_queue_pop_nth_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"GList* g_queue_pop_nth_link (GQueue *queue, guint n);";function g_queue_pop_nth_link(queue, n) bind(c)
g;g_queue_pop_tail;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"gpointer g_queue_pop_tail (GQueue *queue);";function g_queue_pop_tail(queue) bind(c)
g;g_queue_pop_tail_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"GList* g_queue_pop_tail_link (GQueue *queue);";function g_queue_pop_tail_link(queue) bind(c)
g;g_queue_push_head;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_push_head (GQueue *queue, gpointer data);";subroutine g_queue_push_head(queue, data) bind(c)
g;g_queue_push_head_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_push_head_link (GQueue *queue, GList *link_);";subroutine g_queue_push_head_link(queue, link_) bind(c)
g;g_queue_push_nth;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_push_nth (GQueue *queue, gpointer data, gint n);";subroutine g_queue_push_nth(queue, data, n) bind(c)
g;g_queue_push_nth_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_push_nth_link (GQueue *queue, gint n, GList *link_);";subroutine g_queue_push_nth_link(queue, n, link_) bind(c)
g;g_queue_push_tail;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_push_tail (GQueue *queue, gpointer data);";subroutine g_queue_push_tail(queue, data) bind(c)
g;g_queue_push_tail_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_push_tail_link (GQueue *queue, GList *link_);";subroutine g_queue_push_tail_link(queue, link_) bind(c)
g;g_queue_remove;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"gboolean g_queue_remove (GQueue *queue, gconstpointer data);";function g_queue_remove(queue, data) bind(c)
g;g_queue_remove_all;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"guint g_queue_remove_all (GQueue *queue, gconstpointer data);";function g_queue_remove_all(queue, data) bind(c)
g;g_queue_reverse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_reverse (GQueue *queue);";subroutine g_queue_reverse(queue) bind(c)
g;g_queue_sort;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_sort (GQueue *queue, GCompareDataFunc compare_func, gpointer user_data);";subroutine g_queue_sort(queue, compare_func, user_data) bind(c)
g;g_queue_unlink;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gqueue.h;"void g_queue_unlink (GQueue *queue, GList *link_);";subroutine g_queue_unlink(queue, link_) bind(c)
g;g_rand_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"GRand* g_rand_copy (GRand *rand_);";function g_rand_copy(rand_) bind(c)
g;g_rand_double;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"gdouble g_rand_double (GRand *rand_);";function g_rand_double(rand_) bind(c)
g;g_rand_double_range;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"gdouble g_rand_double_range (GRand *rand_, gdouble begin, gdouble end);";function g_rand_double_range(rand_, begin, end) bind(c)
g;g_rand_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"void g_rand_free (GRand *rand_);";subroutine g_rand_free(rand_) bind(c)
g;g_rand_int;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"guint32 g_rand_int (GRand *rand_);";function g_rand_int(rand_) bind(c)
g;g_rand_int_range;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"gint32 g_rand_int_range (GRand *rand_, gint32 begin, gint32 end);";function g_rand_int_range(rand_, begin, end) bind(c)
g;g_rand_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"GRand* g_rand_new (void);";function g_rand_new() bind(c)
g;g_rand_new_with_seed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"GRand* g_rand_new_with_seed (guint32 seed);";function g_rand_new_with_seed(seed) bind(c)
g;g_rand_new_with_seed_array;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"GRand* g_rand_new_with_seed_array (const guint32 *seed, guint seed_length);";function g_rand_new_with_seed_array(seed, seed_length) bind(c)
g;g_rand_set_seed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"void g_rand_set_seed (GRand *rand_, guint32 seed);";subroutine g_rand_set_seed(rand_, seed) bind(c)
g;g_rand_set_seed_array;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"void g_rand_set_seed_array (GRand *rand_, const guint32 *seed, guint seed_length);";subroutine g_rand_set_seed_array(rand_, seed, seed_length) bind(c)
g;g_random_double;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"gdouble g_random_double (void);";function g_random_double() bind(c)
g;g_random_double_range;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"gdouble g_random_double_range (gdouble begin, gdouble end);";function g_random_double_range(begin, end) bind(c)
g;g_random_int;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"guint32 g_random_int (void);";function g_random_int() bind(c)
g;g_random_int_range;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"gint32 g_random_int_range (gint32 begin, gint32 end);";function g_random_int_range(begin, end) bind(c)
g;g_random_set_seed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/grand.h;"void g_random_set_seed (guint32 seed);";subroutine g_random_set_seed(seed) bind(c)
g;g_rc_box_acquire;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"gpointer g_rc_box_acquire (gpointer mem_block);";function g_rc_box_acquire(mem_block) bind(c)
g;g_rc_box_alloc;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"gpointer g_rc_box_alloc (gsize block_size) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE(1);";function g_rc_box_alloc(block_size) bind(c)
g;g_rc_box_alloc0;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"gpointer g_rc_box_alloc0 (gsize block_size) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE(1);";function g_rc_box_alloc0(block_size) bind(c)
g;g_rc_box_dup;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"gpointer g_rc_box_dup (gsize block_size, gconstpointer mem_block) G_GNUC_ALLOC_SIZE(1);";function g_rc_box_dup(block_size, mem_block) bind(c)
g;g_rc_box_get_size;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"gsize g_rc_box_get_size (gpointer mem_block);";function g_rc_box_get_size(mem_block) bind(c)
g;g_rc_box_release;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"void g_rc_box_release (gpointer mem_block);";subroutine g_rc_box_release(mem_block) bind(c)
g;g_rc_box_release_full;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grcbox.h;"void g_rc_box_release_full (gpointer mem_block, GDestroyNotify clear_func);";subroutine g_rc_box_release_full(mem_block, clear_func) bind(c)
g;g_realloc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gpointer g_realloc (gpointer mem, gsize n_bytes) G_GNUC_WARN_UNUSED_RESULT;";function g_realloc(mem, n_bytes) bind(c)
g;g_realloc_n;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gpointer g_realloc_n (gpointer mem, gsize n_blocks, gsize n_block_bytes) G_GNUC_WARN_UNUSED_RESULT;";function g_realloc_n(mem, n_blocks, n_block_bytes) bind(c)
g;g_rec_mutex_clear;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_rec_mutex_clear (GRecMutex *rec_mutex);";subroutine g_rec_mutex_clear(rec_mutex) bind(c)
g;g_rec_mutex_init;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_rec_mutex_init (GRecMutex *rec_mutex);";subroutine g_rec_mutex_init(rec_mutex) bind(c)
g;g_rec_mutex_lock;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_rec_mutex_lock (GRecMutex *rec_mutex);";subroutine g_rec_mutex_lock(rec_mutex) bind(c)
g;g_rec_mutex_trylock;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"gboolean g_rec_mutex_trylock (GRecMutex *rec_mutex);";function g_rec_mutex_trylock(rec_mutex) bind(c)
g;g_rec_mutex_unlock;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_rec_mutex_unlock (GRecMutex *rec_mutex);";subroutine g_rec_mutex_unlock(rec_mutex) bind(c)
g;g_ref_count_compare;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefcount.h;"gboolean g_ref_count_compare (grefcount *rc, gint val);";function g_ref_count_compare(rc, val) bind(c)
g;g_ref_count_dec;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefcount.h;"gboolean g_ref_count_dec (grefcount *rc);";function g_ref_count_dec(rc) bind(c)
g;g_ref_count_inc;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefcount.h;"void g_ref_count_inc (grefcount *rc);";subroutine g_ref_count_inc(rc) bind(c)
g;g_ref_count_init;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefcount.h;"void g_ref_count_init (grefcount *rc);";subroutine g_ref_count_init(rc) bind(c)
g;g_ref_string_acquire;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefstring.h;"char * g_ref_string_acquire (char *str);";function g_ref_string_acquire(str) bind(c)
g;g_ref_string_length;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefstring.h;"gsize g_ref_string_length (char *str);";function g_ref_string_length(str) bind(c)
g;g_ref_string_new;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefstring.h;"char * g_ref_string_new (const char *str);";function g_ref_string_new(str) bind(c)
g;g_ref_string_new_intern;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefstring.h;"char * g_ref_string_new_intern (const char *str);";function g_ref_string_new_intern(str) bind(c)
g;g_ref_string_new_len;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefstring.h;"char * g_ref_string_new_len (const char *str, gssize len);";function g_ref_string_new_len(str, len) bind(c)
g;g_ref_string_release;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/grefstring.h;"void g_ref_string_release (char *str);";subroutine g_ref_string_release(str) bind(c)
g;g_regex_check_replacement;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gboolean g_regex_check_replacement (const gchar *replacement, gboolean *has_references, GError **error);";function g_regex_check_replacement(replacement, has_references, error) bind(c)
g;g_regex_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"GQuark g_regex_error_quark (void);";function g_regex_error_quark() bind(c)
g;g_regex_escape_nul;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gchar *g_regex_escape_nul (const gchar *string, gint length);";function g_regex_escape_nul(string, length) bind(c)
g;g_regex_escape_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gchar *g_regex_escape_string (const gchar *string, gint length);";function g_regex_escape_string(string, length) bind(c)
g;g_regex_get_capture_count;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gint g_regex_get_capture_count (const GRegex *regex);";function g_regex_get_capture_count(regex) bind(c)
g;g_regex_get_compile_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"GRegexCompileFlags g_regex_get_compile_flags (const GRegex *regex);";function g_regex_get_compile_flags(regex) bind(c)
g;g_regex_get_has_cr_or_lf;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gboolean g_regex_get_has_cr_or_lf (const GRegex *regex);";function g_regex_get_has_cr_or_lf(regex) bind(c)
g;g_regex_get_match_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"GRegexMatchFlags g_regex_get_match_flags (const GRegex *regex);";function g_regex_get_match_flags(regex) bind(c)
g;g_regex_get_max_backref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gint g_regex_get_max_backref (const GRegex *regex);";function g_regex_get_max_backref(regex) bind(c)
g;g_regex_get_max_lookbehind;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gint g_regex_get_max_lookbehind (const GRegex *regex);";function g_regex_get_max_lookbehind(regex) bind(c)
g;g_regex_get_pattern;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"const gchar *g_regex_get_pattern (const GRegex *regex);";function g_regex_get_pattern(regex) bind(c)
g;g_regex_get_string_number;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gint g_regex_get_string_number (const GRegex *regex, const gchar *name);";function g_regex_get_string_number(regex, name) bind(c)
g;g_regex_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_regex_get_type (void) G_GNUC_CONST;";function g_regex_get_type() bind(c)
g;g_regex_match;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gboolean g_regex_match (const GRegex *regex, const gchar *string, GRegexMatchFlags match_options, GMatchInfo **match_info);";function g_regex_match(regex, string, match_options, match_info) bind(c)
g;g_regex_match_all;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gboolean g_regex_match_all (const GRegex *regex, const gchar *string, GRegexMatchFlags match_options, GMatchInfo **match_info);";function g_regex_match_all(regex, string, match_options, match_info) bind(c)
g;g_regex_match_all_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gboolean g_regex_match_all_full (const GRegex *regex, const gchar *string, gssize string_len, gint start_position, GRegexMatchFlags match_options, GMatchInfo **match_info, GError **error);";function g_regex_match_all_full(regex, string, string_len, start_position, match_options, match_info, error) bind(c)
g;g_regex_match_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gboolean g_regex_match_full (const GRegex *regex, const gchar *string, gssize string_len, gint start_position, GRegexMatchFlags match_options, GMatchInfo **match_info, GError **error);";function g_regex_match_full(regex, string, string_len, start_position, match_options, match_info, error) bind(c)
g;g_regex_match_simple;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gboolean g_regex_match_simple (const gchar *pattern, const gchar *string, GRegexCompileFlags compile_options, GRegexMatchFlags match_options);";function g_regex_match_simple(pattern, string, compile_options, match_options) bind(c)
g;g_regex_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"GRegex *g_regex_new (const gchar *pattern, GRegexCompileFlags compile_options, GRegexMatchFlags match_options, GError **error);";function g_regex_new(pattern, compile_options, match_options, error) bind(c)
g;g_regex_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"GRegex *g_regex_ref (GRegex *regex);";function g_regex_ref(regex) bind(c)
g;g_regex_replace;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gchar *g_regex_replace (const GRegex *regex, const gchar *string, gssize string_len, gint start_position, const gchar *replacement, GRegexMatchFlags match_options, GError **error);";function g_regex_replace(regex, string, string_len, start_position, replacement, match_options, error) bind(c)
g;g_regex_replace_eval;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gchar *g_regex_replace_eval (const GRegex *regex, const gchar *string, gssize string_len, gint start_position, GRegexMatchFlags match_options, GRegexEvalCallback eval, gpointer user_data, GError **error);";function g_regex_replace_eval(regex, string, string_len, start_position, match_options, eval, user_data, error) bind(c)
g;g_regex_replace_literal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gchar *g_regex_replace_literal (const GRegex *regex, const gchar *string, gssize string_len, gint start_position, const gchar *replacement, GRegexMatchFlags match_options, GError **error);";function g_regex_replace_literal(regex, string, string_len, start_position, replacement, match_options, error) bind(c)
g;g_regex_split;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gchar **g_regex_split (const GRegex *regex, const gchar *string, GRegexMatchFlags match_options);";function g_regex_split(regex, string, match_options) bind(c)
g;g_regex_split_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gchar **g_regex_split_full (const GRegex *regex, const gchar *string, gssize string_len, gint start_position, GRegexMatchFlags match_options, gint max_tokens, GError **error);";function g_regex_split_full(regex, string, string_len, start_position, match_options, max_tokens, error) bind(c)
g;g_regex_split_simple;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"gchar **g_regex_split_simple (const gchar *pattern, const gchar *string, GRegexCompileFlags compile_options, GRegexMatchFlags match_options);";function g_regex_split_simple(pattern, string, compile_options, match_options) bind(c)
g;g_regex_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gregex.h;"void g_regex_unref (GRegex *regex);";subroutine g_regex_unref(regex) bind(c)
g;g_relation_count;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/grel.h;"gint g_relation_count (GRelation *relation, gconstpointer key, gint field);";function g_relation_count(relation, key, field) bind(c)
g;g_relation_delete;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/grel.h;"gint g_relation_delete (GRelation *relation, gconstpointer key, gint field);";function g_relation_delete(relation, key, field) bind(c)
g;g_relation_destroy;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/grel.h;"void g_relation_destroy (GRelation *relation);";subroutine g_relation_destroy(relation) bind(c)
g;g_relation_index;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/grel.h;"void g_relation_index (GRelation *relation, gint field, GHashFunc hash_func, GEqualFunc key_equal_func);";subroutine g_relation_index(relation, field, hash_func, key_equal_func) bind(c)
g;g_relation_new;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/grel.h;"GRelation* g_relation_new (gint fields);";function g_relation_new(fields) bind(c)
g;g_relation_print;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/grel.h;"void g_relation_print (GRelation *relation);";subroutine g_relation_print(relation) bind(c)
g;g_relation_select;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/grel.h;"GTuples* g_relation_select (GRelation *relation, gconstpointer key, gint field);";function g_relation_select(relation, key, field) bind(c)
g;g_reload_user_special_dirs_cache;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"void g_reload_user_special_dirs_cache (void);";subroutine g_reload_user_special_dirs_cache() bind(c)
g;g_remote_action_group_activate_action_full;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gremoteactiongroup.h;"void g_remote_action_group_activate_action_full (GRemoteActionGroup *remote, const gchar *action_name, GVariant *parameter, GVariant *platform_data);";subroutine g_remote_action_group_activate_action_full(remote, action_name, parameter, platform_data) bind(c)
g;g_remote_action_group_change_action_state_full;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gremoteactiongroup.h;"void g_remote_action_group_change_action_state_full (GRemoteActionGroup *remote, const gchar *action_name, GVariant *value, GVariant *platform_data);";subroutine g_remote_action_group_change_action_state_full(remote, action_name, value, platform_data) bind(c)
g;g_remote_action_group_get_type;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gremoteactiongroup.h;"GType g_remote_action_group_get_type (void) G_GNUC_CONST;";function g_remote_action_group_get_type() bind(c)
g;g_remove;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_remove (const gchar *filename);";function g_remove(filename) bind(c)
g;g_rename;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_rename (const gchar *oldfilename, const gchar *newfilename);";function g_rename(oldfilename, newfilename) bind(c)
g;g_resolver_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"GQuark g_resolver_error_quark (void);";function g_resolver_error_quark() bind(c)
g;g_resolver_free_addresses;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"void g_resolver_free_addresses (GList *addresses);";subroutine g_resolver_free_addresses(addresses) bind(c)
g;g_resolver_free_targets;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"void g_resolver_free_targets (GList *targets);";subroutine g_resolver_free_targets(targets) bind(c)
g;g_resolver_get_default;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"GResolver *g_resolver_get_default (void);";function g_resolver_get_default() bind(c)
g;g_resolver_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"GType g_resolver_get_type (void) G_GNUC_CONST;";function g_resolver_get_type() bind(c)
g;g_resolver_lookup_by_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"gchar *g_resolver_lookup_by_address (GResolver *resolver, GInetAddress *address, GCancellable *cancellable, GError **error);";function g_resolver_lookup_by_address(resolver, address, cancellable, error) bind(c)
g;g_resolver_lookup_by_address_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"void g_resolver_lookup_by_address_async (GResolver *resolver, GInetAddress *address, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_resolver_lookup_by_address_async(resolver, address, cancellable, callback, user_data) bind(c)
g;g_resolver_lookup_by_address_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"gchar *g_resolver_lookup_by_address_finish (GResolver *resolver, GAsyncResult *result, GError **error);";function g_resolver_lookup_by_address_finish(resolver, result, error) bind(c)
g;g_resolver_lookup_by_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"GList *g_resolver_lookup_by_name (GResolver *resolver, const gchar *hostname, GCancellable *cancellable, GError **error);";function g_resolver_lookup_by_name(resolver, hostname, cancellable, error) bind(c)
g;g_resolver_lookup_by_name_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"void g_resolver_lookup_by_name_async (GResolver *resolver, const gchar *hostname, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_resolver_lookup_by_name_async(resolver, hostname, cancellable, callback, user_data) bind(c)
g;g_resolver_lookup_by_name_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"GList *g_resolver_lookup_by_name_finish (GResolver *resolver, GAsyncResult *result, GError **error);";function g_resolver_lookup_by_name_finish(resolver, result, error) bind(c)
g;g_resolver_lookup_by_name_with_flags;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"GList *g_resolver_lookup_by_name_with_flags (GResolver *resolver, const gchar *hostname, GResolverNameLookupFlags flags, GCancellable *cancellable, GError **error);";function g_resolver_lookup_by_name_with_flags(resolver, hostname, flags, cancellable, error) bind(c)
g;g_resolver_lookup_by_name_with_flags_async;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"void g_resolver_lookup_by_name_with_flags_async (GResolver *resolver, const gchar *hostname, GResolverNameLookupFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_resolver_lookup_by_name_with_flags_async(resolver, hostname, flags, cancellable, callback, user_data) bind(c)
g;g_resolver_lookup_by_name_with_flags_finish;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"GList *g_resolver_lookup_by_name_with_flags_finish (GResolver *resolver, GAsyncResult *result, GError **error);";function g_resolver_lookup_by_name_with_flags_finish(resolver, result, error) bind(c)
g;g_resolver_lookup_records;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"GList *g_resolver_lookup_records (GResolver *resolver, const gchar *rrname, GResolverRecordType record_type, GCancellable *cancellable, GError **error);";function g_resolver_lookup_records(resolver, rrname, record_type, cancellable, error) bind(c)
g;g_resolver_lookup_records_async;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"void g_resolver_lookup_records_async (GResolver *resolver, const gchar *rrname, GResolverRecordType record_type, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_resolver_lookup_records_async(resolver, rrname, record_type, cancellable, callback, user_data) bind(c)
g;g_resolver_lookup_records_finish;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"GList *g_resolver_lookup_records_finish (GResolver *resolver, GAsyncResult *result, GError **error);";function g_resolver_lookup_records_finish(resolver, result, error) bind(c)
g;g_resolver_lookup_service;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"GList *g_resolver_lookup_service (GResolver *resolver, const gchar *service, const gchar *protocol, const gchar *domain, GCancellable *cancellable, GError **error);";function g_resolver_lookup_service(resolver, service, protocol, domain, cancellable, error) bind(c)
g;g_resolver_lookup_service_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"void g_resolver_lookup_service_async (GResolver *resolver, const gchar *service, const gchar *protocol, const gchar *domain, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_resolver_lookup_service_async(resolver, service, protocol, domain, cancellable, callback, user_data) bind(c)
g;g_resolver_lookup_service_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"GList *g_resolver_lookup_service_finish (GResolver *resolver, GAsyncResult *result, GError **error);";function g_resolver_lookup_service_finish(resolver, result, error) bind(c)
g;g_resolver_set_default;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gresolver.h;"void g_resolver_set_default (GResolver *resolver);";subroutine g_resolver_set_default(resolver) bind(c)
g;g_resource_enumerate_children;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"char ** g_resource_enumerate_children (GResource *resource, const char *path, GResourceLookupFlags lookup_flags, GError **error);";function g_resource_enumerate_children(resource, path, lookup_flags, error) bind(c)
g;g_resource_error_quark;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"GQuark g_resource_error_quark (void);";function g_resource_error_quark() bind(c)
g;g_resource_get_info;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"gboolean g_resource_get_info (GResource *resource, const char *path, GResourceLookupFlags lookup_flags, gsize *size, guint32 *flags, GError **error);";function g_resource_get_info(resource, path, lookup_flags, size, flags, error) bind(c)
g;g_resource_get_type;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"GType g_resource_get_type (void) G_GNUC_CONST;";function g_resource_get_type() bind(c)
g;g_resource_load;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"GResource * g_resource_load (const gchar *filename, GError **error);";function g_resource_load(filename, error) bind(c)
g;g_resource_lookup_data;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"GBytes * g_resource_lookup_data (GResource *resource, const char *path, GResourceLookupFlags lookup_flags, GError **error);";function g_resource_lookup_data(resource, path, lookup_flags, error) bind(c)
g;g_resource_new_from_data;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"GResource * g_resource_new_from_data (GBytes *data, GError **error);";function g_resource_new_from_data(data, error) bind(c)
g;g_resource_open_stream;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"GInputStream *g_resource_open_stream (GResource *resource, const char *path, GResourceLookupFlags lookup_flags, GError **error);";function g_resource_open_stream(resource, path, lookup_flags, error) bind(c)
g;g_resource_ref;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"GResource * g_resource_ref (GResource *resource);";function g_resource_ref(resource) bind(c)
g;g_resource_unref;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"void g_resource_unref (GResource *resource);";subroutine g_resource_unref(resource) bind(c)
g;g_resources_enumerate_children;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"char ** g_resources_enumerate_children (const char *path, GResourceLookupFlags lookup_flags, GError **error);";function g_resources_enumerate_children(path, lookup_flags, error) bind(c)
g;g_resources_get_info;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"gboolean g_resources_get_info (const char *path, GResourceLookupFlags lookup_flags, gsize *size, guint32 *flags, GError **error);";function g_resources_get_info(path, lookup_flags, size, flags, error) bind(c)
g;g_resources_lookup_data;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"GBytes * g_resources_lookup_data (const char *path, GResourceLookupFlags lookup_flags, GError **error);";function g_resources_lookup_data(path, lookup_flags, error) bind(c)
g;g_resources_open_stream;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"GInputStream *g_resources_open_stream (const char *path, GResourceLookupFlags lookup_flags, GError **error);";function g_resources_open_stream(path, lookup_flags, error) bind(c)
g;g_resources_register;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"void g_resources_register (GResource *resource);";subroutine g_resources_register(resource) bind(c)
g;g_resources_unregister;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"void g_resources_unregister (GResource *resource);";subroutine g_resources_unregister(resource) bind(c)
g;g_return_if_fail_warning;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"void g_return_if_fail_warning (const char *log_domain, const char *pretty_function, const char *expression) G_ANALYZER_NORETURN;";subroutine g_return_if_fail_warning(log_domain, pretty_function, expression) bind(c)
g;g_rmdir;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_rmdir (const gchar *filename);";function g_rmdir(filename) bind(c)
g;g_rw_lock_clear;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_rw_lock_clear (GRWLock *rw_lock);";subroutine g_rw_lock_clear(rw_lock) bind(c)
g;g_rw_lock_init;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_rw_lock_init (GRWLock *rw_lock);";subroutine g_rw_lock_init(rw_lock) bind(c)
g;g_rw_lock_reader_lock;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_rw_lock_reader_lock (GRWLock *rw_lock);";subroutine g_rw_lock_reader_lock(rw_lock) bind(c)
g;g_rw_lock_reader_trylock;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"gboolean g_rw_lock_reader_trylock (GRWLock *rw_lock);";function g_rw_lock_reader_trylock(rw_lock) bind(c)
g;g_rw_lock_reader_unlock;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_rw_lock_reader_unlock (GRWLock *rw_lock);";subroutine g_rw_lock_reader_unlock(rw_lock) bind(c)
g;g_rw_lock_writer_lock;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_rw_lock_writer_lock (GRWLock *rw_lock);";subroutine g_rw_lock_writer_lock(rw_lock) bind(c)
g;g_rw_lock_writer_trylock;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"gboolean g_rw_lock_writer_trylock (GRWLock *rw_lock);";function g_rw_lock_writer_trylock(rw_lock) bind(c)
g;g_rw_lock_writer_unlock;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_rw_lock_writer_unlock (GRWLock *rw_lock);";subroutine g_rw_lock_writer_unlock(rw_lock) bind(c)
g;g_scanner_cur_line;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"guint g_scanner_cur_line (GScanner *scanner);";function g_scanner_cur_line(scanner) bind(c)
g;g_scanner_cur_position;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"guint g_scanner_cur_position (GScanner *scanner);";function g_scanner_cur_position(scanner) bind(c)
g;g_scanner_cur_token;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"GTokenType g_scanner_cur_token (GScanner *scanner);";function g_scanner_cur_token(scanner) bind(c)
g;g_scanner_destroy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"void g_scanner_destroy (GScanner *scanner);";subroutine g_scanner_destroy(scanner) bind(c)
g;g_scanner_eof;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"gboolean g_scanner_eof (GScanner *scanner);";function g_scanner_eof(scanner) bind(c)
g;g_scanner_get_next_token;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"GTokenType g_scanner_get_next_token (GScanner *scanner);";function g_scanner_get_next_token(scanner) bind(c)
g;g_scanner_input_file;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"void g_scanner_input_file (GScanner *scanner, gint input_fd);";subroutine g_scanner_input_file(scanner, input_fd) bind(c)
g;g_scanner_input_text;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"void g_scanner_input_text (GScanner *scanner, const gchar *text, guint text_len);";subroutine g_scanner_input_text(scanner, text, text_len) bind(c)
g;g_scanner_lookup_symbol;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"gpointer g_scanner_lookup_symbol (GScanner *scanner, const gchar *symbol);";function g_scanner_lookup_symbol(scanner, symbol) bind(c)
g;g_scanner_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"GScanner* g_scanner_new (const GScannerConfig *config_templ);";function g_scanner_new(config_templ) bind(c)
g;g_scanner_peek_next_token;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"GTokenType g_scanner_peek_next_token (GScanner *scanner);";function g_scanner_peek_next_token(scanner) bind(c)
g;g_scanner_scope_add_symbol;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"void g_scanner_scope_add_symbol (GScanner *scanner, guint scope_id, const gchar *symbol, gpointer value);";subroutine g_scanner_scope_add_symbol(scanner, scope_id, symbol, value) bind(c)
g;g_scanner_scope_foreach_symbol;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"void g_scanner_scope_foreach_symbol (GScanner *scanner, guint scope_id, GHFunc func, gpointer user_data);";subroutine g_scanner_scope_foreach_symbol(scanner, scope_id, func, user_data) bind(c)
g;g_scanner_scope_lookup_symbol;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"gpointer g_scanner_scope_lookup_symbol (GScanner *scanner, guint scope_id, const gchar *symbol);";function g_scanner_scope_lookup_symbol(scanner, scope_id, symbol) bind(c)
g;g_scanner_scope_remove_symbol;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"void g_scanner_scope_remove_symbol (GScanner *scanner, guint scope_id, const gchar *symbol);";subroutine g_scanner_scope_remove_symbol(scanner, scope_id, symbol) bind(c)
g;g_scanner_set_scope;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"guint g_scanner_set_scope (GScanner *scanner, guint scope_id);";function g_scanner_set_scope(scanner, scope_id) bind(c)
g;g_scanner_sync_file_offset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"void g_scanner_sync_file_offset (GScanner *scanner);";subroutine g_scanner_sync_file_offset(scanner) bind(c)
g;g_scanner_unexp_token;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gscanner.h;"void g_scanner_unexp_token (GScanner *scanner, GTokenType expected_token, const gchar *identifier_spec, const gchar *symbol_spec, const gchar *symbol_name, const gchar *message, gint is_error);";subroutine g_scanner_unexp_token(scanner, expected_token, identifier_spec, symbol_spec, symbol_name, message, is_error) bind(c)
g;g_seekable_can_seek;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gseekable.h;"gboolean g_seekable_can_seek (GSeekable *seekable);";function g_seekable_can_seek(seekable) bind(c)
g;g_seekable_can_truncate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gseekable.h;"gboolean g_seekable_can_truncate (GSeekable *seekable);";function g_seekable_can_truncate(seekable) bind(c)
g;g_seekable_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gseekable.h;"GType g_seekable_get_type (void) G_GNUC_CONST;";function g_seekable_get_type() bind(c)
g;g_seekable_seek;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gseekable.h;"gboolean g_seekable_seek (GSeekable *seekable, goffset offset, GSeekType type, GCancellable *cancellable, GError **error);";function g_seekable_seek(seekable, offset, type, cancellable, error) bind(c)
g;g_seekable_tell;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gseekable.h;"goffset g_seekable_tell (GSeekable *seekable);";function g_seekable_tell(seekable) bind(c)
g;g_seekable_truncate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gseekable.h;"gboolean g_seekable_truncate (GSeekable *seekable, goffset offset, GCancellable *cancellable, GError **error);";function g_seekable_truncate(seekable, offset, cancellable, error) bind(c)
g;g_sequence_append;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_append (GSequence *seq, gpointer data);";function g_sequence_append(seq, data) bind(c)
g;g_sequence_foreach;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_foreach (GSequence *seq, GFunc func, gpointer user_data);";subroutine g_sequence_foreach(seq, func, user_data) bind(c)
g;g_sequence_foreach_range;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_foreach_range (GSequenceIter *begin, GSequenceIter *end, GFunc func, gpointer user_data);";subroutine g_sequence_foreach_range(begin, end, func, user_data) bind(c)
g;g_sequence_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_free (GSequence *seq);";subroutine g_sequence_free(seq) bind(c)
g;g_sequence_get;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"gpointer g_sequence_get (GSequenceIter *iter);";function g_sequence_get(iter) bind(c)
g;g_sequence_get_begin_iter;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_get_begin_iter (GSequence *seq);";function g_sequence_get_begin_iter(seq) bind(c)
g;g_sequence_get_end_iter;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_get_end_iter (GSequence *seq);";function g_sequence_get_end_iter(seq) bind(c)
g;g_sequence_get_iter_at_pos;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_get_iter_at_pos (GSequence *seq, gint pos);";function g_sequence_get_iter_at_pos(seq, pos) bind(c)
g;g_sequence_get_length;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"gint g_sequence_get_length (GSequence *seq);";function g_sequence_get_length(seq) bind(c)
g;g_sequence_insert_before;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_insert_before (GSequenceIter *iter, gpointer data);";function g_sequence_insert_before(iter, data) bind(c)
g;g_sequence_insert_sorted;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_insert_sorted (GSequence *seq, gpointer data, GCompareDataFunc cmp_func, gpointer cmp_data);";function g_sequence_insert_sorted(seq, data, cmp_func, cmp_data) bind(c)
g;g_sequence_insert_sorted_iter;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_insert_sorted_iter (GSequence *seq, gpointer data, GSequenceIterCompareFunc iter_cmp, gpointer cmp_data);";function g_sequence_insert_sorted_iter(seq, data, iter_cmp, cmp_data) bind(c)
g;g_sequence_is_empty;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"gboolean g_sequence_is_empty (GSequence *seq);";function g_sequence_is_empty(seq) bind(c)
g;g_sequence_iter_compare;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"gint g_sequence_iter_compare (GSequenceIter *a, GSequenceIter *b);";function g_sequence_iter_compare(a, b) bind(c)
g;g_sequence_iter_get_position;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"gint g_sequence_iter_get_position (GSequenceIter *iter);";function g_sequence_iter_get_position(iter) bind(c)
g;g_sequence_iter_get_sequence;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequence * g_sequence_iter_get_sequence (GSequenceIter *iter);";function g_sequence_iter_get_sequence(iter) bind(c)
g;g_sequence_iter_is_begin;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"gboolean g_sequence_iter_is_begin (GSequenceIter *iter);";function g_sequence_iter_is_begin(iter) bind(c)
g;g_sequence_iter_is_end;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"gboolean g_sequence_iter_is_end (GSequenceIter *iter);";function g_sequence_iter_is_end(iter) bind(c)
g;g_sequence_iter_move;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_iter_move (GSequenceIter *iter, gint delta);";function g_sequence_iter_move(iter, delta) bind(c)
g;g_sequence_iter_next;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_iter_next (GSequenceIter *iter);";function g_sequence_iter_next(iter) bind(c)
g;g_sequence_iter_prev;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_iter_prev (GSequenceIter *iter);";function g_sequence_iter_prev(iter) bind(c)
g;g_sequence_lookup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_lookup (GSequence *seq, gpointer data, GCompareDataFunc cmp_func, gpointer cmp_data);";function g_sequence_lookup(seq, data, cmp_func, cmp_data) bind(c)
g;g_sequence_lookup_iter;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_lookup_iter (GSequence *seq, gpointer data, GSequenceIterCompareFunc iter_cmp, gpointer cmp_data);";function g_sequence_lookup_iter(seq, data, iter_cmp, cmp_data) bind(c)
g;g_sequence_move;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_move (GSequenceIter *src, GSequenceIter *dest);";subroutine g_sequence_move(src, dest) bind(c)
g;g_sequence_move_range;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_move_range (GSequenceIter *dest, GSequenceIter *begin, GSequenceIter *end);";subroutine g_sequence_move_range(dest, begin, end) bind(c)
g;g_sequence_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequence * g_sequence_new (GDestroyNotify data_destroy);";function g_sequence_new(data_destroy) bind(c)
g;g_sequence_prepend;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_prepend (GSequence *seq, gpointer data);";function g_sequence_prepend(seq, data) bind(c)
g;g_sequence_range_get_midpoint;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_range_get_midpoint (GSequenceIter *begin, GSequenceIter *end);";function g_sequence_range_get_midpoint(begin, end) bind(c)
g;g_sequence_remove;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_remove (GSequenceIter *iter);";subroutine g_sequence_remove(iter) bind(c)
g;g_sequence_remove_range;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_remove_range (GSequenceIter *begin, GSequenceIter *end);";subroutine g_sequence_remove_range(begin, end) bind(c)
g;g_sequence_search;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_search (GSequence *seq, gpointer data, GCompareDataFunc cmp_func, gpointer cmp_data);";function g_sequence_search(seq, data, cmp_func, cmp_data) bind(c)
g;g_sequence_search_iter;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"GSequenceIter *g_sequence_search_iter (GSequence *seq, gpointer data, GSequenceIterCompareFunc iter_cmp, gpointer cmp_data);";function g_sequence_search_iter(seq, data, iter_cmp, cmp_data) bind(c)
g;g_sequence_set;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_set (GSequenceIter *iter, gpointer data);";subroutine g_sequence_set(iter, data) bind(c)
g;g_sequence_sort;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_sort (GSequence *seq, GCompareDataFunc cmp_func, gpointer cmp_data);";subroutine g_sequence_sort(seq, cmp_func, cmp_data) bind(c)
g;g_sequence_sort_changed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_sort_changed (GSequenceIter *iter, GCompareDataFunc cmp_func, gpointer cmp_data);";subroutine g_sequence_sort_changed(iter, cmp_func, cmp_data) bind(c)
g;g_sequence_sort_changed_iter;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_sort_changed_iter (GSequenceIter *iter, GSequenceIterCompareFunc iter_cmp, gpointer cmp_data);";subroutine g_sequence_sort_changed_iter(iter, iter_cmp, cmp_data) bind(c)
g;g_sequence_sort_iter;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_sort_iter (GSequence *seq, GSequenceIterCompareFunc cmp_func, gpointer cmp_data);";subroutine g_sequence_sort_iter(seq, cmp_func, cmp_data) bind(c)
g;g_sequence_swap;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gsequence.h;"void g_sequence_swap (GSequenceIter *a, GSequenceIter *b);";subroutine g_sequence_swap(a, b) bind(c)
g;g_set_application_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"void g_set_application_name (const gchar *application_name);";subroutine g_set_application_name(application_name) bind(c)
g;g_set_error_literal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gerror.h;"void g_set_error_literal (GError **err, GQuark domain, gint code, const gchar *message);";subroutine g_set_error_literal(err, domain, code, message) bind(c)
g;g_set_prgname;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"void g_set_prgname (const gchar *prgname);";subroutine g_set_prgname(prgname) bind(c)
g;g_set_print_handler;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"GPrintFunc g_set_print_handler (GPrintFunc func);";function g_set_print_handler(func) bind(c)
g;g_set_printerr_handler;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"GPrintFunc g_set_printerr_handler (GPrintFunc func);";function g_set_printerr_handler(func) bind(c)
g;g_setenv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/genviron.h;"gboolean g_setenv (const gchar *variable, const gchar *value, gboolean overwrite);";function g_setenv(variable, value, overwrite) bind(c)
g;g_settings_apply;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"void g_settings_apply (GSettings *settings);";subroutine g_settings_apply(settings) bind(c)
g;g_settings_backend_changed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsbackend.h;"void g_settings_backend_changed (GSettingsBackend *backend, const gchar *key, gpointer origin_tag);";subroutine g_settings_backend_changed(backend, key, origin_tag) bind(c)
g;g_settings_backend_changed_tree;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsbackend.h;"void g_settings_backend_changed_tree (GSettingsBackend *backend, GTree *tree, gpointer origin_tag);";subroutine g_settings_backend_changed_tree(backend, tree, origin_tag) bind(c)
g;g_settings_backend_flatten_tree;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsbackend.h;"void g_settings_backend_flatten_tree (GTree *tree, gchar **path, const gchar ***keys, GVariant ***values);";subroutine g_settings_backend_flatten_tree(tree, path, keys, values) bind(c)
g;g_settings_backend_get_default;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsbackend.h;"GSettingsBackend * g_settings_backend_get_default (void);";function g_settings_backend_get_default() bind(c)
g;g_settings_backend_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsbackend.h;"GType g_settings_backend_get_type (void);";function g_settings_backend_get_type() bind(c)
g;g_settings_backend_keys_changed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsbackend.h;"void g_settings_backend_keys_changed (GSettingsBackend *backend, const gchar *path, gchar const * const *items, gpointer origin_tag);";subroutine g_settings_backend_keys_changed(backend, path, items, origin_tag) bind(c)
g;g_settings_backend_path_changed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsbackend.h;"void g_settings_backend_path_changed (GSettingsBackend *backend, const gchar *path, gpointer origin_tag);";subroutine g_settings_backend_path_changed(backend, path, origin_tag) bind(c)
g;g_settings_backend_path_writable_changed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsbackend.h;"void g_settings_backend_path_writable_changed (GSettingsBackend *backend, const gchar *path);";subroutine g_settings_backend_path_writable_changed(backend, path) bind(c)
g;g_settings_backend_writable_changed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsbackend.h;"void g_settings_backend_writable_changed (GSettingsBackend *backend, const gchar *key);";subroutine g_settings_backend_writable_changed(backend, key) bind(c)
g;g_settings_bind;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"void g_settings_bind (GSettings *settings, const gchar *key, gpointer object, const gchar *property, GSettingsBindFlags flags);";subroutine g_settings_bind(settings, key, object, property, flags) bind(c)
g;g_settings_bind_with_mapping;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"void g_settings_bind_with_mapping (GSettings *settings, const gchar *key, gpointer object, const gchar *property, GSettingsBindFlags flags, GSettingsBindGetMapping get_mapping, GSettingsBindSetMapping set_mapping, gpointer user_data, GDestroyNotify destroy);";subroutine g_settings_bind_with_mapping(settings, key, object, property, flags, get_mapping, set_mapping, user_data, destroy) bind(c)
g;g_settings_bind_writable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"void g_settings_bind_writable (GSettings *settings, const gchar *key, gpointer object, const gchar *property, gboolean inverted);";subroutine g_settings_bind_writable(settings, key, object, property, inverted) bind(c)
g;g_settings_create_action;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"GAction * g_settings_create_action (GSettings *settings, const gchar *key);";function g_settings_create_action(settings, key) bind(c)
g;g_settings_delay;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"void g_settings_delay (GSettings *settings);";subroutine g_settings_delay(settings) bind(c)
g;g_settings_get_boolean;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_get_boolean (GSettings *settings, const gchar *key);";function g_settings_get_boolean(settings, key) bind(c)
g;g_settings_get_child;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"GSettings * g_settings_get_child (GSettings *settings, const gchar *name);";function g_settings_get_child(settings, name) bind(c)
g;g_settings_get_default_value;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"GVariant * g_settings_get_default_value (GSettings *settings, const gchar *key);";function g_settings_get_default_value(settings, key) bind(c)
g;g_settings_get_double;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gdouble g_settings_get_double (GSettings *settings, const gchar *key);";function g_settings_get_double(settings, key) bind(c)
g;g_settings_get_enum;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gint g_settings_get_enum (GSettings *settings, const gchar *key);";function g_settings_get_enum(settings, key) bind(c)
g;g_settings_get_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"guint g_settings_get_flags (GSettings *settings, const gchar *key);";function g_settings_get_flags(settings, key) bind(c)
g;g_settings_get_has_unapplied;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_get_has_unapplied (GSettings *settings);";function g_settings_get_has_unapplied(settings) bind(c)
g;g_settings_get_int;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gint g_settings_get_int (GSettings *settings, const gchar *key);";function g_settings_get_int(settings, key) bind(c)
g;g_settings_get_int64;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gint64 g_settings_get_int64 (GSettings *settings, const gchar *key);";function g_settings_get_int64(settings, key) bind(c)
g;g_settings_get_mapped;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gpointer g_settings_get_mapped (GSettings *settings, const gchar *key, GSettingsGetMapping mapping, gpointer user_data);";function g_settings_get_mapped(settings, key, mapping, user_data) bind(c)
g;g_settings_get_range;GLIB_DEPRECATED_IN_2_40_FOR(g_settings_schema_key_get_range);glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"GVariant * g_settings_get_range (GSettings *settings, const gchar *key);";function g_settings_get_range(settings, key) bind(c)
g;g_settings_get_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gchar * g_settings_get_string (GSettings *settings, const gchar *key);";function g_settings_get_string(settings, key) bind(c)
g;g_settings_get_strv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gchar ** g_settings_get_strv (GSettings *settings, const gchar *key);";function g_settings_get_strv(settings, key) bind(c)
g;g_settings_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"GType g_settings_get_type (void);";function g_settings_get_type() bind(c)
g;g_settings_get_uint;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"guint g_settings_get_uint (GSettings *settings, const gchar *key);";function g_settings_get_uint(settings, key) bind(c)
g;g_settings_get_uint64;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"guint64 g_settings_get_uint64 (GSettings *settings, const gchar *key);";function g_settings_get_uint64(settings, key) bind(c)
g;g_settings_get_user_value;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"GVariant * g_settings_get_user_value (GSettings *settings, const gchar *key);";function g_settings_get_user_value(settings, key) bind(c)
g;g_settings_get_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"GVariant * g_settings_get_value (GSettings *settings, const gchar *key);";function g_settings_get_value(settings, key) bind(c)
g;g_settings_is_writable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_is_writable (GSettings *settings, const gchar *name);";function g_settings_is_writable(settings, name) bind(c)
g;g_settings_list_children;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gchar ** g_settings_list_children (GSettings *settings);";function g_settings_list_children(settings) bind(c)
g;g_settings_list_keys;GLIB_DEPRECATED_IN_2_46_FOR(g_settings_schema_list_keys);glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gchar ** g_settings_list_keys (GSettings *settings);";function g_settings_list_keys(settings) bind(c)
g;g_settings_list_relocatable_schemas;GLIB_DEPRECATED_IN_2_40_FOR(g_settings_schema_source_list_schemas);glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"const gchar * const * g_settings_list_relocatable_schemas (void);";function g_settings_list_relocatable_schemas() bind(c)
g;g_settings_list_schemas;GLIB_DEPRECATED_IN_2_40_FOR(g_settings_schema_source_list_schemas);glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"const gchar * const * g_settings_list_schemas (void);";function g_settings_list_schemas() bind(c)
g;g_settings_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"GSettings * g_settings_new (const gchar *schema_id);";function g_settings_new(schema_id) bind(c)
g;g_settings_new_full;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"GSettings * g_settings_new_full (GSettingsSchema *schema, GSettingsBackend *backend, const gchar *path);";function g_settings_new_full(schema, backend, path) bind(c)
g;g_settings_new_with_backend;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"GSettings * g_settings_new_with_backend (const gchar *schema_id, GSettingsBackend *backend);";function g_settings_new_with_backend(schema_id, backend) bind(c)
g;g_settings_new_with_backend_and_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"GSettings * g_settings_new_with_backend_and_path (const gchar *schema_id, GSettingsBackend *backend, const gchar *path);";function g_settings_new_with_backend_and_path(schema_id, backend, path) bind(c)
g;g_settings_new_with_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"GSettings * g_settings_new_with_path (const gchar *schema_id, const gchar *path);";function g_settings_new_with_path(schema_id, path) bind(c)
g;g_settings_range_check;GLIB_DEPRECATED_IN_2_40_FOR(g_settings_schema_key_range_check);glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_range_check (GSettings *settings, const gchar *key, GVariant *value);";function g_settings_range_check(settings, key, value) bind(c)
g;g_settings_reset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"void g_settings_reset (GSettings *settings, const gchar *key);";subroutine g_settings_reset(settings, key) bind(c)
g;g_settings_revert;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"void g_settings_revert (GSettings *settings);";subroutine g_settings_revert(settings) bind(c)
g;g_settings_schema_get_id;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"const gchar * g_settings_schema_get_id (GSettingsSchema *schema);";function g_settings_schema_get_id(schema) bind(c)
g;g_settings_schema_get_key;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"GSettingsSchemaKey * g_settings_schema_get_key (GSettingsSchema *schema, const gchar *name);";function g_settings_schema_get_key(schema, name) bind(c)
g;g_settings_schema_get_path;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"const gchar * g_settings_schema_get_path (GSettingsSchema *schema);";function g_settings_schema_get_path(schema) bind(c)
g;g_settings_schema_get_type;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"GType g_settings_schema_get_type (void) G_GNUC_CONST;";function g_settings_schema_get_type() bind(c)
g;g_settings_schema_has_key;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"gboolean g_settings_schema_has_key (GSettingsSchema *schema, const gchar *name);";function g_settings_schema_has_key(schema, name) bind(c)
g;g_settings_schema_key_get_default_value;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"GVariant * g_settings_schema_key_get_default_value (GSettingsSchemaKey *key);";function g_settings_schema_key_get_default_value(key) bind(c)
g;g_settings_schema_key_get_description;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"const gchar * g_settings_schema_key_get_description (GSettingsSchemaKey *key);";function g_settings_schema_key_get_description(key) bind(c)
g;g_settings_schema_key_get_name;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"const gchar * g_settings_schema_key_get_name (GSettingsSchemaKey *key);";function g_settings_schema_key_get_name(key) bind(c)
g;g_settings_schema_key_get_range;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"GVariant * g_settings_schema_key_get_range (GSettingsSchemaKey *key);";function g_settings_schema_key_get_range(key) bind(c)
g;g_settings_schema_key_get_summary;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"const gchar * g_settings_schema_key_get_summary (GSettingsSchemaKey *key);";function g_settings_schema_key_get_summary(key) bind(c)
g;g_settings_schema_key_get_type;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"GType g_settings_schema_key_get_type (void) G_GNUC_CONST;";function g_settings_schema_key_get_type() bind(c)
g;g_settings_schema_key_get_value_type;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"const GVariantType * g_settings_schema_key_get_value_type (GSettingsSchemaKey *key);";function g_settings_schema_key_get_value_type(key) bind(c)
g;g_settings_schema_key_range_check;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"gboolean g_settings_schema_key_range_check (GSettingsSchemaKey *key, GVariant *value);";function g_settings_schema_key_range_check(key, value) bind(c)
g;g_settings_schema_key_ref;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"GSettingsSchemaKey * g_settings_schema_key_ref (GSettingsSchemaKey *key);";function g_settings_schema_key_ref(key) bind(c)
g;g_settings_schema_key_unref;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"void g_settings_schema_key_unref (GSettingsSchemaKey *key);";subroutine g_settings_schema_key_unref(key) bind(c)
g;g_settings_schema_list_children;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"gchar ** g_settings_schema_list_children (GSettingsSchema *schema);";function g_settings_schema_list_children(schema) bind(c)
g;g_settings_schema_list_keys;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"gchar** g_settings_schema_list_keys (GSettingsSchema *schema);";function g_settings_schema_list_keys(schema) bind(c)
g;g_settings_schema_ref;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"GSettingsSchema * g_settings_schema_ref (GSettingsSchema *schema);";function g_settings_schema_ref(schema) bind(c)
g;g_settings_schema_source_get_default;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"GSettingsSchemaSource * g_settings_schema_source_get_default (void);";function g_settings_schema_source_get_default() bind(c)
g;g_settings_schema_source_get_type;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"GType g_settings_schema_source_get_type (void) G_GNUC_CONST;";function g_settings_schema_source_get_type() bind(c)
g;g_settings_schema_source_list_schemas;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"void g_settings_schema_source_list_schemas (GSettingsSchemaSource *source, gboolean recursive, gchar ***non_relocatable, gchar ***relocatable);";subroutine g_settings_schema_source_list_schemas(source, recursive, non_relocatable, relocatable) bind(c)
g;g_settings_schema_source_lookup;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"GSettingsSchema * g_settings_schema_source_lookup (GSettingsSchemaSource *source, const gchar *schema_id, gboolean recursive);";function g_settings_schema_source_lookup(source, schema_id, recursive) bind(c)
g;g_settings_schema_source_new_from_directory;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"GSettingsSchemaSource * g_settings_schema_source_new_from_directory (const gchar *directory, GSettingsSchemaSource *parent, gboolean trusted, GError **error);";function g_settings_schema_source_new_from_directory(directory, parent, trusted, error) bind(c)
g;g_settings_schema_source_ref;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"GSettingsSchemaSource * g_settings_schema_source_ref (GSettingsSchemaSource *source);";function g_settings_schema_source_ref(source) bind(c)
g;g_settings_schema_source_unref;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"void g_settings_schema_source_unref (GSettingsSchemaSource *source);";subroutine g_settings_schema_source_unref(source) bind(c)
g;g_settings_schema_unref;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettingsschema.h;"void g_settings_schema_unref (GSettingsSchema *schema);";subroutine g_settings_schema_unref(schema) bind(c)
g;g_settings_set_boolean;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_set_boolean (GSettings *settings, const gchar *key, gboolean value);";function g_settings_set_boolean(settings, key, value) bind(c)
g;g_settings_set_double;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_set_double (GSettings *settings, const gchar *key, gdouble value);";function g_settings_set_double(settings, key, value) bind(c)
g;g_settings_set_enum;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_set_enum (GSettings *settings, const gchar *key, gint value);";function g_settings_set_enum(settings, key, value) bind(c)
g;g_settings_set_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_set_flags (GSettings *settings, const gchar *key, guint value);";function g_settings_set_flags(settings, key, value) bind(c)
g;g_settings_set_int;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_set_int (GSettings *settings, const gchar *key, gint value);";function g_settings_set_int(settings, key, value) bind(c)
g;g_settings_set_int64;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_set_int64 (GSettings *settings, const gchar *key, gint64 value);";function g_settings_set_int64(settings, key, value) bind(c)
g;g_settings_set_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_set_string (GSettings *settings, const gchar *key, const gchar *value);";function g_settings_set_string(settings, key, value) bind(c)
g;g_settings_set_strv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_set_strv (GSettings *settings, const gchar *key, const gchar *const *value);";function g_settings_set_strv(settings, key, value) bind(c)
g;g_settings_set_uint;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_set_uint (GSettings *settings, const gchar *key, guint value);";function g_settings_set_uint(settings, key, value) bind(c)
g;g_settings_set_uint64;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_set_uint64 (GSettings *settings, const gchar *key, guint64 value);";function g_settings_set_uint64(settings, key, value) bind(c)
g;g_settings_set_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"gboolean g_settings_set_value (GSettings *settings, const gchar *key, GVariant *value);";function g_settings_set_value(settings, key, value) bind(c)
g;g_settings_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"void g_settings_sync (void);";subroutine g_settings_sync() bind(c)
g;g_settings_unbind;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsettings.h;"void g_settings_unbind (gpointer object, const gchar *property);";subroutine g_settings_unbind(object, property) bind(c)
g;g_shell_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gshell.h;"GQuark g_shell_error_quark (void);";function g_shell_error_quark() bind(c)
g;g_shell_parse_argv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gshell.h;"gboolean g_shell_parse_argv (const gchar *command_line, gint *argcp, gchar ***argvp, GError **error);";function g_shell_parse_argv(command_line, argcp, argvp, error) bind(c)
g;g_shell_quote;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gshell.h;"gchar* g_shell_quote (const gchar *unquoted_string);";function g_shell_quote(unquoted_string) bind(c)
g;g_shell_unquote;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gshell.h;"gchar* g_shell_unquote (const gchar *quoted_string, GError **error);";function g_shell_unquote(quoted_string, error) bind(c)
g;g_signal_accumulator_first_wins;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"gboolean g_signal_accumulator_first_wins (GSignalInvocationHint *ihint, GValue *return_accu, const GValue *handler_return, gpointer dummy);";function g_signal_accumulator_first_wins(ihint, return_accu, handler_return, dummy) bind(c)
g;g_signal_accumulator_true_handled;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"gboolean g_signal_accumulator_true_handled (GSignalInvocationHint *ihint, GValue *return_accu, const GValue *handler_return, gpointer dummy);";function g_signal_accumulator_true_handled(ihint, return_accu, handler_return, dummy) bind(c)
g;g_signal_add_emission_hook;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"gulong g_signal_add_emission_hook (guint signal_id, GQuark detail, GSignalEmissionHook hook_func, gpointer hook_data, GDestroyNotify data_destroy);";function g_signal_add_emission_hook(signal_id, detail, hook_func, hook_data, data_destroy) bind(c)
g;g_signal_chain_from_overridden;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_chain_from_overridden (const GValue *instance_and_params, GValue *return_value);";subroutine g_signal_chain_from_overridden(instance_and_params, return_value) bind(c)
g;g_signal_connect_closure;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"gulong g_signal_connect_closure (gpointer instance, const gchar *detailed_signal, GClosure *closure, gboolean after);";function g_signal_connect_closure(instance, detailed_signal, closure, after) bind(c)
g;g_signal_connect_closure_by_id;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"gulong g_signal_connect_closure_by_id (gpointer instance, guint signal_id, GQuark detail, GClosure *closure, gboolean after);";function g_signal_connect_closure_by_id(instance, signal_id, detail, closure, after) bind(c)
g;g_signal_connect_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"gulong g_signal_connect_data (gpointer instance, const gchar *detailed_signal, GCallback c_handler, gpointer data, GClosureNotify destroy_data, GConnectFlags connect_flags);";function g_signal_connect_data(instance, detailed_signal, c_handler, data, destroy_data, connect_flags) bind(c)
g;g_signal_connect_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gulong g_signal_connect_object (gpointer instance, const gchar *detailed_signal, GCallback c_handler, gpointer gobject, GConnectFlags connect_flags);";function g_signal_connect_object(instance, detailed_signal, c_handler, gobject, connect_flags) bind(c)
g;g_signal_emit_valist;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_emit_valist (gpointer instance, guint signal_id, GQuark detail, va_list var_args);";subroutine g_signal_emit_valist(instance, signal_id, detail, var_args) bind(c)
g;g_signal_emitv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_emitv (const GValue *instance_and_params, guint signal_id, GQuark detail, GValue *return_value);";subroutine g_signal_emitv(instance_and_params, signal_id, detail, return_value) bind(c)
g;g_signal_get_invocation_hint;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"GSignalInvocationHint* g_signal_get_invocation_hint (gpointer instance);";function g_signal_get_invocation_hint(instance) bind(c)
g;g_signal_handler_block;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_handler_block (gpointer instance, gulong handler_id);";subroutine g_signal_handler_block(instance, handler_id) bind(c)
g;g_signal_handler_disconnect;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_handler_disconnect (gpointer instance, gulong handler_id);";subroutine g_signal_handler_disconnect(instance, handler_id) bind(c)
g;g_signal_handler_find;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"gulong g_signal_handler_find (gpointer instance, GSignalMatchType mask, guint signal_id, GQuark detail, GClosure *closure, gpointer func, gpointer data);";function g_signal_handler_find(instance, mask, signal_id, detail, closure, func, data) bind(c)
g;g_signal_handler_is_connected;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"gboolean g_signal_handler_is_connected (gpointer instance, gulong handler_id);";function g_signal_handler_is_connected(instance, handler_id) bind(c)
g;g_signal_handler_unblock;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_handler_unblock (gpointer instance, gulong handler_id);";subroutine g_signal_handler_unblock(instance, handler_id) bind(c)
g;g_signal_handlers_block_matched;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"guint g_signal_handlers_block_matched (gpointer instance, GSignalMatchType mask, guint signal_id, GQuark detail, GClosure *closure, gpointer func, gpointer data);";function g_signal_handlers_block_matched(instance, mask, signal_id, detail, closure, func, data) bind(c)
g;g_signal_handlers_destroy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_handlers_destroy (gpointer instance);";subroutine g_signal_handlers_destroy(instance) bind(c)
g;g_signal_handlers_disconnect_matched;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"guint g_signal_handlers_disconnect_matched (gpointer instance, GSignalMatchType mask, guint signal_id, GQuark detail, GClosure *closure, gpointer func, gpointer data);";function g_signal_handlers_disconnect_matched(instance, mask, signal_id, detail, closure, func, data) bind(c)
g;g_signal_handlers_unblock_matched;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"guint g_signal_handlers_unblock_matched (gpointer instance, GSignalMatchType mask, guint signal_id, GQuark detail, GClosure *closure, gpointer func, gpointer data);";function g_signal_handlers_unblock_matched(instance, mask, signal_id, detail, closure, func, data) bind(c)
g;g_signal_has_handler_pending;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"gboolean g_signal_has_handler_pending (gpointer instance, guint signal_id, GQuark detail, gboolean may_be_blocked);";function g_signal_has_handler_pending(instance, signal_id, detail, may_be_blocked) bind(c)
g;g_signal_is_valid_name;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"gboolean g_signal_is_valid_name (const gchar *name);";function g_signal_is_valid_name(name) bind(c)
g;g_signal_list_ids;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"guint* g_signal_list_ids (GType itype, guint *n_ids);";function g_signal_list_ids(itype, n_ids) bind(c)
g;g_signal_lookup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"guint g_signal_lookup (const gchar *name, GType itype);";function g_signal_lookup(name, itype) bind(c)
g;g_signal_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"const gchar * g_signal_name (guint signal_id);";function g_signal_name(signal_id) bind(c)
g;g_signal_new_valist;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"guint g_signal_new_valist (const gchar *signal_name, GType itype, GSignalFlags signal_flags, GClosure *class_closure, GSignalAccumulator accumulator, gpointer accu_data, GSignalCMarshaller c_marshaller, GType return_type, guint n_params, va_list args);";function g_signal_new_valist(signal_name, itype, signal_flags, class_closure, accumulator, accu_data, c_marshaller, return_type, n_params, args) bind(c)
g;g_signal_newv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"guint g_signal_newv (const gchar *signal_name, GType itype, GSignalFlags signal_flags, GClosure *class_closure, GSignalAccumulator accumulator, gpointer accu_data, GSignalCMarshaller c_marshaller, GType return_type, guint n_params, GType *param_types);";function g_signal_newv(signal_name, itype, signal_flags, class_closure, accumulator, accu_data, c_marshaller, return_type, n_params, param_types) bind(c)
g;g_signal_override_class_closure;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_override_class_closure (guint signal_id, GType instance_type, GClosure *class_closure);";subroutine g_signal_override_class_closure(signal_id, instance_type, class_closure) bind(c)
g;g_signal_override_class_handler;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_override_class_handler (const gchar *signal_name, GType instance_type, GCallback class_handler);";subroutine g_signal_override_class_handler(signal_name, instance_type, class_handler) bind(c)
g;g_signal_parse_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"gboolean g_signal_parse_name (const gchar *detailed_signal, GType itype, guint *signal_id_p, GQuark *detail_p, gboolean force_detail_quark);";function g_signal_parse_name(detailed_signal, itype, signal_id_p, detail_p, force_detail_quark) bind(c)
g;g_signal_query;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_query (guint signal_id, GSignalQuery *query);";subroutine g_signal_query(signal_id, query) bind(c)
g;g_signal_remove_emission_hook;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_remove_emission_hook (guint signal_id, gulong hook_id);";subroutine g_signal_remove_emission_hook(signal_id, hook_id) bind(c)
g;g_signal_stop_emission;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_stop_emission (gpointer instance, guint signal_id, GQuark detail);";subroutine g_signal_stop_emission(instance, signal_id, detail) bind(c)
g;g_signal_stop_emission_by_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsignal.h;"void g_signal_stop_emission_by_name (gpointer instance, const gchar *detailed_signal);";subroutine g_signal_stop_emission_by_name(instance, detailed_signal) bind(c)
g;g_signal_type_cclosure_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gclosure.h;"GClosure* g_signal_type_cclosure_new (GType itype, guint struct_offset);";function g_signal_type_cclosure_new(itype, struct_offset) bind(c)
g;g_simple_action_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleaction.h;"GType g_simple_action_get_type (void) G_GNUC_CONST;";function g_simple_action_get_type() bind(c)
g;g_simple_action_group_add_entries;GLIB_DEPRECATED_IN_2_38_FOR (g_action_map_add_action_entries);glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleactiongroup.h;"void g_simple_action_group_add_entries (GSimpleActionGroup *simple, const GActionEntry *entries, gint n_entries, gpointer user_data);";subroutine g_simple_action_group_add_entries(simple, entries, n_entries, user_data) bind(c)
g;g_simple_action_group_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleactiongroup.h;"GType g_simple_action_group_get_type (void) G_GNUC_CONST;";function g_simple_action_group_get_type() bind(c)
g;g_simple_action_group_insert;GLIB_DEPRECATED_IN_2_38_FOR (g_action_map_add_action);glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleactiongroup.h;"void g_simple_action_group_insert (GSimpleActionGroup *simple, GAction *action);";subroutine g_simple_action_group_insert(simple, action) bind(c)
g;g_simple_action_group_lookup;GLIB_DEPRECATED_IN_2_38_FOR (g_action_map_lookup_action);glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleactiongroup.h;"GAction * g_simple_action_group_lookup (GSimpleActionGroup *simple, const gchar *action_name);";function g_simple_action_group_lookup(simple, action_name) bind(c)
g;g_simple_action_group_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleactiongroup.h;"GSimpleActionGroup * g_simple_action_group_new (void);";function g_simple_action_group_new() bind(c)
g;g_simple_action_group_remove;GLIB_DEPRECATED_IN_2_38_FOR (g_action_map_remove_action);glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleactiongroup.h;"void g_simple_action_group_remove (GSimpleActionGroup *simple, const gchar *action_name);";subroutine g_simple_action_group_remove(simple, action_name) bind(c)
g;g_simple_action_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleaction.h;"GSimpleAction * g_simple_action_new (const gchar *name, const GVariantType *parameter_type);";function g_simple_action_new(name, parameter_type) bind(c)
g;g_simple_action_new_stateful;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleaction.h;"GSimpleAction * g_simple_action_new_stateful (const gchar *name, const GVariantType *parameter_type, GVariant *state);";function g_simple_action_new_stateful(name, parameter_type, state) bind(c)
g;g_simple_action_set_enabled;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleaction.h;"void g_simple_action_set_enabled (GSimpleAction *simple, gboolean enabled);";subroutine g_simple_action_set_enabled(simple, enabled) bind(c)
g;g_simple_action_set_state;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleaction.h;"void g_simple_action_set_state (GSimpleAction *simple, GVariant *value);";subroutine g_simple_action_set_state(simple, value) bind(c)
g;g_simple_action_set_state_hint;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleaction.h;"void g_simple_action_set_state_hint (GSimpleAction *simple, GVariant *state_hint);";subroutine g_simple_action_set_state_hint(simple, state_hint) bind(c)
g;g_simple_async_report_gerror_in_idle;GLIB_DEPRECATED_IN_2_46_FOR(g_task_report_error);glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_report_gerror_in_idle (GObject *object, GAsyncReadyCallback callback, gpointer user_data, const GError *error);";subroutine g_simple_async_report_gerror_in_idle(object, callback, user_data, error) bind(c)
g;g_simple_async_report_take_gerror_in_idle;GLIB_DEPRECATED_IN_2_46_FOR(g_task_report_error);glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_report_take_gerror_in_idle (GObject *object, GAsyncReadyCallback callback, gpointer user_data, GError *error);";subroutine g_simple_async_report_take_gerror_in_idle(object, callback, user_data, error) bind(c)
g;g_simple_async_result_complete;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_result_complete (GSimpleAsyncResult *simple);";subroutine g_simple_async_result_complete(simple) bind(c)
g;g_simple_async_result_complete_in_idle;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_result_complete_in_idle (GSimpleAsyncResult *simple);";subroutine g_simple_async_result_complete_in_idle(simple) bind(c)
g;g_simple_async_result_get_op_res_gboolean;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"gboolean g_simple_async_result_get_op_res_gboolean (GSimpleAsyncResult *simple);";function g_simple_async_result_get_op_res_gboolean(simple) bind(c)
g;g_simple_async_result_get_op_res_gpointer;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"gpointer g_simple_async_result_get_op_res_gpointer (GSimpleAsyncResult *simple);";function g_simple_async_result_get_op_res_gpointer(simple) bind(c)
g;g_simple_async_result_get_op_res_gssize;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"gssize g_simple_async_result_get_op_res_gssize (GSimpleAsyncResult *simple);";function g_simple_async_result_get_op_res_gssize(simple) bind(c)
g;g_simple_async_result_get_source_tag;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"gpointer g_simple_async_result_get_source_tag (GSimpleAsyncResult *simple);";function g_simple_async_result_get_source_tag(simple) bind(c)
g;g_simple_async_result_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"GType g_simple_async_result_get_type (void) G_GNUC_CONST;";function g_simple_async_result_get_type() bind(c)
g;g_simple_async_result_is_valid;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"gboolean g_simple_async_result_is_valid (GAsyncResult *result, GObject *source, gpointer source_tag);";function g_simple_async_result_is_valid(result, source, source_tag) bind(c)
g;g_simple_async_result_new;GLIB_DEPRECATED_IN_2_46_FOR(g_task_new);glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"GSimpleAsyncResult *g_simple_async_result_new (GObject *source_object, GAsyncReadyCallback callback, gpointer user_data, gpointer source_tag);";function g_simple_async_result_new(source_object, callback, user_data, source_tag) bind(c)
g;g_simple_async_result_new_from_error;GLIB_DEPRECATED_IN_2_46_FOR(g_task_new);glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"GSimpleAsyncResult *g_simple_async_result_new_from_error (GObject *source_object, GAsyncReadyCallback callback, gpointer user_data, const GError *error);";function g_simple_async_result_new_from_error(source_object, callback, user_data, error) bind(c)
g;g_simple_async_result_new_take_error;GLIB_DEPRECATED_IN_2_46_FOR(g_task_new);glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"GSimpleAsyncResult *g_simple_async_result_new_take_error (GObject *source_object, GAsyncReadyCallback callback, gpointer user_data, GError *error);";function g_simple_async_result_new_take_error(source_object, callback, user_data, error) bind(c)
g;g_simple_async_result_propagate_error;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"gboolean g_simple_async_result_propagate_error (GSimpleAsyncResult *simple, GError **dest);";function g_simple_async_result_propagate_error(simple, dest) bind(c)
g;g_simple_async_result_run_in_thread;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_result_run_in_thread (GSimpleAsyncResult *simple, GSimpleAsyncThreadFunc func, int io_priority, GCancellable *cancellable);";subroutine g_simple_async_result_run_in_thread(simple, func, io_priority, cancellable) bind(c)
g;g_simple_async_result_set_check_cancellable;GLIB_AVAILABLE_IN_2_32 /* Also deprecated, but can't mark something both AVAILABLE and DEPRECATED */;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_result_set_check_cancellable (GSimpleAsyncResult *simple, GCancellable *check_cancellable);";subroutine g_simple_async_result_set_check_cancellable(simple, check_cancellable) bind(c)
g;g_simple_async_result_set_error_va;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_result_set_error_va (GSimpleAsyncResult *simple, GQuark domain, gint code, const char *format, va_list args) G_GNUC_PRINTF(4, 0);";subroutine g_simple_async_result_set_error_va(simple, domain, code, format, args) bind(c)
g;g_simple_async_result_set_from_error;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_result_set_from_error (GSimpleAsyncResult *simple, const GError *error);";subroutine g_simple_async_result_set_from_error(simple, error) bind(c)
g;g_simple_async_result_set_handle_cancellation;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_result_set_handle_cancellation (GSimpleAsyncResult *simple, gboolean handle_cancellation);";subroutine g_simple_async_result_set_handle_cancellation(simple, handle_cancellation) bind(c)
g;g_simple_async_result_set_op_res_gboolean;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_result_set_op_res_gboolean (GSimpleAsyncResult *simple, gboolean op_res);";subroutine g_simple_async_result_set_op_res_gboolean(simple, op_res) bind(c)
g;g_simple_async_result_set_op_res_gpointer;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_result_set_op_res_gpointer (GSimpleAsyncResult *simple, gpointer op_res, GDestroyNotify destroy_op_res);";subroutine g_simple_async_result_set_op_res_gpointer(simple, op_res, destroy_op_res) bind(c)
g;g_simple_async_result_set_op_res_gssize;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_result_set_op_res_gssize (GSimpleAsyncResult *simple, gssize op_res);";subroutine g_simple_async_result_set_op_res_gssize(simple, op_res) bind(c)
g;g_simple_async_result_take_error;GLIB_DEPRECATED_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleasyncresult.h;"void g_simple_async_result_take_error (GSimpleAsyncResult *simple, GError *error);";subroutine g_simple_async_result_take_error(simple, error) bind(c)
g;g_simple_io_stream_get_type;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleiostream.h;"GType g_simple_io_stream_get_type (void) G_GNUC_CONST;";function g_simple_io_stream_get_type() bind(c)
g;g_simple_io_stream_new;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleiostream.h;"GIOStream *g_simple_io_stream_new (GInputStream *input_stream, GOutputStream *output_stream);";function g_simple_io_stream_new(input_stream, output_stream) bind(c)
g;g_simple_permission_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsimplepermission.h;"GType g_simple_permission_get_type (void);";function g_simple_permission_get_type() bind(c)
g;g_simple_permission_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsimplepermission.h;"GPermission * g_simple_permission_new (gboolean allowed);";function g_simple_permission_new(allowed) bind(c)
g;g_simple_proxy_resolver_get_type;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleproxyresolver.h;"GType g_simple_proxy_resolver_get_type (void) G_GNUC_CONST;";function g_simple_proxy_resolver_get_type() bind(c)
g;g_simple_proxy_resolver_new;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleproxyresolver.h;"GProxyResolver *g_simple_proxy_resolver_new (const gchar *default_proxy, gchar **ignore_hosts);";function g_simple_proxy_resolver_new(default_proxy, ignore_hosts) bind(c)
g;g_simple_proxy_resolver_set_default_proxy;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleproxyresolver.h;"void g_simple_proxy_resolver_set_default_proxy (GSimpleProxyResolver *resolver, const gchar *default_proxy);";subroutine g_simple_proxy_resolver_set_default_proxy(resolver, default_proxy) bind(c)
g;g_simple_proxy_resolver_set_ignore_hosts;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleproxyresolver.h;"void g_simple_proxy_resolver_set_ignore_hosts (GSimpleProxyResolver *resolver, gchar **ignore_hosts);";subroutine g_simple_proxy_resolver_set_ignore_hosts(resolver, ignore_hosts) bind(c)
g;g_simple_proxy_resolver_set_uri_proxy;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gsimpleproxyresolver.h;"void g_simple_proxy_resolver_set_uri_proxy (GSimpleProxyResolver *resolver, const gchar *uri_scheme, const gchar *proxy);";subroutine g_simple_proxy_resolver_set_uri_proxy(resolver, uri_scheme, proxy) bind(c)
g;g_slice_alloc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslice.h;"gpointer g_slice_alloc (gsize block_size) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE(1);";function g_slice_alloc(block_size) bind(c)
g;g_slice_alloc0;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslice.h;"gpointer g_slice_alloc0 (gsize block_size) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE(1);";function g_slice_alloc0(block_size) bind(c)
g;g_slice_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslice.h;"gpointer g_slice_copy (gsize block_size, gconstpointer mem_block) G_GNUC_ALLOC_SIZE(1);";function g_slice_copy(block_size, mem_block) bind(c)
g;g_slice_debug_tree_statistics;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslice.h;"void g_slice_debug_tree_statistics (void);";subroutine g_slice_debug_tree_statistics() bind(c)
g;g_slice_free1;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslice.h;"void g_slice_free1 (gsize block_size, gpointer mem_block);";subroutine g_slice_free1(block_size, mem_block) bind(c)
g;g_slice_free_chain_with_offset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslice.h;"void g_slice_free_chain_with_offset (gsize block_size, gpointer mem_chain, gsize next_offset);";subroutine g_slice_free_chain_with_offset(block_size, mem_chain, next_offset) bind(c)
g;g_slice_get_config;GLIB_DEPRECATED_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gslice.h;"gint64 g_slice_get_config (GSliceConfig ckey);";function g_slice_get_config(ckey) bind(c)
g;g_slice_get_config_state;GLIB_DEPRECATED_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gslice.h;"gint64* g_slice_get_config_state (GSliceConfig ckey, gint64 address, guint *n_values);";function g_slice_get_config_state(ckey, address, n_values) bind(c)
g;g_slice_set_config;GLIB_DEPRECATED_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gslice.h;"void g_slice_set_config (GSliceConfig ckey, gint64 value);";subroutine g_slice_set_config(ckey, value) bind(c)
g;g_slist_alloc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_alloc (void) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_alloc() bind(c)
g;g_slist_append;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_append (GSList *list, gpointer data) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_append(list, data) bind(c)
g;g_slist_concat;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_concat (GSList *list1, GSList *list2) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_concat(list1, list2) bind(c)
g;g_slist_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_copy (GSList *list) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_copy(list) bind(c)
g;g_slist_copy_deep;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_copy_deep (GSList *list, GCopyFunc func, gpointer user_data) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_copy_deep(list, func, user_data) bind(c)
g;g_slist_delete_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_delete_link (GSList *list, GSList *link_) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_delete_link(list, link_) bind(c)
g;g_slist_find;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_find (GSList *list, gconstpointer data);";function g_slist_find(list, data) bind(c)
g;g_slist_find_custom;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_find_custom (GSList *list, gconstpointer data, GCompareFunc func);";function g_slist_find_custom(list, data, func) bind(c)
g;g_slist_foreach;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"void g_slist_foreach (GSList *list, GFunc func, gpointer user_data);";subroutine g_slist_foreach(list, func, user_data) bind(c)
g;g_slist_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"void g_slist_free (GSList *list);";subroutine g_slist_free(list) bind(c)
g;g_slist_free_1;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"void g_slist_free_1 (GSList *list);";subroutine g_slist_free_1(list) bind(c)
g;g_slist_free_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"void g_slist_free_full (GSList *list, GDestroyNotify free_func);";subroutine g_slist_free_full(list, free_func) bind(c)
g;g_slist_index;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"gint g_slist_index (GSList *list, gconstpointer data);";function g_slist_index(list, data) bind(c)
g;g_slist_insert;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_insert (GSList *list, gpointer data, gint position) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_insert(list, data, position) bind(c)
g;g_slist_insert_before;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_insert_before (GSList *slist, GSList *sibling, gpointer data) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_insert_before(slist, sibling, data) bind(c)
g;g_slist_insert_sorted;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_insert_sorted (GSList *list, gpointer data, GCompareFunc func) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_insert_sorted(list, data, func) bind(c)
g;g_slist_insert_sorted_with_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_insert_sorted_with_data (GSList *list, gpointer data, GCompareDataFunc func, gpointer user_data) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_insert_sorted_with_data(list, data, func, user_data) bind(c)
g;g_slist_last;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_last (GSList *list);";function g_slist_last(list) bind(c)
g;g_slist_length;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"guint g_slist_length (GSList *list);";function g_slist_length(list) bind(c)
g;g_slist_nth;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_nth (GSList *list, guint n);";function g_slist_nth(list, n) bind(c)
g;g_slist_nth_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"gpointer g_slist_nth_data (GSList *list, guint n);";function g_slist_nth_data(list, n) bind(c)
g;g_slist_pop_allocator;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_slist_pop_allocator (void);";subroutine g_slist_pop_allocator() bind(c)
g;g_slist_position;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"gint g_slist_position (GSList *list, GSList *llink);";function g_slist_position(list, llink) bind(c)
g;g_slist_prepend;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_prepend (GSList *list, gpointer data) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_prepend(list, data) bind(c)
g;g_slist_push_allocator;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gallocator.h;"void g_slist_push_allocator (GAllocator *allocator);";subroutine g_slist_push_allocator(allocator) bind(c)
g;g_slist_remove;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_remove (GSList *list, gconstpointer data) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_remove(list, data) bind(c)
g;g_slist_remove_all;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_remove_all (GSList *list, gconstpointer data) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_remove_all(list, data) bind(c)
g;g_slist_remove_link;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_remove_link (GSList *list, GSList *link_) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_remove_link(list, link_) bind(c)
g;g_slist_reverse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_reverse (GSList *list) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_reverse(list) bind(c)
g;g_slist_sort;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_sort (GSList *list, GCompareFunc compare_func) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_sort(list, compare_func) bind(c)
g;g_slist_sort_with_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gslist.h;"GSList* g_slist_sort_with_data (GSList *list, GCompareDataFunc compare_func, gpointer user_data) G_GNUC_WARN_UNUSED_RESULT;";function g_slist_sort_with_data(list, compare_func, user_data) bind(c)
g;g_socket_accept;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GSocket * g_socket_accept (GSocket *socket, GCancellable *cancellable, GError **error);";function g_socket_accept(socket, cancellable, error) bind(c)
g;g_socket_address_enumerator_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketaddressenumerator.h;"GType g_socket_address_enumerator_get_type (void) G_GNUC_CONST;";function g_socket_address_enumerator_get_type() bind(c)
g;g_socket_address_enumerator_next;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketaddressenumerator.h;"GSocketAddress *g_socket_address_enumerator_next (GSocketAddressEnumerator *enumerator, GCancellable *cancellable, GError **error);";function g_socket_address_enumerator_next(enumerator, cancellable, error) bind(c)
g;g_socket_address_enumerator_next_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketaddressenumerator.h;"void g_socket_address_enumerator_next_async (GSocketAddressEnumerator *enumerator, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_socket_address_enumerator_next_async(enumerator, cancellable, callback, user_data) bind(c)
g;g_socket_address_enumerator_next_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketaddressenumerator.h;"GSocketAddress *g_socket_address_enumerator_next_finish (GSocketAddressEnumerator *enumerator, GAsyncResult *result, GError **error);";function g_socket_address_enumerator_next_finish(enumerator, result, error) bind(c)
g;g_socket_address_get_family;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketaddress.h;"GSocketFamily g_socket_address_get_family (GSocketAddress *address);";function g_socket_address_get_family(address) bind(c)
g;g_socket_address_get_native_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketaddress.h;"gssize g_socket_address_get_native_size (GSocketAddress *address);";function g_socket_address_get_native_size(address) bind(c)
g;g_socket_address_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketaddress.h;"GType g_socket_address_get_type (void) G_GNUC_CONST;";function g_socket_address_get_type() bind(c)
g;g_socket_address_new_from_native;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketaddress.h;"GSocketAddress * g_socket_address_new_from_native (gpointer native, gsize len);";function g_socket_address_new_from_native(native, len) bind(c)
g;g_socket_address_to_native;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketaddress.h;"gboolean g_socket_address_to_native (GSocketAddress *address, gpointer dest, gsize destlen, GError **error);";function g_socket_address_to_native(address, dest, destlen, error) bind(c)
g;g_socket_bind;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_bind (GSocket *socket, GSocketAddress *address, gboolean allow_reuse, GError **error);";function g_socket_bind(socket, address, allow_reuse, error) bind(c)
g;g_socket_check_connect_result;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_check_connect_result (GSocket *socket, GError **error);";function g_socket_check_connect_result(socket, error) bind(c)
g;g_socket_client_add_application_proxy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_add_application_proxy (GSocketClient *client, const gchar *protocol);";subroutine g_socket_client_add_application_proxy(client, protocol) bind(c)
g;g_socket_client_connect;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketConnection * g_socket_client_connect (GSocketClient *client, GSocketConnectable *connectable, GCancellable *cancellable, GError **error);";function g_socket_client_connect(client, connectable, cancellable, error) bind(c)
g;g_socket_client_connect_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_connect_async (GSocketClient *client, GSocketConnectable *connectable, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_socket_client_connect_async(client, connectable, cancellable, callback, user_data) bind(c)
g;g_socket_client_connect_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketConnection * g_socket_client_connect_finish (GSocketClient *client, GAsyncResult *result, GError **error);";function g_socket_client_connect_finish(client, result, error) bind(c)
g;g_socket_client_connect_to_host;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketConnection * g_socket_client_connect_to_host (GSocketClient *client, const gchar *host_and_port, guint16 default_port, GCancellable *cancellable, GError **error);";function g_socket_client_connect_to_host(client, host_and_port, default_port, cancellable, error) bind(c)
g;g_socket_client_connect_to_host_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_connect_to_host_async (GSocketClient *client, const gchar *host_and_port, guint16 default_port, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_socket_client_connect_to_host_async(client, host_and_port, default_port, cancellable, callback, user_data) bind(c)
g;g_socket_client_connect_to_host_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketConnection * g_socket_client_connect_to_host_finish (GSocketClient *client, GAsyncResult *result, GError **error);";function g_socket_client_connect_to_host_finish(client, result, error) bind(c)
g;g_socket_client_connect_to_service;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketConnection * g_socket_client_connect_to_service (GSocketClient *client, const gchar *domain, const gchar *service, GCancellable *cancellable, GError **error);";function g_socket_client_connect_to_service(client, domain, service, cancellable, error) bind(c)
g;g_socket_client_connect_to_service_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_connect_to_service_async (GSocketClient *client, const gchar *domain, const gchar *service, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_socket_client_connect_to_service_async(client, domain, service, cancellable, callback, user_data) bind(c)
g;g_socket_client_connect_to_service_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketConnection * g_socket_client_connect_to_service_finish (GSocketClient *client, GAsyncResult *result, GError **error);";function g_socket_client_connect_to_service_finish(client, result, error) bind(c)
g;g_socket_client_connect_to_uri;GLIB_AVAILABLE_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketConnection * g_socket_client_connect_to_uri (GSocketClient *client, const gchar *uri, guint16 default_port, GCancellable *cancellable, GError **error);";function g_socket_client_connect_to_uri(client, uri, default_port, cancellable, error) bind(c)
g;g_socket_client_connect_to_uri_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_connect_to_uri_async (GSocketClient *client, const gchar *uri, guint16 default_port, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_socket_client_connect_to_uri_async(client, uri, default_port, cancellable, callback, user_data) bind(c)
g;g_socket_client_connect_to_uri_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketConnection * g_socket_client_connect_to_uri_finish (GSocketClient *client, GAsyncResult *result, GError **error);";function g_socket_client_connect_to_uri_finish(client, result, error) bind(c)
g;g_socket_client_get_enable_proxy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"gboolean g_socket_client_get_enable_proxy (GSocketClient *client);";function g_socket_client_get_enable_proxy(client) bind(c)
g;g_socket_client_get_family;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketFamily g_socket_client_get_family (GSocketClient *client);";function g_socket_client_get_family(client) bind(c)
g;g_socket_client_get_local_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketAddress *g_socket_client_get_local_address (GSocketClient *client);";function g_socket_client_get_local_address(client) bind(c)
g;g_socket_client_get_protocol;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketProtocol g_socket_client_get_protocol (GSocketClient *client);";function g_socket_client_get_protocol(client) bind(c)
g;g_socket_client_get_proxy_resolver;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GProxyResolver *g_socket_client_get_proxy_resolver (GSocketClient *client);";function g_socket_client_get_proxy_resolver(client) bind(c)
g;g_socket_client_get_socket_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketType g_socket_client_get_socket_type (GSocketClient *client);";function g_socket_client_get_socket_type(client) bind(c)
g;g_socket_client_get_timeout;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"guint g_socket_client_get_timeout (GSocketClient *client);";function g_socket_client_get_timeout(client) bind(c)
g;g_socket_client_get_tls;GLIB_AVAILABLE_IN_2_28;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"gboolean g_socket_client_get_tls (GSocketClient *client);";function g_socket_client_get_tls(client) bind(c)
g;g_socket_client_get_tls_validation_flags;GLIB_AVAILABLE_IN_2_28;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GTlsCertificateFlags g_socket_client_get_tls_validation_flags (GSocketClient *client);";function g_socket_client_get_tls_validation_flags(client) bind(c)
g;g_socket_client_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GType g_socket_client_get_type (void) G_GNUC_CONST;";function g_socket_client_get_type() bind(c)
g;g_socket_client_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"GSocketClient *g_socket_client_new (void);";function g_socket_client_new() bind(c)
g;g_socket_client_set_enable_proxy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_set_enable_proxy (GSocketClient *client, gboolean enable);";subroutine g_socket_client_set_enable_proxy(client, enable) bind(c)
g;g_socket_client_set_family;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_set_family (GSocketClient *client, GSocketFamily family);";subroutine g_socket_client_set_family(client, family) bind(c)
g;g_socket_client_set_local_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_set_local_address (GSocketClient *client, GSocketAddress *address);";subroutine g_socket_client_set_local_address(client, address) bind(c)
g;g_socket_client_set_protocol;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_set_protocol (GSocketClient *client, GSocketProtocol protocol);";subroutine g_socket_client_set_protocol(client, protocol) bind(c)
g;g_socket_client_set_proxy_resolver;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_set_proxy_resolver (GSocketClient *client, GProxyResolver *proxy_resolver);";subroutine g_socket_client_set_proxy_resolver(client, proxy_resolver) bind(c)
g;g_socket_client_set_socket_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_set_socket_type (GSocketClient *client, GSocketType type);";subroutine g_socket_client_set_socket_type(client, type) bind(c)
g;g_socket_client_set_timeout;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_set_timeout (GSocketClient *client, guint timeout);";subroutine g_socket_client_set_timeout(client, timeout) bind(c)
g;g_socket_client_set_tls;GLIB_AVAILABLE_IN_2_28;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_set_tls (GSocketClient *client, gboolean tls);";subroutine g_socket_client_set_tls(client, tls) bind(c)
g;g_socket_client_set_tls_validation_flags;GLIB_AVAILABLE_IN_2_28;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketclient.h;"void g_socket_client_set_tls_validation_flags (GSocketClient *client, GTlsCertificateFlags flags);";subroutine g_socket_client_set_tls_validation_flags(client, flags) bind(c)
g;g_socket_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_close (GSocket *socket, GError **error);";function g_socket_close(socket, error) bind(c)
g;g_socket_condition_check;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GIOCondition g_socket_condition_check (GSocket *socket, GIOCondition condition);";function g_socket_condition_check(socket, condition) bind(c)
g;g_socket_condition_timed_wait;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_condition_timed_wait (GSocket *socket, GIOCondition condition, gint64 timeout_us, GCancellable *cancellable, GError **error);";function g_socket_condition_timed_wait(socket, condition, timeout_us, cancellable, error) bind(c)
g;g_socket_condition_wait;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_condition_wait (GSocket *socket, GIOCondition condition, GCancellable *cancellable, GError **error);";function g_socket_condition_wait(socket, condition, cancellable, error) bind(c)
g;g_socket_connect;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_connect (GSocket *socket, GSocketAddress *address, GCancellable *cancellable, GError **error);";function g_socket_connect(socket, address, cancellable, error) bind(c)
g;g_socket_connectable_enumerate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnectable.h;"GSocketAddressEnumerator *g_socket_connectable_enumerate (GSocketConnectable *connectable);";function g_socket_connectable_enumerate(connectable) bind(c)
g;g_socket_connectable_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnectable.h;"GType g_socket_connectable_get_type (void) G_GNUC_CONST;";function g_socket_connectable_get_type() bind(c)
g;g_socket_connectable_proxy_enumerate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnectable.h;"GSocketAddressEnumerator *g_socket_connectable_proxy_enumerate (GSocketConnectable *connectable);";function g_socket_connectable_proxy_enumerate(connectable) bind(c)
g;g_socket_connectable_to_string;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnectable.h;"gchar *g_socket_connectable_to_string (GSocketConnectable *connectable);";function g_socket_connectable_to_string(connectable) bind(c)
g;g_socket_connection_connect;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnection.h;"gboolean g_socket_connection_connect (GSocketConnection *connection, GSocketAddress *address, GCancellable *cancellable, GError **error);";function g_socket_connection_connect(connection, address, cancellable, error) bind(c)
g;g_socket_connection_connect_async;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnection.h;"void g_socket_connection_connect_async (GSocketConnection *connection, GSocketAddress *address, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_socket_connection_connect_async(connection, address, cancellable, callback, user_data) bind(c)
g;g_socket_connection_connect_finish;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnection.h;"gboolean g_socket_connection_connect_finish (GSocketConnection *connection, GAsyncResult *result, GError **error);";function g_socket_connection_connect_finish(connection, result, error) bind(c)
g;g_socket_connection_factory_create_connection;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnection.h;"GSocketConnection *g_socket_connection_factory_create_connection (GSocket *socket);";function g_socket_connection_factory_create_connection(socket) bind(c)
g;g_socket_connection_factory_lookup_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnection.h;"GType g_socket_connection_factory_lookup_type (GSocketFamily family, GSocketType type, gint protocol_id);";function g_socket_connection_factory_lookup_type(family, type, protocol_id) bind(c)
g;g_socket_connection_factory_register_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnection.h;"void g_socket_connection_factory_register_type (GType g_type, GSocketFamily family, GSocketType type, gint protocol);";subroutine g_socket_connection_factory_register_type(g_type, family, type, protocol) bind(c)
g;g_socket_connection_get_local_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnection.h;"GSocketAddress *g_socket_connection_get_local_address (GSocketConnection *connection, GError **error);";function g_socket_connection_get_local_address(connection, error) bind(c)
g;g_socket_connection_get_remote_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnection.h;"GSocketAddress *g_socket_connection_get_remote_address (GSocketConnection *connection, GError **error);";function g_socket_connection_get_remote_address(connection, error) bind(c)
g;g_socket_connection_get_socket;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnection.h;"GSocket *g_socket_connection_get_socket (GSocketConnection *connection);";function g_socket_connection_get_socket(connection) bind(c)
g;g_socket_connection_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnection.h;"GType g_socket_connection_get_type (void) G_GNUC_CONST;";function g_socket_connection_get_type() bind(c)
g;g_socket_connection_is_connected;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketconnection.h;"gboolean g_socket_connection_is_connected (GSocketConnection *connection);";function g_socket_connection_is_connected(connection) bind(c)
g;g_socket_control_message_deserialize;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketcontrolmessage.h;"GSocketControlMessage *g_socket_control_message_deserialize (int level, int type, gsize size, gpointer data);";function g_socket_control_message_deserialize(level, type, size, data) bind(c)
g;g_socket_control_message_get_level;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketcontrolmessage.h;"int g_socket_control_message_get_level (GSocketControlMessage *message);";function g_socket_control_message_get_level(message) bind(c)
g;g_socket_control_message_get_msg_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketcontrolmessage.h;"int g_socket_control_message_get_msg_type (GSocketControlMessage *message);";function g_socket_control_message_get_msg_type(message) bind(c)
g;g_socket_control_message_get_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketcontrolmessage.h;"gsize g_socket_control_message_get_size (GSocketControlMessage *message);";function g_socket_control_message_get_size(message) bind(c)
g;g_socket_control_message_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketcontrolmessage.h;"GType g_socket_control_message_get_type (void) G_GNUC_CONST;";function g_socket_control_message_get_type() bind(c)
g;g_socket_control_message_serialize;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketcontrolmessage.h;"void g_socket_control_message_serialize (GSocketControlMessage *message, gpointer data);";subroutine g_socket_control_message_serialize(message, data) bind(c)
g;g_socket_create_source;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GSource * g_socket_create_source (GSocket *socket, GIOCondition condition, GCancellable *cancellable);";function g_socket_create_source(socket, condition, cancellable) bind(c)
g;g_socket_get_available_bytes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gssize g_socket_get_available_bytes (GSocket *socket);";function g_socket_get_available_bytes(socket) bind(c)
g;g_socket_get_blocking;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_get_blocking (GSocket *socket);";function g_socket_get_blocking(socket) bind(c)
g;g_socket_get_broadcast;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_get_broadcast (GSocket *socket);";function g_socket_get_broadcast(socket) bind(c)
g;g_socket_get_credentials;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GCredentials *g_socket_get_credentials (GSocket *socket, GError **error);";function g_socket_get_credentials(socket, error) bind(c)
g;g_socket_get_family;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GSocketFamily g_socket_get_family (GSocket *socket);";function g_socket_get_family(socket) bind(c)
g;g_socket_get_fd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"int g_socket_get_fd (GSocket *socket);";function g_socket_get_fd(socket) bind(c)
g;g_socket_get_keepalive;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_get_keepalive (GSocket *socket);";function g_socket_get_keepalive(socket) bind(c)
g;g_socket_get_listen_backlog;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gint g_socket_get_listen_backlog (GSocket *socket);";function g_socket_get_listen_backlog(socket) bind(c)
g;g_socket_get_local_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GSocketAddress * g_socket_get_local_address (GSocket *socket, GError **error);";function g_socket_get_local_address(socket, error) bind(c)
g;g_socket_get_multicast_loopback;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_get_multicast_loopback (GSocket *socket);";function g_socket_get_multicast_loopback(socket) bind(c)
g;g_socket_get_multicast_ttl;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"guint g_socket_get_multicast_ttl (GSocket *socket);";function g_socket_get_multicast_ttl(socket) bind(c)
g;g_socket_get_option;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_get_option (GSocket *socket, gint level, gint optname, gint *value, GError **error);";function g_socket_get_option(socket, level, optname, value, error) bind(c)
g;g_socket_get_protocol;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GSocketProtocol g_socket_get_protocol (GSocket *socket);";function g_socket_get_protocol(socket) bind(c)
g;g_socket_get_remote_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GSocketAddress * g_socket_get_remote_address (GSocket *socket, GError **error);";function g_socket_get_remote_address(socket, error) bind(c)
g;g_socket_get_socket_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GSocketType g_socket_get_socket_type (GSocket *socket);";function g_socket_get_socket_type(socket) bind(c)
g;g_socket_get_timeout;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"guint g_socket_get_timeout (GSocket *socket);";function g_socket_get_timeout(socket) bind(c)
g;g_socket_get_ttl;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"guint g_socket_get_ttl (GSocket *socket);";function g_socket_get_ttl(socket) bind(c)
g;g_socket_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GType g_socket_get_type (void) G_GNUC_CONST;";function g_socket_get_type() bind(c)
g;g_socket_is_closed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_is_closed (GSocket *socket);";function g_socket_is_closed(socket) bind(c)
g;g_socket_is_connected;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_is_connected (GSocket *socket);";function g_socket_is_connected(socket) bind(c)
g;g_socket_join_multicast_group;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_join_multicast_group (GSocket *socket, GInetAddress *group, gboolean source_specific, const gchar *iface, GError **error);";function g_socket_join_multicast_group(socket, group, source_specific, iface, error) bind(c)
g;g_socket_join_multicast_group_ssm;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_join_multicast_group_ssm (GSocket *socket, GInetAddress *group, GInetAddress *source_specific, const gchar *iface, GError **error);";function g_socket_join_multicast_group_ssm(socket, group, source_specific, iface, error) bind(c)
g;g_socket_leave_multicast_group;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_leave_multicast_group (GSocket *socket, GInetAddress *group, gboolean source_specific, const gchar *iface, GError **error);";function g_socket_leave_multicast_group(socket, group, source_specific, iface, error) bind(c)
g;g_socket_leave_multicast_group_ssm;GLIB_AVAILABLE_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_leave_multicast_group_ssm (GSocket *socket, GInetAddress *group, GInetAddress *source_specific, const gchar *iface, GError **error);";function g_socket_leave_multicast_group_ssm(socket, group, source_specific, iface, error) bind(c)
g;g_socket_listen;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_listen (GSocket *socket, GError **error);";function g_socket_listen(socket, error) bind(c)
g;g_socket_listener_accept;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"GSocketConnection * g_socket_listener_accept (GSocketListener *listener, GObject **source_object, GCancellable *cancellable, GError **error);";function g_socket_listener_accept(listener, source_object, cancellable, error) bind(c)
g;g_socket_listener_accept_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"void g_socket_listener_accept_async (GSocketListener *listener, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_socket_listener_accept_async(listener, cancellable, callback, user_data) bind(c)
g;g_socket_listener_accept_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"GSocketConnection * g_socket_listener_accept_finish (GSocketListener *listener, GAsyncResult *result, GObject **source_object, GError **error);";function g_socket_listener_accept_finish(listener, result, source_object, error) bind(c)
g;g_socket_listener_accept_socket;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"GSocket * g_socket_listener_accept_socket (GSocketListener *listener, GObject **source_object, GCancellable *cancellable, GError **error);";function g_socket_listener_accept_socket(listener, source_object, cancellable, error) bind(c)
g;g_socket_listener_accept_socket_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"void g_socket_listener_accept_socket_async (GSocketListener *listener, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_socket_listener_accept_socket_async(listener, cancellable, callback, user_data) bind(c)
g;g_socket_listener_accept_socket_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"GSocket * g_socket_listener_accept_socket_finish (GSocketListener *listener, GAsyncResult *result, GObject **source_object, GError **error);";function g_socket_listener_accept_socket_finish(listener, result, source_object, error) bind(c)
g;g_socket_listener_add_address;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"gboolean g_socket_listener_add_address (GSocketListener *listener, GSocketAddress *address, GSocketType type, GSocketProtocol protocol, GObject *source_object, GSocketAddress **effective_address, GError **error);";function g_socket_listener_add_address(listener, address, type, protocol, source_object, effective_address, error) bind(c)
g;g_socket_listener_add_any_inet_port;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"guint16 g_socket_listener_add_any_inet_port (GSocketListener *listener, GObject *source_object, GError **error);";function g_socket_listener_add_any_inet_port(listener, source_object, error) bind(c)
g;g_socket_listener_add_inet_port;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"gboolean g_socket_listener_add_inet_port (GSocketListener *listener, guint16 port, GObject *source_object, GError **error);";function g_socket_listener_add_inet_port(listener, port, source_object, error) bind(c)
g;g_socket_listener_add_socket;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"gboolean g_socket_listener_add_socket (GSocketListener *listener, GSocket *socket, GObject *source_object, GError **error);";function g_socket_listener_add_socket(listener, socket, source_object, error) bind(c)
g;g_socket_listener_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"void g_socket_listener_close (GSocketListener *listener);";subroutine g_socket_listener_close(listener) bind(c)
g;g_socket_listener_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"GType g_socket_listener_get_type (void) G_GNUC_CONST;";function g_socket_listener_get_type() bind(c)
g;g_socket_listener_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"GSocketListener * g_socket_listener_new (void);";function g_socket_listener_new() bind(c)
g;g_socket_listener_set_backlog;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketlistener.h;"void g_socket_listener_set_backlog (GSocketListener *listener, int listen_backlog);";subroutine g_socket_listener_set_backlog(listener, listen_backlog) bind(c)
g;g_socket_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GSocket * g_socket_new (GSocketFamily family, GSocketType type, GSocketProtocol protocol, GError **error);";function g_socket_new(family, type, protocol, error) bind(c)
g;g_socket_new_from_fd;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GSocket * g_socket_new_from_fd (gint fd, GError **error);";function g_socket_new_from_fd(fd, error) bind(c)
g;g_socket_receive;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gssize g_socket_receive (GSocket *socket, gchar *buffer, gsize size, GCancellable *cancellable, GError **error);";function g_socket_receive(socket, buffer, size, cancellable, error) bind(c)
g;g_socket_receive_from;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gssize g_socket_receive_from (GSocket *socket, GSocketAddress **address, gchar *buffer, gsize size, GCancellable *cancellable, GError **error);";function g_socket_receive_from(socket, address, buffer, size, cancellable, error) bind(c)
g;g_socket_receive_message;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gssize g_socket_receive_message (GSocket *socket, GSocketAddress **address, GInputVector *vectors, gint num_vectors, GSocketControlMessage ***messages, gint *num_messages, gint *flags, GCancellable *cancellable, GError **error);";function g_socket_receive_message(socket, address, vectors, num_vectors, messages, num_messages, flags, cancellable, error) bind(c)
g;g_socket_receive_messages;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gint g_socket_receive_messages (GSocket *socket, GInputMessage *messages, guint num_messages, gint flags, GCancellable *cancellable, GError **error);";function g_socket_receive_messages(socket, messages, num_messages, flags, cancellable, error) bind(c)
g;g_socket_receive_with_blocking;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gssize g_socket_receive_with_blocking (GSocket *socket, gchar *buffer, gsize size, gboolean blocking, GCancellable *cancellable, GError **error);";function g_socket_receive_with_blocking(socket, buffer, size, blocking, cancellable, error) bind(c)
g;g_socket_send;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gssize g_socket_send (GSocket *socket, const gchar *buffer, gsize size, GCancellable *cancellable, GError **error);";function g_socket_send(socket, buffer, size, cancellable, error) bind(c)
g;g_socket_send_message;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gssize g_socket_send_message (GSocket *socket, GSocketAddress *address, GOutputVector *vectors, gint num_vectors, GSocketControlMessage **messages, gint num_messages, gint flags, GCancellable *cancellable, GError **error);";function g_socket_send_message(socket, address, vectors, num_vectors, messages, num_messages, flags, cancellable, error) bind(c)
g;g_socket_send_message_with_timeout;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"GPollableReturn g_socket_send_message_with_timeout (GSocket *socket, GSocketAddress *address, const GOutputVector *vectors, gint num_vectors, GSocketControlMessage **messages, gint num_messages, gint flags, gint64 timeout_us, gsize *bytes_written, GCancellable *cancellable, GError **error);";function g_socket_send_message_with_timeout(socket, address, vectors, num_vectors, messages, num_messages, flags, timeout_us, bytes_written, cancellable, error) bind(c)
g;g_socket_send_messages;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gint g_socket_send_messages (GSocket *socket, GOutputMessage *messages, guint num_messages, gint flags, GCancellable *cancellable, GError **error);";function g_socket_send_messages(socket, messages, num_messages, flags, cancellable, error) bind(c)
g;g_socket_send_to;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gssize g_socket_send_to (GSocket *socket, GSocketAddress *address, const gchar *buffer, gsize size, GCancellable *cancellable, GError **error);";function g_socket_send_to(socket, address, buffer, size, cancellable, error) bind(c)
g;g_socket_send_with_blocking;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gssize g_socket_send_with_blocking (GSocket *socket, const gchar *buffer, gsize size, gboolean blocking, GCancellable *cancellable, GError **error);";function g_socket_send_with_blocking(socket, buffer, size, blocking, cancellable, error) bind(c)
g;g_socket_service_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketservice.h;"GType g_socket_service_get_type (void);";function g_socket_service_get_type() bind(c)
g;g_socket_service_is_active;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketservice.h;"gboolean g_socket_service_is_active (GSocketService *service);";function g_socket_service_is_active(service) bind(c)
g;g_socket_service_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketservice.h;"GSocketService *g_socket_service_new (void);";function g_socket_service_new() bind(c)
g;g_socket_service_start;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketservice.h;"void g_socket_service_start (GSocketService *service);";subroutine g_socket_service_start(service) bind(c)
g;g_socket_service_stop;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocketservice.h;"void g_socket_service_stop (GSocketService *service);";subroutine g_socket_service_stop(service) bind(c)
g;g_socket_set_blocking;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"void g_socket_set_blocking (GSocket *socket, gboolean blocking);";subroutine g_socket_set_blocking(socket, blocking) bind(c)
g;g_socket_set_broadcast;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"void g_socket_set_broadcast (GSocket *socket, gboolean broadcast);";subroutine g_socket_set_broadcast(socket, broadcast) bind(c)
g;g_socket_set_keepalive;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"void g_socket_set_keepalive (GSocket *socket, gboolean keepalive);";subroutine g_socket_set_keepalive(socket, keepalive) bind(c)
g;g_socket_set_listen_backlog;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"void g_socket_set_listen_backlog (GSocket *socket, gint backlog);";subroutine g_socket_set_listen_backlog(socket, backlog) bind(c)
g;g_socket_set_multicast_loopback;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"void g_socket_set_multicast_loopback (GSocket *socket, gboolean loopback);";subroutine g_socket_set_multicast_loopback(socket, loopback) bind(c)
g;g_socket_set_multicast_ttl;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"void g_socket_set_multicast_ttl (GSocket *socket, guint ttl);";subroutine g_socket_set_multicast_ttl(socket, ttl) bind(c)
g;g_socket_set_option;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_set_option (GSocket *socket, gint level, gint optname, gint value, GError **error);";function g_socket_set_option(socket, level, optname, value, error) bind(c)
g;g_socket_set_timeout;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"void g_socket_set_timeout (GSocket *socket, guint timeout);";subroutine g_socket_set_timeout(socket, timeout) bind(c)
g;g_socket_set_ttl;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"void g_socket_set_ttl (GSocket *socket, guint ttl);";subroutine g_socket_set_ttl(socket, ttl) bind(c)
g;g_socket_shutdown;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_shutdown (GSocket *socket, gboolean shutdown_read, gboolean shutdown_write, GError **error);";function g_socket_shutdown(socket, shutdown_read, shutdown_write, error) bind(c)
g;g_socket_speaks_ipv4;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsocket.h;"gboolean g_socket_speaks_ipv4 (GSocket *socket);";function g_socket_speaks_ipv4(socket) bind(c)
g;g_source_add_child_source;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_add_child_source (GSource *source, GSource *child_source);";subroutine g_source_add_child_source(source, child_source) bind(c)
g;g_source_add_poll;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_add_poll (GSource *source, GPollFD *fd);";subroutine g_source_add_poll(source, fd) bind(c)
g;g_source_add_unix_fd;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gpointer g_source_add_unix_fd (GSource *source, gint fd, GIOCondition events);";function g_source_add_unix_fd(source, fd, events) bind(c)
g;g_source_attach;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"guint g_source_attach (GSource *source, GMainContext *context);";function g_source_attach(source, context) bind(c)
g;g_source_destroy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_destroy (GSource *source);";subroutine g_source_destroy(source) bind(c)
g;g_source_get_can_recurse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_source_get_can_recurse (GSource *source);";function g_source_get_can_recurse(source) bind(c)
g;g_source_get_context;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GMainContext *g_source_get_context (GSource *source);";function g_source_get_context(source) bind(c)
g;g_source_get_current_time;GLIB_DEPRECATED_IN_2_28_FOR(g_source_get_time);glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_get_current_time (GSource *source, GTimeVal *timeval);";subroutine g_source_get_current_time(source, timeval) bind(c)
g;g_source_get_id;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"guint g_source_get_id (GSource *source);";function g_source_get_id(source) bind(c)
g;g_source_get_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"const char * g_source_get_name (GSource *source);";function g_source_get_name(source) bind(c)
g;g_source_get_priority;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gint g_source_get_priority (GSource *source);";function g_source_get_priority(source) bind(c)
g;g_source_get_ready_time;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gint64 g_source_get_ready_time (GSource *source);";function g_source_get_ready_time(source) bind(c)
g;g_source_get_time;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gint64 g_source_get_time (GSource *source);";function g_source_get_time(source) bind(c)
g;g_source_get_type;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_source_get_type (void) G_GNUC_CONST;";function g_source_get_type() bind(c)
g;g_source_is_destroyed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_source_is_destroyed (GSource *source);";function g_source_is_destroyed(source) bind(c)
g;g_source_modify_unix_fd;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_modify_unix_fd (GSource *source, gpointer tag, GIOCondition new_events);";subroutine g_source_modify_unix_fd(source, tag, new_events) bind(c)
g;g_source_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GSource *g_source_new (GSourceFuncs *source_funcs, guint struct_size);";function g_source_new(source_funcs, struct_size) bind(c)
g;g_source_query_unix_fd;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GIOCondition g_source_query_unix_fd (GSource *source, gpointer tag);";function g_source_query_unix_fd(source, tag) bind(c)
g;g_source_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GSource *g_source_ref (GSource *source);";function g_source_ref(source) bind(c)
g;g_source_remove;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_source_remove (guint tag);";function g_source_remove(tag) bind(c)
g;g_source_remove_by_funcs_user_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_source_remove_by_funcs_user_data (GSourceFuncs *funcs, gpointer user_data);";function g_source_remove_by_funcs_user_data(funcs, user_data) bind(c)
g;g_source_remove_by_user_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"gboolean g_source_remove_by_user_data (gpointer user_data);";function g_source_remove_by_user_data(user_data) bind(c)
g;g_source_remove_child_source;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_remove_child_source (GSource *source, GSource *child_source);";subroutine g_source_remove_child_source(source, child_source) bind(c)
g;g_source_remove_poll;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_remove_poll (GSource *source, GPollFD *fd);";subroutine g_source_remove_poll(source, fd) bind(c)
g;g_source_remove_unix_fd;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_remove_unix_fd (GSource *source, gpointer tag);";subroutine g_source_remove_unix_fd(source, tag) bind(c)
g;g_source_set_callback;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_set_callback (GSource *source, GSourceFunc func, gpointer data, GDestroyNotify notify);";subroutine g_source_set_callback(source, func, data, notify) bind(c)
g;g_source_set_callback_indirect;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_set_callback_indirect (GSource *source, gpointer callback_data, GSourceCallbackFuncs *callback_funcs);";subroutine g_source_set_callback_indirect(source, callback_data, callback_funcs) bind(c)
g;g_source_set_can_recurse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_set_can_recurse (GSource *source, gboolean can_recurse);";subroutine g_source_set_can_recurse(source, can_recurse) bind(c)
g;g_source_set_closure;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsourceclosure.h;"void g_source_set_closure (GSource *source, GClosure *closure);";subroutine g_source_set_closure(source, closure) bind(c)
g;g_source_set_dispose_function;GLIB_AVAILABLE_IN_2_64;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_set_dispose_function (GSource *source, GSourceDisposeFunc dispose);";subroutine g_source_set_dispose_function(source, dispose) bind(c)
g;g_source_set_dummy_callback;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gsourceclosure.h;"void g_source_set_dummy_callback (GSource *source);";subroutine g_source_set_dummy_callback(source) bind(c)
g;g_source_set_funcs;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_set_funcs (GSource *source, GSourceFuncs *funcs);";subroutine g_source_set_funcs(source, funcs) bind(c)
g;g_source_set_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_set_name (GSource *source, const char *name);";subroutine g_source_set_name(source, name) bind(c)
g;g_source_set_name_by_id;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_set_name_by_id (guint tag, const char *name);";subroutine g_source_set_name_by_id(tag, name) bind(c)
g;g_source_set_priority;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_set_priority (GSource *source, gint priority);";subroutine g_source_set_priority(source, priority) bind(c)
g;g_source_set_ready_time;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_set_ready_time (GSource *source, gint64 ready_time);";subroutine g_source_set_ready_time(source, ready_time) bind(c)
g;g_source_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"void g_source_unref (GSource *source);";subroutine g_source_unref(source) bind(c)
g;g_spaced_primes_closest;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gprimes.h;"guint g_spaced_primes_closest (guint num) G_GNUC_CONST;";function g_spaced_primes_closest(num) bind(c)
g;g_spawn_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gspawn.h;"gboolean g_spawn_async (const gchar *working_directory, gchar **argv, gchar **envp, GSpawnFlags flags, GSpawnChildSetupFunc child_setup, gpointer user_data, GPid *child_pid, GError **error);";function g_spawn_async(working_directory, argv, envp, flags, child_setup, user_data, child_pid, error) bind(c)
g;g_spawn_async_with_fds;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/gspawn.h;"gboolean g_spawn_async_with_fds (const gchar *working_directory, gchar **argv, gchar **envp, GSpawnFlags flags, GSpawnChildSetupFunc child_setup, gpointer user_data, GPid *child_pid, gint stdin_fd, gint stdout_fd, gint stderr_fd, GError **error);";function g_spawn_async_with_fds(working_directory, argv, envp, flags, child_setup, user_data, child_pid, stdin_fd, stdout_fd, stderr_fd, error) bind(c)
g;g_spawn_async_with_pipes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gspawn.h;"gboolean g_spawn_async_with_pipes (const gchar *working_directory, gchar **argv, gchar **envp, GSpawnFlags flags, GSpawnChildSetupFunc child_setup, gpointer user_data, GPid *child_pid, gint *standard_input, gint *standard_output, gint *standard_error, GError **error);";function g_spawn_async_with_pipes(working_directory, argv, envp, flags, child_setup, user_data, child_pid, standard_input, standard_output, standard_error, error) bind(c)
g;g_spawn_check_exit_status;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gspawn.h;"gboolean g_spawn_check_exit_status (gint exit_status, GError **error);";function g_spawn_check_exit_status(exit_status, error) bind(c)
g;g_spawn_close_pid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gspawn.h;"void g_spawn_close_pid (GPid pid);";subroutine g_spawn_close_pid(pid) bind(c)
g;g_spawn_command_line_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gspawn.h;"gboolean g_spawn_command_line_async (const gchar *command_line, GError **error);";function g_spawn_command_line_async(command_line, error) bind(c)
g;g_spawn_command_line_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gspawn.h;"gboolean g_spawn_command_line_sync (const gchar *command_line, gchar **standard_output, gchar **standard_error, gint *exit_status, GError **error);";function g_spawn_command_line_sync(command_line, standard_output, standard_error, exit_status, error) bind(c)
g;g_spawn_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gspawn.h;"GQuark g_spawn_error_quark (void);";function g_spawn_error_quark() bind(c)
g;g_spawn_exit_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gspawn.h;"GQuark g_spawn_exit_error_quark (void);";function g_spawn_exit_error_quark() bind(c)
g;g_spawn_sync;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gspawn.h;"gboolean g_spawn_sync (const gchar *working_directory, gchar **argv, gchar **envp, GSpawnFlags flags, GSpawnChildSetupFunc child_setup, gpointer user_data, gchar **standard_output, gchar **standard_error, gint *exit_status, GError **error);";function g_spawn_sync(working_directory, argv, envp, flags, child_setup, user_data, standard_output, standard_error, exit_status, error) bind(c)
g;g_srv_target_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsrvtarget.h;"GSrvTarget *g_srv_target_copy (GSrvTarget *target);";function g_srv_target_copy(target) bind(c)
g;g_srv_target_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsrvtarget.h;"void g_srv_target_free (GSrvTarget *target);";subroutine g_srv_target_free(target) bind(c)
g;g_srv_target_get_hostname;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsrvtarget.h;"const gchar *g_srv_target_get_hostname (GSrvTarget *target);";function g_srv_target_get_hostname(target) bind(c)
g;g_srv_target_get_port;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsrvtarget.h;"guint16 g_srv_target_get_port (GSrvTarget *target);";function g_srv_target_get_port(target) bind(c)
g;g_srv_target_get_priority;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsrvtarget.h;"guint16 g_srv_target_get_priority (GSrvTarget *target);";function g_srv_target_get_priority(target) bind(c)
g;g_srv_target_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsrvtarget.h;"GType g_srv_target_get_type (void) G_GNUC_CONST;";function g_srv_target_get_type() bind(c)
g;g_srv_target_get_weight;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsrvtarget.h;"guint16 g_srv_target_get_weight (GSrvTarget *target);";function g_srv_target_get_weight(target) bind(c)
g;g_srv_target_list_sort;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsrvtarget.h;"GList *g_srv_target_list_sort (GList *targets);";function g_srv_target_list_sort(targets) bind(c)
g;g_srv_target_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gsrvtarget.h;"GSrvTarget *g_srv_target_new (const gchar *hostname, guint16 port, guint16 priority, guint16 weight);";function g_srv_target_new(hostname, port, priority, weight) bind(c)
g;g_stat;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_stat (const gchar *filename, GStatBuf *buf);";function g_stat(filename, buf) bind(c)
g;g_static_mutex_free;GLIB_DEPRECATED_IN_2_32_FOR(g_mutex_clear);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_mutex_free (GStaticMutex *mutex);";subroutine g_static_mutex_free(mutex) bind(c)
g;g_static_mutex_get_mutex_impl;GLIB_DEPRECATED_IN_2_32_FOR(GMutex);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"GMutex *g_static_mutex_get_mutex_impl (GStaticMutex *mutex);";function g_static_mutex_get_mutex_impl(mutex) bind(c)
g;g_static_mutex_init;GLIB_DEPRECATED_IN_2_32_FOR(g_mutex_init);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_mutex_init (GStaticMutex *mutex);";subroutine g_static_mutex_init(mutex) bind(c)
g;g_static_private_free;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_private_free (GStaticPrivate *private_key);";subroutine g_static_private_free(private_key) bind(c)
g;g_static_private_get;GLIB_DEPRECATED_IN_2_32_FOR(g_private_get);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"gpointer g_static_private_get (GStaticPrivate *private_key);";function g_static_private_get(private_key) bind(c)
g;g_static_private_init;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_private_init (GStaticPrivate *private_key);";subroutine g_static_private_init(private_key) bind(c)
g;g_static_private_set;GLIB_DEPRECATED_IN_2_32_FOR(g_private_set);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_private_set (GStaticPrivate *private_key, gpointer data, GDestroyNotify notify);";subroutine g_static_private_set(private_key, data, notify) bind(c)
g;g_static_rec_mutex_free;GLIB_DEPRECATED_IN_2_32_FOR(g_rec_mutex_free);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_rec_mutex_free (GStaticRecMutex *mutex);";subroutine g_static_rec_mutex_free(mutex) bind(c)
g;g_static_rec_mutex_init;GLIB_DEPRECATED_IN_2_32_FOR(g_rec_mutex_init);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_rec_mutex_init (GStaticRecMutex *mutex);";subroutine g_static_rec_mutex_init(mutex) bind(c)
g;g_static_rec_mutex_lock;GLIB_DEPRECATED_IN_2_32_FOR(g_rec_mutex_lock);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_rec_mutex_lock (GStaticRecMutex *mutex);";subroutine g_static_rec_mutex_lock(mutex) bind(c)
g;g_static_rec_mutex_lock_full;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_rec_mutex_lock_full (GStaticRecMutex *mutex, guint depth);";subroutine g_static_rec_mutex_lock_full(mutex, depth) bind(c)
g;g_static_rec_mutex_trylock;GLIB_DEPRECATED_IN_2_32_FOR(g_rec_mutex_try_lock);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"gboolean g_static_rec_mutex_trylock (GStaticRecMutex *mutex);";function g_static_rec_mutex_trylock(mutex) bind(c)
g;g_static_rec_mutex_unlock;GLIB_DEPRECATED_IN_2_32_FOR(g_rec_mutex_unlock);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_rec_mutex_unlock (GStaticRecMutex *mutex);";subroutine g_static_rec_mutex_unlock(mutex) bind(c)
g;g_static_rec_mutex_unlock_full;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"guint g_static_rec_mutex_unlock_full (GStaticRecMutex *mutex);";function g_static_rec_mutex_unlock_full(mutex) bind(c)
g;g_static_resource_fini;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"void g_static_resource_fini (GStaticResource *static_resource);";subroutine g_static_resource_fini(static_resource) bind(c)
g;g_static_resource_get_resource;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"GResource *g_static_resource_get_resource (GStaticResource *static_resource);";function g_static_resource_get_resource(static_resource) bind(c)
g;g_static_resource_init;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gresource.h;"void g_static_resource_init (GStaticResource *static_resource);";subroutine g_static_resource_init(static_resource) bind(c)
g;g_static_rw_lock_free;GLIB_DEPRECATED_IN_2_32_FOR(g_rw_lock_free);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_rw_lock_free (GStaticRWLock *lock);";subroutine g_static_rw_lock_free(lock) bind(c)
g;g_static_rw_lock_init;GLIB_DEPRECATED_IN_2_32_FOR(g_rw_lock_init);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_rw_lock_init (GStaticRWLock *lock);";subroutine g_static_rw_lock_init(lock) bind(c)
g;g_static_rw_lock_reader_lock;GLIB_DEPRECATED_IN_2_32_FOR(g_rw_lock_reader_lock);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_rw_lock_reader_lock (GStaticRWLock *lock);";subroutine g_static_rw_lock_reader_lock(lock) bind(c)
g;g_static_rw_lock_reader_trylock;GLIB_DEPRECATED_IN_2_32_FOR(g_rw_lock_reader_trylock);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"gboolean g_static_rw_lock_reader_trylock (GStaticRWLock *lock);";function g_static_rw_lock_reader_trylock(lock) bind(c)
g;g_static_rw_lock_reader_unlock;GLIB_DEPRECATED_IN_2_32_FOR(g_rw_lock_reader_unlock);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_rw_lock_reader_unlock (GStaticRWLock *lock);";subroutine g_static_rw_lock_reader_unlock(lock) bind(c)
g;g_static_rw_lock_writer_lock;GLIB_DEPRECATED_IN_2_32_FOR(g_rw_lock_writer_lock);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_rw_lock_writer_lock (GStaticRWLock *lock);";subroutine g_static_rw_lock_writer_lock(lock) bind(c)
g;g_static_rw_lock_writer_trylock;GLIB_DEPRECATED_IN_2_32_FOR(g_rw_lock_writer_trylock);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"gboolean g_static_rw_lock_writer_trylock (GStaticRWLock *lock);";function g_static_rw_lock_writer_trylock(lock) bind(c)
g;g_static_rw_lock_writer_unlock;GLIB_DEPRECATED_IN_2_32_FOR(g_rw_lock_writer_unlock);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_static_rw_lock_writer_unlock (GStaticRWLock *lock);";subroutine g_static_rw_lock_writer_unlock(lock) bind(c)
g;g_stpcpy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_stpcpy (gchar *dest, const char *src);";function g_stpcpy(dest, src) bind(c)
g;g_str_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"gboolean g_str_equal (gconstpointer v1, gconstpointer v2);";function g_str_equal(v1, v2) bind(c)
g;g_str_has_prefix;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gboolean g_str_has_prefix (const gchar *str, const gchar *prefix);";function g_str_has_prefix(str, prefix) bind(c)
g;g_str_has_suffix;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gboolean g_str_has_suffix (const gchar *str, const gchar *suffix);";function g_str_has_suffix(str, suffix) bind(c)
g;g_str_hash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ghash.h;"guint g_str_hash (gconstpointer v);";function g_str_hash(v) bind(c)
g;g_str_is_ascii;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gboolean g_str_is_ascii (const gchar *str);";function g_str_is_ascii(str) bind(c)
g;g_str_match_string;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gboolean g_str_match_string (const gchar *search_term, const gchar *potential_hit, gboolean accept_alternates);";function g_str_match_string(search_term, potential_hit, accept_alternates) bind(c)
g;g_str_to_ascii;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar * g_str_to_ascii (const gchar *str, const gchar *from_locale);";function g_str_to_ascii(str, from_locale) bind(c)
g;g_str_tokenize_and_fold;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar ** g_str_tokenize_and_fold (const gchar *string, const gchar *translit_locale, gchar ***ascii_alternates);";function g_str_tokenize_and_fold(string, translit_locale, ascii_alternates) bind(c)
g;g_strcanon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strcanon (gchar *string, const gchar *valid_chars, gchar substitutor);";function g_strcanon(string, valid_chars, substitutor) bind(c)
g;g_strcasecmp;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gint g_strcasecmp (const gchar *s1, const gchar *s2);";function g_strcasecmp(s1, s2) bind(c)
g;g_strchomp;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strchomp (gchar *string);";function g_strchomp(string) bind(c)
g;g_strchug;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strchug (gchar *string);";function g_strchug(string) bind(c)
g;g_strcmp0;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"int g_strcmp0 (const char *str1, const char *str2);";function g_strcmp0(str1, str2) bind(c)
g;g_strcompress;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strcompress (const gchar *source) G_GNUC_MALLOC;";function g_strcompress(source) bind(c)
g;g_strdelimit;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strdelimit (gchar *string, const gchar *delimiters, gchar new_delimiter);";function g_strdelimit(string, delimiters, new_delimiter) bind(c)
g;g_strdown;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strdown (gchar *string);";function g_strdown(string) bind(c)
g;g_strdup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strdup (const gchar *str) G_GNUC_MALLOC;";function g_strdup(str) bind(c)
g;g_strdup_value_contents;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"gchar* g_strdup_value_contents (const GValue *value);";function g_strdup_value_contents(value) bind(c)
g;g_strdup_vprintf;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strdup_vprintf (const gchar *format, va_list args) G_GNUC_PRINTF(1, 0) G_GNUC_MALLOC;";function g_strdup_vprintf(format, args) bind(c)
g;g_strdupv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar** g_strdupv (gchar **str_array);";function g_strdupv(str_array) bind(c)
g;g_strerror;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"const gchar * g_strerror (gint errnum) G_GNUC_CONST;";function g_strerror(errnum) bind(c)
g;g_strescape;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strescape (const gchar *source, const gchar *exceptions) G_GNUC_MALLOC;";function g_strescape(source, exceptions) bind(c)
g;g_strfreev;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"void g_strfreev (gchar **str_array);";subroutine g_strfreev(str_array) bind(c)
g;g_string_append;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_append (GString *string, const gchar *val);";function g_string_append(string, val) bind(c)
g;g_string_append_c;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_append_c (GString *string, gchar c);";function g_string_append_c(string, c) bind(c)
g;g_string_append_len;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_append_len (GString *string, const gchar *val, gssize len);";function g_string_append_len(string, val, len) bind(c)
g;g_string_append_unichar;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_append_unichar (GString *string, gunichar wc);";function g_string_append_unichar(string, wc) bind(c)
g;g_string_append_uri_escaped;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_append_uri_escaped (GString *string, const gchar *unescaped, const gchar *reserved_chars_allowed, gboolean allow_utf8);";function g_string_append_uri_escaped(string, unescaped, reserved_chars_allowed, allow_utf8) bind(c)
g;g_string_append_vprintf;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"void g_string_append_vprintf (GString *string, const gchar *format, va_list args) G_GNUC_PRINTF(2, 0);";subroutine g_string_append_vprintf(string, format, args) bind(c)
g;g_string_ascii_down;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_ascii_down (GString *string);";function g_string_ascii_down(string) bind(c)
g;g_string_ascii_up;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_ascii_up (GString *string);";function g_string_ascii_up(string) bind(c)
g;g_string_assign;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_assign (GString *string, const gchar *rval);";function g_string_assign(string, rval) bind(c)
g;g_string_chunk_clear;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstringchunk.h;"void g_string_chunk_clear (GStringChunk *chunk);";subroutine g_string_chunk_clear(chunk) bind(c)
g;g_string_chunk_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstringchunk.h;"void g_string_chunk_free (GStringChunk *chunk);";subroutine g_string_chunk_free(chunk) bind(c)
g;g_string_chunk_insert;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstringchunk.h;"gchar* g_string_chunk_insert (GStringChunk *chunk, const gchar *string);";function g_string_chunk_insert(chunk, string) bind(c)
g;g_string_chunk_insert_const;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstringchunk.h;"gchar* g_string_chunk_insert_const (GStringChunk *chunk, const gchar *string);";function g_string_chunk_insert_const(chunk, string) bind(c)
g;g_string_chunk_insert_len;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstringchunk.h;"gchar* g_string_chunk_insert_len (GStringChunk *chunk, const gchar *string, gssize len);";function g_string_chunk_insert_len(chunk, string, len) bind(c)
g;g_string_chunk_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstringchunk.h;"GStringChunk* g_string_chunk_new (gsize size);";function g_string_chunk_new(size) bind(c)
g;g_string_down;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString *g_string_down (GString *string);";function g_string_down(string) bind(c)
g;g_string_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"gboolean g_string_equal (const GString *v, const GString *v2);";function g_string_equal(v, v2) bind(c)
g;g_string_erase;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_erase (GString *string, gssize pos, gssize len);";function g_string_erase(string, pos, len) bind(c)
g;g_string_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"gchar* g_string_free (GString *string, gboolean free_segment);";function g_string_free(string, free_segment) bind(c)
g;g_string_free_to_bytes;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GBytes* g_string_free_to_bytes (GString *string);";function g_string_free_to_bytes(string) bind(c)
g;g_string_hash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"guint g_string_hash (const GString *str);";function g_string_hash(str) bind(c)
g;g_string_insert;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_insert (GString *string, gssize pos, const gchar *val);";function g_string_insert(string, pos, val) bind(c)
g;g_string_insert_c;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_insert_c (GString *string, gssize pos, gchar c);";function g_string_insert_c(string, pos, c) bind(c)
g;g_string_insert_len;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_insert_len (GString *string, gssize pos, const gchar *val, gssize len);";function g_string_insert_len(string, pos, val, len) bind(c)
g;g_string_insert_unichar;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_insert_unichar (GString *string, gssize pos, gunichar wc);";function g_string_insert_unichar(string, pos, wc) bind(c)
g;g_string_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_new (const gchar *init);";function g_string_new(init) bind(c)
g;g_string_new_len;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_new_len (const gchar *init, gssize len);";function g_string_new_len(init, len) bind(c)
g;g_string_overwrite;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_overwrite (GString *string, gsize pos, const gchar *val);";function g_string_overwrite(string, pos, val) bind(c)
g;g_string_overwrite_len;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_overwrite_len (GString *string, gsize pos, const gchar *val, gssize len);";function g_string_overwrite_len(string, pos, val, len) bind(c)
g;g_string_prepend;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_prepend (GString *string, const gchar *val);";function g_string_prepend(string, val) bind(c)
g;g_string_prepend_c;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_prepend_c (GString *string, gchar c);";function g_string_prepend_c(string, c) bind(c)
g;g_string_prepend_len;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_prepend_len (GString *string, const gchar *val, gssize len);";function g_string_prepend_len(string, val, len) bind(c)
g;g_string_prepend_unichar;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_prepend_unichar (GString *string, gunichar wc);";function g_string_prepend_unichar(string, wc) bind(c)
g;g_string_set_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_set_size (GString *string, gsize len);";function g_string_set_size(string, len) bind(c)
g;g_string_sized_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_sized_new (gsize dfl_size);";function g_string_sized_new(dfl_size) bind(c)
g;g_string_truncate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString* g_string_truncate (GString *string, gsize len);";function g_string_truncate(string, len) bind(c)
g;g_string_up;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"GString *g_string_up (GString *string);";function g_string_up(string) bind(c)
g;g_string_vprintf;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstring.h;"void g_string_vprintf (GString *string, const gchar *format, va_list args) G_GNUC_PRINTF(2, 0);";subroutine g_string_vprintf(string, format, args) bind(c)
g;g_strip_context;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/ggettext.h;"const gchar *g_strip_context (const gchar *msgid, const gchar *msgval) G_GNUC_FORMAT(1);";function g_strip_context(msgid, msgval) bind(c)
g;g_strjoinv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strjoinv (const gchar *separator, gchar **str_array) G_GNUC_MALLOC;";function g_strjoinv(separator, str_array) bind(c)
g;g_strlcat;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gsize g_strlcat (gchar *dest, const gchar *src, gsize dest_size);";function g_strlcat(dest, src, dest_size) bind(c)
g;g_strlcpy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gsize g_strlcpy (gchar *dest, const gchar *src, gsize dest_size);";function g_strlcpy(dest, src, dest_size) bind(c)
g;g_strncasecmp;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gint g_strncasecmp (const gchar *s1, const gchar *s2, guint n);";function g_strncasecmp(s1, s2, n) bind(c)
g;g_strndup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strndup (const gchar *str, gsize n) G_GNUC_MALLOC;";function g_strndup(str, n) bind(c)
g;g_strnfill;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strnfill (gsize length, gchar fill_char) G_GNUC_MALLOC;";function g_strnfill(length, fill_char) bind(c)
g;g_strreverse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar * g_strreverse (gchar *string);";function g_strreverse(string) bind(c)
g;g_strrstr;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar * g_strrstr (const gchar *haystack, const gchar *needle);";function g_strrstr(haystack, needle) bind(c)
g;g_strrstr_len;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar * g_strrstr_len (const gchar *haystack, gssize haystack_len, const gchar *needle);";function g_strrstr_len(haystack, haystack_len, needle) bind(c)
g;g_strsignal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"const gchar * g_strsignal (gint signum) G_GNUC_CONST;";function g_strsignal(signum) bind(c)
g;g_strsplit;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar** g_strsplit (const gchar *string, const gchar *delimiter, gint max_tokens);";function g_strsplit(string, delimiter, max_tokens) bind(c)
g;g_strsplit_set;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar ** g_strsplit_set (const gchar *string, const gchar *delimiters, gint max_tokens);";function g_strsplit_set(string, delimiters, max_tokens) bind(c)
g;g_strstr_len;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar * g_strstr_len (const gchar *haystack, gssize haystack_len, const gchar *needle);";function g_strstr_len(haystack, haystack_len, needle) bind(c)
g;g_strtod;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gdouble g_strtod (const gchar *nptr, gchar **endptr);";function g_strtod(nptr, endptr) bind(c)
g;g_strup;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gchar* g_strup (gchar *string);";function g_strup(string) bind(c)
g;g_strv_builder_add;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gstrvbuilder.h;"void g_strv_builder_add (GStrvBuilder *builder, const char *value);";subroutine g_strv_builder_add(builder, value) bind(c)
g;g_strv_builder_new;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gstrvbuilder.h;"GStrvBuilder *g_strv_builder_new (void);";function g_strv_builder_new() bind(c)
g;g_strv_builder_ref;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gstrvbuilder.h;"GStrvBuilder *g_strv_builder_ref (GStrvBuilder *builder);";function g_strv_builder_ref(builder) bind(c)
g;g_strv_builder_unref;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gstrvbuilder.h;"void g_strv_builder_unref (GStrvBuilder *builder);";subroutine g_strv_builder_unref(builder) bind(c)
g;g_strv_contains;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gboolean g_strv_contains (const gchar * const *strv, const gchar *str);";function g_strv_contains(strv, str) bind(c)
g;g_strv_equal;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"gboolean g_strv_equal (const gchar * const *strv1, const gchar * const *strv2);";function g_strv_equal(strv1, strv2) bind(c)
g;g_strv_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_strv_get_type (void) G_GNUC_CONST;";function g_strv_get_type() bind(c)
g;g_strv_length;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstrfuncs.h;"guint g_strv_length (gchar **str_array);";function g_strv_length(str_array) bind(c)
g;g_subprocess_communicate;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gboolean g_subprocess_communicate (GSubprocess *subprocess, GBytes *stdin_buf, GCancellable *cancellable, GBytes **stdout_buf, GBytes **stderr_buf, GError **error);";function g_subprocess_communicate(subprocess, stdin_buf, cancellable, stdout_buf, stderr_buf, error) bind(c)
g;g_subprocess_communicate_async;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"void g_subprocess_communicate_async (GSubprocess *subprocess, GBytes *stdin_buf, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_subprocess_communicate_async(subprocess, stdin_buf, cancellable, callback, user_data) bind(c)
g;g_subprocess_communicate_finish;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gboolean g_subprocess_communicate_finish (GSubprocess *subprocess, GAsyncResult *result, GBytes **stdout_buf, GBytes **stderr_buf, GError **error);";function g_subprocess_communicate_finish(subprocess, result, stdout_buf, stderr_buf, error) bind(c)
g;g_subprocess_communicate_utf8;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gboolean g_subprocess_communicate_utf8 (GSubprocess *subprocess, const char *stdin_buf, GCancellable *cancellable, char **stdout_buf, char **stderr_buf, GError **error);";function g_subprocess_communicate_utf8(subprocess, stdin_buf, cancellable, stdout_buf, stderr_buf, error) bind(c)
g;g_subprocess_communicate_utf8_async;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"void g_subprocess_communicate_utf8_async (GSubprocess *subprocess, const char *stdin_buf, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_subprocess_communicate_utf8_async(subprocess, stdin_buf, cancellable, callback, user_data) bind(c)
g;g_subprocess_communicate_utf8_finish;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gboolean g_subprocess_communicate_utf8_finish (GSubprocess *subprocess, GAsyncResult *result, char **stdout_buf, char **stderr_buf, GError **error);";function g_subprocess_communicate_utf8_finish(subprocess, result, stdout_buf, stderr_buf, error) bind(c)
g;g_subprocess_force_exit;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"void g_subprocess_force_exit (GSubprocess *subprocess);";subroutine g_subprocess_force_exit(subprocess) bind(c)
g;g_subprocess_get_exit_status;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gint g_subprocess_get_exit_status (GSubprocess *subprocess);";function g_subprocess_get_exit_status(subprocess) bind(c)
g;g_subprocess_get_identifier;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"const gchar * g_subprocess_get_identifier (GSubprocess *subprocess);";function g_subprocess_get_identifier(subprocess) bind(c)
g;g_subprocess_get_if_exited;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gboolean g_subprocess_get_if_exited (GSubprocess *subprocess);";function g_subprocess_get_if_exited(subprocess) bind(c)
g;g_subprocess_get_if_signaled;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gboolean g_subprocess_get_if_signaled (GSubprocess *subprocess);";function g_subprocess_get_if_signaled(subprocess) bind(c)
g;g_subprocess_get_status;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gint g_subprocess_get_status (GSubprocess *subprocess);";function g_subprocess_get_status(subprocess) bind(c)
g;g_subprocess_get_stderr_pipe;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"GInputStream * g_subprocess_get_stderr_pipe (GSubprocess *subprocess);";function g_subprocess_get_stderr_pipe(subprocess) bind(c)
g;g_subprocess_get_stdin_pipe;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"GOutputStream * g_subprocess_get_stdin_pipe (GSubprocess *subprocess);";function g_subprocess_get_stdin_pipe(subprocess) bind(c)
g;g_subprocess_get_stdout_pipe;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"GInputStream * g_subprocess_get_stdout_pipe (GSubprocess *subprocess);";function g_subprocess_get_stdout_pipe(subprocess) bind(c)
g;g_subprocess_get_successful;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gboolean g_subprocess_get_successful (GSubprocess *subprocess);";function g_subprocess_get_successful(subprocess) bind(c)
g;g_subprocess_get_term_sig;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gint g_subprocess_get_term_sig (GSubprocess *subprocess);";function g_subprocess_get_term_sig(subprocess) bind(c)
g;g_subprocess_get_type;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"GType g_subprocess_get_type (void) G_GNUC_CONST;";function g_subprocess_get_type() bind(c)
g;g_subprocess_launcher_close;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_close (GSubprocessLauncher *self);";subroutine g_subprocess_launcher_close(self) bind(c)
g;g_subprocess_launcher_get_type;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"GType g_subprocess_launcher_get_type (void) G_GNUC_CONST;";function g_subprocess_launcher_get_type() bind(c)
g;g_subprocess_launcher_getenv;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"const gchar * g_subprocess_launcher_getenv (GSubprocessLauncher *self, const gchar *variable);";function g_subprocess_launcher_getenv(self, variable) bind(c)
g;g_subprocess_launcher_new;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"GSubprocessLauncher * g_subprocess_launcher_new (GSubprocessFlags flags);";function g_subprocess_launcher_new(flags) bind(c)
g;g_subprocess_launcher_set_child_setup;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_set_child_setup (GSubprocessLauncher *self, GSpawnChildSetupFunc child_setup, gpointer user_data, GDestroyNotify destroy_notify);";subroutine g_subprocess_launcher_set_child_setup(self, child_setup, user_data, destroy_notify) bind(c)
g;g_subprocess_launcher_set_cwd;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_set_cwd (GSubprocessLauncher *self, const gchar *cwd);";subroutine g_subprocess_launcher_set_cwd(self, cwd) bind(c)
g;g_subprocess_launcher_set_environ;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_set_environ (GSubprocessLauncher *self, gchar **env);";subroutine g_subprocess_launcher_set_environ(self, env) bind(c)
g;g_subprocess_launcher_set_flags;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_set_flags (GSubprocessLauncher *self, GSubprocessFlags flags);";subroutine g_subprocess_launcher_set_flags(self, flags) bind(c)
g;g_subprocess_launcher_set_stderr_file_path;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_set_stderr_file_path (GSubprocessLauncher *self, const gchar *path);";subroutine g_subprocess_launcher_set_stderr_file_path(self, path) bind(c)
g;g_subprocess_launcher_set_stdin_file_path;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_set_stdin_file_path (GSubprocessLauncher *self, const gchar *path);";subroutine g_subprocess_launcher_set_stdin_file_path(self, path) bind(c)
g;g_subprocess_launcher_set_stdout_file_path;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_set_stdout_file_path (GSubprocessLauncher *self, const gchar *path);";subroutine g_subprocess_launcher_set_stdout_file_path(self, path) bind(c)
g;g_subprocess_launcher_setenv;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_setenv (GSubprocessLauncher *self, const gchar *variable, const gchar *value, gboolean overwrite);";subroutine g_subprocess_launcher_setenv(self, variable, value, overwrite) bind(c)
g;g_subprocess_launcher_spawnv;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"GSubprocess * g_subprocess_launcher_spawnv (GSubprocessLauncher *self, const gchar * const *argv, GError **error);";function g_subprocess_launcher_spawnv(self, argv, error) bind(c)
g;g_subprocess_launcher_take_fd;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_take_fd (GSubprocessLauncher *self, gint source_fd, gint target_fd);";subroutine g_subprocess_launcher_take_fd(self, source_fd, target_fd) bind(c)
g;g_subprocess_launcher_take_stderr_fd;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_take_stderr_fd (GSubprocessLauncher *self, gint fd);";subroutine g_subprocess_launcher_take_stderr_fd(self, fd) bind(c)
g;g_subprocess_launcher_take_stdin_fd;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_take_stdin_fd (GSubprocessLauncher *self, gint fd);";subroutine g_subprocess_launcher_take_stdin_fd(self, fd) bind(c)
g;g_subprocess_launcher_take_stdout_fd;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_take_stdout_fd (GSubprocessLauncher *self, gint fd);";subroutine g_subprocess_launcher_take_stdout_fd(self, fd) bind(c)
g;g_subprocess_launcher_unsetenv;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocesslauncher.h;"void g_subprocess_launcher_unsetenv (GSubprocessLauncher *self, const gchar *variable);";subroutine g_subprocess_launcher_unsetenv(self, variable) bind(c)
g;g_subprocess_newv;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"GSubprocess * g_subprocess_newv (const gchar * const *argv, GSubprocessFlags flags, GError **error);";function g_subprocess_newv(argv, flags, error) bind(c)
g;g_subprocess_send_signal;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"void g_subprocess_send_signal (GSubprocess *subprocess, gint signal_num);";subroutine g_subprocess_send_signal(subprocess, signal_num) bind(c)
g;g_subprocess_wait;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gboolean g_subprocess_wait (GSubprocess *subprocess, GCancellable *cancellable, GError **error);";function g_subprocess_wait(subprocess, cancellable, error) bind(c)
g;g_subprocess_wait_async;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"void g_subprocess_wait_async (GSubprocess *subprocess, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_subprocess_wait_async(subprocess, cancellable, callback, user_data) bind(c)
g;g_subprocess_wait_check;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gboolean g_subprocess_wait_check (GSubprocess *subprocess, GCancellable *cancellable, GError **error);";function g_subprocess_wait_check(subprocess, cancellable, error) bind(c)
g;g_subprocess_wait_check_async;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"void g_subprocess_wait_check_async (GSubprocess *subprocess, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_subprocess_wait_check_async(subprocess, cancellable, callback, user_data) bind(c)
g;g_subprocess_wait_check_finish;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gboolean g_subprocess_wait_check_finish (GSubprocess *subprocess, GAsyncResult *result, GError **error);";function g_subprocess_wait_check_finish(subprocess, result, error) bind(c)
g;g_subprocess_wait_finish;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gsubprocess.h;"gboolean g_subprocess_wait_finish (GSubprocess *subprocess, GAsyncResult *result, GError **error);";function g_subprocess_wait_finish(subprocess, result, error) bind(c)
g;g_task_attach_source;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_attach_source (GTask *task, GSource *source, GSourceFunc callback);";subroutine g_task_attach_source(task, source, callback) bind(c)
g;g_task_get_cancellable;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"GCancellable *g_task_get_cancellable (GTask *task);";function g_task_get_cancellable(task) bind(c)
g;g_task_get_check_cancellable;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gboolean g_task_get_check_cancellable (GTask *task);";function g_task_get_check_cancellable(task) bind(c)
g;g_task_get_completed;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gboolean g_task_get_completed (GTask *task);";function g_task_get_completed(task) bind(c)
g;g_task_get_context;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"GMainContext *g_task_get_context (GTask *task);";function g_task_get_context(task) bind(c)
g;g_task_get_name;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"const gchar *g_task_get_name (GTask *task);";function g_task_get_name(task) bind(c)
g;g_task_get_priority;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gint g_task_get_priority (GTask *task);";function g_task_get_priority(task) bind(c)
g;g_task_get_return_on_cancel;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gboolean g_task_get_return_on_cancel (GTask *task);";function g_task_get_return_on_cancel(task) bind(c)
g;g_task_get_source_object;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gpointer g_task_get_source_object (GTask *task);";function g_task_get_source_object(task) bind(c)
g;g_task_get_source_tag;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gpointer g_task_get_source_tag (GTask *task);";function g_task_get_source_tag(task) bind(c)
g;g_task_get_task_data;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gpointer g_task_get_task_data (GTask *task);";function g_task_get_task_data(task) bind(c)
g;g_task_get_type;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"GType g_task_get_type (void) G_GNUC_CONST;";function g_task_get_type() bind(c)
g;g_task_had_error;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gboolean g_task_had_error (GTask *task);";function g_task_had_error(task) bind(c)
g;g_task_is_valid;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gboolean g_task_is_valid (gpointer result, gpointer source_object);";function g_task_is_valid(result, source_object) bind(c)
g;g_task_new;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"GTask *g_task_new (gpointer source_object, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer callback_data);";function g_task_new(source_object, cancellable, callback, callback_data) bind(c)
g;g_task_propagate_boolean;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gboolean g_task_propagate_boolean (GTask *task, GError **error);";function g_task_propagate_boolean(task, error) bind(c)
g;g_task_propagate_int;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gssize g_task_propagate_int (GTask *task, GError **error);";function g_task_propagate_int(task, error) bind(c)
g;g_task_propagate_pointer;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gpointer g_task_propagate_pointer (GTask *task, GError **error);";function g_task_propagate_pointer(task, error) bind(c)
g;g_task_propagate_value;GLIB_AVAILABLE_IN_2_64;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gboolean g_task_propagate_value (GTask *task, GValue *value, GError **error);";function g_task_propagate_value(task, value, error) bind(c)
g;g_task_report_error;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_report_error (gpointer source_object, GAsyncReadyCallback callback, gpointer callback_data, gpointer source_tag, GError *error);";subroutine g_task_report_error(source_object, callback, callback_data, source_tag, error) bind(c)
g;g_task_return_boolean;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_return_boolean (GTask *task, gboolean result);";subroutine g_task_return_boolean(task, result) bind(c)
g;g_task_return_error;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_return_error (GTask *task, GError *error);";subroutine g_task_return_error(task, error) bind(c)
g;g_task_return_error_if_cancelled;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gboolean g_task_return_error_if_cancelled (GTask *task);";function g_task_return_error_if_cancelled(task) bind(c)
g;g_task_return_int;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_return_int (GTask *task, gssize result);";subroutine g_task_return_int(task, result) bind(c)
g;g_task_return_pointer;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_return_pointer (GTask *task, gpointer result, GDestroyNotify result_destroy);";subroutine g_task_return_pointer(task, result, result_destroy) bind(c)
g;g_task_return_value;GLIB_AVAILABLE_IN_2_64;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_return_value (GTask *task, GValue *result);";subroutine g_task_return_value(task, result) bind(c)
g;g_task_run_in_thread;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_run_in_thread (GTask *task, GTaskThreadFunc task_func);";subroutine g_task_run_in_thread(task, task_func) bind(c)
g;g_task_run_in_thread_sync;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_run_in_thread_sync (GTask *task, GTaskThreadFunc task_func);";subroutine g_task_run_in_thread_sync(task, task_func) bind(c)
g;g_task_set_check_cancellable;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_set_check_cancellable (GTask *task, gboolean check_cancellable);";subroutine g_task_set_check_cancellable(task, check_cancellable) bind(c)
g;g_task_set_name;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_set_name (GTask *task, const gchar *name);";subroutine g_task_set_name(task, name) bind(c)
g;g_task_set_priority;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_set_priority (GTask *task, gint priority);";subroutine g_task_set_priority(task, priority) bind(c)
g;g_task_set_return_on_cancel;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"gboolean g_task_set_return_on_cancel (GTask *task, gboolean return_on_cancel);";function g_task_set_return_on_cancel(task, return_on_cancel) bind(c)
g;g_task_set_source_tag;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_set_source_tag (GTask *task, gpointer source_tag);";subroutine g_task_set_source_tag(task, source_tag) bind(c)
g;g_task_set_task_data;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gio/gtask.h;"void g_task_set_task_data (GTask *task, gpointer task_data, GDestroyNotify task_data_destroy);";subroutine g_task_set_task_data(task, task_data, task_data_destroy) bind(c)
g;g_tcp_connection_get_graceful_disconnect;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtcpconnection.h;"gboolean g_tcp_connection_get_graceful_disconnect (GTcpConnection *connection);";function g_tcp_connection_get_graceful_disconnect(connection) bind(c)
g;g_tcp_connection_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtcpconnection.h;"GType g_tcp_connection_get_type (void) G_GNUC_CONST;";function g_tcp_connection_get_type() bind(c)
g;g_tcp_connection_set_graceful_disconnect;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtcpconnection.h;"void g_tcp_connection_set_graceful_disconnect (GTcpConnection *connection, gboolean graceful_disconnect);";subroutine g_tcp_connection_set_graceful_disconnect(connection, graceful_disconnect) bind(c)
g;g_tcp_wrapper_connection_get_base_io_stream;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtcpwrapperconnection.h;"GIOStream *g_tcp_wrapper_connection_get_base_io_stream (GTcpWrapperConnection *conn);";function g_tcp_wrapper_connection_get_base_io_stream(conn) bind(c)
g;g_tcp_wrapper_connection_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtcpwrapperconnection.h;"GType g_tcp_wrapper_connection_get_type (void) G_GNUC_CONST;";function g_tcp_wrapper_connection_get_type() bind(c)
g;g_tcp_wrapper_connection_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtcpwrapperconnection.h;"GSocketConnection *g_tcp_wrapper_connection_new (GIOStream *base_io_stream, GSocket *socket);";function g_tcp_wrapper_connection_new(base_io_stream, socket) bind(c)
g;g_test_add_data_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_add_data_func (const char *testpath, gconstpointer test_data, GTestDataFunc test_func);";subroutine g_test_add_data_func(testpath, test_data, test_func) bind(c)
g;g_test_add_data_func_full;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_add_data_func_full (const char *testpath, gpointer test_data, GTestDataFunc test_func, GDestroyNotify data_free_func);";subroutine g_test_add_data_func_full(testpath, test_data, test_func, data_free_func) bind(c)
g;g_test_add_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_add_func (const char *testpath, GTestFunc test_func);";subroutine g_test_add_func(testpath, test_func) bind(c)
g;g_test_add_vtable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_add_vtable (const char *testpath, gsize data_size, gconstpointer test_data, GTestFixtureFunc data_setup, GTestFixtureFunc data_test, GTestFixtureFunc data_teardown);";subroutine g_test_add_vtable(testpath, data_size, test_data, data_setup, data_test, data_teardown) bind(c)
g;g_test_assert_expected_messages_internal;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_assert_expected_messages_internal (const char *domain, const char *file, int line, const char *func);";subroutine g_test_assert_expected_messages_internal(domain, file, line, func) bind(c)
g;g_test_bug;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_bug (const char *bug_uri_snippet);";subroutine g_test_bug(bug_uri_snippet) bind(c)
g;g_test_bug_base;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_bug_base (const char *uri_pattern);";subroutine g_test_bug_base(uri_pattern) bind(c)
g;g_test_create_case;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"GTestCase* g_test_create_case (const char *test_name, gsize data_size, gconstpointer test_data, GTestFixtureFunc data_setup, GTestFixtureFunc data_test, GTestFixtureFunc data_teardown);";function g_test_create_case(test_name, data_size, test_data, data_setup, data_test, data_teardown) bind(c)
g;g_test_create_suite;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"GTestSuite* g_test_create_suite (const char *suite_name);";function g_test_create_suite(suite_name) bind(c)
g;g_test_dbus_add_service_dir;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gtestdbus.h;"void g_test_dbus_add_service_dir (GTestDBus *self, const gchar *path);";subroutine g_test_dbus_add_service_dir(self, path) bind(c)
g;g_test_dbus_down;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gtestdbus.h;"void g_test_dbus_down (GTestDBus *self);";subroutine g_test_dbus_down(self) bind(c)
g;g_test_dbus_get_bus_address;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gtestdbus.h;"const gchar * g_test_dbus_get_bus_address (GTestDBus *self);";function g_test_dbus_get_bus_address(self) bind(c)
g;g_test_dbus_get_flags;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gtestdbus.h;"GTestDBusFlags g_test_dbus_get_flags (GTestDBus *self);";function g_test_dbus_get_flags(self) bind(c)
g;g_test_dbus_get_type;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gtestdbus.h;"GType g_test_dbus_get_type (void) G_GNUC_CONST;";function g_test_dbus_get_type() bind(c)
g;g_test_dbus_new;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gtestdbus.h;"GTestDBus * g_test_dbus_new (GTestDBusFlags flags);";function g_test_dbus_new(flags) bind(c)
g;g_test_dbus_stop;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gtestdbus.h;"void g_test_dbus_stop (GTestDBus *self);";subroutine g_test_dbus_stop(self) bind(c)
g;g_test_dbus_unset;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gtestdbus.h;"void g_test_dbus_unset (void);";subroutine g_test_dbus_unset() bind(c)
g;g_test_dbus_up;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gtestdbus.h;"void g_test_dbus_up (GTestDBus *self);";subroutine g_test_dbus_up(self) bind(c)
g;g_test_expect_message;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_expect_message (const gchar *log_domain, GLogLevelFlags log_level, const gchar *pattern);";subroutine g_test_expect_message(log_domain, log_level, pattern) bind(c)
g;g_test_fail;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_fail (void);";subroutine g_test_fail() bind(c)
g;g_test_failed;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"gboolean g_test_failed (void);";function g_test_failed() bind(c)
g;g_test_get_dir;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"const gchar *g_test_get_dir (GTestFileType file_type);";function g_test_get_dir(file_type) bind(c)
g;g_test_get_root;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"GTestSuite* g_test_get_root (void);";function g_test_get_root() bind(c)
g;g_test_incomplete;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_incomplete (const gchar *msg);";subroutine g_test_incomplete(msg) bind(c)
g;g_test_log_buffer_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_log_buffer_free (GTestLogBuffer *tbuffer);";subroutine g_test_log_buffer_free(tbuffer) bind(c)
g;g_test_log_buffer_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"GTestLogBuffer* g_test_log_buffer_new (void);";function g_test_log_buffer_new() bind(c)
g;g_test_log_buffer_pop;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"GTestLogMsg* g_test_log_buffer_pop (GTestLogBuffer *tbuffer);";function g_test_log_buffer_pop(tbuffer) bind(c)
g;g_test_log_buffer_push;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_log_buffer_push (GTestLogBuffer *tbuffer, guint n_bytes, const guint8 *bytes);";subroutine g_test_log_buffer_push(tbuffer, n_bytes, bytes) bind(c)
g;g_test_log_msg_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_log_msg_free (GTestLogMsg *tmsg);";subroutine g_test_log_msg_free(tmsg) bind(c)
g;g_test_log_set_fatal_handler;;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_log_set_fatal_handler (GTestLogFatalFunc log_func, gpointer user_data);";subroutine g_test_log_set_fatal_handler(log_func, user_data) bind(c)
g;g_test_log_type_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"const char* g_test_log_type_name (GTestLogType log_type);";function g_test_log_type_name(log_type) bind(c)
g;g_test_queue_destroy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_queue_destroy (GDestroyNotify destroy_func, gpointer destroy_data);";subroutine g_test_queue_destroy(destroy_func, destroy_data) bind(c)
g;g_test_queue_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_queue_free (gpointer gfree_pointer);";subroutine g_test_queue_free(gfree_pointer) bind(c)
g;g_test_rand_double;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"double g_test_rand_double (void);";function g_test_rand_double() bind(c)
g;g_test_rand_double_range;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"double g_test_rand_double_range (double range_start, double range_end);";function g_test_rand_double_range(range_start, range_end) bind(c)
g;g_test_rand_int;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"gint32 g_test_rand_int (void);";function g_test_rand_int() bind(c)
g;g_test_rand_int_range;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"gint32 g_test_rand_int_range (gint32 begin, gint32 end);";function g_test_rand_int_range(begin, end) bind(c)
g;g_test_run;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"int g_test_run (void);";function g_test_run() bind(c)
g;g_test_run_suite;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"int g_test_run_suite (GTestSuite *suite);";function g_test_run_suite(suite) bind(c)
g;g_test_set_nonfatal_assertions;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_set_nonfatal_assertions (void);";subroutine g_test_set_nonfatal_assertions() bind(c)
g;g_test_skip;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_skip (const gchar *msg);";subroutine g_test_skip(msg) bind(c)
g;g_test_subprocess;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"gboolean g_test_subprocess (void);";function g_test_subprocess() bind(c)
g;g_test_suite_add;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_suite_add (GTestSuite *suite, GTestCase *test_case);";subroutine g_test_suite_add(suite, test_case) bind(c)
g;g_test_suite_add_suite;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_suite_add_suite (GTestSuite *suite, GTestSuite *nestedsuite);";subroutine g_test_suite_add_suite(suite, nestedsuite) bind(c)
g;g_test_summary;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_summary (const char *summary);";subroutine g_test_summary(summary) bind(c)
g;g_test_timer_elapsed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"double g_test_timer_elapsed (void);";function g_test_timer_elapsed() bind(c)
g;g_test_timer_last;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"double g_test_timer_last (void);";function g_test_timer_last() bind(c)
g;g_test_timer_start;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_timer_start (void);";subroutine g_test_timer_start() bind(c)
g;g_test_trap_assertions;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_trap_assertions (const char *domain, const char *file, int line, const char *func, guint64 assertion_flags, const char *pattern);";subroutine g_test_trap_assertions(domain, file, line, func, assertion_flags, pattern) bind(c)
g;g_test_trap_has_passed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"gboolean g_test_trap_has_passed (void);";function g_test_trap_has_passed() bind(c)
g;g_test_trap_reached_timeout;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"gboolean g_test_trap_reached_timeout (void);";function g_test_trap_reached_timeout() bind(c)
g;g_test_trap_subprocess;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/glib/gtestutils.h;"void g_test_trap_subprocess (const char *test_path, guint64 usec_timeout, GTestSubprocessFlags test_flags);";subroutine g_test_trap_subprocess(test_path, usec_timeout, test_flags) bind(c)
g;g_themed_icon_append_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gthemedicon.h;"void g_themed_icon_append_name (GThemedIcon *icon, const char *iconname);";subroutine g_themed_icon_append_name(icon, iconname) bind(c)
g;g_themed_icon_get_names;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gthemedicon.h;"const gchar* const * g_themed_icon_get_names (GThemedIcon *icon);";function g_themed_icon_get_names(icon) bind(c)
g;g_themed_icon_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gthemedicon.h;"GType g_themed_icon_get_type (void) G_GNUC_CONST;";function g_themed_icon_get_type() bind(c)
g;g_themed_icon_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gthemedicon.h;"GIcon *g_themed_icon_new (const char *iconname);";function g_themed_icon_new(iconname) bind(c)
g;g_themed_icon_new_from_names;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gthemedicon.h;"GIcon *g_themed_icon_new_from_names (char **iconnames, int len);";function g_themed_icon_new_from_names(iconnames, len) bind(c)
g;g_themed_icon_new_with_default_fallbacks;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gthemedicon.h;"GIcon *g_themed_icon_new_with_default_fallbacks (const char *iconname);";function g_themed_icon_new_with_default_fallbacks(iconname) bind(c)
g;g_themed_icon_prepend_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gthemedicon.h;"void g_themed_icon_prepend_name (GThemedIcon *icon, const char *iconname);";subroutine g_themed_icon_prepend_name(icon, iconname) bind(c)
g;g_thread_create;GLIB_DEPRECATED_IN_2_32_FOR(g_thread_new);glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"GThread *g_thread_create (GThreadFunc func, gpointer data, gboolean joinable, GError **error);";function g_thread_create(func, data, joinable, error) bind(c)
g;g_thread_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"GQuark g_thread_error_quark (void);";function g_thread_error_quark() bind(c)
g;g_thread_exit;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_thread_exit (gpointer retval);";subroutine g_thread_exit(retval) bind(c)
g;g_thread_foreach;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_thread_foreach (GFunc thread_func, gpointer user_data);";subroutine g_thread_foreach(thread_func, user_data) bind(c)
g;g_thread_get_initialized;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"gboolean g_thread_get_initialized (void);";function g_thread_get_initialized() bind(c)
g;g_thread_get_type;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_thread_get_type (void) G_GNUC_CONST;";function g_thread_get_type() bind(c)
g;g_thread_init;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_thread_init (gpointer vtable);";subroutine g_thread_init(vtable) bind(c)
g;g_thread_init_with_errorcheck_mutexes;GLIB_DEPRECATED_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"void g_thread_init_with_errorcheck_mutexes (gpointer vtable);";subroutine g_thread_init_with_errorcheck_mutexes(vtable) bind(c)
g;g_thread_join;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"gpointer g_thread_join (GThread *thread);";function g_thread_join(thread) bind(c)
g;g_thread_new;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"GThread * g_thread_new (const gchar *name, GThreadFunc func, gpointer data);";function g_thread_new(name, func, data) bind(c)
g;g_thread_pool_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"void g_thread_pool_free (GThreadPool *pool, gboolean immediate, gboolean wait_);";subroutine g_thread_pool_free(pool, immediate, wait_) bind(c)
g;g_thread_pool_get_max_idle_time;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"guint g_thread_pool_get_max_idle_time (void);";function g_thread_pool_get_max_idle_time() bind(c)
g;g_thread_pool_get_max_threads;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"gint g_thread_pool_get_max_threads (GThreadPool *pool);";function g_thread_pool_get_max_threads(pool) bind(c)
g;g_thread_pool_get_max_unused_threads;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"gint g_thread_pool_get_max_unused_threads (void);";function g_thread_pool_get_max_unused_threads() bind(c)
g;g_thread_pool_get_num_threads;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"guint g_thread_pool_get_num_threads (GThreadPool *pool);";function g_thread_pool_get_num_threads(pool) bind(c)
g;g_thread_pool_get_num_unused_threads;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"guint g_thread_pool_get_num_unused_threads (void);";function g_thread_pool_get_num_unused_threads() bind(c)
g;g_thread_pool_move_to_front;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"gboolean g_thread_pool_move_to_front (GThreadPool *pool, gpointer data);";function g_thread_pool_move_to_front(pool, data) bind(c)
g;g_thread_pool_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"GThreadPool * g_thread_pool_new (GFunc func, gpointer user_data, gint max_threads, gboolean exclusive, GError **error);";function g_thread_pool_new(func, user_data, max_threads, exclusive, error) bind(c)
g;g_thread_pool_push;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"gboolean g_thread_pool_push (GThreadPool *pool, gpointer data, GError **error);";function g_thread_pool_push(pool, data, error) bind(c)
g;g_thread_pool_set_max_idle_time;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"void g_thread_pool_set_max_idle_time (guint interval);";subroutine g_thread_pool_set_max_idle_time(interval) bind(c)
g;g_thread_pool_set_max_threads;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"gboolean g_thread_pool_set_max_threads (GThreadPool *pool, gint max_threads, GError **error);";function g_thread_pool_set_max_threads(pool, max_threads, error) bind(c)
g;g_thread_pool_set_max_unused_threads;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"void g_thread_pool_set_max_unused_threads (gint max_threads);";subroutine g_thread_pool_set_max_unused_threads(max_threads) bind(c)
g;g_thread_pool_set_sort_function;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"void g_thread_pool_set_sort_function (GThreadPool *pool, GCompareDataFunc func, gpointer user_data);";subroutine g_thread_pool_set_sort_function(pool, func, user_data) bind(c)
g;g_thread_pool_stop_unused_threads;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"void g_thread_pool_stop_unused_threads (void);";subroutine g_thread_pool_stop_unused_threads() bind(c)
g;g_thread_pool_unprocessed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthreadpool.h;"guint g_thread_pool_unprocessed (GThreadPool *pool);";function g_thread_pool_unprocessed(pool) bind(c)
g;g_thread_ref;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"GThread * g_thread_ref (GThread *thread);";function g_thread_ref(thread) bind(c)
g;g_thread_self;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"GThread * g_thread_self (void);";function g_thread_self() bind(c)
g;g_thread_try_new;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"GThread * g_thread_try_new (const gchar *name, GThreadFunc func, gpointer data, GError **error);";function g_thread_try_new(name, func, data, error) bind(c)
g;g_thread_unref;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_thread_unref (GThread *thread);";subroutine g_thread_unref(thread) bind(c)
g;g_thread_yield;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gthread.h;"void g_thread_yield (void);";subroutine g_thread_yield() bind(c)
g;g_threaded_socket_service_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gthreadedsocketservice.h;"GType g_threaded_socket_service_get_type (void);";function g_threaded_socket_service_get_type() bind(c)
g;g_threaded_socket_service_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gthreadedsocketservice.h;"GSocketService * g_threaded_socket_service_new (int max_threads);";function g_threaded_socket_service_new(max_threads) bind(c)
g;g_time_val_add;GLIB_DEPRECATED_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/gtimer.h;"void g_time_val_add (GTimeVal *time_, glong microseconds);";subroutine g_time_val_add(time_, microseconds) bind(c)
g;g_time_val_from_iso8601;GLIB_DEPRECATED_IN_2_62_FOR(g_date_time_new_from_iso8601);glib-auto.f90;/usr/include/glib-2.0/glib/gtimer.h;"gboolean g_time_val_from_iso8601 (const gchar *iso_date, GTimeVal *time_);";function g_time_val_from_iso8601(iso_date, time_) bind(c)
g;g_time_val_to_iso8601;GLIB_DEPRECATED_IN_2_62_FOR(g_date_time_format);glib-auto.f90;/usr/include/glib-2.0/glib/gtimer.h;"gchar* g_time_val_to_iso8601 (GTimeVal *time_) G_GNUC_MALLOC;";function g_time_val_to_iso8601(time_) bind(c)
g;g_time_zone_adjust_time;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"gint g_time_zone_adjust_time (GTimeZone *tz, GTimeType type, gint64 *time_);";function g_time_zone_adjust_time(tz, type, time_) bind(c)
g;g_time_zone_find_interval;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"gint g_time_zone_find_interval (GTimeZone *tz, GTimeType type, gint64 time_);";function g_time_zone_find_interval(tz, type, time_) bind(c)
g;g_time_zone_get_abbreviation;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"const gchar * g_time_zone_get_abbreviation (GTimeZone *tz, gint interval);";function g_time_zone_get_abbreviation(tz, interval) bind(c)
g;g_time_zone_get_identifier;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"const gchar * g_time_zone_get_identifier (GTimeZone *tz);";function g_time_zone_get_identifier(tz) bind(c)
g;g_time_zone_get_offset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"gint32 g_time_zone_get_offset (GTimeZone *tz, gint interval);";function g_time_zone_get_offset(tz, interval) bind(c)
g;g_time_zone_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_time_zone_get_type (void) G_GNUC_CONST;";function g_time_zone_get_type() bind(c)
g;g_time_zone_is_dst;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"gboolean g_time_zone_is_dst (GTimeZone *tz, gint interval);";function g_time_zone_is_dst(tz, interval) bind(c)
g;g_time_zone_new;GLIB_DEPRECATED_IN_2_68_FOR (g_time_zone_new_identifier);glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"GTimeZone * g_time_zone_new (const gchar *identifier);";function g_time_zone_new(identifier) bind(c)
g;g_time_zone_new_identifier;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"GTimeZone * g_time_zone_new_identifier (const gchar *identifier);";function g_time_zone_new_identifier(identifier) bind(c)
g;g_time_zone_new_local;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"GTimeZone * g_time_zone_new_local (void);";function g_time_zone_new_local() bind(c)
g;g_time_zone_new_offset;GLIB_AVAILABLE_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"GTimeZone * g_time_zone_new_offset (gint32 seconds);";function g_time_zone_new_offset(seconds) bind(c)
g;g_time_zone_new_utc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"GTimeZone * g_time_zone_new_utc (void);";function g_time_zone_new_utc() bind(c)
g;g_time_zone_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"GTimeZone * g_time_zone_ref (GTimeZone *tz);";function g_time_zone_ref(tz) bind(c)
g;g_time_zone_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimezone.h;"void g_time_zone_unref (GTimeZone *tz);";subroutine g_time_zone_unref(tz) bind(c)
g;g_timeout_add;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"guint g_timeout_add (guint interval, GSourceFunc function, gpointer data);";function g_timeout_add(interval, function, data) bind(c)
g;g_timeout_add_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"guint g_timeout_add_full (gint priority, guint interval, GSourceFunc function, gpointer data, GDestroyNotify notify);";function g_timeout_add_full(priority, interval, function, data, notify) bind(c)
g;g_timeout_add_seconds;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"guint g_timeout_add_seconds (guint interval, GSourceFunc function, gpointer data);";function g_timeout_add_seconds(interval, function, data) bind(c)
g;g_timeout_add_seconds_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"guint g_timeout_add_seconds_full (gint priority, guint interval, GSourceFunc function, gpointer data, GDestroyNotify notify);";function g_timeout_add_seconds_full(priority, interval, function, data, notify) bind(c)
g;g_timeout_source_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GSource *g_timeout_source_new (guint interval);";function g_timeout_source_new(interval) bind(c)
g;g_timeout_source_new_seconds;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmain.h;"GSource *g_timeout_source_new_seconds (guint interval);";function g_timeout_source_new_seconds(interval) bind(c)
g;g_timer_continue;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimer.h;"void g_timer_continue (GTimer *timer);";subroutine g_timer_continue(timer) bind(c)
g;g_timer_destroy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimer.h;"void g_timer_destroy (GTimer *timer);";subroutine g_timer_destroy(timer) bind(c)
g;g_timer_elapsed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimer.h;"gdouble g_timer_elapsed (GTimer *timer, gulong *microseconds);";function g_timer_elapsed(timer, microseconds) bind(c)
g;g_timer_is_active;GLIB_AVAILABLE_IN_2_62;glib-auto.f90;/usr/include/glib-2.0/glib/gtimer.h;"gboolean g_timer_is_active (GTimer *timer);";function g_timer_is_active(timer) bind(c)
g;g_timer_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimer.h;"GTimer* g_timer_new (void);";function g_timer_new() bind(c)
g;g_timer_reset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimer.h;"void g_timer_reset (GTimer *timer);";subroutine g_timer_reset(timer) bind(c)
g;g_timer_start;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimer.h;"void g_timer_start (GTimer *timer);";subroutine g_timer_start(timer) bind(c)
g;g_timer_stop;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimer.h;"void g_timer_stop (GTimer *timer);";subroutine g_timer_stop(timer) bind(c)
g;g_tls_backend_get_certificate_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsbackend.h;"GType g_tls_backend_get_certificate_type (GTlsBackend *backend);";function g_tls_backend_get_certificate_type(backend) bind(c)
g;g_tls_backend_get_client_connection_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsbackend.h;"GType g_tls_backend_get_client_connection_type (GTlsBackend *backend);";function g_tls_backend_get_client_connection_type(backend) bind(c)
g;g_tls_backend_get_default;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsbackend.h;"GTlsBackend * g_tls_backend_get_default (void);";function g_tls_backend_get_default() bind(c)
g;g_tls_backend_get_default_database;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsbackend.h;"GTlsDatabase * g_tls_backend_get_default_database (GTlsBackend *backend);";function g_tls_backend_get_default_database(backend) bind(c)
g;g_tls_backend_get_dtls_client_connection_type;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsbackend.h;"GType g_tls_backend_get_dtls_client_connection_type (GTlsBackend *backend);";function g_tls_backend_get_dtls_client_connection_type(backend) bind(c)
g;g_tls_backend_get_dtls_server_connection_type;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsbackend.h;"GType g_tls_backend_get_dtls_server_connection_type (GTlsBackend *backend);";function g_tls_backend_get_dtls_server_connection_type(backend) bind(c)
g;g_tls_backend_get_file_database_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsbackend.h;"GType g_tls_backend_get_file_database_type (GTlsBackend *backend);";function g_tls_backend_get_file_database_type(backend) bind(c)
g;g_tls_backend_get_server_connection_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsbackend.h;"GType g_tls_backend_get_server_connection_type (GTlsBackend *backend);";function g_tls_backend_get_server_connection_type(backend) bind(c)
g;g_tls_backend_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsbackend.h;"GType g_tls_backend_get_type (void) G_GNUC_CONST;";function g_tls_backend_get_type() bind(c)
g;g_tls_backend_set_default_database;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsbackend.h;"void g_tls_backend_set_default_database (GTlsBackend *backend, GTlsDatabase *database);";subroutine g_tls_backend_set_default_database(backend, database) bind(c)
g;g_tls_backend_supports_dtls;GLIB_AVAILABLE_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsbackend.h;"gboolean g_tls_backend_supports_dtls (GTlsBackend *backend);";function g_tls_backend_supports_dtls(backend) bind(c)
g;g_tls_backend_supports_tls;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsbackend.h;"gboolean g_tls_backend_supports_tls (GTlsBackend *backend);";function g_tls_backend_supports_tls(backend) bind(c)
g;g_tls_certificate_get_issuer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlscertificate.h;"GTlsCertificate *g_tls_certificate_get_issuer (GTlsCertificate *cert);";function g_tls_certificate_get_issuer(cert) bind(c)
g;g_tls_certificate_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlscertificate.h;"GType g_tls_certificate_get_type (void) G_GNUC_CONST;";function g_tls_certificate_get_type() bind(c)
g;g_tls_certificate_is_same;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gio/gtlscertificate.h;"gboolean g_tls_certificate_is_same (GTlsCertificate *cert_one, GTlsCertificate *cert_two);";function g_tls_certificate_is_same(cert_one, cert_two) bind(c)
g;g_tls_certificate_list_new_from_file;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlscertificate.h;"GList *g_tls_certificate_list_new_from_file (const gchar *file, GError **error);";function g_tls_certificate_list_new_from_file(file, error) bind(c)
g;g_tls_certificate_new_from_file;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlscertificate.h;"GTlsCertificate *g_tls_certificate_new_from_file (const gchar *file, GError **error);";function g_tls_certificate_new_from_file(file, error) bind(c)
g;g_tls_certificate_new_from_files;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlscertificate.h;"GTlsCertificate *g_tls_certificate_new_from_files (const gchar *cert_file, const gchar *key_file, GError **error);";function g_tls_certificate_new_from_files(cert_file, key_file, error) bind(c)
g;g_tls_certificate_new_from_pem;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlscertificate.h;"GTlsCertificate *g_tls_certificate_new_from_pem (const gchar *data, gssize length, GError **error);";function g_tls_certificate_new_from_pem(data, length, error) bind(c)
g;g_tls_certificate_new_from_pkcs11_uris;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/gio/gtlscertificate.h;"GTlsCertificate *g_tls_certificate_new_from_pkcs11_uris (const gchar *pkcs11_uri, const gchar *private_key_pkcs11_uri, GError **error);";function g_tls_certificate_new_from_pkcs11_uris(pkcs11_uri, private_key_pkcs11_uri, error) bind(c)
g;g_tls_certificate_verify;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlscertificate.h;"GTlsCertificateFlags g_tls_certificate_verify (GTlsCertificate *cert, GSocketConnectable *identity, GTlsCertificate *trusted_ca);";function g_tls_certificate_verify(cert, identity, trusted_ca) bind(c)
g;g_tls_channel_binding_error_quark;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"GQuark g_tls_channel_binding_error_quark (void);";function g_tls_channel_binding_error_quark() bind(c)
g;g_tls_client_connection_copy_session_state;GLIB_AVAILABLE_IN_2_46;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsclientconnection.h;"void g_tls_client_connection_copy_session_state (GTlsClientConnection *conn, GTlsClientConnection *source);";subroutine g_tls_client_connection_copy_session_state(conn, source) bind(c)
g;g_tls_client_connection_get_accepted_cas;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsclientconnection.h;"GList * g_tls_client_connection_get_accepted_cas (GTlsClientConnection *conn);";function g_tls_client_connection_get_accepted_cas(conn) bind(c)
g;g_tls_client_connection_get_server_identity;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsclientconnection.h;"GSocketConnectable *g_tls_client_connection_get_server_identity (GTlsClientConnection *conn);";function g_tls_client_connection_get_server_identity(conn) bind(c)
g;g_tls_client_connection_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsclientconnection.h;"GType g_tls_client_connection_get_type (void) G_GNUC_CONST;";function g_tls_client_connection_get_type() bind(c)
g;g_tls_client_connection_get_use_ssl3;GLIB_DEPRECATED_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsclientconnection.h;"gboolean g_tls_client_connection_get_use_ssl3 (GTlsClientConnection *conn);";function g_tls_client_connection_get_use_ssl3(conn) bind(c)
g;g_tls_client_connection_get_validation_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsclientconnection.h;"GTlsCertificateFlags g_tls_client_connection_get_validation_flags (GTlsClientConnection *conn);";function g_tls_client_connection_get_validation_flags(conn) bind(c)
g;g_tls_client_connection_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsclientconnection.h;"GIOStream * g_tls_client_connection_new (GIOStream *base_io_stream, GSocketConnectable *server_identity, GError **error);";function g_tls_client_connection_new(base_io_stream, server_identity, error) bind(c)
g;g_tls_client_connection_set_server_identity;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsclientconnection.h;"void g_tls_client_connection_set_server_identity (GTlsClientConnection *conn, GSocketConnectable *identity);";subroutine g_tls_client_connection_set_server_identity(conn, identity) bind(c)
g;g_tls_client_connection_set_use_ssl3;GLIB_DEPRECATED_IN_2_56;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsclientconnection.h;"void g_tls_client_connection_set_use_ssl3 (GTlsClientConnection *conn, gboolean use_ssl3);";subroutine g_tls_client_connection_set_use_ssl3(conn, use_ssl3) bind(c)
g;g_tls_client_connection_set_validation_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsclientconnection.h;"void g_tls_client_connection_set_validation_flags (GTlsClientConnection *conn, GTlsCertificateFlags flags);";subroutine g_tls_client_connection_set_validation_flags(conn, flags) bind(c)
g;g_tls_connection_emit_accept_certificate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"gboolean g_tls_connection_emit_accept_certificate (GTlsConnection *conn, GTlsCertificate *peer_cert, GTlsCertificateFlags errors);";function g_tls_connection_emit_accept_certificate(conn, peer_cert, errors) bind(c)
g;g_tls_connection_get_certificate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"GTlsCertificate *g_tls_connection_get_certificate (GTlsConnection *conn);";function g_tls_connection_get_certificate(conn) bind(c)
g;g_tls_connection_get_channel_binding_data;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"gboolean g_tls_connection_get_channel_binding_data (GTlsConnection *conn, GTlsChannelBindingType type, GByteArray *data, GError **error);";function g_tls_connection_get_channel_binding_data(conn, type, data, error) bind(c)
g;g_tls_connection_get_database;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"GTlsDatabase * g_tls_connection_get_database (GTlsConnection *conn);";function g_tls_connection_get_database(conn) bind(c)
g;g_tls_connection_get_interaction;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"GTlsInteraction * g_tls_connection_get_interaction (GTlsConnection *conn);";function g_tls_connection_get_interaction(conn) bind(c)
g;g_tls_connection_get_negotiated_protocol;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"const gchar * g_tls_connection_get_negotiated_protocol (GTlsConnection *conn);";function g_tls_connection_get_negotiated_protocol(conn) bind(c)
g;g_tls_connection_get_peer_certificate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"GTlsCertificate *g_tls_connection_get_peer_certificate (GTlsConnection *conn);";function g_tls_connection_get_peer_certificate(conn) bind(c)
g;g_tls_connection_get_peer_certificate_errors;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"GTlsCertificateFlags g_tls_connection_get_peer_certificate_errors (GTlsConnection *conn);";function g_tls_connection_get_peer_certificate_errors(conn) bind(c)
g;g_tls_connection_get_require_close_notify;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"gboolean g_tls_connection_get_require_close_notify (GTlsConnection *conn);";function g_tls_connection_get_require_close_notify(conn) bind(c)
g;g_tls_connection_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"GType g_tls_connection_get_type (void) G_GNUC_CONST;";function g_tls_connection_get_type() bind(c)
g;g_tls_connection_get_use_system_certdb;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"gboolean g_tls_connection_get_use_system_certdb (GTlsConnection *conn);";function g_tls_connection_get_use_system_certdb(conn) bind(c)
g;g_tls_connection_handshake;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"gboolean g_tls_connection_handshake (GTlsConnection *conn, GCancellable *cancellable, GError **error);";function g_tls_connection_handshake(conn, cancellable, error) bind(c)
g;g_tls_connection_handshake_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"void g_tls_connection_handshake_async (GTlsConnection *conn, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_tls_connection_handshake_async(conn, io_priority, cancellable, callback, user_data) bind(c)
g;g_tls_connection_handshake_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"gboolean g_tls_connection_handshake_finish (GTlsConnection *conn, GAsyncResult *result, GError **error);";function g_tls_connection_handshake_finish(conn, result, error) bind(c)
g;g_tls_connection_set_advertised_protocols;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"void g_tls_connection_set_advertised_protocols (GTlsConnection *conn, const gchar * const *protocols);";subroutine g_tls_connection_set_advertised_protocols(conn, protocols) bind(c)
g;g_tls_connection_set_certificate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"void g_tls_connection_set_certificate (GTlsConnection *conn, GTlsCertificate *certificate);";subroutine g_tls_connection_set_certificate(conn, certificate) bind(c)
g;g_tls_connection_set_database;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"void g_tls_connection_set_database (GTlsConnection *conn, GTlsDatabase *database);";subroutine g_tls_connection_set_database(conn, database) bind(c)
g;g_tls_connection_set_interaction;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"void g_tls_connection_set_interaction (GTlsConnection *conn, GTlsInteraction *interaction);";subroutine g_tls_connection_set_interaction(conn, interaction) bind(c)
g;g_tls_connection_set_require_close_notify;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"void g_tls_connection_set_require_close_notify (GTlsConnection *conn, gboolean require_close_notify);";subroutine g_tls_connection_set_require_close_notify(conn, require_close_notify) bind(c)
g;g_tls_connection_set_use_system_certdb;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"void g_tls_connection_set_use_system_certdb (GTlsConnection *conn, gboolean use_system_certdb);";subroutine g_tls_connection_set_use_system_certdb(conn, use_system_certdb) bind(c)
g;g_tls_database_create_certificate_handle;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"gchar* g_tls_database_create_certificate_handle (GTlsDatabase *self, GTlsCertificate *certificate);";function g_tls_database_create_certificate_handle(self, certificate) bind(c)
g;g_tls_database_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"GType g_tls_database_get_type (void) G_GNUC_CONST;";function g_tls_database_get_type() bind(c)
g;g_tls_database_lookup_certificate_for_handle;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"GTlsCertificate* g_tls_database_lookup_certificate_for_handle (GTlsDatabase *self, const gchar *handle, GTlsInteraction *interaction, GTlsDatabaseLookupFlags flags, GCancellable *cancellable, GError **error);";function g_tls_database_lookup_certificate_for_handle(self, handle, interaction, flags, cancellable, error) bind(c)
g;g_tls_database_lookup_certificate_for_handle_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"void g_tls_database_lookup_certificate_for_handle_async (GTlsDatabase *self, const gchar *handle, GTlsInteraction *interaction, GTlsDatabaseLookupFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_tls_database_lookup_certificate_for_handle_async(self, handle, interaction, flags, cancellable, callback, user_data) bind(c)
g;g_tls_database_lookup_certificate_for_handle_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"GTlsCertificate* g_tls_database_lookup_certificate_for_handle_finish (GTlsDatabase *self, GAsyncResult *result, GError **error);";function g_tls_database_lookup_certificate_for_handle_finish(self, result, error) bind(c)
g;g_tls_database_lookup_certificate_issuer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"GTlsCertificate* g_tls_database_lookup_certificate_issuer (GTlsDatabase *self, GTlsCertificate *certificate, GTlsInteraction *interaction, GTlsDatabaseLookupFlags flags, GCancellable *cancellable, GError **error);";function g_tls_database_lookup_certificate_issuer(self, certificate, interaction, flags, cancellable, error) bind(c)
g;g_tls_database_lookup_certificate_issuer_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"void g_tls_database_lookup_certificate_issuer_async (GTlsDatabase *self, GTlsCertificate *certificate, GTlsInteraction *interaction, GTlsDatabaseLookupFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_tls_database_lookup_certificate_issuer_async(self, certificate, interaction, flags, cancellable, callback, user_data) bind(c)
g;g_tls_database_lookup_certificate_issuer_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"GTlsCertificate* g_tls_database_lookup_certificate_issuer_finish (GTlsDatabase *self, GAsyncResult *result, GError **error);";function g_tls_database_lookup_certificate_issuer_finish(self, result, error) bind(c)
g;g_tls_database_lookup_certificates_issued_by;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"GList* g_tls_database_lookup_certificates_issued_by (GTlsDatabase *self, GByteArray *issuer_raw_dn, GTlsInteraction *interaction, GTlsDatabaseLookupFlags flags, GCancellable *cancellable, GError **error);";function g_tls_database_lookup_certificates_issued_by(self, issuer_raw_dn, interaction, flags, cancellable, error) bind(c)
g;g_tls_database_lookup_certificates_issued_by_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"void g_tls_database_lookup_certificates_issued_by_async (GTlsDatabase *self, GByteArray *issuer_raw_dn, GTlsInteraction *interaction, GTlsDatabaseLookupFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_tls_database_lookup_certificates_issued_by_async(self, issuer_raw_dn, interaction, flags, cancellable, callback, user_data) bind(c)
g;g_tls_database_lookup_certificates_issued_by_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"GList* g_tls_database_lookup_certificates_issued_by_finish (GTlsDatabase *self, GAsyncResult *result, GError **error);";function g_tls_database_lookup_certificates_issued_by_finish(self, result, error) bind(c)
g;g_tls_database_verify_chain;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"GTlsCertificateFlags g_tls_database_verify_chain (GTlsDatabase *self, GTlsCertificate *chain, const gchar *purpose, GSocketConnectable *identity, GTlsInteraction *interaction, GTlsDatabaseVerifyFlags flags, GCancellable *cancellable, GError **error);";function g_tls_database_verify_chain(self, chain, purpose, identity, interaction, flags, cancellable, error) bind(c)
g;g_tls_database_verify_chain_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"void g_tls_database_verify_chain_async (GTlsDatabase *self, GTlsCertificate *chain, const gchar *purpose, GSocketConnectable *identity, GTlsInteraction *interaction, GTlsDatabaseVerifyFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_tls_database_verify_chain_async(self, chain, purpose, identity, interaction, flags, cancellable, callback, user_data) bind(c)
g;g_tls_database_verify_chain_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsdatabase.h;"GTlsCertificateFlags g_tls_database_verify_chain_finish (GTlsDatabase *self, GAsyncResult *result, GError **error);";function g_tls_database_verify_chain_finish(self, result, error) bind(c)
g;g_tls_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsconnection.h;"GQuark g_tls_error_quark (void);";function g_tls_error_quark() bind(c)
g;g_tls_file_database_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsfiledatabase.h;"GType g_tls_file_database_get_type (void) G_GNUC_CONST;";function g_tls_file_database_get_type() bind(c)
g;g_tls_file_database_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsfiledatabase.h;"GTlsDatabase* g_tls_file_database_new (const gchar *anchors, GError **error);";function g_tls_file_database_new(anchors, error) bind(c)
g;g_tls_interaction_ask_password;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsinteraction.h;"GTlsInteractionResult g_tls_interaction_ask_password (GTlsInteraction *interaction, GTlsPassword *password, GCancellable *cancellable, GError **error);";function g_tls_interaction_ask_password(interaction, password, cancellable, error) bind(c)
g;g_tls_interaction_ask_password_async;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsinteraction.h;"void g_tls_interaction_ask_password_async (GTlsInteraction *interaction, GTlsPassword *password, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_tls_interaction_ask_password_async(interaction, password, cancellable, callback, user_data) bind(c)
g;g_tls_interaction_ask_password_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsinteraction.h;"GTlsInteractionResult g_tls_interaction_ask_password_finish (GTlsInteraction *interaction, GAsyncResult *result, GError **error);";function g_tls_interaction_ask_password_finish(interaction, result, error) bind(c)
g;g_tls_interaction_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsinteraction.h;"GType g_tls_interaction_get_type (void) G_GNUC_CONST;";function g_tls_interaction_get_type() bind(c)
g;g_tls_interaction_invoke_ask_password;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsinteraction.h;"GTlsInteractionResult g_tls_interaction_invoke_ask_password (GTlsInteraction *interaction, GTlsPassword *password, GCancellable *cancellable, GError **error);";function g_tls_interaction_invoke_ask_password(interaction, password, cancellable, error) bind(c)
g;g_tls_interaction_invoke_request_certificate;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsinteraction.h;"GTlsInteractionResult g_tls_interaction_invoke_request_certificate (GTlsInteraction *interaction, GTlsConnection *connection, GTlsCertificateRequestFlags flags, GCancellable *cancellable, GError **error);";function g_tls_interaction_invoke_request_certificate(interaction, connection, flags, cancellable, error) bind(c)
g;g_tls_interaction_request_certificate;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsinteraction.h;"GTlsInteractionResult g_tls_interaction_request_certificate (GTlsInteraction *interaction, GTlsConnection *connection, GTlsCertificateRequestFlags flags, GCancellable *cancellable, GError **error);";function g_tls_interaction_request_certificate(interaction, connection, flags, cancellable, error) bind(c)
g;g_tls_interaction_request_certificate_async;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsinteraction.h;"void g_tls_interaction_request_certificate_async (GTlsInteraction *interaction, GTlsConnection *connection, GTlsCertificateRequestFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_tls_interaction_request_certificate_async(interaction, connection, flags, cancellable, callback, user_data) bind(c)
g;g_tls_interaction_request_certificate_finish;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsinteraction.h;"GTlsInteractionResult g_tls_interaction_request_certificate_finish (GTlsInteraction *interaction, GAsyncResult *result, GError **error);";function g_tls_interaction_request_certificate_finish(interaction, result, error) bind(c)
g;g_tls_password_get_description;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlspassword.h;"const gchar* g_tls_password_get_description (GTlsPassword *password);";function g_tls_password_get_description(password) bind(c)
g;g_tls_password_get_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlspassword.h;"GTlsPasswordFlags g_tls_password_get_flags (GTlsPassword *password);";function g_tls_password_get_flags(password) bind(c)
g;g_tls_password_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlspassword.h;"GType g_tls_password_get_type (void) G_GNUC_CONST;";function g_tls_password_get_type() bind(c)
g;g_tls_password_get_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlspassword.h;"const guchar * g_tls_password_get_value (GTlsPassword *password, gsize *length);";function g_tls_password_get_value(password, length) bind(c)
g;g_tls_password_get_warning;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlspassword.h;"const gchar * g_tls_password_get_warning (GTlsPassword *password);";function g_tls_password_get_warning(password) bind(c)
g;g_tls_password_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlspassword.h;"GTlsPassword * g_tls_password_new (GTlsPasswordFlags flags, const gchar *description);";function g_tls_password_new(flags, description) bind(c)
g;g_tls_password_set_description;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlspassword.h;"void g_tls_password_set_description (GTlsPassword *password, const gchar *description);";subroutine g_tls_password_set_description(password, description) bind(c)
g;g_tls_password_set_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlspassword.h;"void g_tls_password_set_flags (GTlsPassword *password, GTlsPasswordFlags flags);";subroutine g_tls_password_set_flags(password, flags) bind(c)
g;g_tls_password_set_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlspassword.h;"void g_tls_password_set_value (GTlsPassword *password, const guchar *value, gssize length);";subroutine g_tls_password_set_value(password, value, length) bind(c)
g;g_tls_password_set_value_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlspassword.h;"void g_tls_password_set_value_full (GTlsPassword *password, guchar *value, gssize length, GDestroyNotify destroy);";subroutine g_tls_password_set_value_full(password, value, length, destroy) bind(c)
g;g_tls_password_set_warning;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlspassword.h;"void g_tls_password_set_warning (GTlsPassword *password, const gchar *warning);";subroutine g_tls_password_set_warning(password, warning) bind(c)
g;g_tls_server_connection_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsserverconnection.h;"GType g_tls_server_connection_get_type (void) G_GNUC_CONST;";function g_tls_server_connection_get_type() bind(c)
g;g_tls_server_connection_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gtlsserverconnection.h;"GIOStream * g_tls_server_connection_new (GIOStream *base_io_stream, GTlsCertificate *certificate, GError **error);";function g_tls_server_connection_new(base_io_stream, certificate, error) bind(c)
g;g_trash_stack_height;GLIB_DEPRECATED_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/glib/gtrashstack.h;"guint g_trash_stack_height (GTrashStack **stack_p);";function g_trash_stack_height(stack_p) bind(c)
g;g_trash_stack_peek;GLIB_DEPRECATED_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/glib/gtrashstack.h;"gpointer g_trash_stack_peek (GTrashStack **stack_p);";function g_trash_stack_peek(stack_p) bind(c)
g;g_trash_stack_pop;GLIB_DEPRECATED_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/glib/gtrashstack.h;"gpointer g_trash_stack_pop (GTrashStack **stack_p);";function g_trash_stack_pop(stack_p) bind(c)
g;g_trash_stack_push;GLIB_DEPRECATED_IN_2_48;glib-auto.f90;/usr/include/glib-2.0/glib/gtrashstack.h;"void g_trash_stack_push (GTrashStack **stack_p, gpointer data_p);";subroutine g_trash_stack_push(stack_p, data_p) bind(c)
g;g_tree_destroy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"void g_tree_destroy (GTree *tree);";subroutine g_tree_destroy(tree) bind(c)
g;g_tree_dump;;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"void g_tree_dump (GTree *tree);";subroutine g_tree_dump(tree) bind(c)
g;g_tree_foreach;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"void g_tree_foreach (GTree *tree, GTraverseFunc func, gpointer user_data);";subroutine g_tree_foreach(tree, func, user_data) bind(c)
g;g_tree_foreach_node;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"void g_tree_foreach_node (GTree *tree, GTraverseNodeFunc func, gpointer user_data);";subroutine g_tree_foreach_node(tree, func, user_data) bind(c)
g;g_tree_get_type;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_tree_get_type (void) G_GNUC_CONST;";function g_tree_get_type() bind(c)
g;g_tree_height;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"gint g_tree_height (GTree *tree);";function g_tree_height(tree) bind(c)
g;g_tree_insert;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"void g_tree_insert (GTree *tree, gpointer key, gpointer value);";subroutine g_tree_insert(tree, key, value) bind(c)
g;g_tree_insert_node;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTreeNode *g_tree_insert_node (GTree *tree, gpointer key, gpointer value);";function g_tree_insert_node(tree, key, value) bind(c)
g;g_tree_lookup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"gpointer g_tree_lookup (GTree *tree, gconstpointer key);";function g_tree_lookup(tree, key) bind(c)
g;g_tree_lookup_extended;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"gboolean g_tree_lookup_extended (GTree *tree, gconstpointer lookup_key, gpointer *orig_key, gpointer *value);";function g_tree_lookup_extended(tree, lookup_key, orig_key, value) bind(c)
g;g_tree_lookup_node;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTreeNode *g_tree_lookup_node (GTree *tree, gconstpointer key);";function g_tree_lookup_node(tree, key) bind(c)
g;g_tree_lower_bound;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTreeNode *g_tree_lower_bound (GTree *tree, gconstpointer key);";function g_tree_lower_bound(tree, key) bind(c)
g;g_tree_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTree* g_tree_new (GCompareFunc key_compare_func);";function g_tree_new(key_compare_func) bind(c)
g;g_tree_new_full;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTree* g_tree_new_full (GCompareDataFunc key_compare_func, gpointer key_compare_data, GDestroyNotify key_destroy_func, GDestroyNotify value_destroy_func);";function g_tree_new_full(key_compare_func, key_compare_data, key_destroy_func, value_destroy_func) bind(c)
g;g_tree_new_with_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTree* g_tree_new_with_data (GCompareDataFunc key_compare_func, gpointer key_compare_data);";function g_tree_new_with_data(key_compare_func, key_compare_data) bind(c)
g;g_tree_nnodes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"gint g_tree_nnodes (GTree *tree);";function g_tree_nnodes(tree) bind(c)
g;g_tree_node_first;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTreeNode *g_tree_node_first (GTree *tree);";function g_tree_node_first(tree) bind(c)
g;g_tree_node_key;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"gpointer g_tree_node_key (GTreeNode *node);";function g_tree_node_key(node) bind(c)
g;g_tree_node_last;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTreeNode *g_tree_node_last (GTree *tree);";function g_tree_node_last(tree) bind(c)
g;g_tree_node_next;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTreeNode *g_tree_node_next (GTreeNode *node);";function g_tree_node_next(node) bind(c)
g;g_tree_node_previous;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTreeNode *g_tree_node_previous (GTreeNode *node);";function g_tree_node_previous(node) bind(c)
g;g_tree_node_value;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"gpointer g_tree_node_value (GTreeNode *node);";function g_tree_node_value(node) bind(c)
g;g_tree_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTree* g_tree_ref (GTree *tree);";function g_tree_ref(tree) bind(c)
g;g_tree_remove;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"gboolean g_tree_remove (GTree *tree, gconstpointer key);";function g_tree_remove(tree, key) bind(c)
g;g_tree_replace;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"void g_tree_replace (GTree *tree, gpointer key, gpointer value);";subroutine g_tree_replace(tree, key, value) bind(c)
g;g_tree_replace_node;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTreeNode *g_tree_replace_node (GTree *tree, gpointer key, gpointer value);";function g_tree_replace_node(tree, key, value) bind(c)
g;g_tree_search;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"gpointer g_tree_search (GTree *tree, GCompareFunc search_func, gconstpointer user_data);";function g_tree_search(tree, search_func, user_data) bind(c)
g;g_tree_search_node;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTreeNode *g_tree_search_node (GTree *tree, GCompareFunc search_func, gconstpointer user_data);";function g_tree_search_node(tree, search_func, user_data) bind(c)
g;g_tree_steal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"gboolean g_tree_steal (GTree *tree, gconstpointer key);";function g_tree_steal(tree, key) bind(c)
g;g_tree_traverse;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"void g_tree_traverse (GTree *tree, GTraverseFunc traverse_func, GTraverseType traverse_type, gpointer user_data);";subroutine g_tree_traverse(tree, traverse_func, traverse_type, user_data) bind(c)
g;g_tree_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"void g_tree_unref (GTree *tree);";subroutine g_tree_unref(tree) bind(c)
g;g_tree_upper_bound;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/glib/gtree.h;"GTreeNode *g_tree_upper_bound (GTree *tree, gconstpointer key);";function g_tree_upper_bound(tree, key) bind(c)
g;g_try_malloc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gpointer g_try_malloc (gsize n_bytes) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE(1);";function g_try_malloc(n_bytes) bind(c)
g;g_try_malloc0;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gpointer g_try_malloc0 (gsize n_bytes) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE(1);";function g_try_malloc0(n_bytes) bind(c)
g;g_try_malloc0_n;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gpointer g_try_malloc0_n (gsize n_blocks, gsize n_block_bytes) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE2(1,2);";function g_try_malloc0_n(n_blocks, n_block_bytes) bind(c)
g;g_try_malloc_n;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gpointer g_try_malloc_n (gsize n_blocks, gsize n_block_bytes) G_GNUC_MALLOC G_GNUC_ALLOC_SIZE2(1,2);";function g_try_malloc_n(n_blocks, n_block_bytes) bind(c)
g;g_try_realloc;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gpointer g_try_realloc (gpointer mem, gsize n_bytes) G_GNUC_WARN_UNUSED_RESULT;";function g_try_realloc(mem, n_bytes) bind(c)
g;g_try_realloc_n;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmem.h;"gpointer g_try_realloc_n (gpointer mem, gsize n_blocks, gsize n_block_bytes) G_GNUC_WARN_UNUSED_RESULT;";function g_try_realloc_n(mem, n_blocks, n_block_bytes) bind(c)
g;g_tuples_destroy;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/grel.h;"void g_tuples_destroy (GTuples *tuples);";subroutine g_tuples_destroy(tuples) bind(c)
g;g_tuples_index;GLIB_DEPRECATED_IN_2_26;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/grel.h;"gpointer g_tuples_index (GTuples *tuples, gint index_, gint field);";function g_tuples_index(tuples, index_, field) bind(c)
g;g_type_add_class_cache_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_add_class_cache_func (gpointer cache_data, GTypeClassCacheFunc cache_func);";subroutine g_type_add_class_cache_func(cache_data, cache_func) bind(c)
g;g_type_add_class_private;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_add_class_private (GType class_type, gsize private_size);";subroutine g_type_add_class_private(class_type, private_size) bind(c)
g;g_type_add_instance_private;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gint g_type_add_instance_private (GType class_type, gsize private_size);";function g_type_add_instance_private(class_type, private_size) bind(c)
g;g_type_add_interface_check;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_add_interface_check (gpointer check_data, GTypeInterfaceCheckFunc check_func);";subroutine g_type_add_interface_check(check_data, check_func) bind(c)
g;g_type_add_interface_dynamic;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_add_interface_dynamic (GType instance_type, GType interface_type, GTypePlugin *plugin);";subroutine g_type_add_interface_dynamic(instance_type, interface_type, plugin) bind(c)
g;g_type_add_interface_static;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_add_interface_static (GType instance_type, GType interface_type, const GInterfaceInfo *info);";subroutine g_type_add_interface_static(instance_type, interface_type, info) bind(c)
g;g_type_check_class_cast;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GTypeClass* g_type_check_class_cast (GTypeClass *g_class, GType is_a_type);";function g_type_check_class_cast(g_class, is_a_type) bind(c)
g;g_type_check_class_is_a;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gboolean g_type_check_class_is_a (GTypeClass *g_class, GType is_a_type) G_GNUC_PURE;";function g_type_check_class_is_a(g_class, is_a_type) bind(c)
g;g_type_check_instance;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gboolean g_type_check_instance (GTypeInstance *instance) G_GNUC_PURE;";function g_type_check_instance(instance) bind(c)
g;g_type_check_instance_cast;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GTypeInstance* g_type_check_instance_cast (GTypeInstance *instance, GType iface_type);";function g_type_check_instance_cast(instance, iface_type) bind(c)
g;g_type_check_instance_is_a;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gboolean g_type_check_instance_is_a (GTypeInstance *instance, GType iface_type) G_GNUC_PURE;";function g_type_check_instance_is_a(instance, iface_type) bind(c)
g;g_type_check_instance_is_fundamentally_a;GLIB_AVAILABLE_IN_2_42;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gboolean g_type_check_instance_is_fundamentally_a (GTypeInstance *instance, GType fundamental_type) G_GNUC_PURE;";function g_type_check_instance_is_fundamentally_a(instance, fundamental_type) bind(c)
g;g_type_check_is_value_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gboolean g_type_check_is_value_type (GType type) G_GNUC_CONST;";function g_type_check_is_value_type(type) bind(c)
g;g_type_check_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gboolean g_type_check_value (const GValue *value) G_GNUC_PURE;";function g_type_check_value(value) bind(c)
g;g_type_check_value_holds;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gboolean g_type_check_value_holds (const GValue *value, GType type) G_GNUC_PURE;";function g_type_check_value_holds(value, type) bind(c)
g;g_type_children;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType* g_type_children (GType type, guint *n_children);";function g_type_children(type, n_children) bind(c)
g;g_type_class_add_private;GLIB_DEPRECATED_IN_2_58;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_class_add_private (gpointer g_class, gsize private_size);";subroutine g_type_class_add_private(g_class, private_size) bind(c)
g;g_type_class_adjust_private_offset;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_class_adjust_private_offset (gpointer g_class, gint *private_size_or_offset);";subroutine g_type_class_adjust_private_offset(g_class, private_size_or_offset) bind(c)
g;g_type_class_get_instance_private_offset;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gint g_type_class_get_instance_private_offset (gpointer g_class);";function g_type_class_get_instance_private_offset(g_class) bind(c)
g;g_type_class_get_private;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gpointer g_type_class_get_private (GTypeClass *klass, GType private_type);";function g_type_class_get_private(klass, private_type) bind(c)
g;g_type_class_peek;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gpointer g_type_class_peek (GType type);";function g_type_class_peek(type) bind(c)
g;g_type_class_peek_parent;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gpointer g_type_class_peek_parent (gpointer g_class);";function g_type_class_peek_parent(g_class) bind(c)
g;g_type_class_peek_static;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gpointer g_type_class_peek_static (GType type);";function g_type_class_peek_static(type) bind(c)
g;g_type_class_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gpointer g_type_class_ref (GType type);";function g_type_class_ref(type) bind(c)
g;g_type_class_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_class_unref (gpointer g_class);";subroutine g_type_class_unref(g_class) bind(c)
g;g_type_class_unref_uncached;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_class_unref_uncached (gpointer g_class);";subroutine g_type_class_unref_uncached(g_class) bind(c)
g;g_type_create_instance;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GTypeInstance* g_type_create_instance (GType type);";function g_type_create_instance(type) bind(c)
g;g_type_default_interface_peek;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gpointer g_type_default_interface_peek (GType g_type);";function g_type_default_interface_peek(g_type) bind(c)
g;g_type_default_interface_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gpointer g_type_default_interface_ref (GType g_type);";function g_type_default_interface_ref(g_type) bind(c)
g;g_type_default_interface_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_default_interface_unref (gpointer g_iface);";subroutine g_type_default_interface_unref(g_iface) bind(c)
g;g_type_depth;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"guint g_type_depth (GType type);";function g_type_depth(type) bind(c)
g;g_type_ensure;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_ensure (GType type);";subroutine g_type_ensure(type) bind(c)
g;g_type_free_instance;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_free_instance (GTypeInstance *instance);";subroutine g_type_free_instance(instance) bind(c)
g;g_type_from_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType g_type_from_name (const gchar *name);";function g_type_from_name(name) bind(c)
g;g_type_fundamental;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType g_type_fundamental (GType type_id);";function g_type_fundamental(type_id) bind(c)
g;g_type_fundamental_next;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType g_type_fundamental_next (void);";function g_type_fundamental_next() bind(c)
g;g_type_get_instance_count;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"int g_type_get_instance_count (GType type);";function g_type_get_instance_count(type) bind(c)
g;g_type_get_plugin;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GTypePlugin* g_type_get_plugin (GType type);";function g_type_get_plugin(type) bind(c)
g;g_type_get_qdata;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gpointer g_type_get_qdata (GType type, GQuark quark);";function g_type_get_qdata(type, quark) bind(c)
g;g_type_get_type_registration_serial;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"guint g_type_get_type_registration_serial (void);";function g_type_get_type_registration_serial() bind(c)
g;g_type_init;GLIB_DEPRECATED_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_init (void);";subroutine g_type_init() bind(c)
g;g_type_instance_get_private;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gpointer g_type_instance_get_private (GTypeInstance *instance, GType private_type);";function g_type_instance_get_private(instance, private_type) bind(c)
g;g_type_interface_add_prerequisite;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_interface_add_prerequisite (GType interface_type, GType prerequisite_type);";subroutine g_type_interface_add_prerequisite(interface_type, prerequisite_type) bind(c)
g;g_type_interface_get_plugin;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GTypePlugin* g_type_interface_get_plugin (GType instance_type, GType interface_type);";function g_type_interface_get_plugin(instance_type, interface_type) bind(c)
g;g_type_interface_instantiatable_prerequisite;GLIB_AVAILABLE_IN_2_68;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType g_type_interface_instantiatable_prerequisite (GType interface_type);";function g_type_interface_instantiatable_prerequisite(interface_type) bind(c)
g;g_type_interface_peek;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gpointer g_type_interface_peek (gpointer instance_class, GType iface_type);";function g_type_interface_peek(instance_class, iface_type) bind(c)
g;g_type_interface_peek_parent;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gpointer g_type_interface_peek_parent (gpointer g_iface);";function g_type_interface_peek_parent(g_iface) bind(c)
g;g_type_interface_prerequisites;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType*g_type_interface_prerequisites (GType interface_type, guint *n_prerequisites);";function g_type_interface_prerequisites(interface_type, n_prerequisites) bind(c)
g;g_type_interfaces;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType* g_type_interfaces (GType type, guint *n_interfaces);";function g_type_interfaces(type, n_interfaces) bind(c)
g;g_type_is_a;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gboolean g_type_is_a (GType type, GType is_a_type);";function g_type_is_a(type, is_a_type) bind(c)
g;g_type_module_add_interface;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtypemodule.h;"void g_type_module_add_interface (GTypeModule *module, GType instance_type, GType interface_type, const GInterfaceInfo *interface_info);";subroutine g_type_module_add_interface(module, instance_type, interface_type, interface_info) bind(c)
g;g_type_module_register_enum;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtypemodule.h;"GType g_type_module_register_enum (GTypeModule *module, const gchar *name, const GEnumValue *const_static_values);";function g_type_module_register_enum(module, name, const_static_values) bind(c)
g;g_type_module_register_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtypemodule.h;"GType g_type_module_register_flags (GTypeModule *module, const gchar *name, const GFlagsValue *const_static_values);";function g_type_module_register_flags(module, name, const_static_values) bind(c)
g;g_type_module_register_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtypemodule.h;"GType g_type_module_register_type (GTypeModule *module, GType parent_type, const gchar *type_name, const GTypeInfo *type_info, GTypeFlags flags);";function g_type_module_register_type(module, parent_type, type_name, type_info, flags) bind(c)
g;g_type_module_set_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtypemodule.h;"void g_type_module_set_name (GTypeModule *module, const gchar *name);";subroutine g_type_module_set_name(module, name) bind(c)
g;g_type_module_unuse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtypemodule.h;"void g_type_module_unuse (GTypeModule *module);";subroutine g_type_module_unuse(module) bind(c)
g;g_type_module_use;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtypemodule.h;"gboolean g_type_module_use (GTypeModule *module);";function g_type_module_use(module) bind(c)
g;g_type_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"const gchar * g_type_name (GType type);";function g_type_name(type) bind(c)
g;g_type_name_from_class;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"const gchar * g_type_name_from_class (GTypeClass *g_class);";function g_type_name_from_class(g_class) bind(c)
g;g_type_name_from_instance;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"const gchar * g_type_name_from_instance (GTypeInstance *instance);";function g_type_name_from_instance(instance) bind(c)
g;g_type_next_base;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType g_type_next_base (GType leaf_type, GType root_type);";function g_type_next_base(leaf_type, root_type) bind(c)
g;g_type_parent;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType g_type_parent (GType type);";function g_type_parent(type) bind(c)
g;g_type_plugin_complete_interface_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtypeplugin.h;"void g_type_plugin_complete_interface_info (GTypePlugin *plugin, GType instance_type, GType interface_type, GInterfaceInfo *info);";subroutine g_type_plugin_complete_interface_info(plugin, instance_type, interface_type, info) bind(c)
g;g_type_plugin_complete_type_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtypeplugin.h;"void g_type_plugin_complete_type_info (GTypePlugin *plugin, GType g_type, GTypeInfo *info, GTypeValueTable *value_table);";subroutine g_type_plugin_complete_type_info(plugin, g_type, info, value_table) bind(c)
g;g_type_plugin_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtypeplugin.h;"GType g_type_plugin_get_type (void) G_GNUC_CONST;";function g_type_plugin_get_type() bind(c)
g;g_type_plugin_unuse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtypeplugin.h;"void g_type_plugin_unuse (GTypePlugin *plugin);";subroutine g_type_plugin_unuse(plugin) bind(c)
g;g_type_plugin_use;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtypeplugin.h;"void g_type_plugin_use (GTypePlugin *plugin);";subroutine g_type_plugin_use(plugin) bind(c)
g;g_type_qname;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GQuark g_type_qname (GType type);";function g_type_qname(type) bind(c)
g;g_type_query;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_query (GType type, GTypeQuery *query);";subroutine g_type_query(type, query) bind(c)
g;g_type_register_dynamic;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType g_type_register_dynamic (GType parent_type, const gchar *type_name, GTypePlugin *plugin, GTypeFlags flags);";function g_type_register_dynamic(parent_type, type_name, plugin, flags) bind(c)
g;g_type_register_fundamental;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType g_type_register_fundamental (GType type_id, const gchar *type_name, const GTypeInfo *info, const GTypeFundamentalInfo *finfo, GTypeFlags flags);";function g_type_register_fundamental(type_id, type_name, info, finfo, flags) bind(c)
g;g_type_register_static;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType g_type_register_static (GType parent_type, const gchar *type_name, const GTypeInfo *info, GTypeFlags flags);";function g_type_register_static(parent_type, type_name, info, flags) bind(c)
g;g_type_register_static_simple;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GType g_type_register_static_simple (GType parent_type, const gchar *type_name, guint class_size, GClassInitFunc class_init, guint instance_size, GInstanceInitFunc instance_init, GTypeFlags flags);";function g_type_register_static_simple(parent_type, type_name, class_size, class_init, instance_size, instance_init, flags) bind(c)
g;g_type_remove_class_cache_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_remove_class_cache_func (gpointer cache_data, GTypeClassCacheFunc cache_func);";subroutine g_type_remove_class_cache_func(cache_data, cache_func) bind(c)
g;g_type_remove_interface_check;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_remove_interface_check (gpointer check_data, GTypeInterfaceCheckFunc check_func);";subroutine g_type_remove_interface_check(check_data, check_func) bind(c)
g;g_type_set_qdata;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"void g_type_set_qdata (GType type, GQuark quark, gpointer data);";subroutine g_type_set_qdata(type, quark, data) bind(c)
g;g_type_test_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"gboolean g_type_test_flags (GType type, guint flags) G_GNUC_CONST;";function g_type_test_flags(type, flags) bind(c)
g;g_type_value_table_peek;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gtype.h;"GTypeValueTable* g_type_value_table_peek (GType type);";function g_type_value_table_peek(type) bind(c)
g;g_ucs4_to_utf16;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gunichar2 *g_ucs4_to_utf16 (const gunichar *str, glong len, glong *items_read, glong *items_written, GError **error) G_GNUC_MALLOC;";function g_ucs4_to_utf16(str, len, items_read, items_written, error) bind(c)
g;g_ucs4_to_utf8;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar* g_ucs4_to_utf8 (const gunichar *str, glong len, glong *items_read, glong *items_written, GError **error) G_GNUC_MALLOC;";function g_ucs4_to_utf8(str, len, items_read, items_written, error) bind(c)
g;g_unichar_break_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"GUnicodeBreakType g_unichar_break_type (gunichar c) G_GNUC_CONST;";function g_unichar_break_type(c) bind(c)
g;g_unichar_combining_class;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gint g_unichar_combining_class (gunichar uc) G_GNUC_CONST;";function g_unichar_combining_class(uc) bind(c)
g;g_unichar_compose;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_compose (gunichar a, gunichar b, gunichar *ch);";function g_unichar_compose(a, b, ch) bind(c)
g;g_unichar_decompose;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_decompose (gunichar ch, gunichar *a, gunichar *b);";function g_unichar_decompose(ch, a, b) bind(c)
g;g_unichar_digit_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gint g_unichar_digit_value (gunichar c) G_GNUC_CONST;";function g_unichar_digit_value(c) bind(c)
g;g_unichar_fully_decompose;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gsize g_unichar_fully_decompose (gunichar ch, gboolean compat, gunichar *result, gsize result_len);";function g_unichar_fully_decompose(ch, compat, result, result_len) bind(c)
g;g_unichar_get_mirror_char;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_get_mirror_char (gunichar ch, gunichar *mirrored_ch);";function g_unichar_get_mirror_char(ch, mirrored_ch) bind(c)
g;g_unichar_get_script;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"GUnicodeScript g_unichar_get_script (gunichar ch) G_GNUC_CONST;";function g_unichar_get_script(ch) bind(c)
g;g_unichar_isalnum;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_isalnum (gunichar c) G_GNUC_CONST;";function g_unichar_isalnum(c) bind(c)
g;g_unichar_isalpha;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_isalpha (gunichar c) G_GNUC_CONST;";function g_unichar_isalpha(c) bind(c)
g;g_unichar_iscntrl;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_iscntrl (gunichar c) G_GNUC_CONST;";function g_unichar_iscntrl(c) bind(c)
g;g_unichar_isdefined;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_isdefined (gunichar c) G_GNUC_CONST;";function g_unichar_isdefined(c) bind(c)
g;g_unichar_isdigit;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_isdigit (gunichar c) G_GNUC_CONST;";function g_unichar_isdigit(c) bind(c)
g;g_unichar_isgraph;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_isgraph (gunichar c) G_GNUC_CONST;";function g_unichar_isgraph(c) bind(c)
g;g_unichar_islower;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_islower (gunichar c) G_GNUC_CONST;";function g_unichar_islower(c) bind(c)
g;g_unichar_ismark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_ismark (gunichar c) G_GNUC_CONST;";function g_unichar_ismark(c) bind(c)
g;g_unichar_isprint;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_isprint (gunichar c) G_GNUC_CONST;";function g_unichar_isprint(c) bind(c)
g;g_unichar_ispunct;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_ispunct (gunichar c) G_GNUC_CONST;";function g_unichar_ispunct(c) bind(c)
g;g_unichar_isspace;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_isspace (gunichar c) G_GNUC_CONST;";function g_unichar_isspace(c) bind(c)
g;g_unichar_istitle;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_istitle (gunichar c) G_GNUC_CONST;";function g_unichar_istitle(c) bind(c)
g;g_unichar_isupper;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_isupper (gunichar c) G_GNUC_CONST;";function g_unichar_isupper(c) bind(c)
g;g_unichar_iswide;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_iswide (gunichar c) G_GNUC_CONST;";function g_unichar_iswide(c) bind(c)
g;g_unichar_iswide_cjk;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_iswide_cjk(gunichar c) G_GNUC_CONST;";function g_unichar_iswide_cjk(c) bind(c)
g;g_unichar_isxdigit;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_isxdigit (gunichar c) G_GNUC_CONST;";function g_unichar_isxdigit(c) bind(c)
g;g_unichar_iszerowidth;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_iszerowidth(gunichar c) G_GNUC_CONST;";function g_unichar_iszerowidth(c) bind(c)
g;g_unichar_to_utf8;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gint g_unichar_to_utf8 (gunichar c, gchar *outbuf);";function g_unichar_to_utf8(c, outbuf) bind(c)
g;g_unichar_tolower;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gunichar g_unichar_tolower (gunichar c) G_GNUC_CONST;";function g_unichar_tolower(c) bind(c)
g;g_unichar_totitle;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gunichar g_unichar_totitle (gunichar c) G_GNUC_CONST;";function g_unichar_totitle(c) bind(c)
g;g_unichar_toupper;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gunichar g_unichar_toupper (gunichar c) G_GNUC_CONST;";function g_unichar_toupper(c) bind(c)
g;g_unichar_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"GUnicodeType g_unichar_type (gunichar c) G_GNUC_CONST;";function g_unichar_type(c) bind(c)
g;g_unichar_validate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_unichar_validate (gunichar ch) G_GNUC_CONST;";function g_unichar_validate(ch) bind(c)
g;g_unichar_xdigit_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gint g_unichar_xdigit_value (gunichar c) G_GNUC_CONST;";function g_unichar_xdigit_value(c) bind(c)
g;g_unicode_canonical_decomposition;GLIB_DEPRECATED_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gunichar *g_unicode_canonical_decomposition (gunichar ch, gsize *result_len) G_GNUC_MALLOC;";function g_unicode_canonical_decomposition(ch, result_len) bind(c)
g;g_unicode_canonical_ordering;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"void g_unicode_canonical_ordering (gunichar *string, gsize len);";subroutine g_unicode_canonical_ordering(string, len) bind(c)
g;g_unicode_script_from_iso15924;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"GUnicodeScript g_unicode_script_from_iso15924 (guint32 iso15924);";function g_unicode_script_from_iso15924(iso15924) bind(c)
g;g_unicode_script_to_iso15924;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"guint32 g_unicode_script_to_iso15924 (GUnicodeScript script);";function g_unicode_script_to_iso15924(script) bind(c)
g;g_unix_error_quark;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib-unix.h;"GQuark g_unix_error_quark (void);";function g_unix_error_quark() bind(c)
g;g_unix_fd_add;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib-unix.h;"guint g_unix_fd_add (gint fd, GIOCondition condition, GUnixFDSourceFunc function, gpointer user_data);";function g_unix_fd_add(fd, condition, function, user_data) bind(c)
g;g_unix_fd_add_full;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib-unix.h;"guint g_unix_fd_add_full (gint priority, gint fd, GIOCondition condition, GUnixFDSourceFunc function, gpointer user_data, GDestroyNotify notify);";function g_unix_fd_add_full(priority, fd, condition, function, user_data, notify) bind(c)
g;g_unix_fd_source_new;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib-unix.h;"GSource *g_unix_fd_source_new (gint fd, GIOCondition condition);";function g_unix_fd_source_new(fd, condition) bind(c)
g;g_unix_open_pipe;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib-unix.h;"gboolean g_unix_open_pipe (gint *fds, gint flags, GError **error);";function g_unix_open_pipe(fds, flags, error) bind(c)
g;g_unix_set_fd_nonblocking;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib-unix.h;"gboolean g_unix_set_fd_nonblocking (gint fd, gboolean nonblock, GError **error);";function g_unix_set_fd_nonblocking(fd, nonblock, error) bind(c)
g;g_unix_signal_add;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib-unix.h;"guint g_unix_signal_add (gint signum, GSourceFunc handler, gpointer user_data);";function g_unix_signal_add(signum, handler, user_data) bind(c)
g;g_unix_signal_add_full;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib-unix.h;"guint g_unix_signal_add_full (gint priority, gint signum, GSourceFunc handler, gpointer user_data, GDestroyNotify notify);";function g_unix_signal_add_full(priority, signum, handler, user_data, notify) bind(c)
g;g_unix_signal_source_new;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib-unix.h;"GSource *g_unix_signal_source_new (gint signum);";function g_unix_signal_source_new(signum) bind(c)
g;g_unlink;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_unlink (const gchar *filename);";function g_unlink(filename) bind(c)
g;g_unsetenv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/genviron.h;"void g_unsetenv (const gchar *variable);";subroutine g_unsetenv(variable) bind(c)
g;g_uri_build;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"GUri * g_uri_build (GUriFlags flags, const gchar *scheme, const gchar *userinfo, const gchar *host, gint port, const gchar *path, const gchar *query, const gchar *fragment);";function g_uri_build(flags, scheme, userinfo, host, port, path, query, fragment) bind(c)
g;g_uri_build_with_user;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"GUri * g_uri_build_with_user (GUriFlags flags, const gchar *scheme, const gchar *user, const gchar *password, const gchar *auth_params, const gchar *host, gint port, const gchar *path, const gchar *query, const gchar *fragment);";function g_uri_build_with_user(flags, scheme, user, password, auth_params, host, port, path, query, fragment) bind(c)
g;g_uri_error_quark;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"GQuark g_uri_error_quark (void);";function g_uri_error_quark() bind(c)
g;g_uri_escape_bytes;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"char * g_uri_escape_bytes (const guint8 *unescaped, gsize length, const char *reserved_chars_allowed);";function g_uri_escape_bytes(unescaped, length, reserved_chars_allowed) bind(c)
g;g_uri_escape_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"char * g_uri_escape_string (const char *unescaped, const char *reserved_chars_allowed, gboolean allow_utf8);";function g_uri_escape_string(unescaped, reserved_chars_allowed, allow_utf8) bind(c)
g;g_uri_get_auth_params;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"const gchar *g_uri_get_auth_params (GUri *uri);";function g_uri_get_auth_params(uri) bind(c)
g;g_uri_get_flags;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"GUriFlags g_uri_get_flags (GUri *uri);";function g_uri_get_flags(uri) bind(c)
g;g_uri_get_fragment;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"const gchar *g_uri_get_fragment (GUri *uri);";function g_uri_get_fragment(uri) bind(c)
g;g_uri_get_host;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"const gchar *g_uri_get_host (GUri *uri);";function g_uri_get_host(uri) bind(c)
g;g_uri_get_password;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"const gchar *g_uri_get_password (GUri *uri);";function g_uri_get_password(uri) bind(c)
g;g_uri_get_path;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"const gchar *g_uri_get_path (GUri *uri);";function g_uri_get_path(uri) bind(c)
g;g_uri_get_port;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"gint g_uri_get_port (GUri *uri);";function g_uri_get_port(uri) bind(c)
g;g_uri_get_query;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"const gchar *g_uri_get_query (GUri *uri);";function g_uri_get_query(uri) bind(c)
g;g_uri_get_scheme;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"const gchar *g_uri_get_scheme (GUri *uri);";function g_uri_get_scheme(uri) bind(c)
g;g_uri_get_type;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_uri_get_type (void) G_GNUC_CONST;";function g_uri_get_type() bind(c)
g;g_uri_get_user;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"const gchar *g_uri_get_user (GUri *uri);";function g_uri_get_user(uri) bind(c)
g;g_uri_get_userinfo;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"const gchar *g_uri_get_userinfo (GUri *uri);";function g_uri_get_userinfo(uri) bind(c)
g;g_uri_is_valid;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"gboolean g_uri_is_valid (const gchar *uri_string, GUriFlags flags, GError **error);";function g_uri_is_valid(uri_string, flags, error) bind(c)
g;g_uri_join;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"gchar * g_uri_join (GUriFlags flags, const gchar *scheme, const gchar *userinfo, const gchar *host, gint port, const gchar *path, const gchar *query, const gchar *fragment);";function g_uri_join(flags, scheme, userinfo, host, port, path, query, fragment) bind(c)
g;g_uri_join_with_user;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"gchar * g_uri_join_with_user (GUriFlags flags, const gchar *scheme, const gchar *user, const gchar *password, const gchar *auth_params, const gchar *host, gint port, const gchar *path, const gchar *query, const gchar *fragment);";function g_uri_join_with_user(flags, scheme, user, password, auth_params, host, port, path, query, fragment) bind(c)
g;g_uri_list_extract_uris;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gconvert.h;"gchar **g_uri_list_extract_uris (const gchar *uri_list);";function g_uri_list_extract_uris(uri_list) bind(c)
g;g_uri_params_iter_init;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"void g_uri_params_iter_init (GUriParamsIter *iter, const gchar *params, gssize length, const gchar *separators, GUriParamsFlags flags);";subroutine g_uri_params_iter_init(iter, params, length, separators, flags) bind(c)
g;g_uri_params_iter_next;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"gboolean g_uri_params_iter_next (GUriParamsIter *iter, gchar **attribute, gchar **value, GError **error);";function g_uri_params_iter_next(iter, attribute, value, error) bind(c)
g;g_uri_parse;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"GUri * g_uri_parse (const gchar *uri_string, GUriFlags flags, GError **error);";function g_uri_parse(uri_string, flags, error) bind(c)
g;g_uri_parse_params;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"GLIB_AVAILABLE_TYPE_IN_2_66 GHashTable *g_uri_parse_params (const gchar *params, gssize length, const gchar *separators, GUriParamsFlags flags, GError **error);";function g_uri_parse_params(params, length, separators, flags, error) bind(c)
g;g_uri_parse_relative;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"GUri * g_uri_parse_relative (GUri *base_uri, const gchar *uri_ref, GUriFlags flags, GError **error);";function g_uri_parse_relative(base_uri, uri_ref, flags, error) bind(c)
g;g_uri_parse_scheme;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"char * g_uri_parse_scheme (const char *uri);";function g_uri_parse_scheme(uri) bind(c)
g;g_uri_peek_scheme;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"const char *g_uri_peek_scheme (const char *uri);";function g_uri_peek_scheme(uri) bind(c)
g;g_uri_ref;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"GUri * g_uri_ref (GUri *uri);";function g_uri_ref(uri) bind(c)
g;g_uri_resolve_relative;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"gchar * g_uri_resolve_relative (const gchar *base_uri_string, const gchar *uri_ref, GUriFlags flags, GError **error);";function g_uri_resolve_relative(base_uri_string, uri_ref, flags, error) bind(c)
g;g_uri_split_network;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"gboolean g_uri_split_network (const gchar *uri_string, GUriFlags flags, gchar **scheme, gchar **host, gint *port, GError **error);";function g_uri_split_network(uri_string, flags, scheme, host, port, error) bind(c)
g;g_uri_split_with_user;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"gboolean g_uri_split_with_user (const gchar *uri_ref, GUriFlags flags, gchar **scheme, gchar **user, gchar **password, gchar **auth_params, gchar **host, gint *port, gchar **path, gchar **query, gchar **fragment, GError **error);";function g_uri_split_with_user(uri_ref, flags, scheme, user, password, auth_params, host, port, path, query, fragment, error) bind(c)
g;g_uri_to_string;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"GLIB_AVAILABLE_TYPE_IN_2_66 char * g_uri_to_string (GUri *uri);";function g_uri_to_string(uri) bind(c)
g;g_uri_to_string_partial;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"char * g_uri_to_string_partial (GUri *uri, GUriHideFlags flags);";function g_uri_to_string_partial(uri, flags) bind(c)
g;g_uri_unescape_bytes;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"GBytes * g_uri_unescape_bytes (const char *escaped_string, gssize length, const char *illegal_characters, GError **error);";function g_uri_unescape_bytes(escaped_string, length, illegal_characters, error) bind(c)
g;g_uri_unescape_segment;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"char * g_uri_unescape_segment (const char *escaped_string, const char *escaped_string_end, const char *illegal_characters);";function g_uri_unescape_segment(escaped_string, escaped_string_end, illegal_characters) bind(c)
g;g_uri_unescape_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"char * g_uri_unescape_string (const char *escaped_string, const char *illegal_characters);";function g_uri_unescape_string(escaped_string, illegal_characters) bind(c)
g;g_uri_unref;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/glib/guri.h;"void g_uri_unref (GUri *uri);";subroutine g_uri_unref(uri) bind(c)
g;g_usleep;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gtimer.h;"void g_usleep (gulong microseconds);";subroutine g_usleep(microseconds) bind(c)
g;g_utf16_to_ucs4;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gunichar * g_utf16_to_ucs4 (const gunichar2 *str, glong len, glong *items_read, glong *items_written, GError **error) G_GNUC_MALLOC;";function g_utf16_to_ucs4(str, len, items_read, items_written, error) bind(c)
g;g_utf16_to_utf8;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar* g_utf16_to_utf8 (const gunichar2 *str, glong len, glong *items_read, glong *items_written, GError **error) G_GNUC_MALLOC;";function g_utf16_to_utf8(str, len, items_read, items_written, error) bind(c)
g;g_utf8_casefold;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar *g_utf8_casefold (const gchar *str, gssize len) G_GNUC_MALLOC;";function g_utf8_casefold(str, len) bind(c)
g;g_utf8_collate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gint g_utf8_collate (const gchar *str1, const gchar *str2) G_GNUC_PURE;";function g_utf8_collate(str1, str2) bind(c)
g;g_utf8_collate_key;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar *g_utf8_collate_key (const gchar *str, gssize len) G_GNUC_MALLOC;";function g_utf8_collate_key(str, len) bind(c)
g;g_utf8_collate_key_for_filename;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar *g_utf8_collate_key_for_filename (const gchar *str, gssize len) G_GNUC_MALLOC;";function g_utf8_collate_key_for_filename(str, len) bind(c)
g;g_utf8_find_next_char;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar* g_utf8_find_next_char (const gchar *p, const gchar *end) G_GNUC_PURE;";function g_utf8_find_next_char(p, end) bind(c)
g;g_utf8_find_prev_char;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar* g_utf8_find_prev_char (const gchar *str, const gchar *p) G_GNUC_PURE;";function g_utf8_find_prev_char(str, p) bind(c)
g;g_utf8_get_char;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gunichar g_utf8_get_char (const gchar *p) G_GNUC_PURE;";function g_utf8_get_char(p) bind(c)
g;g_utf8_get_char_validated;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gunichar g_utf8_get_char_validated (const gchar *p, gssize max_len) G_GNUC_PURE;";function g_utf8_get_char_validated(p, max_len) bind(c)
g;g_utf8_make_valid;GLIB_AVAILABLE_IN_2_52;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar *g_utf8_make_valid (const gchar *str, gssize len) G_GNUC_MALLOC;";function g_utf8_make_valid(str, len) bind(c)
g;g_utf8_normalize;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar *g_utf8_normalize (const gchar *str, gssize len, GNormalizeMode mode) G_GNUC_MALLOC;";function g_utf8_normalize(str, len, mode) bind(c)
g;g_utf8_offset_to_pointer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar* g_utf8_offset_to_pointer (const gchar *str, glong offset) G_GNUC_PURE;";function g_utf8_offset_to_pointer(str, offset) bind(c)
g;g_utf8_pointer_to_offset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"glong g_utf8_pointer_to_offset (const gchar *str, const gchar *pos) G_GNUC_PURE;";function g_utf8_pointer_to_offset(str, pos) bind(c)
g;g_utf8_prev_char;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar* g_utf8_prev_char (const gchar *p) G_GNUC_PURE;";function g_utf8_prev_char(p) bind(c)
g;g_utf8_strchr;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar* g_utf8_strchr (const gchar *p, gssize len, gunichar c);";function g_utf8_strchr(p, len, c) bind(c)
g;g_utf8_strdown;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar *g_utf8_strdown (const gchar *str, gssize len) G_GNUC_MALLOC;";function g_utf8_strdown(str, len) bind(c)
g;g_utf8_strlen;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"glong g_utf8_strlen (const gchar *p, gssize max) G_GNUC_PURE;";function g_utf8_strlen(p, max) bind(c)
g;g_utf8_strncpy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar *g_utf8_strncpy (gchar *dest, const gchar *src, gsize n);";function g_utf8_strncpy(dest, src, n) bind(c)
g;g_utf8_strrchr;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar* g_utf8_strrchr (const gchar *p, gssize len, gunichar c);";function g_utf8_strrchr(p, len, c) bind(c)
g;g_utf8_strreverse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar* g_utf8_strreverse (const gchar *str, gssize len);";function g_utf8_strreverse(str, len) bind(c)
g;g_utf8_strup;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar *g_utf8_strup (const gchar *str, gssize len) G_GNUC_MALLOC;";function g_utf8_strup(str, len) bind(c)
g;g_utf8_substring;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gchar *g_utf8_substring (const gchar *str, glong start_pos, glong end_pos) G_GNUC_MALLOC;";function g_utf8_substring(str, start_pos, end_pos) bind(c)
g;g_utf8_to_ucs4;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gunichar * g_utf8_to_ucs4 (const gchar *str, glong len, glong *items_read, glong *items_written, GError **error) G_GNUC_MALLOC;";function g_utf8_to_ucs4(str, len, items_read, items_written, error) bind(c)
g;g_utf8_to_ucs4_fast;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gunichar * g_utf8_to_ucs4_fast (const gchar *str, glong len, glong *items_written) G_GNUC_MALLOC;";function g_utf8_to_ucs4_fast(str, len, items_written) bind(c)
g;g_utf8_to_utf16;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gunichar2 *g_utf8_to_utf16 (const gchar *str, glong len, glong *items_read, glong *items_written, GError **error) G_GNUC_MALLOC;";function g_utf8_to_utf16(str, len, items_read, items_written, error) bind(c)
g;g_utf8_validate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_utf8_validate (const gchar *str, gssize max_len, const gchar **end);";function g_utf8_validate(str, max_len, end) bind(c)
g;g_utf8_validate_len;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/glib/gunicode.h;"gboolean g_utf8_validate_len (const gchar *str, gsize max_len, const gchar **end);";function g_utf8_validate_len(str, max_len, end) bind(c)
g;g_utime;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gstdio.h;"int g_utime (const gchar *filename, struct utimbuf *utb);";function g_utime(filename, utb) bind(c)
g;g_uuid_string_is_valid;GLIB_AVAILABLE_IN_2_52;glib-auto.f90;/usr/include/glib-2.0/glib/guuid.h;"gboolean g_uuid_string_is_valid (const gchar *str);";function g_uuid_string_is_valid(str) bind(c)
g;g_uuid_string_random;GLIB_AVAILABLE_IN_2_52;glib-auto.f90;/usr/include/glib-2.0/glib/guuid.h;"gchar * g_uuid_string_random (void);";function g_uuid_string_random() bind(c)
g;g_value_array_append;GLIB_DEPRECATED_IN_2_32_FOR(GArray);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluearray.h;"GValueArray* g_value_array_append (GValueArray *value_array, const GValue *value);";function g_value_array_append(value_array, value) bind(c)
g;g_value_array_copy;GLIB_DEPRECATED_IN_2_32_FOR(GArray);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluearray.h;"GValueArray* g_value_array_copy (const GValueArray *value_array);";function g_value_array_copy(value_array) bind(c)
g;g_value_array_free;GLIB_DEPRECATED_IN_2_32_FOR(GArray);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluearray.h;"void g_value_array_free (GValueArray *value_array);";subroutine g_value_array_free(value_array) bind(c)
g;g_value_array_get_nth;GLIB_DEPRECATED_IN_2_32_FOR(GArray);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluearray.h;"GValue* g_value_array_get_nth (GValueArray *value_array, guint index_);";function g_value_array_get_nth(value_array, index_) bind(c)
g;g_value_array_get_type;GLIB_DEPRECATED_IN_2_32_FOR(GArray);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluearray.h;"GType g_value_array_get_type (void) G_GNUC_CONST;";function g_value_array_get_type() bind(c)
g;g_value_array_insert;GLIB_DEPRECATED_IN_2_32_FOR(GArray);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluearray.h;"GValueArray* g_value_array_insert (GValueArray *value_array, guint index_, const GValue *value);";function g_value_array_insert(value_array, index_, value) bind(c)
g;g_value_array_new;GLIB_DEPRECATED_IN_2_32_FOR(GArray);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluearray.h;"GValueArray* g_value_array_new (guint n_prealloced);";function g_value_array_new(n_prealloced) bind(c)
g;g_value_array_prepend;GLIB_DEPRECATED_IN_2_32_FOR(GArray);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluearray.h;"GValueArray* g_value_array_prepend (GValueArray *value_array, const GValue *value);";function g_value_array_prepend(value_array, value) bind(c)
g;g_value_array_remove;GLIB_DEPRECATED_IN_2_32_FOR(GArray);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluearray.h;"GValueArray* g_value_array_remove (GValueArray *value_array, guint index_);";function g_value_array_remove(value_array, index_) bind(c)
g;g_value_array_sort;GLIB_DEPRECATED_IN_2_32_FOR(GArray);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluearray.h;"GValueArray* g_value_array_sort (GValueArray *value_array, GCompareFunc compare_func);";function g_value_array_sort(value_array, compare_func) bind(c)
g;g_value_array_sort_with_data;GLIB_DEPRECATED_IN_2_32_FOR(GArray);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluearray.h;"GValueArray* g_value_array_sort_with_data (GValueArray *value_array, GCompareDataFunc compare_func, gpointer user_data);";function g_value_array_sort_with_data(value_array, compare_func, user_data) bind(c)
g;g_value_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvalue.h;"void g_value_copy (const GValue *src_value, GValue *dest_value);";subroutine g_value_copy(src_value, dest_value) bind(c)
g;g_value_dup_boxed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gboxed.h;"gpointer g_value_dup_boxed (const GValue *value);";function g_value_dup_boxed(value) bind(c)
g;g_value_dup_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gpointer g_value_dup_object (const GValue *value);";function g_value_dup_object(value) bind(c)
g;g_value_dup_param;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"GParamSpec* g_value_dup_param (const GValue *value);";function g_value_dup_param(value) bind(c)
g;g_value_dup_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"gchar* g_value_dup_string (const GValue *value);";function g_value_dup_string(value) bind(c)
g;g_value_dup_variant;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"GVariant* g_value_dup_variant (const GValue *value);";function g_value_dup_variant(value) bind(c)
g;g_value_fits_pointer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvalue.h;"gboolean g_value_fits_pointer (const GValue *value);";function g_value_fits_pointer(value) bind(c)
g;g_value_get_boolean;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"gboolean g_value_get_boolean (const GValue *value);";function g_value_get_boolean(value) bind(c)
g;g_value_get_boxed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gboxed.h;"gpointer g_value_get_boxed (const GValue *value);";function g_value_get_boxed(value) bind(c)
g;g_value_get_char;GLIB_DEPRECATED_IN_2_32_FOR(g_value_get_schar);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"gchar g_value_get_char (const GValue *value);";function g_value_get_char(value) bind(c)
g;g_value_get_double;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"gdouble g_value_get_double (const GValue *value);";function g_value_get_double(value) bind(c)
g;g_value_get_enum;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"gint g_value_get_enum (const GValue *value);";function g_value_get_enum(value) bind(c)
g;g_value_get_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"guint g_value_get_flags (const GValue *value);";function g_value_get_flags(value) bind(c)
g;g_value_get_float;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"gfloat g_value_get_float (const GValue *value);";function g_value_get_float(value) bind(c)
g;g_value_get_gtype;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"GType g_value_get_gtype (const GValue *value);";function g_value_get_gtype(value) bind(c)
g;g_value_get_int;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"gint g_value_get_int (const GValue *value);";function g_value_get_int(value) bind(c)
g;g_value_get_int64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"gint64 g_value_get_int64 (const GValue *value);";function g_value_get_int64(value) bind(c)
g;g_value_get_long;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"glong g_value_get_long (const GValue *value);";function g_value_get_long(value) bind(c)
g;g_value_get_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gpointer g_value_get_object (const GValue *value);";function g_value_get_object(value) bind(c)
g;g_value_get_param;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"GParamSpec* g_value_get_param (const GValue *value);";function g_value_get_param(value) bind(c)
g;g_value_get_pointer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"gpointer g_value_get_pointer (const GValue *value);";function g_value_get_pointer(value) bind(c)
g;g_value_get_schar;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"gint8 g_value_get_schar (const GValue *value);";function g_value_get_schar(value) bind(c)
g;g_value_get_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"const gchar * g_value_get_string (const GValue *value);";function g_value_get_string(value) bind(c)
g;g_value_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gboxed.h;"GType g_value_get_type (void) G_GNUC_CONST;";function g_value_get_type() bind(c)
g;g_value_get_uchar;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"guchar g_value_get_uchar (const GValue *value);";function g_value_get_uchar(value) bind(c)
g;g_value_get_uint;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"guint g_value_get_uint (const GValue *value);";function g_value_get_uint(value) bind(c)
g;g_value_get_uint64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"guint64 g_value_get_uint64 (const GValue *value);";function g_value_get_uint64(value) bind(c)
g;g_value_get_ulong;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"gulong g_value_get_ulong (const GValue *value);";function g_value_get_ulong(value) bind(c)
g;g_value_get_variant;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"GVariant* g_value_get_variant (const GValue *value);";function g_value_get_variant(value) bind(c)
g;g_value_init;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvalue.h;"union GValue* g_value_init (GValue *value, GType g_type);";function g_value_init(value, g_type) bind(c)
g;g_value_init_from_instance;GLIB_AVAILABLE_IN_2_42;glib-auto.f90;/usr/include/glib-2.0/gobject/gvalue.h;"void g_value_init_from_instance (GValue *value, gpointer instance);";subroutine g_value_init_from_instance(value, instance) bind(c)
g;g_value_peek_pointer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvalue.h;"gpointer g_value_peek_pointer (const GValue *value);";function g_value_peek_pointer(value) bind(c)
g;g_value_register_transform_func;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvalue.h;"void g_value_register_transform_func (GType src_type, GType dest_type, GValueTransform transform_func);";subroutine g_value_register_transform_func(src_type, dest_type, transform_func) bind(c)
g;g_value_reset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvalue.h;"GValue* g_value_reset (GValue *value);";function g_value_reset(value) bind(c)
g;g_value_set_boolean;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_boolean (GValue *value, gboolean v_boolean);";subroutine g_value_set_boolean(value, v_boolean) bind(c)
g;g_value_set_boxed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gboxed.h;"void g_value_set_boxed (GValue *value, gconstpointer v_boxed);";subroutine g_value_set_boxed(value, v_boxed) bind(c)
g;g_value_set_boxed_take_ownership;GLIB_DEPRECATED_FOR(g_value_take_boxed);glib-auto.f90;/usr/include/glib-2.0/gobject/gboxed.h;"void g_value_set_boxed_take_ownership (GValue *value, gconstpointer v_boxed);";subroutine g_value_set_boxed_take_ownership(value, v_boxed) bind(c)
g;g_value_set_char;GLIB_DEPRECATED_IN_2_32_FOR(g_value_set_schar);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_char (GValue *value, gchar v_char);";subroutine g_value_set_char(value, v_char) bind(c)
g;g_value_set_double;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_double (GValue *value, gdouble v_double);";subroutine g_value_set_double(value, v_double) bind(c)
g;g_value_set_enum;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"void g_value_set_enum (GValue *value, gint v_enum);";subroutine g_value_set_enum(value, v_enum) bind(c)
g;g_value_set_flags;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/genums.h;"void g_value_set_flags (GValue *value, guint v_flags);";subroutine g_value_set_flags(value, v_flags) bind(c)
g;g_value_set_float;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_float (GValue *value, gfloat v_float);";subroutine g_value_set_float(value, v_float) bind(c)
g;g_value_set_gtype;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_gtype (GValue *value, GType v_gtype);";subroutine g_value_set_gtype(value, v_gtype) bind(c)
g;g_value_set_instance;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvalue.h;"void g_value_set_instance (GValue *value, gpointer instance);";subroutine g_value_set_instance(value, instance) bind(c)
g;g_value_set_int;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_int (GValue *value, gint v_int);";subroutine g_value_set_int(value, v_int) bind(c)
g;g_value_set_int64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_int64 (GValue *value, gint64 v_int64);";subroutine g_value_set_int64(value, v_int64) bind(c)
g;g_value_set_interned_string;GLIB_AVAILABLE_IN_2_66;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_interned_string (GValue *value, const gchar *v_string);";subroutine g_value_set_interned_string(value, v_string) bind(c)
g;g_value_set_long;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_long (GValue *value, glong v_long);";subroutine g_value_set_long(value, v_long) bind(c)
g;g_value_set_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_value_set_object (GValue *value, gpointer v_object);";subroutine g_value_set_object(value, v_object) bind(c)
g;g_value_set_object_take_ownership;GLIB_DEPRECATED_FOR(g_value_take_object);glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_value_set_object_take_ownership (GValue *value, gpointer v_object);";subroutine g_value_set_object_take_ownership(value, v_object) bind(c)
g;g_value_set_param;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"void g_value_set_param (GValue *value, GParamSpec *param);";subroutine g_value_set_param(value, param) bind(c)
g;g_value_set_param_take_ownership;GLIB_DEPRECATED_FOR(g_value_take_param);glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"void g_value_set_param_take_ownership (GValue *value, GParamSpec *param);";subroutine g_value_set_param_take_ownership(value, param) bind(c)
g;g_value_set_pointer;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_pointer (GValue *value, gpointer v_pointer);";subroutine g_value_set_pointer(value, v_pointer) bind(c)
g;g_value_set_schar;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_schar (GValue *value, gint8 v_char);";subroutine g_value_set_schar(value, v_char) bind(c)
g;g_value_set_static_boxed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gboxed.h;"void g_value_set_static_boxed (GValue *value, gconstpointer v_boxed);";subroutine g_value_set_static_boxed(value, v_boxed) bind(c)
g;g_value_set_static_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_static_string (GValue *value, const gchar *v_string);";subroutine g_value_set_static_string(value, v_string) bind(c)
g;g_value_set_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_string (GValue *value, const gchar *v_string);";subroutine g_value_set_string(value, v_string) bind(c)
g;g_value_set_string_take_ownership;GLIB_DEPRECATED_FOR(g_value_take_string);glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_string_take_ownership (GValue *value, gchar *v_string);";subroutine g_value_set_string_take_ownership(value, v_string) bind(c)
g;g_value_set_uchar;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_uchar (GValue *value, guchar v_uchar);";subroutine g_value_set_uchar(value, v_uchar) bind(c)
g;g_value_set_uint;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_uint (GValue *value, guint v_uint);";subroutine g_value_set_uint(value, v_uint) bind(c)
g;g_value_set_uint64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_uint64 (GValue *value, guint64 v_uint64);";subroutine g_value_set_uint64(value, v_uint64) bind(c)
g;g_value_set_ulong;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_ulong (GValue *value, gulong v_ulong);";subroutine g_value_set_ulong(value, v_ulong) bind(c)
g;g_value_set_variant;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_set_variant (GValue *value, GVariant *variant);";subroutine g_value_set_variant(value, variant) bind(c)
g;g_value_take_boxed;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gboxed.h;"void g_value_take_boxed (GValue *value, gconstpointer v_boxed);";subroutine g_value_take_boxed(value, v_boxed) bind(c)
g;g_value_take_object;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_value_take_object (GValue *value, gpointer v_object);";subroutine g_value_take_object(value, v_object) bind(c)
g;g_value_take_param;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gparam.h;"void g_value_take_param (GValue *value, GParamSpec *param);";subroutine g_value_take_param(value, param) bind(c)
g;g_value_take_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_take_string (GValue *value, gchar *v_string);";subroutine g_value_take_string(value, v_string) bind(c)
g;g_value_take_variant;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvaluetypes.h;"void g_value_take_variant (GValue *value, GVariant *variant);";subroutine g_value_take_variant(value, variant) bind(c)
g;g_value_transform;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvalue.h;"gboolean g_value_transform (const GValue *src_value, GValue *dest_value);";function g_value_transform(src_value, dest_value) bind(c)
g;g_value_type_compatible;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvalue.h;"gboolean g_value_type_compatible (GType src_type, GType dest_type);";function g_value_type_compatible(src_type, dest_type) bind(c)
g;g_value_type_transformable;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvalue.h;"gboolean g_value_type_transformable (GType src_type, GType dest_type);";function g_value_type_transformable(src_type, dest_type) bind(c)
g;g_value_unset;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gvalue.h;"void g_value_unset (GValue *value);";subroutine g_value_unset(value) bind(c)
g;g_variant_builder_add_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_builder_add_value (GVariantBuilder *builder, GVariant *value);";subroutine g_variant_builder_add_value(builder, value) bind(c)
g;g_variant_builder_clear;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_builder_clear (GVariantBuilder *builder);";subroutine g_variant_builder_clear(builder) bind(c)
g;g_variant_builder_close;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_builder_close (GVariantBuilder *builder);";subroutine g_variant_builder_close(builder) bind(c)
g;g_variant_builder_end;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_builder_end (GVariantBuilder *builder);";function g_variant_builder_end(builder) bind(c)
g;g_variant_builder_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_variant_builder_get_type (void) G_GNUC_CONST;";function g_variant_builder_get_type() bind(c)
g;g_variant_builder_init;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_builder_init (GVariantBuilder *builder, const GVariantType *type);";subroutine g_variant_builder_init(builder, type) bind(c)
g;g_variant_builder_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariantBuilder * g_variant_builder_new (const GVariantType *type);";function g_variant_builder_new(type) bind(c)
g;g_variant_builder_open;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_builder_open (GVariantBuilder *builder, const GVariantType *type);";subroutine g_variant_builder_open(builder, type) bind(c)
g;g_variant_builder_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariantBuilder * g_variant_builder_ref (GVariantBuilder *builder);";function g_variant_builder_ref(builder) bind(c)
g;g_variant_builder_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_builder_unref (GVariantBuilder *builder);";subroutine g_variant_builder_unref(builder) bind(c)
g;g_variant_byteswap;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_byteswap (GVariant *value);";function g_variant_byteswap(value) bind(c)
g;g_variant_check_format_string;GLIB_AVAILABLE_IN_2_34;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gboolean g_variant_check_format_string (GVariant *value, const gchar *format_string, gboolean copy_only);";function g_variant_check_format_string(value, format_string, copy_only) bind(c)
g;g_variant_classify;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariantClass g_variant_classify (GVariant *value);";function g_variant_classify(value) bind(c)
g;g_variant_compare;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gint g_variant_compare (gconstpointer one, gconstpointer two);";function g_variant_compare(one, two) bind(c)
g;g_variant_dict_clear;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_dict_clear (GVariantDict *dict);";subroutine g_variant_dict_clear(dict) bind(c)
g;g_variant_dict_contains;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gboolean g_variant_dict_contains (GVariantDict *dict, const gchar *key);";function g_variant_dict_contains(dict, key) bind(c)
g;g_variant_dict_end;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_dict_end (GVariantDict *dict);";function g_variant_dict_end(dict) bind(c)
g;g_variant_dict_get_type;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_variant_dict_get_type (void) G_GNUC_CONST;";function g_variant_dict_get_type() bind(c)
g;g_variant_dict_init;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_dict_init (GVariantDict *dict, GVariant *from_asv);";subroutine g_variant_dict_init(dict, from_asv) bind(c)
g;g_variant_dict_insert_value;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_dict_insert_value (GVariantDict *dict, const gchar *key, GVariant *value);";subroutine g_variant_dict_insert_value(dict, key, value) bind(c)
g;g_variant_dict_lookup_value;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_dict_lookup_value (GVariantDict *dict, const gchar *key, const GVariantType *expected_type);";function g_variant_dict_lookup_value(dict, key, expected_type) bind(c)
g;g_variant_dict_new;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariantDict * g_variant_dict_new (GVariant *from_asv);";function g_variant_dict_new(from_asv) bind(c)
g;g_variant_dict_ref;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariantDict * g_variant_dict_ref (GVariantDict *dict);";function g_variant_dict_ref(dict) bind(c)
g;g_variant_dict_remove;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gboolean g_variant_dict_remove (GVariantDict *dict, const gchar *key);";function g_variant_dict_remove(dict, key) bind(c)
g;g_variant_dict_unref;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_dict_unref (GVariantDict *dict);";subroutine g_variant_dict_unref(dict) bind(c)
g;g_variant_dup_bytestring;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gchar * g_variant_dup_bytestring (GVariant *value, gsize *length);";function g_variant_dup_bytestring(value, length) bind(c)
g;g_variant_dup_bytestring_array;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gchar ** g_variant_dup_bytestring_array (GVariant *value, gsize *length);";function g_variant_dup_bytestring_array(value, length) bind(c)
g;g_variant_dup_objv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gchar ** g_variant_dup_objv (GVariant *value, gsize *length);";function g_variant_dup_objv(value, length) bind(c)
g;g_variant_dup_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gchar * g_variant_dup_string (GVariant *value, gsize *length);";function g_variant_dup_string(value, length) bind(c)
g;g_variant_dup_strv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gchar ** g_variant_dup_strv (GVariant *value, gsize *length);";function g_variant_dup_strv(value, length) bind(c)
g;g_variant_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gboolean g_variant_equal (gconstpointer one, gconstpointer two);";function g_variant_equal(one, two) bind(c)
g;g_variant_get_boolean;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gboolean g_variant_get_boolean (GVariant *value);";function g_variant_get_boolean(value) bind(c)
g;g_variant_get_byte;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"guint8 g_variant_get_byte (GVariant *value);";function g_variant_get_byte(value) bind(c)
g;g_variant_get_bytestring;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"const gchar * g_variant_get_bytestring (GVariant *value);";function g_variant_get_bytestring(value) bind(c)
g;g_variant_get_bytestring_array;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"const gchar ** g_variant_get_bytestring_array (GVariant *value, gsize *length);";function g_variant_get_bytestring_array(value, length) bind(c)
g;g_variant_get_child_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_get_child_value (GVariant *value, gsize index_);";function g_variant_get_child_value(value, index_) bind(c)
g;g_variant_get_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gconstpointer g_variant_get_data (GVariant *value);";function g_variant_get_data(value) bind(c)
g;g_variant_get_data_as_bytes;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GBytes * g_variant_get_data_as_bytes (GVariant *value);";function g_variant_get_data_as_bytes(value) bind(c)
g;g_variant_get_double;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gdouble g_variant_get_double (GVariant *value);";function g_variant_get_double(value) bind(c)
g;g_variant_get_fixed_array;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gconstpointer g_variant_get_fixed_array (GVariant *value, gsize *n_elements, gsize element_size);";function g_variant_get_fixed_array(value, n_elements, element_size) bind(c)
g;g_variant_get_gtype;GLIB_DEPRECATED_FOR('G_TYPE_VARIANT');glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_variant_get_gtype (void) G_GNUC_CONST;";function g_variant_get_gtype() bind(c)
g;g_variant_get_handle;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gint32 g_variant_get_handle (GVariant *value);";function g_variant_get_handle(value) bind(c)
g;g_variant_get_int16;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gint16 g_variant_get_int16 (GVariant *value);";function g_variant_get_int16(value) bind(c)
g;g_variant_get_int32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gint32 g_variant_get_int32 (GVariant *value);";function g_variant_get_int32(value) bind(c)
g;g_variant_get_int64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gint64 g_variant_get_int64 (GVariant *value);";function g_variant_get_int64(value) bind(c)
g;g_variant_get_maybe;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_get_maybe (GVariant *value);";function g_variant_get_maybe(value) bind(c)
g;g_variant_get_normal_form;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_get_normal_form (GVariant *value);";function g_variant_get_normal_form(value) bind(c)
g;g_variant_get_objv;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"const gchar ** g_variant_get_objv (GVariant *value, gsize *length);";function g_variant_get_objv(value, length) bind(c)
g;g_variant_get_size;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gsize g_variant_get_size (GVariant *value);";function g_variant_get_size(value) bind(c)
g;g_variant_get_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"const gchar * g_variant_get_string (GVariant *value, gsize *length);";function g_variant_get_string(value, length) bind(c)
g;g_variant_get_strv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"const gchar ** g_variant_get_strv (GVariant *value, gsize *length);";function g_variant_get_strv(value, length) bind(c)
g;g_variant_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"const GVariantType * g_variant_get_type (GVariant *value);";function g_variant_get_type(value) bind(c)
g;g_variant_get_type_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"const gchar * g_variant_get_type_string (GVariant *value);";function g_variant_get_type_string(value) bind(c)
g;g_variant_get_uint16;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"guint16 g_variant_get_uint16 (GVariant *value);";function g_variant_get_uint16(value) bind(c)
g;g_variant_get_uint32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"guint32 g_variant_get_uint32 (GVariant *value);";function g_variant_get_uint32(value) bind(c)
g;g_variant_get_uint64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"guint64 g_variant_get_uint64 (GVariant *value);";function g_variant_get_uint64(value) bind(c)
g;g_variant_get_va;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_get_va (GVariant *value, const gchar *format_string, const gchar **endptr, va_list *app);";subroutine g_variant_get_va(value, format_string, endptr, app) bind(c)
g;g_variant_get_variant;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_get_variant (GVariant *value);";function g_variant_get_variant(value) bind(c)
g;g_variant_hash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"guint g_variant_hash (gconstpointer value);";function g_variant_hash(value) bind(c)
g;g_variant_is_container;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gboolean g_variant_is_container (GVariant *value);";function g_variant_is_container(value) bind(c)
g;g_variant_is_floating;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gboolean g_variant_is_floating (GVariant *value);";function g_variant_is_floating(value) bind(c)
g;g_variant_is_normal_form;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gboolean g_variant_is_normal_form (GVariant *value);";function g_variant_is_normal_form(value) bind(c)
g;g_variant_is_object_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gboolean g_variant_is_object_path (const gchar *string);";function g_variant_is_object_path(string) bind(c)
g;g_variant_is_of_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gboolean g_variant_is_of_type (GVariant *value, const GVariantType *type);";function g_variant_is_of_type(value, type) bind(c)
g;g_variant_is_signature;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gboolean g_variant_is_signature (const gchar *string);";function g_variant_is_signature(string) bind(c)
g;g_variant_iter_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariantIter * g_variant_iter_copy (GVariantIter *iter);";function g_variant_iter_copy(iter) bind(c)
g;g_variant_iter_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_iter_free (GVariantIter *iter);";subroutine g_variant_iter_free(iter) bind(c)
g;g_variant_iter_init;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gsize g_variant_iter_init (GVariantIter *iter, GVariant *value);";function g_variant_iter_init(iter, value) bind(c)
g;g_variant_iter_n_children;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gsize g_variant_iter_n_children (GVariantIter *iter);";function g_variant_iter_n_children(iter) bind(c)
g;g_variant_iter_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariantIter * g_variant_iter_new (GVariant *value);";function g_variant_iter_new(value) bind(c)
g;g_variant_iter_next_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_iter_next_value (GVariantIter *iter);";function g_variant_iter_next_value(iter) bind(c)
g;g_variant_lookup_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_lookup_value (GVariant *dictionary, const gchar *key, const GVariantType *expected_type);";function g_variant_lookup_value(dictionary, key, expected_type) bind(c)
g;g_variant_n_children;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gsize g_variant_n_children (GVariant *value);";function g_variant_n_children(value) bind(c)
g;g_variant_new_array;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_array (const GVariantType *child_type, GVariant * const *children, gsize n_children);";function g_variant_new_array(child_type, children, n_children) bind(c)
g;g_variant_new_boolean;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_boolean (gboolean value);";function g_variant_new_boolean(value) bind(c)
g;g_variant_new_byte;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_byte (guint8 value);";function g_variant_new_byte(value) bind(c)
g;g_variant_new_bytestring;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_bytestring (const gchar *string);";function g_variant_new_bytestring(string) bind(c)
g;g_variant_new_bytestring_array;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_bytestring_array (const gchar * const *strv, gssize length);";function g_variant_new_bytestring_array(strv, length) bind(c)
g;g_variant_new_dict_entry;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_dict_entry (GVariant *key, GVariant *value);";function g_variant_new_dict_entry(key, value) bind(c)
g;g_variant_new_double;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_double (gdouble value);";function g_variant_new_double(value) bind(c)
g;g_variant_new_fixed_array;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_fixed_array (const GVariantType *element_type, gconstpointer elements, gsize n_elements, gsize element_size);";function g_variant_new_fixed_array(element_type, elements, n_elements, element_size) bind(c)
g;g_variant_new_from_bytes;GLIB_AVAILABLE_IN_2_36;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_from_bytes (const GVariantType *type, GBytes *bytes, gboolean trusted);";function g_variant_new_from_bytes(type, bytes, trusted) bind(c)
g;g_variant_new_from_data;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_from_data (const GVariantType *type, gconstpointer data, gsize size, gboolean trusted, GDestroyNotify notify, gpointer user_data);";function g_variant_new_from_data(type, data, size, trusted, notify, user_data) bind(c)
g;g_variant_new_handle;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_handle (gint32 value);";function g_variant_new_handle(value) bind(c)
g;g_variant_new_int16;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_int16 (gint16 value);";function g_variant_new_int16(value) bind(c)
g;g_variant_new_int32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_int32 (gint32 value);";function g_variant_new_int32(value) bind(c)
g;g_variant_new_int64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_int64 (gint64 value);";function g_variant_new_int64(value) bind(c)
g;g_variant_new_maybe;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_maybe (const GVariantType *child_type, GVariant *child);";function g_variant_new_maybe(child_type, child) bind(c)
g;g_variant_new_object_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_object_path (const gchar *object_path);";function g_variant_new_object_path(object_path) bind(c)
g;g_variant_new_objv;GLIB_AVAILABLE_IN_2_30;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_objv (const gchar * const *strv, gssize length);";function g_variant_new_objv(strv, length) bind(c)
g;g_variant_new_parsed_va;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_parsed_va (const gchar *format, va_list *app);";function g_variant_new_parsed_va(format, app) bind(c)
g;g_variant_new_signature;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_signature (const gchar *signature);";function g_variant_new_signature(signature) bind(c)
g;g_variant_new_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_string (const gchar *string);";function g_variant_new_string(string) bind(c)
g;g_variant_new_strv;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_strv (const gchar * const *strv, gssize length);";function g_variant_new_strv(strv, length) bind(c)
g;g_variant_new_take_string;GLIB_AVAILABLE_IN_2_38;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_take_string (gchar *string);";function g_variant_new_take_string(string) bind(c)
g;g_variant_new_tuple;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_tuple (GVariant * const *children, gsize n_children);";function g_variant_new_tuple(children, n_children) bind(c)
g;g_variant_new_uint16;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_uint16 (guint16 value);";function g_variant_new_uint16(value) bind(c)
g;g_variant_new_uint32;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_uint32 (guint32 value);";function g_variant_new_uint32(value) bind(c)
g;g_variant_new_uint64;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_uint64 (guint64 value);";function g_variant_new_uint64(value) bind(c)
g;g_variant_new_va;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_va (const gchar *format_string, const gchar **endptr, va_list *app);";function g_variant_new_va(format_string, endptr, app) bind(c)
g;g_variant_new_variant;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_new_variant (GVariant *value);";function g_variant_new_variant(value) bind(c)
g;g_variant_parse;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_parse (const GVariantType *type, const gchar *text, const gchar *limit, const gchar **endptr, GError **error);";function g_variant_parse(type, text, limit, endptr, error) bind(c)
g;g_variant_parse_error_print_context;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gchar * g_variant_parse_error_print_context (GError *error, const gchar *source_str);";function g_variant_parse_error_print_context(error, source_str) bind(c)
g;g_variant_parse_error_quark;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GQuark g_variant_parse_error_quark (void);";function g_variant_parse_error_quark() bind(c)
g;g_variant_parser_get_error_quark;GLIB_DEPRECATED_IN_2_38_FOR(g_variant_parse_error_quark);glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GQuark g_variant_parser_get_error_quark (void);";function g_variant_parser_get_error_quark() bind(c)
g;g_variant_print;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"gchar * g_variant_print (GVariant *value, gboolean type_annotate);";function g_variant_print(value, type_annotate) bind(c)
g;g_variant_print_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GString * g_variant_print_string (GVariant *value, GString *string, gboolean type_annotate);";function g_variant_print_string(value, string, type_annotate) bind(c)
g;g_variant_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_ref (GVariant *value);";function g_variant_ref(value) bind(c)
g;g_variant_ref_sink;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_ref_sink (GVariant *value);";function g_variant_ref_sink(value) bind(c)
g;g_variant_store;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_store (GVariant *value, gpointer data);";subroutine g_variant_store(value, data) bind(c)
g;g_variant_take_ref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"GVariant * g_variant_take_ref (GVariant *value);";function g_variant_take_ref(value) bind(c)
g;g_variant_type_checked_;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"const GVariantType * g_variant_type_checked_ (const gchar *);";function g_variant_type_checked_() bind(c)
g;g_variant_type_copy;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"GVariantType * g_variant_type_copy (const GVariantType *type);";function g_variant_type_copy(type) bind(c)
g;g_variant_type_dup_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gchar * g_variant_type_dup_string (const GVariantType *type);";function g_variant_type_dup_string(type) bind(c)
g;g_variant_type_element;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"const GVariantType * g_variant_type_element (const GVariantType *type);";function g_variant_type_element(type) bind(c)
g;g_variant_type_equal;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gboolean g_variant_type_equal (gconstpointer type1, gconstpointer type2);";function g_variant_type_equal(type1, type2) bind(c)
g;g_variant_type_first;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"const GVariantType * g_variant_type_first (const GVariantType *type);";function g_variant_type_first(type) bind(c)
g;g_variant_type_free;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"void g_variant_type_free (GVariantType *type);";subroutine g_variant_type_free(type) bind(c)
g;g_variant_type_get_gtype;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/glib-types.h;"GType g_variant_type_get_gtype (void) G_GNUC_CONST;";function g_variant_type_get_gtype() bind(c)
g;g_variant_type_get_string_length;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gsize g_variant_type_get_string_length (const GVariantType *type);";function g_variant_type_get_string_length(type) bind(c)
g;g_variant_type_hash;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"guint g_variant_type_hash (gconstpointer type);";function g_variant_type_hash(type) bind(c)
g;g_variant_type_is_array;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gboolean g_variant_type_is_array (const GVariantType *type);";function g_variant_type_is_array(type) bind(c)
g;g_variant_type_is_basic;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gboolean g_variant_type_is_basic (const GVariantType *type);";function g_variant_type_is_basic(type) bind(c)
g;g_variant_type_is_container;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gboolean g_variant_type_is_container (const GVariantType *type);";function g_variant_type_is_container(type) bind(c)
g;g_variant_type_is_definite;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gboolean g_variant_type_is_definite (const GVariantType *type);";function g_variant_type_is_definite(type) bind(c)
g;g_variant_type_is_dict_entry;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gboolean g_variant_type_is_dict_entry (const GVariantType *type);";function g_variant_type_is_dict_entry(type) bind(c)
g;g_variant_type_is_maybe;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gboolean g_variant_type_is_maybe (const GVariantType *type);";function g_variant_type_is_maybe(type) bind(c)
g;g_variant_type_is_subtype_of;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gboolean g_variant_type_is_subtype_of (const GVariantType *type, const GVariantType *supertype);";function g_variant_type_is_subtype_of(type, supertype) bind(c)
g;g_variant_type_is_tuple;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gboolean g_variant_type_is_tuple (const GVariantType *type);";function g_variant_type_is_tuple(type) bind(c)
g;g_variant_type_is_variant;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gboolean g_variant_type_is_variant (const GVariantType *type);";function g_variant_type_is_variant(type) bind(c)
g;g_variant_type_key;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"const GVariantType * g_variant_type_key (const GVariantType *type);";function g_variant_type_key(type) bind(c)
g;g_variant_type_n_items;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gsize g_variant_type_n_items (const GVariantType *type);";function g_variant_type_n_items(type) bind(c)
g;g_variant_type_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"GVariantType * g_variant_type_new (const gchar *type_string);";function g_variant_type_new(type_string) bind(c)
g;g_variant_type_new_array;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"GVariantType * g_variant_type_new_array (const GVariantType *element);";function g_variant_type_new_array(element) bind(c)
g;g_variant_type_new_dict_entry;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"GVariantType * g_variant_type_new_dict_entry (const GVariantType *key, const GVariantType *value);";function g_variant_type_new_dict_entry(key, value) bind(c)
g;g_variant_type_new_maybe;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"GVariantType * g_variant_type_new_maybe (const GVariantType *element);";function g_variant_type_new_maybe(element) bind(c)
g;g_variant_type_new_tuple;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"GVariantType * g_variant_type_new_tuple (const GVariantType * const *items, gint length);";function g_variant_type_new_tuple(items, length) bind(c)
g;g_variant_type_next;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"const GVariantType * g_variant_type_next (const GVariantType *type);";function g_variant_type_next(type) bind(c)
g;g_variant_type_peek_string;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"const gchar * g_variant_type_peek_string (const GVariantType *type);";function g_variant_type_peek_string(type) bind(c)
g;g_variant_type_string_get_depth_;GLIB_AVAILABLE_IN_2_60;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gsize g_variant_type_string_get_depth_ (const gchar *type_string);";function g_variant_type_string_get_depth_(type_string) bind(c)
g;g_variant_type_string_is_valid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gboolean g_variant_type_string_is_valid (const gchar *type_string);";function g_variant_type_string_is_valid(type_string) bind(c)
g;g_variant_type_string_scan;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"gboolean g_variant_type_string_scan (const gchar *string, const gchar *limit, const gchar **endptr);";function g_variant_type_string_scan(string, limit, endptr) bind(c)
g;g_variant_type_value;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvarianttype.h;"const GVariantType * g_variant_type_value (const GVariantType *type);";function g_variant_type_value(type) bind(c)
g;g_variant_unref;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gvariant.h;"void g_variant_unref (GVariant *value);";subroutine g_variant_unref(value) bind(c)
g;g_vasprintf;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gprintf.h;"gint g_vasprintf (gchar **string, gchar const *format, va_list args) G_GNUC_PRINTF(2, 0);";function g_vasprintf(string, format, args) bind(c)
g;g_vfprintf;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gprintf.h;"gint g_vfprintf (FILE *file, gchar const *format, va_list args) G_GNUC_PRINTF(2, 0);";function g_vfprintf(file, format, args) bind(c)
g;g_vfs_get_default;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvfs.h;"GVfs * g_vfs_get_default (void);";function g_vfs_get_default() bind(c)
g;g_vfs_get_file_for_path;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvfs.h;"GFile * g_vfs_get_file_for_path (GVfs *vfs, const char *path);";function g_vfs_get_file_for_path(vfs, path) bind(c)
g;g_vfs_get_file_for_uri;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvfs.h;"GFile * g_vfs_get_file_for_uri (GVfs *vfs, const char *uri);";function g_vfs_get_file_for_uri(vfs, uri) bind(c)
g;g_vfs_get_local;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvfs.h;"GVfs * g_vfs_get_local (void);";function g_vfs_get_local() bind(c)
g;g_vfs_get_supported_uri_schemes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvfs.h;"const gchar* const * g_vfs_get_supported_uri_schemes (GVfs *vfs);";function g_vfs_get_supported_uri_schemes(vfs) bind(c)
g;g_vfs_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvfs.h;"GType g_vfs_get_type (void) G_GNUC_CONST;";function g_vfs_get_type() bind(c)
g;g_vfs_is_active;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvfs.h;"gboolean g_vfs_is_active (GVfs *vfs);";function g_vfs_is_active(vfs) bind(c)
g;g_vfs_parse_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvfs.h;"GFile * g_vfs_parse_name (GVfs *vfs, const char *parse_name);";function g_vfs_parse_name(vfs, parse_name) bind(c)
g;g_vfs_register_uri_scheme;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/gio/gvfs.h;"gboolean g_vfs_register_uri_scheme (GVfs *vfs, const char *scheme, GVfsFileLookupFunc uri_func, gpointer uri_data, GDestroyNotify uri_destroy, GVfsFileLookupFunc parse_name_func, gpointer parse_name_data, GDestroyNotify parse_name_destroy);";function g_vfs_register_uri_scheme(vfs, scheme, uri_func, uri_data, uri_destroy, parse_name_func, parse_name_data, parse_name_destroy) bind(c)
g;g_vfs_unregister_uri_scheme;GLIB_AVAILABLE_IN_2_50;glib-auto.f90;/usr/include/glib-2.0/gio/gvfs.h;"gboolean g_vfs_unregister_uri_scheme (GVfs *vfs, const char *scheme);";function g_vfs_unregister_uri_scheme(vfs, scheme) bind(c)
g;g_volume_can_eject;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"gboolean g_volume_can_eject (GVolume *volume);";function g_volume_can_eject(volume) bind(c)
g;g_volume_can_mount;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"gboolean g_volume_can_mount (GVolume *volume);";function g_volume_can_mount(volume) bind(c)
g;g_volume_eject;GLIB_DEPRECATED_FOR(g_volume_eject_with_operation);glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"void g_volume_eject (GVolume *volume, GMountUnmountFlags flags, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_volume_eject(volume, flags, cancellable, callback, user_data) bind(c)
g;g_volume_eject_finish;GLIB_DEPRECATED_FOR(g_volume_eject_with_operation_finish);glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"gboolean g_volume_eject_finish (GVolume *volume, GAsyncResult *result, GError **error);";function g_volume_eject_finish(volume, result, error) bind(c)
g;g_volume_eject_with_operation;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"void g_volume_eject_with_operation (GVolume *volume, GMountUnmountFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_volume_eject_with_operation(volume, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_volume_eject_with_operation_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"gboolean g_volume_eject_with_operation_finish (GVolume *volume, GAsyncResult *result, GError **error);";function g_volume_eject_with_operation_finish(volume, result, error) bind(c)
g;g_volume_enumerate_identifiers;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"char ** g_volume_enumerate_identifiers (GVolume *volume);";function g_volume_enumerate_identifiers(volume) bind(c)
g;g_volume_get_activation_root;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"GFile * g_volume_get_activation_root (GVolume *volume);";function g_volume_get_activation_root(volume) bind(c)
g;g_volume_get_drive;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"GDrive * g_volume_get_drive (GVolume *volume);";function g_volume_get_drive(volume) bind(c)
g;g_volume_get_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"GIcon * g_volume_get_icon (GVolume *volume);";function g_volume_get_icon(volume) bind(c)
g;g_volume_get_identifier;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"char * g_volume_get_identifier (GVolume *volume, const char *kind);";function g_volume_get_identifier(volume, kind) bind(c)
g;g_volume_get_mount;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"GMount * g_volume_get_mount (GVolume *volume);";function g_volume_get_mount(volume) bind(c)
g;g_volume_get_name;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"char * g_volume_get_name (GVolume *volume);";function g_volume_get_name(volume) bind(c)
g;g_volume_get_sort_key;GLIB_AVAILABLE_IN_2_32;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"const gchar *g_volume_get_sort_key (GVolume *volume);";function g_volume_get_sort_key(volume) bind(c)
g;g_volume_get_symbolic_icon;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"GIcon * g_volume_get_symbolic_icon (GVolume *volume);";function g_volume_get_symbolic_icon(volume) bind(c)
g;g_volume_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"GType g_volume_get_type (void) G_GNUC_CONST;";function g_volume_get_type() bind(c)
g;g_volume_get_uuid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"char * g_volume_get_uuid (GVolume *volume);";function g_volume_get_uuid(volume) bind(c)
g;g_volume_monitor_adopt_orphan_mount;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/gio/gvolumemonitor.h;"GVolume * g_volume_monitor_adopt_orphan_mount (GMount *mount);";function g_volume_monitor_adopt_orphan_mount(mount) bind(c)
g;g_volume_monitor_get;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolumemonitor.h;"GVolumeMonitor *g_volume_monitor_get (void);";function g_volume_monitor_get() bind(c)
g;g_volume_monitor_get_connected_drives;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolumemonitor.h;"GList * g_volume_monitor_get_connected_drives (GVolumeMonitor *volume_monitor);";function g_volume_monitor_get_connected_drives(volume_monitor) bind(c)
g;g_volume_monitor_get_mount_for_uuid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolumemonitor.h;"GMount * g_volume_monitor_get_mount_for_uuid (GVolumeMonitor *volume_monitor, const char *uuid);";function g_volume_monitor_get_mount_for_uuid(volume_monitor, uuid) bind(c)
g;g_volume_monitor_get_mounts;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolumemonitor.h;"GList * g_volume_monitor_get_mounts (GVolumeMonitor *volume_monitor);";function g_volume_monitor_get_mounts(volume_monitor) bind(c)
g;g_volume_monitor_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolumemonitor.h;"GType g_volume_monitor_get_type (void) G_GNUC_CONST;";function g_volume_monitor_get_type() bind(c)
g;g_volume_monitor_get_volume_for_uuid;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolumemonitor.h;"GVolume * g_volume_monitor_get_volume_for_uuid (GVolumeMonitor *volume_monitor, const char *uuid);";function g_volume_monitor_get_volume_for_uuid(volume_monitor, uuid) bind(c)
g;g_volume_monitor_get_volumes;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolumemonitor.h;"GList * g_volume_monitor_get_volumes (GVolumeMonitor *volume_monitor);";function g_volume_monitor_get_volumes(volume_monitor) bind(c)
g;g_volume_mount;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"void g_volume_mount (GVolume *volume, GMountMountFlags flags, GMountOperation *mount_operation, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine g_volume_mount(volume, flags, mount_operation, cancellable, callback, user_data) bind(c)
g;g_volume_mount_finish;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"gboolean g_volume_mount_finish (GVolume *volume, GAsyncResult *result, GError **error);";function g_volume_mount_finish(volume, result, error) bind(c)
g;g_volume_should_automount;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gvolume.h;"gboolean g_volume_should_automount (GVolume *volume);";function g_volume_should_automount(volume) bind(c)
g;g_vprintf;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gprintf.h;"gint g_vprintf (gchar const *format, va_list args) G_GNUC_PRINTF(1, 0);";function g_vprintf(format, args) bind(c)
g;g_vsnprintf;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"gint g_vsnprintf (gchar *string, gulong n, gchar const *format, va_list args) G_GNUC_PRINTF(3, 0);";function g_vsnprintf(string, n, format, args) bind(c)
g;g_vsprintf;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gprintf.h;"gint g_vsprintf (gchar *string, gchar const *format, va_list args) G_GNUC_PRINTF(2, 0);";function g_vsprintf(string, format, args) bind(c)
g;g_warn_message;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gmessages.h;"void g_warn_message (const char *domain, const char *file, int line, const char *func, const char *warnexpr) G_ANALYZER_NORETURN;";subroutine g_warn_message(domain, file, line, func, warnexpr) bind(c)
g;g_weak_ref_clear;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_weak_ref_clear (GWeakRef *weak_ref);";subroutine g_weak_ref_clear(weak_ref) bind(c)
g;g_weak_ref_get;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"gpointer g_weak_ref_get (GWeakRef *weak_ref);";function g_weak_ref_get(weak_ref) bind(c)
g;g_weak_ref_init;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_weak_ref_init (GWeakRef *weak_ref, gpointer object);";subroutine g_weak_ref_init(weak_ref, object) bind(c)
g;g_weak_ref_set;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gobject/gobject.h;"void g_weak_ref_set (GWeakRef *weak_ref, gpointer object);";subroutine g_weak_ref_set(weak_ref, object) bind(c)
g;g_win32_check_windows_version;GLIB_AVAILABLE_IN_2_44;glib-auto.f90;/usr/include/glib-2.0/glib/gwin32.h;"gboolean g_win32_check_windows_version (const gint major, const gint minor, const gint spver, const GWin32OSType os_type);";function g_win32_check_windows_version(major, minor, spver, os_type) bind(c)
g;g_win32_error_message;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gwin32.h;"gchar* g_win32_error_message (gint error);";function g_win32_error_message(error) bind(c)
g;g_win32_ftruncate;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gwin32.h;"gint g_win32_ftruncate (gint f, guint size);";function g_win32_ftruncate(f, size) bind(c)
g;g_win32_get_command_line;GLIB_AVAILABLE_IN_2_40;glib-auto.f90;/usr/include/glib-2.0/glib/gwin32.h;"gchar ** g_win32_get_command_line (void);";function g_win32_get_command_line() bind(c)
g;g_win32_get_package_installation_directory;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/gwin32.h;"gchar* g_win32_get_package_installation_directory (const gchar *package, const gchar *dll_name);";function g_win32_get_package_installation_directory(package, dll_name) bind(c)
g;g_win32_get_package_installation_directory_of_module;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gwin32.h;"gchar* g_win32_get_package_installation_directory_of_module (gpointer hmodule);";function g_win32_get_package_installation_directory_of_module(hmodule) bind(c)
g;g_win32_get_package_installation_subdirectory;GLIB_DEPRECATED;glib-auto.f90;/usr/include/glib-2.0/glib/gwin32.h;"gchar* g_win32_get_package_installation_subdirectory (const gchar *package, const gchar *dll_name, const gchar *subdir);";function g_win32_get_package_installation_subdirectory(package, dll_name, subdir) bind(c)
g;g_win32_get_system_data_dirs_for_module;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gutils.h;"const gchar * const * g_win32_get_system_data_dirs_for_module (void (*address_of_function)(void));";function g_win32_get_system_data_dirs_for_module() bind(c)
g;g_win32_get_windows_version;GLIB_DEPRECATED_IN_2_44_FOR(g_win32_check_windows_version);glib-auto.f90;/usr/include/glib-2.0/glib/gwin32.h;"guint g_win32_get_windows_version (void);";function g_win32_get_windows_version() bind(c)
g;g_win32_getlocale;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gwin32.h;"gchar* g_win32_getlocale (void);";function g_win32_getlocale() bind(c)
g;g_win32_locale_filename_from_utf8;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gwin32.h;"gchar* g_win32_locale_filename_from_utf8 (const gchar *utf8filename);";function g_win32_locale_filename_from_utf8(utf8filename) bind(c)
g;g_zlib_compressor_get_file_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gzlibcompressor.h;"GFileInfo *g_zlib_compressor_get_file_info (GZlibCompressor *compressor);";function g_zlib_compressor_get_file_info(compressor) bind(c)
g;g_zlib_compressor_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gzlibcompressor.h;"GType g_zlib_compressor_get_type (void) G_GNUC_CONST;";function g_zlib_compressor_get_type() bind(c)
g;g_zlib_compressor_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gzlibcompressor.h;"GZlibCompressor *g_zlib_compressor_new (GZlibCompressorFormat format, int level);";function g_zlib_compressor_new(format, level) bind(c)
g;g_zlib_compressor_set_file_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gzlibcompressor.h;"void g_zlib_compressor_set_file_info (GZlibCompressor *compressor, GFileInfo *file_info);";subroutine g_zlib_compressor_set_file_info(compressor, file_info) bind(c)
g;g_zlib_decompressor_get_file_info;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gzlibdecompressor.h;"GFileInfo *g_zlib_decompressor_get_file_info (GZlibDecompressor *decompressor);";function g_zlib_decompressor_get_file_info(decompressor) bind(c)
g;g_zlib_decompressor_get_type;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gzlibdecompressor.h;"GType g_zlib_decompressor_get_type (void) G_GNUC_CONST;";function g_zlib_decompressor_get_type() bind(c)
g;g_zlib_decompressor_new;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/gio/gzlibdecompressor.h;"GZlibDecompressor *g_zlib_decompressor_new (GZlibCompressorFormat format);";function g_zlib_decompressor_new(format) bind(c)
g;glib_check_version;GLIB_AVAILABLE_IN_ALL;glib-auto.f90;/usr/include/glib-2.0/glib/gversion.h;"const gchar * glib_check_version (guint required_major, guint required_minor, guint required_micro);";function glib_check_version(required_major, required_minor, required_micro) bind(c)
g;guint64;;glib-auto.f90;/usr/include/glib-2.0/glib/deprecated/gthread.h;"guint64 (*g_thread_gettime) (void);";function guint64() bind(c)
gdk;gdk_app_launch_context_get_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkapplaunchcontext.h;"GdkDisplay * gdk_app_launch_context_get_display (GdkAppLaunchContext *context);";function gdk_app_launch_context_get_display(context) bind(c)
gdk;gdk_app_launch_context_set_desktop;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkapplaunchcontext.h;"void gdk_app_launch_context_set_desktop (GdkAppLaunchContext *context, int desktop);";subroutine gdk_app_launch_context_set_desktop(context, desktop) bind(c)
gdk;gdk_app_launch_context_set_icon;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkapplaunchcontext.h;"void gdk_app_launch_context_set_icon (GdkAppLaunchContext *context, GIcon *icon);";subroutine gdk_app_launch_context_set_icon(context, icon) bind(c)
gdk;gdk_app_launch_context_set_icon_name;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkapplaunchcontext.h;"void gdk_app_launch_context_set_icon_name (GdkAppLaunchContext *context, const char *icon_name);";subroutine gdk_app_launch_context_set_icon_name(context, icon_name) bind(c)
gdk;gdk_app_launch_context_set_timestamp;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkapplaunchcontext.h;"void gdk_app_launch_context_set_timestamp (GdkAppLaunchContext *context, guint32 timestamp);";subroutine gdk_app_launch_context_set_timestamp(context, timestamp) bind(c)
gdk;gdk_broadway_cursor_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/broadway/gdkbroadwaycursor.h;"GType gdk_broadway_cursor_get_type (void);";function gdk_broadway_cursor_get_type() bind(c)
gdk;gdk_broadway_display_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/broadway/gdkbroadwaydisplay.h;"GType gdk_broadway_display_get_type (void);";function gdk_broadway_display_get_type() bind(c)
gdk;gdk_broadway_display_hide_keyboard;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/broadway/gdkbroadwaydisplay.h;"void gdk_broadway_display_hide_keyboard (GdkBroadwayDisplay *display);";subroutine gdk_broadway_display_hide_keyboard(display) bind(c)
gdk;gdk_broadway_display_show_keyboard;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/broadway/gdkbroadwaydisplay.h;"void gdk_broadway_display_show_keyboard (GdkBroadwayDisplay *display);";subroutine gdk_broadway_display_show_keyboard(display) bind(c)
gdk;gdk_broadway_monitor_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/broadway/gdkbroadwaymonitor.h;"GType gdk_broadway_monitor_get_type (void) G_GNUC_CONST;";function gdk_broadway_monitor_get_type() bind(c)
gdk;gdk_broadway_surface_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/broadway/gdkbroadwaysurface.h;"GType gdk_broadway_surface_get_type (void);";function gdk_broadway_surface_get_type() bind(c)
gdk;gdk_button_event_get_button;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"guint gdk_button_event_get_button (GdkEvent *event);";function gdk_button_event_get_button(event) bind(c)
gdk;gdk_button_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_button_event_get_type (void) G_GNUC_CONST;";function gdk_button_event_get_type() bind(c)
gdk;gdk_cairo_context_cairo_create;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcairocontext.h;"cairo_t * gdk_cairo_context_cairo_create (GdkCairoContext *self);";function gdk_cairo_context_cairo_create(self) bind(c)
gdk;gdk_cairo_context_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcairocontext.h;"GType gdk_cairo_context_get_type (void) G_GNUC_CONST;";function gdk_cairo_context_get_type() bind(c)
gdk;gdk_cairo_draw_from_gl;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcairo.h;"void gdk_cairo_draw_from_gl (cairo_t *cr, GdkSurface *surface, int source, int source_type, int buffer_scale, int x, int y, int width, int height);";subroutine gdk_cairo_draw_from_gl(cr, surface, source, source_type, buffer_scale, x, y, width, height) bind(c)
gdk;gdk_cairo_rectangle;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcairo.h;"void gdk_cairo_rectangle (cairo_t *cr, const GdkRectangle *rectangle);";subroutine gdk_cairo_rectangle(cr, rectangle) bind(c)
gdk;gdk_cairo_region;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcairo.h;"void gdk_cairo_region (cairo_t *cr, const cairo_region_t *region);";subroutine gdk_cairo_region(cr, region) bind(c)
gdk;gdk_cairo_region_create_from_surface;;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcairo.h;"cairo_region_t * gdk_cairo_region_create_from_surface (cairo_surface_t *surface);";function gdk_cairo_region_create_from_surface(surface) bind(c)
gdk;gdk_cairo_set_source_pixbuf;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcairo.h;"void gdk_cairo_set_source_pixbuf (cairo_t *cr, const GdkPixbuf *pixbuf, double pixbuf_x, double pixbuf_y);";subroutine gdk_cairo_set_source_pixbuf(cr, pixbuf, pixbuf_x, pixbuf_y) bind(c)
gdk;gdk_cairo_set_source_rgba;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcairo.h;"void gdk_cairo_set_source_rgba (cairo_t *cr, const GdkRGBA *rgba);";subroutine gdk_cairo_set_source_rgba(cr, rgba) bind(c)
gdk;gdk_clipboard_get_content;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"GdkContentProvider * gdk_clipboard_get_content (GdkClipboard *clipboard);";function gdk_clipboard_get_content(clipboard) bind(c)
gdk;gdk_clipboard_get_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"GdkDisplay * gdk_clipboard_get_display (GdkClipboard *clipboard);";function gdk_clipboard_get_display(clipboard) bind(c)
gdk;gdk_clipboard_get_formats;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"GdkContentFormats * gdk_clipboard_get_formats (GdkClipboard *clipboard);";function gdk_clipboard_get_formats(clipboard) bind(c)
gdk;gdk_clipboard_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"GType gdk_clipboard_get_type (void) G_GNUC_CONST;";function gdk_clipboard_get_type() bind(c)
gdk;gdk_clipboard_is_local;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"gboolean gdk_clipboard_is_local (GdkClipboard *clipboard);";function gdk_clipboard_is_local(clipboard) bind(c)
gdk;gdk_clipboard_read_async;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"void gdk_clipboard_read_async (GdkClipboard *clipboard, const char **mime_types, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_clipboard_read_async(clipboard, mime_types, io_priority, cancellable, callback, user_data) bind(c)
gdk;gdk_clipboard_read_finish;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"GInputStream * gdk_clipboard_read_finish (GdkClipboard *clipboard, GAsyncResult *result, const char **out_mime_type, GError **error);";function gdk_clipboard_read_finish(clipboard, result, out_mime_type, error) bind(c)
gdk;gdk_clipboard_read_text_async;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"void gdk_clipboard_read_text_async (GdkClipboard *clipboard, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_clipboard_read_text_async(clipboard, cancellable, callback, user_data) bind(c)
gdk;gdk_clipboard_read_text_finish;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"char * gdk_clipboard_read_text_finish (GdkClipboard *clipboard, GAsyncResult *result, GError **error);";function gdk_clipboard_read_text_finish(clipboard, result, error) bind(c)
gdk;gdk_clipboard_read_texture_async;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"void gdk_clipboard_read_texture_async (GdkClipboard *clipboard, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_clipboard_read_texture_async(clipboard, cancellable, callback, user_data) bind(c)
gdk;gdk_clipboard_read_texture_finish;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"GdkTexture * gdk_clipboard_read_texture_finish (GdkClipboard *clipboard, GAsyncResult *result, GError **error);";function gdk_clipboard_read_texture_finish(clipboard, result, error) bind(c)
gdk;gdk_clipboard_read_value_async;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"void gdk_clipboard_read_value_async (GdkClipboard *clipboard, GType type, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_clipboard_read_value_async(clipboard, type, io_priority, cancellable, callback, user_data) bind(c)
gdk;gdk_clipboard_read_value_finish;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"const GValue * gdk_clipboard_read_value_finish (GdkClipboard *clipboard, GAsyncResult *result, GError **error);";function gdk_clipboard_read_value_finish(clipboard, result, error) bind(c)
gdk;gdk_clipboard_set_content;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"gboolean gdk_clipboard_set_content (GdkClipboard *clipboard, GdkContentProvider *provider);";function gdk_clipboard_set_content(clipboard, provider) bind(c)
gdk;gdk_clipboard_set_text;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"void gdk_clipboard_set_text (GdkClipboard *clipboard, const char *text);";subroutine gdk_clipboard_set_text(clipboard, text) bind(c)
gdk;gdk_clipboard_set_texture;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"void gdk_clipboard_set_texture (GdkClipboard *clipboard, GdkTexture *texture);";subroutine gdk_clipboard_set_texture(clipboard, texture) bind(c)
gdk;gdk_clipboard_set_valist;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"void gdk_clipboard_set_valist (GdkClipboard *clipboard, GType type, va_list args);";subroutine gdk_clipboard_set_valist(clipboard, type, args) bind(c)
gdk;gdk_clipboard_set_value;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"void gdk_clipboard_set_value (GdkClipboard *clipboard, const GValue *value);";subroutine gdk_clipboard_set_value(clipboard, value) bind(c)
gdk;gdk_clipboard_store_async;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"void gdk_clipboard_store_async (GdkClipboard *clipboard, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_clipboard_store_async(clipboard, io_priority, cancellable, callback, user_data) bind(c)
gdk;gdk_clipboard_store_finish;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkclipboard.h;"gboolean gdk_clipboard_store_finish (GdkClipboard *clipboard, GAsyncResult *result, GError **error);";function gdk_clipboard_store_finish(clipboard, result, error) bind(c)
gdk;gdk_content_deserialize_async;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"void gdk_content_deserialize_async (GInputStream *stream, const char *mime_type, GType type, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_content_deserialize_async(stream, mime_type, type, io_priority, cancellable, callback, user_data) bind(c)
gdk;gdk_content_deserialize_finish;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"gboolean gdk_content_deserialize_finish (GAsyncResult *result, GValue *value, GError **error);";function gdk_content_deserialize_finish(result, value, error) bind(c)
gdk;gdk_content_deserializer_get_cancellable;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"GCancellable * gdk_content_deserializer_get_cancellable (GdkContentDeserializer *deserializer);";function gdk_content_deserializer_get_cancellable(deserializer) bind(c)
gdk;gdk_content_deserializer_get_gtype;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"GType gdk_content_deserializer_get_gtype (GdkContentDeserializer *deserializer);";function gdk_content_deserializer_get_gtype(deserializer) bind(c)
gdk;gdk_content_deserializer_get_input_stream;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"GInputStream * gdk_content_deserializer_get_input_stream (GdkContentDeserializer *deserializer);";function gdk_content_deserializer_get_input_stream(deserializer) bind(c)
gdk;gdk_content_deserializer_get_mime_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"const char * gdk_content_deserializer_get_mime_type (GdkContentDeserializer *deserializer);";function gdk_content_deserializer_get_mime_type(deserializer) bind(c)
gdk;gdk_content_deserializer_get_priority;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"int gdk_content_deserializer_get_priority (GdkContentDeserializer *deserializer);";function gdk_content_deserializer_get_priority(deserializer) bind(c)
gdk;gdk_content_deserializer_get_task_data;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"gpointer gdk_content_deserializer_get_task_data (GdkContentDeserializer *deserializer);";function gdk_content_deserializer_get_task_data(deserializer) bind(c)
gdk;gdk_content_deserializer_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"GType gdk_content_deserializer_get_type (void) G_GNUC_CONST;";function gdk_content_deserializer_get_type() bind(c)
gdk;gdk_content_deserializer_get_user_data;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"gpointer gdk_content_deserializer_get_user_data (GdkContentDeserializer *deserializer);";function gdk_content_deserializer_get_user_data(deserializer) bind(c)
gdk;gdk_content_deserializer_get_value;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"GValue * gdk_content_deserializer_get_value (GdkContentDeserializer *deserializer);";function gdk_content_deserializer_get_value(deserializer) bind(c)
gdk;gdk_content_deserializer_return_error;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"void gdk_content_deserializer_return_error (GdkContentDeserializer *deserializer, GError *error);";subroutine gdk_content_deserializer_return_error(deserializer, error) bind(c)
gdk;gdk_content_deserializer_return_success;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"void gdk_content_deserializer_return_success (GdkContentDeserializer *deserializer);";subroutine gdk_content_deserializer_return_success(deserializer) bind(c)
gdk;gdk_content_deserializer_set_task_data;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"void gdk_content_deserializer_set_task_data (GdkContentDeserializer *deserializer, gpointer data, GDestroyNotify notify);";subroutine gdk_content_deserializer_set_task_data(deserializer, data, notify) bind(c)
gdk;gdk_content_formats_builder_add_formats;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"void gdk_content_formats_builder_add_formats (GdkContentFormatsBuilder *builder, const GdkContentFormats *formats);";subroutine gdk_content_formats_builder_add_formats(builder, formats) bind(c)
gdk;gdk_content_formats_builder_add_gtype;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"void gdk_content_formats_builder_add_gtype (GdkContentFormatsBuilder *builder, GType type);";subroutine gdk_content_formats_builder_add_gtype(builder, type) bind(c)
gdk;gdk_content_formats_builder_add_mime_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"void gdk_content_formats_builder_add_mime_type(GdkContentFormatsBuilder *builder, const char *mime_type);";subroutine gdk_content_formats_builder_add_mime_type(builder, mime_type) bind(c)
gdk;gdk_content_formats_builder_free_to_formats;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"GdkContentFormats * gdk_content_formats_builder_free_to_formats (GdkContentFormatsBuilder *builder) G_GNUC_WARN_UNUSED_RESULT;";function gdk_content_formats_builder_free_to_formats(builder) bind(c)
gdk;gdk_content_formats_builder_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"GType gdk_content_formats_builder_get_type (void) G_GNUC_CONST;";function gdk_content_formats_builder_get_type() bind(c)
gdk;gdk_content_formats_builder_new;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"GdkContentFormatsBuilder *gdk_content_formats_builder_new (void);";function gdk_content_formats_builder_new() bind(c)
gdk;gdk_content_formats_builder_ref;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"GdkContentFormatsBuilder *gdk_content_formats_builder_ref (GdkContentFormatsBuilder *builder);";function gdk_content_formats_builder_ref(builder) bind(c)
gdk;gdk_content_formats_builder_to_formats;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"GdkContentFormats * gdk_content_formats_builder_to_formats (GdkContentFormatsBuilder *builder) G_GNUC_WARN_UNUSED_RESULT;";function gdk_content_formats_builder_to_formats(builder) bind(c)
gdk;gdk_content_formats_builder_unref;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"void gdk_content_formats_builder_unref (GdkContentFormatsBuilder *builder);";subroutine gdk_content_formats_builder_unref(builder) bind(c)
gdk;gdk_content_formats_contain_gtype;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"gboolean gdk_content_formats_contain_gtype (const GdkContentFormats *formats, GType type);";function gdk_content_formats_contain_gtype(formats, type) bind(c)
gdk;gdk_content_formats_contain_mime_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"gboolean gdk_content_formats_contain_mime_type (const GdkContentFormats *formats, const char *mime_type);";function gdk_content_formats_contain_mime_type(formats, mime_type) bind(c)
gdk;gdk_content_formats_get_gtypes;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"const GType * gdk_content_formats_get_gtypes (const GdkContentFormats *formats, gsize *n_gtypes);";function gdk_content_formats_get_gtypes(formats, n_gtypes) bind(c)
gdk;gdk_content_formats_get_mime_types;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"const char * const * gdk_content_formats_get_mime_types (const GdkContentFormats *formats, gsize *n_mime_types);";function gdk_content_formats_get_mime_types(formats, n_mime_types) bind(c)
gdk;gdk_content_formats_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"GType gdk_content_formats_get_type (void) G_GNUC_CONST;";function gdk_content_formats_get_type() bind(c)
gdk;gdk_content_formats_match;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"gboolean gdk_content_formats_match (const GdkContentFormats *first, const GdkContentFormats *second);";function gdk_content_formats_match(first, second) bind(c)
gdk;gdk_content_formats_match_gtype;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"GType gdk_content_formats_match_gtype (const GdkContentFormats *first, const GdkContentFormats *second);";function gdk_content_formats_match_gtype(first, second) bind(c)
gdk;gdk_content_formats_match_mime_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"const char * gdk_content_formats_match_mime_type (const GdkContentFormats *first, const GdkContentFormats *second);";function gdk_content_formats_match_mime_type(first, second) bind(c)
gdk;gdk_content_formats_new;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"GdkContentFormats * gdk_content_formats_new (const char **mime_types, guint n_mime_types);";function gdk_content_formats_new(mime_types, n_mime_types) bind(c)
gdk;gdk_content_formats_new_for_gtype;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"GdkContentFormats * gdk_content_formats_new_for_gtype (GType type);";function gdk_content_formats_new_for_gtype(type) bind(c)
gdk;gdk_content_formats_print;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"void gdk_content_formats_print (GdkContentFormats *formats, GString *string);";subroutine gdk_content_formats_print(formats, string) bind(c)
gdk;gdk_content_formats_ref;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"GdkContentFormats * gdk_content_formats_ref (GdkContentFormats *formats);";function gdk_content_formats_ref(formats) bind(c)
gdk;gdk_content_formats_to_string;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"char * gdk_content_formats_to_string (GdkContentFormats *formats);";function gdk_content_formats_to_string(formats) bind(c)
gdk;gdk_content_formats_union;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"GdkContentFormats * gdk_content_formats_union (GdkContentFormats *first, const GdkContentFormats *second) G_GNUC_WARN_UNUSED_RESULT;";function gdk_content_formats_union(first, second) bind(c)
gdk;gdk_content_formats_union_deserialize_gtypes;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"GdkContentFormats * gdk_content_formats_union_deserialize_gtypes (GdkContentFormats *formats);";function gdk_content_formats_union_deserialize_gtypes(formats) bind(c)
gdk;gdk_content_formats_union_deserialize_mime_types;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"GdkContentFormats * gdk_content_formats_union_deserialize_mime_types(GdkContentFormats *formats);";function gdk_content_formats_union_deserialize_mime_types(formats) bind(c)
gdk;gdk_content_formats_union_serialize_gtypes;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"GdkContentFormats * gdk_content_formats_union_serialize_gtypes (GdkContentFormats *formats);";function gdk_content_formats_union_serialize_gtypes(formats) bind(c)
gdk;gdk_content_formats_union_serialize_mime_types;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"GdkContentFormats * gdk_content_formats_union_serialize_mime_types (GdkContentFormats *formats);";function gdk_content_formats_union_serialize_mime_types(formats) bind(c)
gdk;gdk_content_formats_unref;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"void gdk_content_formats_unref (GdkContentFormats *formats);";subroutine gdk_content_formats_unref(formats) bind(c)
gdk;gdk_content_provider_content_changed;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentprovider.h;"void gdk_content_provider_content_changed (GdkContentProvider *provider);";subroutine gdk_content_provider_content_changed(provider) bind(c)
gdk;gdk_content_provider_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentprovider.h;"GType gdk_content_provider_get_type (void) G_GNUC_CONST;";function gdk_content_provider_get_type() bind(c)
gdk;gdk_content_provider_get_value;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentprovider.h;"gboolean gdk_content_provider_get_value (GdkContentProvider *provider, GValue *value, GError **error);";function gdk_content_provider_get_value(provider, value, error) bind(c)
gdk;gdk_content_provider_new_for_bytes;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentproviderimpl.h;"GdkContentProvider * gdk_content_provider_new_for_bytes (const char *mime_type, GBytes *bytes);";function gdk_content_provider_new_for_bytes(mime_type, bytes) bind(c)
gdk;gdk_content_provider_new_for_value;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentproviderimpl.h;"GdkContentProvider * gdk_content_provider_new_for_value (const GValue *value);";function gdk_content_provider_new_for_value(value) bind(c)
gdk;gdk_content_provider_new_union;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentproviderimpl.h;"GdkContentProvider * gdk_content_provider_new_union (GdkContentProvider **providers, gsize n_providers);";function gdk_content_provider_new_union(providers, n_providers) bind(c)
gdk;gdk_content_provider_ref_formats;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentprovider.h;"GdkContentFormats * gdk_content_provider_ref_formats (GdkContentProvider *provider);";function gdk_content_provider_ref_formats(provider) bind(c)
gdk;gdk_content_provider_ref_storable_formats;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentprovider.h;"GdkContentFormats * gdk_content_provider_ref_storable_formats (GdkContentProvider *provider);";function gdk_content_provider_ref_storable_formats(provider) bind(c)
gdk;gdk_content_provider_write_mime_type_async;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentprovider.h;"void gdk_content_provider_write_mime_type_async (GdkContentProvider *provider, const char *mime_type, GOutputStream *stream, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_content_provider_write_mime_type_async(provider, mime_type, stream, io_priority, cancellable, callback, user_data) bind(c)
gdk;gdk_content_provider_write_mime_type_finish;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentprovider.h;"gboolean gdk_content_provider_write_mime_type_finish (GdkContentProvider *provider, GAsyncResult *result, GError **error);";function gdk_content_provider_write_mime_type_finish(provider, result, error) bind(c)
gdk;gdk_content_register_deserializer;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentdeserializer.h;"void gdk_content_register_deserializer (const char *mime_type, GType type, GdkContentDeserializeFunc deserialize, gpointer data, GDestroyNotify notify);";subroutine gdk_content_register_deserializer(mime_type, type, deserialize, data, notify) bind(c)
gdk;gdk_content_register_serializer;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"void gdk_content_register_serializer (GType type, const char *mime_type, GdkContentSerializeFunc serialize, gpointer data, GDestroyNotify notify);";subroutine gdk_content_register_serializer(type, mime_type, serialize, data, notify) bind(c)
gdk;gdk_content_serialize_async;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"void gdk_content_serialize_async (GOutputStream *stream, const char *mime_type, const GValue *value, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_content_serialize_async(stream, mime_type, value, io_priority, cancellable, callback, user_data) bind(c)
gdk;gdk_content_serialize_finish;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"gboolean gdk_content_serialize_finish (GAsyncResult *result, GError **error);";function gdk_content_serialize_finish(result, error) bind(c)
gdk;gdk_content_serializer_get_cancellable;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"GCancellable * gdk_content_serializer_get_cancellable (GdkContentSerializer *serializer);";function gdk_content_serializer_get_cancellable(serializer) bind(c)
gdk;gdk_content_serializer_get_gtype;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"GType gdk_content_serializer_get_gtype (GdkContentSerializer *serializer);";function gdk_content_serializer_get_gtype(serializer) bind(c)
gdk;gdk_content_serializer_get_mime_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"const char * gdk_content_serializer_get_mime_type (GdkContentSerializer *serializer);";function gdk_content_serializer_get_mime_type(serializer) bind(c)
gdk;gdk_content_serializer_get_output_stream;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"GOutputStream * gdk_content_serializer_get_output_stream (GdkContentSerializer *serializer);";function gdk_content_serializer_get_output_stream(serializer) bind(c)
gdk;gdk_content_serializer_get_priority;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"int gdk_content_serializer_get_priority (GdkContentSerializer *serializer);";function gdk_content_serializer_get_priority(serializer) bind(c)
gdk;gdk_content_serializer_get_task_data;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"gpointer gdk_content_serializer_get_task_data (GdkContentSerializer *serializer);";function gdk_content_serializer_get_task_data(serializer) bind(c)
gdk;gdk_content_serializer_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"GType gdk_content_serializer_get_type (void) G_GNUC_CONST;";function gdk_content_serializer_get_type() bind(c)
gdk;gdk_content_serializer_get_user_data;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"gpointer gdk_content_serializer_get_user_data (GdkContentSerializer *serializer);";function gdk_content_serializer_get_user_data(serializer) bind(c)
gdk;gdk_content_serializer_get_value;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"const GValue * gdk_content_serializer_get_value (GdkContentSerializer *serializer);";function gdk_content_serializer_get_value(serializer) bind(c)
gdk;gdk_content_serializer_return_error;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"void gdk_content_serializer_return_error (GdkContentSerializer *serializer, GError *error);";subroutine gdk_content_serializer_return_error(serializer, error) bind(c)
gdk;gdk_content_serializer_return_success;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"void gdk_content_serializer_return_success (GdkContentSerializer *serializer);";subroutine gdk_content_serializer_return_success(serializer) bind(c)
gdk;gdk_content_serializer_set_task_data;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentserializer.h;"void gdk_content_serializer_set_task_data (GdkContentSerializer *serializer, gpointer data, GDestroyNotify notify);";subroutine gdk_content_serializer_set_task_data(serializer, data, notify) bind(c)
gdk;gdk_crossing_event_get_detail;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkNotifyType gdk_crossing_event_get_detail (GdkEvent *event);";function gdk_crossing_event_get_detail(event) bind(c)
gdk;gdk_crossing_event_get_focus;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_crossing_event_get_focus (GdkEvent *event);";function gdk_crossing_event_get_focus(event) bind(c)
gdk;gdk_crossing_event_get_mode;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkCrossingMode gdk_crossing_event_get_mode (GdkEvent *event);";function gdk_crossing_event_get_mode(event) bind(c)
gdk;gdk_crossing_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_crossing_event_get_type (void) G_GNUC_CONST;";function gdk_crossing_event_get_type() bind(c)
gdk;gdk_cursor_get_fallback;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcursor.h;"GdkCursor * gdk_cursor_get_fallback (GdkCursor *cursor);";function gdk_cursor_get_fallback(cursor) bind(c)
gdk;gdk_cursor_get_hotspot_x;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcursor.h;"int gdk_cursor_get_hotspot_x (GdkCursor *cursor);";function gdk_cursor_get_hotspot_x(cursor) bind(c)
gdk;gdk_cursor_get_hotspot_y;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcursor.h;"int gdk_cursor_get_hotspot_y (GdkCursor *cursor);";function gdk_cursor_get_hotspot_y(cursor) bind(c)
gdk;gdk_cursor_get_name;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcursor.h;"const char *gdk_cursor_get_name (GdkCursor *cursor);";function gdk_cursor_get_name(cursor) bind(c)
gdk;gdk_cursor_get_texture;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcursor.h;"GdkTexture *gdk_cursor_get_texture (GdkCursor *cursor);";function gdk_cursor_get_texture(cursor) bind(c)
gdk;gdk_cursor_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcursor.h;"GType gdk_cursor_get_type (void) G_GNUC_CONST;";function gdk_cursor_get_type() bind(c)
gdk;gdk_cursor_new_from_name;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcursor.h;"GdkCursor* gdk_cursor_new_from_name (const char *name, GdkCursor *fallback);";function gdk_cursor_new_from_name(name, fallback) bind(c)
gdk;gdk_cursor_new_from_texture;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcursor.h;"GdkCursor* gdk_cursor_new_from_texture (GdkTexture *texture, int hotspot_x, int hotspot_y, GdkCursor *fallback);";function gdk_cursor_new_from_texture(texture, hotspot_x, hotspot_y, fallback) bind(c)
gdk;gdk_delete_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_delete_event_get_type (void) G_GNUC_CONST;";function gdk_delete_event_get_type() bind(c)
gdk;gdk_device_get_caps_lock_state;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"gboolean gdk_device_get_caps_lock_state (GdkDevice *device);";function gdk_device_get_caps_lock_state(device) bind(c)
gdk;gdk_device_get_device_tool;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"GdkDeviceTool * gdk_device_get_device_tool (GdkDevice *device);";function gdk_device_get_device_tool(device) bind(c)
gdk;gdk_device_get_direction;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"PangoDirection gdk_device_get_direction (GdkDevice *device);";function gdk_device_get_direction(device) bind(c)
gdk;gdk_device_get_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"GdkDisplay * gdk_device_get_display (GdkDevice *device);";function gdk_device_get_display(device) bind(c)
gdk;gdk_device_get_has_cursor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"gboolean gdk_device_get_has_cursor (GdkDevice *device);";function gdk_device_get_has_cursor(device) bind(c)
gdk;gdk_device_get_modifier_state;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"GdkModifierType gdk_device_get_modifier_state (GdkDevice *device);";function gdk_device_get_modifier_state(device) bind(c)
gdk;gdk_device_get_name;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"const char * gdk_device_get_name (GdkDevice *device);";function gdk_device_get_name(device) bind(c)
gdk;gdk_device_get_num_lock_state;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"gboolean gdk_device_get_num_lock_state (GdkDevice *device);";function gdk_device_get_num_lock_state(device) bind(c)
gdk;gdk_device_get_num_touches;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"guint gdk_device_get_num_touches (GdkDevice *device);";function gdk_device_get_num_touches(device) bind(c)
gdk;gdk_device_get_product_id;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"const char * gdk_device_get_product_id (GdkDevice *device);";function gdk_device_get_product_id(device) bind(c)
gdk;gdk_device_get_scroll_lock_state;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"gboolean gdk_device_get_scroll_lock_state (GdkDevice *device);";function gdk_device_get_scroll_lock_state(device) bind(c)
gdk;gdk_device_get_seat;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"GdkSeat * gdk_device_get_seat (GdkDevice *device);";function gdk_device_get_seat(device) bind(c)
gdk;gdk_device_get_source;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"GdkInputSource gdk_device_get_source (GdkDevice *device);";function gdk_device_get_source(device) bind(c)
gdk;gdk_device_get_surface_at_position;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"GdkSurface * gdk_device_get_surface_at_position (GdkDevice *device, double *win_x, double *win_y);";function gdk_device_get_surface_at_position(device, win_x, win_y) bind(c)
gdk;gdk_device_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"GType gdk_device_get_type (void) G_GNUC_CONST;";function gdk_device_get_type() bind(c)
gdk;gdk_device_get_vendor_id;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"const char * gdk_device_get_vendor_id (GdkDevice *device);";function gdk_device_get_vendor_id(device) bind(c)
gdk;gdk_device_has_bidi_layouts;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevice.h;"gboolean gdk_device_has_bidi_layouts (GdkDevice *device);";function gdk_device_has_bidi_layouts(device) bind(c)
gdk;gdk_device_pad_get_feature_group;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevicepad.h;"int gdk_device_pad_get_feature_group (GdkDevicePad *pad, GdkDevicePadFeature feature, int feature_idx);";function gdk_device_pad_get_feature_group(pad, feature, feature_idx) bind(c)
gdk;gdk_device_pad_get_group_n_modes;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevicepad.h;"int gdk_device_pad_get_group_n_modes (GdkDevicePad *pad, int group_idx);";function gdk_device_pad_get_group_n_modes(pad, group_idx) bind(c)
gdk;gdk_device_pad_get_n_features;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevicepad.h;"int gdk_device_pad_get_n_features (GdkDevicePad *pad, GdkDevicePadFeature feature);";function gdk_device_pad_get_n_features(pad, feature) bind(c)
gdk;gdk_device_pad_get_n_groups;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevicepad.h;"int gdk_device_pad_get_n_groups (GdkDevicePad *pad);";function gdk_device_pad_get_n_groups(pad) bind(c)
gdk;gdk_device_pad_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevicepad.h;"GType gdk_device_pad_get_type (void) G_GNUC_CONST;";function gdk_device_pad_get_type() bind(c)
gdk;gdk_device_tool_get_axes;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevicetool.h;"GdkAxisFlags gdk_device_tool_get_axes (GdkDeviceTool *tool);";function gdk_device_tool_get_axes(tool) bind(c)
gdk;gdk_device_tool_get_hardware_id;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevicetool.h;"guint64 gdk_device_tool_get_hardware_id (GdkDeviceTool *tool);";function gdk_device_tool_get_hardware_id(tool) bind(c)
gdk;gdk_device_tool_get_serial;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevicetool.h;"guint64 gdk_device_tool_get_serial (GdkDeviceTool *tool);";function gdk_device_tool_get_serial(tool) bind(c)
gdk;gdk_device_tool_get_tool_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevicetool.h;"GdkDeviceToolType gdk_device_tool_get_tool_type (GdkDeviceTool *tool);";function gdk_device_tool_get_tool_type(tool) bind(c)
gdk;gdk_device_tool_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdevicetool.h;"GType gdk_device_tool_get_type (void) G_GNUC_CONST;";function gdk_device_tool_get_type() bind(c)
gdk;gdk_display_beep;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"void gdk_display_beep (GdkDisplay *display);";subroutine gdk_display_beep(display) bind(c)
gdk;gdk_display_close;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"void gdk_display_close (GdkDisplay *display);";subroutine gdk_display_close(display) bind(c)
gdk;gdk_display_device_is_grabbed;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"gboolean gdk_display_device_is_grabbed (GdkDisplay *display, GdkDevice *device);";function gdk_display_device_is_grabbed(display, device) bind(c)
gdk;gdk_display_flush;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"void gdk_display_flush (GdkDisplay *display);";subroutine gdk_display_flush(display) bind(c)
gdk;gdk_display_get_app_launch_context;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"GdkAppLaunchContext *gdk_display_get_app_launch_context (GdkDisplay *display);";function gdk_display_get_app_launch_context(display) bind(c)
gdk;gdk_display_get_clipboard;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"GdkClipboard * gdk_display_get_clipboard (GdkDisplay *display);";function gdk_display_get_clipboard(display) bind(c)
gdk;gdk_display_get_default;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"GdkDisplay *gdk_display_get_default (void);";function gdk_display_get_default() bind(c)
gdk;gdk_display_get_default_seat;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"GdkSeat * gdk_display_get_default_seat (GdkDisplay *display);";function gdk_display_get_default_seat(display) bind(c)
gdk;gdk_display_get_monitor_at_surface;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"GdkMonitor * gdk_display_get_monitor_at_surface (GdkDisplay *display, GdkSurface *surface);";function gdk_display_get_monitor_at_surface(display, surface) bind(c)
gdk;gdk_display_get_monitors;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"GListModel * gdk_display_get_monitors (GdkDisplay *self) G_GNUC_PURE;";function gdk_display_get_monitors(self) bind(c)
gdk;gdk_display_get_name;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"const char * gdk_display_get_name (GdkDisplay *display);";function gdk_display_get_name(display) bind(c)
gdk;gdk_display_get_primary_clipboard;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"GdkClipboard * gdk_display_get_primary_clipboard (GdkDisplay *display);";function gdk_display_get_primary_clipboard(display) bind(c)
gdk;gdk_display_get_setting;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"gboolean gdk_display_get_setting (GdkDisplay *display, const char *name, GValue *value);";function gdk_display_get_setting(display, name, value) bind(c)
gdk;gdk_display_get_startup_notification_id;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"const char * gdk_display_get_startup_notification_id (GdkDisplay *display);";function gdk_display_get_startup_notification_id(display) bind(c)
gdk;gdk_display_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"GType gdk_display_get_type (void) G_GNUC_CONST;";function gdk_display_get_type() bind(c)
gdk;gdk_display_is_closed;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"gboolean gdk_display_is_closed (GdkDisplay *display);";function gdk_display_is_closed(display) bind(c)
gdk;gdk_display_is_composited;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"gboolean gdk_display_is_composited (GdkDisplay *display);";function gdk_display_is_composited(display) bind(c)
gdk;gdk_display_is_rgba;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"gboolean gdk_display_is_rgba (GdkDisplay *display);";function gdk_display_is_rgba(display) bind(c)
gdk;gdk_display_list_seats;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"GList * gdk_display_list_seats (GdkDisplay *display);";function gdk_display_list_seats(display) bind(c)
gdk;gdk_display_manager_get;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplaymanager.h;"GdkDisplayManager *gdk_display_manager_get (void);";function gdk_display_manager_get() bind(c)
gdk;gdk_display_manager_get_default_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplaymanager.h;"GdkDisplay * gdk_display_manager_get_default_display (GdkDisplayManager *manager);";function gdk_display_manager_get_default_display(manager) bind(c)
gdk;gdk_display_manager_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplaymanager.h;"GType gdk_display_manager_get_type (void) G_GNUC_CONST;";function gdk_display_manager_get_type() bind(c)
gdk;gdk_display_manager_list_displays;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplaymanager.h;"GSList * gdk_display_manager_list_displays (GdkDisplayManager *manager);";function gdk_display_manager_list_displays(manager) bind(c)
gdk;gdk_display_manager_open_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplaymanager.h;"GdkDisplay * gdk_display_manager_open_display (GdkDisplayManager *manager, const char *name);";function gdk_display_manager_open_display(manager, name) bind(c)
gdk;gdk_display_manager_set_default_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplaymanager.h;"void gdk_display_manager_set_default_display (GdkDisplayManager *manager, GdkDisplay *display);";subroutine gdk_display_manager_set_default_display(manager, display) bind(c)
gdk;gdk_display_map_keycode;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"gboolean gdk_display_map_keycode (GdkDisplay *display, guint keycode, GdkKeymapKey **keys, guint **keyvals, int *n_entries);";function gdk_display_map_keycode(display, keycode, keys, keyvals, n_entries) bind(c)
gdk;gdk_display_map_keyval;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"gboolean gdk_display_map_keyval (GdkDisplay *display, guint keyval, GdkKeymapKey **keys, int *n_keys);";function gdk_display_map_keyval(display, keyval, keys, n_keys) bind(c)
gdk;gdk_display_notify_startup_complete;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"void gdk_display_notify_startup_complete (GdkDisplay *display, const char *startup_id);";subroutine gdk_display_notify_startup_complete(display, startup_id) bind(c)
gdk;gdk_display_open;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"GdkDisplay *gdk_display_open (const char *display_name);";function gdk_display_open(display_name) bind(c)
gdk;gdk_display_put_event;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"void gdk_display_put_event (GdkDisplay *display, GdkEvent *event);";subroutine gdk_display_put_event(display, event) bind(c)
gdk;gdk_display_supports_input_shapes;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"gboolean gdk_display_supports_input_shapes (GdkDisplay *display);";function gdk_display_supports_input_shapes(display) bind(c)
gdk;gdk_display_sync;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"void gdk_display_sync (GdkDisplay *display);";subroutine gdk_display_sync(display) bind(c)
gdk;gdk_display_translate_key;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplay.h;"gboolean gdk_display_translate_key (GdkDisplay *display, guint keycode, GdkModifierType state, int group, guint *keyval, int *effective_group, int *level, GdkModifierType *consumed);";function gdk_display_translate_key(display, keycode, state, group, keyval, effective_group, level, consumed) bind(c)
gdk;gdk_dnd_event_get_drop;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkDrop * gdk_dnd_event_get_drop (GdkEvent *event);";function gdk_dnd_event_get_drop(event) bind(c)
gdk;gdk_dnd_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_dnd_event_get_type (void) G_GNUC_CONST;";function gdk_dnd_event_get_type() bind(c)
gdk;gdk_drag_action_is_unique;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"gboolean gdk_drag_action_is_unique (GdkDragAction action);";function gdk_drag_action_is_unique(action) bind(c)
gdk;gdk_drag_begin;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"GdkDrag * gdk_drag_begin (GdkSurface *surface, GdkDevice *device, GdkContentProvider *content, GdkDragAction actions, double dx, double dy);";function gdk_drag_begin(surface, device, content, actions, dx, dy) bind(c)
gdk;gdk_drag_drop_done;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"void gdk_drag_drop_done (GdkDrag *drag, gboolean success);";subroutine gdk_drag_drop_done(drag, success) bind(c)
gdk;gdk_drag_get_actions;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"GdkDragAction gdk_drag_get_actions (GdkDrag *drag);";function gdk_drag_get_actions(drag) bind(c)
gdk;gdk_drag_get_content;;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"GdkContentProvider * gdk_drag_get_content (GdkDrag *drag);";function gdk_drag_get_content(drag) bind(c)
gdk;gdk_drag_get_device;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"GdkDevice * gdk_drag_get_device (GdkDrag *drag);";function gdk_drag_get_device(drag) bind(c)
gdk;gdk_drag_get_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"GdkDisplay * gdk_drag_get_display (GdkDrag *drag);";function gdk_drag_get_display(drag) bind(c)
gdk;gdk_drag_get_drag_surface;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"GdkSurface *gdk_drag_get_drag_surface (GdkDrag *drag);";function gdk_drag_get_drag_surface(drag) bind(c)
gdk;gdk_drag_get_formats;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"GdkContentFormats *gdk_drag_get_formats (GdkDrag *drag);";function gdk_drag_get_formats(drag) bind(c)
gdk;gdk_drag_get_selected_action;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"GdkDragAction gdk_drag_get_selected_action (GdkDrag *drag);";function gdk_drag_get_selected_action(drag) bind(c)
gdk;gdk_drag_get_surface;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"GdkSurface * gdk_drag_get_surface (GdkDrag *drag);";function gdk_drag_get_surface(drag) bind(c)
gdk;gdk_drag_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"GType gdk_drag_get_type (void) G_GNUC_CONST;";function gdk_drag_get_type() bind(c)
gdk;gdk_drag_set_hotspot;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrag.h;"void gdk_drag_set_hotspot (GdkDrag *drag, int hot_x, int hot_y);";subroutine gdk_drag_set_hotspot(drag, hot_x, hot_y) bind(c)
gdk;gdk_draw_context_begin_frame;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrawcontext.h;"void gdk_draw_context_begin_frame (GdkDrawContext *context, const cairo_region_t *region);";subroutine gdk_draw_context_begin_frame(context, region) bind(c)
gdk;gdk_draw_context_end_frame;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrawcontext.h;"void gdk_draw_context_end_frame (GdkDrawContext *context);";subroutine gdk_draw_context_end_frame(context) bind(c)
gdk;gdk_draw_context_get_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrawcontext.h;"GdkDisplay * gdk_draw_context_get_display (GdkDrawContext *context);";function gdk_draw_context_get_display(context) bind(c)
gdk;gdk_draw_context_get_frame_region;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrawcontext.h;"const cairo_region_t * gdk_draw_context_get_frame_region (GdkDrawContext *context);";function gdk_draw_context_get_frame_region(context) bind(c)
gdk;gdk_draw_context_get_surface;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrawcontext.h;"GdkSurface * gdk_draw_context_get_surface (GdkDrawContext *context);";function gdk_draw_context_get_surface(context) bind(c)
gdk;gdk_draw_context_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrawcontext.h;"GType gdk_draw_context_get_type (void) G_GNUC_CONST;";function gdk_draw_context_get_type() bind(c)
gdk;gdk_draw_context_is_in_frame;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrawcontext.h;"gboolean gdk_draw_context_is_in_frame (GdkDrawContext *context);";function gdk_draw_context_is_in_frame(context) bind(c)
gdk;gdk_drop_finish;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrop.h;"void gdk_drop_finish (GdkDrop *self, GdkDragAction action);";subroutine gdk_drop_finish(self, action) bind(c)
gdk;gdk_drop_get_actions;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrop.h;"GdkDragAction gdk_drop_get_actions (GdkDrop *self);";function gdk_drop_get_actions(self) bind(c)
gdk;gdk_drop_get_device;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrop.h;"GdkDevice * gdk_drop_get_device (GdkDrop *self);";function gdk_drop_get_device(self) bind(c)
gdk;gdk_drop_get_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrop.h;"GdkDisplay * gdk_drop_get_display (GdkDrop *self);";function gdk_drop_get_display(self) bind(c)
gdk;gdk_drop_get_drag;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrop.h;"GdkDrag * gdk_drop_get_drag (GdkDrop *self);";function gdk_drop_get_drag(self) bind(c)
gdk;gdk_drop_get_formats;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrop.h;"GdkContentFormats * gdk_drop_get_formats (GdkDrop *self);";function gdk_drop_get_formats(self) bind(c)
gdk;gdk_drop_get_surface;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrop.h;"GdkSurface * gdk_drop_get_surface (GdkDrop *self);";function gdk_drop_get_surface(self) bind(c)
gdk;gdk_drop_read_async;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrop.h;"void gdk_drop_read_async (GdkDrop *self, const char **mime_types, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_drop_read_async(self, mime_types, io_priority, cancellable, callback, user_data) bind(c)
gdk;gdk_drop_read_finish;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrop.h;"GInputStream * gdk_drop_read_finish (GdkDrop *self, GAsyncResult *result, const char **out_mime_type, GError **error);";function gdk_drop_read_finish(self, result, out_mime_type, error) bind(c)
gdk;gdk_drop_read_value_async;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrop.h;"void gdk_drop_read_value_async (GdkDrop *self, GType type, int io_priority, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_drop_read_value_async(self, type, io_priority, cancellable, callback, user_data) bind(c)
gdk;gdk_drop_read_value_finish;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrop.h;"const GValue * gdk_drop_read_value_finish (GdkDrop *self, GAsyncResult *result, GError **error);";function gdk_drop_read_value_finish(self, result, error) bind(c)
gdk;gdk_drop_status;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdrop.h;"void gdk_drop_status (GdkDrop *self, GdkDragAction actions, GdkDragAction preferred);";subroutine gdk_drop_status(self, actions, preferred) bind(c)
gdk;gdk_event_get_axes;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_event_get_axes (GdkEvent *event, double **axes, guint *n_axes);";function gdk_event_get_axes(event, axes, n_axes) bind(c)
gdk;gdk_event_get_axis;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_event_get_axis (GdkEvent *event, GdkAxisUse axis_use, double *value);";function gdk_event_get_axis(event, axis_use, value) bind(c)
gdk;gdk_event_get_device;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkDevice * gdk_event_get_device (GdkEvent *event);";function gdk_event_get_device(event) bind(c)
gdk;gdk_event_get_device_tool;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkDeviceTool * gdk_event_get_device_tool (GdkEvent *event);";function gdk_event_get_device_tool(event) bind(c)
gdk;gdk_event_get_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkDisplay * gdk_event_get_display (GdkEvent *event);";function gdk_event_get_display(event) bind(c)
gdk;gdk_event_get_event_sequence;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkEventSequence * gdk_event_get_event_sequence (GdkEvent *event);";function gdk_event_get_event_sequence(event) bind(c)
gdk;gdk_event_get_event_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkEventType gdk_event_get_event_type (GdkEvent *event);";function gdk_event_get_event_type(event) bind(c)
gdk;gdk_event_get_history;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkTimeCoord * gdk_event_get_history (GdkEvent *event, guint *out_n_coords);";function gdk_event_get_history(event, out_n_coords) bind(c)
gdk;gdk_event_get_modifier_state;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkModifierType gdk_event_get_modifier_state (GdkEvent *event);";function gdk_event_get_modifier_state(event) bind(c)
gdk;gdk_event_get_pointer_emulated;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_event_get_pointer_emulated (GdkEvent *event);";function gdk_event_get_pointer_emulated(event) bind(c)
gdk;gdk_event_get_position;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_event_get_position (GdkEvent *event, double *x, double *y);";function gdk_event_get_position(event, x, y) bind(c)
gdk;gdk_event_get_seat;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkSeat * gdk_event_get_seat (GdkEvent *event);";function gdk_event_get_seat(event) bind(c)
gdk;gdk_event_get_surface;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkSurface * gdk_event_get_surface (GdkEvent *event);";function gdk_event_get_surface(event) bind(c)
gdk;gdk_event_get_time;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"guint32 gdk_event_get_time (GdkEvent *event);";function gdk_event_get_time(event) bind(c)
gdk;gdk_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_event_get_type (void) G_GNUC_CONST;";function gdk_event_get_type() bind(c)
gdk;gdk_event_ref;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkEvent * gdk_event_ref (GdkEvent *event);";function gdk_event_ref(event) bind(c)
gdk;gdk_event_sequence_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_event_sequence_get_type (void) G_GNUC_CONST;";function gdk_event_sequence_get_type() bind(c)
gdk;gdk_event_triggers_context_menu;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_event_triggers_context_menu (GdkEvent *event);";function gdk_event_triggers_context_menu(event) bind(c)
gdk;gdk_event_unref;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"void gdk_event_unref (GdkEvent *event);";subroutine gdk_event_unref(event) bind(c)
gdk;gdk_events_get_angle;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_events_get_angle (GdkEvent *event1, GdkEvent *event2, double *angle);";function gdk_events_get_angle(event1, event2, angle) bind(c)
gdk;gdk_events_get_center;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_events_get_center (GdkEvent *event1, GdkEvent *event2, double *x, double *y);";function gdk_events_get_center(event1, event2, x, y) bind(c)
gdk;gdk_events_get_distance;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_events_get_distance (GdkEvent *event1, GdkEvent *event2, double *distance);";function gdk_events_get_distance(event1, event2, distance) bind(c)
gdk;gdk_file_list_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"GType gdk_file_list_get_type (void) G_GNUC_CONST;";function gdk_file_list_get_type() bind(c)
gdk;gdk_focus_event_get_in;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_focus_event_get_in (GdkEvent *event);";function gdk_focus_event_get_in(event) bind(c)
gdk;gdk_focus_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_focus_event_get_type (void) G_GNUC_CONST;";function gdk_focus_event_get_type() bind(c)
gdk;gdk_frame_clock_begin_updating;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframeclock.h;"void gdk_frame_clock_begin_updating (GdkFrameClock *frame_clock);";subroutine gdk_frame_clock_begin_updating(frame_clock) bind(c)
gdk;gdk_frame_clock_end_updating;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframeclock.h;"void gdk_frame_clock_end_updating (GdkFrameClock *frame_clock);";subroutine gdk_frame_clock_end_updating(frame_clock) bind(c)
gdk;gdk_frame_clock_get_current_timings;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframeclock.h;"GdkFrameTimings *gdk_frame_clock_get_current_timings (GdkFrameClock *frame_clock);";function gdk_frame_clock_get_current_timings(frame_clock) bind(c)
gdk;gdk_frame_clock_get_fps;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframeclock.h;"double gdk_frame_clock_get_fps (GdkFrameClock *frame_clock);";function gdk_frame_clock_get_fps(frame_clock) bind(c)
gdk;gdk_frame_clock_get_frame_counter;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframeclock.h;"gint64 gdk_frame_clock_get_frame_counter (GdkFrameClock *frame_clock);";function gdk_frame_clock_get_frame_counter(frame_clock) bind(c)
gdk;gdk_frame_clock_get_frame_time;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframeclock.h;"gint64 gdk_frame_clock_get_frame_time (GdkFrameClock *frame_clock);";function gdk_frame_clock_get_frame_time(frame_clock) bind(c)
gdk;gdk_frame_clock_get_history_start;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframeclock.h;"gint64 gdk_frame_clock_get_history_start (GdkFrameClock *frame_clock);";function gdk_frame_clock_get_history_start(frame_clock) bind(c)
gdk;gdk_frame_clock_get_refresh_info;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframeclock.h;"void gdk_frame_clock_get_refresh_info (GdkFrameClock *frame_clock, gint64 base_time, gint64 *refresh_interval_return, gint64 *presentation_time_return);";subroutine gdk_frame_clock_get_refresh_info(frame_clock, base_time, refresh_interval_return, presentation_time_return) bind(c)
gdk;gdk_frame_clock_get_timings;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframeclock.h;"GdkFrameTimings *gdk_frame_clock_get_timings (GdkFrameClock *frame_clock, gint64 frame_counter);";function gdk_frame_clock_get_timings(frame_clock, frame_counter) bind(c)
gdk;gdk_frame_clock_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframeclock.h;"GType gdk_frame_clock_get_type (void) G_GNUC_CONST;";function gdk_frame_clock_get_type() bind(c)
gdk;gdk_frame_clock_request_phase;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframeclock.h;"void gdk_frame_clock_request_phase (GdkFrameClock *frame_clock, GdkFrameClockPhase phase);";subroutine gdk_frame_clock_request_phase(frame_clock, phase) bind(c)
gdk;gdk_frame_timings_get_complete;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframetimings.h;"gboolean gdk_frame_timings_get_complete (GdkFrameTimings *timings);";function gdk_frame_timings_get_complete(timings) bind(c)
gdk;gdk_frame_timings_get_frame_counter;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframetimings.h;"gint64 gdk_frame_timings_get_frame_counter (GdkFrameTimings *timings);";function gdk_frame_timings_get_frame_counter(timings) bind(c)
gdk;gdk_frame_timings_get_frame_time;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframetimings.h;"gint64 gdk_frame_timings_get_frame_time (GdkFrameTimings *timings);";function gdk_frame_timings_get_frame_time(timings) bind(c)
gdk;gdk_frame_timings_get_predicted_presentation_time;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframetimings.h;"gint64 gdk_frame_timings_get_predicted_presentation_time (GdkFrameTimings *timings);";function gdk_frame_timings_get_predicted_presentation_time(timings) bind(c)
gdk;gdk_frame_timings_get_presentation_time;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframetimings.h;"gint64 gdk_frame_timings_get_presentation_time (GdkFrameTimings *timings);";function gdk_frame_timings_get_presentation_time(timings) bind(c)
gdk;gdk_frame_timings_get_refresh_interval;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframetimings.h;"gint64 gdk_frame_timings_get_refresh_interval (GdkFrameTimings *timings);";function gdk_frame_timings_get_refresh_interval(timings) bind(c)
gdk;gdk_frame_timings_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframetimings.h;"GType gdk_frame_timings_get_type (void) G_GNUC_CONST;";function gdk_frame_timings_get_type() bind(c)
gdk;gdk_frame_timings_ref;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframetimings.h;"GdkFrameTimings *gdk_frame_timings_ref (GdkFrameTimings *timings);";function gdk_frame_timings_ref(timings) bind(c)
gdk;gdk_frame_timings_unref;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkframetimings.h;"void gdk_frame_timings_unref (GdkFrameTimings *timings);";subroutine gdk_frame_timings_unref(timings) bind(c)
gdk;gdk_gl_context_clear_current;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"void gdk_gl_context_clear_current (void);";subroutine gdk_gl_context_clear_current() bind(c)
gdk;gdk_gl_context_get_current;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"GdkGLContext * gdk_gl_context_get_current (void);";function gdk_gl_context_get_current() bind(c)
gdk;gdk_gl_context_get_debug_enabled;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"gboolean gdk_gl_context_get_debug_enabled (GdkGLContext *context);";function gdk_gl_context_get_debug_enabled(context) bind(c)
gdk;gdk_gl_context_get_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"GdkDisplay * gdk_gl_context_get_display (GdkGLContext *context);";function gdk_gl_context_get_display(context) bind(c)
gdk;gdk_gl_context_get_forward_compatible;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"gboolean gdk_gl_context_get_forward_compatible (GdkGLContext *context);";function gdk_gl_context_get_forward_compatible(context) bind(c)
gdk;gdk_gl_context_get_required_version;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"void gdk_gl_context_get_required_version (GdkGLContext *context, int *major, int *minor);";subroutine gdk_gl_context_get_required_version(context, major, minor) bind(c)
gdk;gdk_gl_context_get_shared_context;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"GdkGLContext * gdk_gl_context_get_shared_context (GdkGLContext *context);";function gdk_gl_context_get_shared_context(context) bind(c)
gdk;gdk_gl_context_get_surface;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"GdkSurface * gdk_gl_context_get_surface (GdkGLContext *context);";function gdk_gl_context_get_surface(context) bind(c)
gdk;gdk_gl_context_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"GType gdk_gl_context_get_type (void) G_GNUC_CONST;";function gdk_gl_context_get_type() bind(c)
gdk;gdk_gl_context_get_use_es;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"gboolean gdk_gl_context_get_use_es (GdkGLContext *context);";function gdk_gl_context_get_use_es(context) bind(c)
gdk;gdk_gl_context_get_version;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"void gdk_gl_context_get_version (GdkGLContext *context, int *major, int *minor);";subroutine gdk_gl_context_get_version(context, major, minor) bind(c)
gdk;gdk_gl_context_is_legacy;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"gboolean gdk_gl_context_is_legacy (GdkGLContext *context);";function gdk_gl_context_is_legacy(context) bind(c)
gdk;gdk_gl_context_make_current;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"void gdk_gl_context_make_current (GdkGLContext *context);";subroutine gdk_gl_context_make_current(context) bind(c)
gdk;gdk_gl_context_realize;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"gboolean gdk_gl_context_realize (GdkGLContext *context, GError **error);";function gdk_gl_context_realize(context, error) bind(c)
gdk;gdk_gl_context_set_debug_enabled;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"void gdk_gl_context_set_debug_enabled (GdkGLContext *context, gboolean enabled);";subroutine gdk_gl_context_set_debug_enabled(context, enabled) bind(c)
gdk;gdk_gl_context_set_forward_compatible;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"void gdk_gl_context_set_forward_compatible (GdkGLContext *context, gboolean compatible);";subroutine gdk_gl_context_set_forward_compatible(context, compatible) bind(c)
gdk;gdk_gl_context_set_required_version;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"void gdk_gl_context_set_required_version (GdkGLContext *context, int major, int minor);";subroutine gdk_gl_context_set_required_version(context, major, minor) bind(c)
gdk;gdk_gl_context_set_use_es;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"void gdk_gl_context_set_use_es (GdkGLContext *context, int use_es);";subroutine gdk_gl_context_set_use_es(context, use_es) bind(c)
gdk;gdk_gl_error_quark;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkglcontext.h;"GQuark gdk_gl_error_quark (void);";function gdk_gl_error_quark() bind(c)
gdk;gdk_gl_texture_new;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkgltexture.h;"GdkTexture * gdk_gl_texture_new (GdkGLContext *context, guint id, int width, int height, GDestroyNotify destroy, gpointer data);";function gdk_gl_texture_new(context, id, width, height, destroy, data) bind(c)
gdk;gdk_gl_texture_release;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkgltexture.h;"void gdk_gl_texture_release (GdkGLTexture *self);";subroutine gdk_gl_texture_release(self) bind(c)
gdk;gdk_grab_broken_event_get_grab_surface;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkSurface * gdk_grab_broken_event_get_grab_surface (GdkEvent *event);";function gdk_grab_broken_event_get_grab_surface(event) bind(c)
gdk;gdk_grab_broken_event_get_implicit;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_grab_broken_event_get_implicit (GdkEvent *event);";function gdk_grab_broken_event_get_implicit(event) bind(c)
gdk;gdk_grab_broken_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_grab_broken_event_get_type (void) G_GNUC_CONST;";function gdk_grab_broken_event_get_type() bind(c)
gdk;gdk_intern_mime_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkcontentformats.h;"const char * gdk_intern_mime_type (const char *string);";function gdk_intern_mime_type(string) bind(c)
gdk;gdk_key_event_get_consumed_modifiers;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkModifierType gdk_key_event_get_consumed_modifiers (GdkEvent *event);";function gdk_key_event_get_consumed_modifiers(event) bind(c)
gdk;gdk_key_event_get_keycode;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"guint gdk_key_event_get_keycode (GdkEvent *event);";function gdk_key_event_get_keycode(event) bind(c)
gdk;gdk_key_event_get_keyval;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"guint gdk_key_event_get_keyval (GdkEvent *event);";function gdk_key_event_get_keyval(event) bind(c)
gdk;gdk_key_event_get_layout;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"guint gdk_key_event_get_layout (GdkEvent *event);";function gdk_key_event_get_layout(event) bind(c)
gdk;gdk_key_event_get_level;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"guint gdk_key_event_get_level (GdkEvent *event);";function gdk_key_event_get_level(event) bind(c)
gdk;gdk_key_event_get_match;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_key_event_get_match (GdkEvent *event, guint *keyval, GdkModifierType *modifiers);";function gdk_key_event_get_match(event, keyval, modifiers) bind(c)
gdk;gdk_key_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_key_event_get_type (void) G_GNUC_CONST;";function gdk_key_event_get_type() bind(c)
gdk;gdk_key_event_is_modifier;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_key_event_is_modifier (GdkEvent *event);";function gdk_key_event_is_modifier(event) bind(c)
gdk;gdk_key_event_matches;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkKeyMatch gdk_key_event_matches (GdkEvent *event, guint keyval, GdkModifierType modifiers);";function gdk_key_event_matches(event, keyval, modifiers) bind(c)
gdk;gdk_keyval_convert_case;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkkeys.h;"void gdk_keyval_convert_case (guint symbol, guint *lower, guint *upper);";subroutine gdk_keyval_convert_case(symbol, lower, upper) bind(c)
gdk;gdk_keyval_from_name;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkkeys.h;"guint gdk_keyval_from_name (const char *keyval_name);";function gdk_keyval_from_name(keyval_name) bind(c)
gdk;gdk_keyval_is_lower;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkkeys.h;"gboolean gdk_keyval_is_lower (guint keyval) G_GNUC_CONST;";function gdk_keyval_is_lower(keyval) bind(c)
gdk;gdk_keyval_is_upper;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkkeys.h;"gboolean gdk_keyval_is_upper (guint keyval) G_GNUC_CONST;";function gdk_keyval_is_upper(keyval) bind(c)
gdk;gdk_keyval_name;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkkeys.h;"const char *gdk_keyval_name (guint keyval) G_GNUC_CONST;";function gdk_keyval_name(keyval) bind(c)
gdk;gdk_keyval_to_lower;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkkeys.h;"guint gdk_keyval_to_lower (guint keyval) G_GNUC_CONST;";function gdk_keyval_to_lower(keyval) bind(c)
gdk;gdk_keyval_to_unicode;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkkeys.h;"guint32 gdk_keyval_to_unicode (guint keyval) G_GNUC_CONST;";function gdk_keyval_to_unicode(keyval) bind(c)
gdk;gdk_keyval_to_upper;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkkeys.h;"guint gdk_keyval_to_upper (guint keyval) G_GNUC_CONST;";function gdk_keyval_to_upper(keyval) bind(c)
gdk;gdk_memory_texture_new;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmemorytexture.h;"GdkTexture * gdk_memory_texture_new (int width, int height, GdkMemoryFormat format, GBytes *bytes, gsize stride);";function gdk_memory_texture_new(width, height, format, bytes, stride) bind(c)
gdk;gdk_monitor_get_connector;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmonitor.h;"const char * gdk_monitor_get_connector (GdkMonitor *monitor);";function gdk_monitor_get_connector(monitor) bind(c)
gdk;gdk_monitor_get_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmonitor.h;"GdkDisplay * gdk_monitor_get_display (GdkMonitor *monitor);";function gdk_monitor_get_display(monitor) bind(c)
gdk;gdk_monitor_get_geometry;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmonitor.h;"void gdk_monitor_get_geometry (GdkMonitor *monitor, GdkRectangle *geometry);";subroutine gdk_monitor_get_geometry(monitor, geometry) bind(c)
gdk;gdk_monitor_get_height_mm;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmonitor.h;"int gdk_monitor_get_height_mm (GdkMonitor *monitor);";function gdk_monitor_get_height_mm(monitor) bind(c)
gdk;gdk_monitor_get_manufacturer;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmonitor.h;"const char * gdk_monitor_get_manufacturer (GdkMonitor *monitor);";function gdk_monitor_get_manufacturer(monitor) bind(c)
gdk;gdk_monitor_get_model;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmonitor.h;"const char * gdk_monitor_get_model (GdkMonitor *monitor);";function gdk_monitor_get_model(monitor) bind(c)
gdk;gdk_monitor_get_refresh_rate;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmonitor.h;"int gdk_monitor_get_refresh_rate (GdkMonitor *monitor);";function gdk_monitor_get_refresh_rate(monitor) bind(c)
gdk;gdk_monitor_get_scale_factor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmonitor.h;"int gdk_monitor_get_scale_factor (GdkMonitor *monitor);";function gdk_monitor_get_scale_factor(monitor) bind(c)
gdk;gdk_monitor_get_subpixel_layout;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmonitor.h;"GdkSubpixelLayout gdk_monitor_get_subpixel_layout (GdkMonitor *monitor);";function gdk_monitor_get_subpixel_layout(monitor) bind(c)
gdk;gdk_monitor_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmonitor.h;"GType gdk_monitor_get_type (void) G_GNUC_CONST;";function gdk_monitor_get_type() bind(c)
gdk;gdk_monitor_get_width_mm;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmonitor.h;"int gdk_monitor_get_width_mm (GdkMonitor *monitor);";function gdk_monitor_get_width_mm(monitor) bind(c)
gdk;gdk_monitor_is_valid;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkmonitor.h;"gboolean gdk_monitor_is_valid (GdkMonitor *monitor);";function gdk_monitor_is_valid(monitor) bind(c)
gdk;gdk_motion_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_motion_event_get_type (void) G_GNUC_CONST;";function gdk_motion_event_get_type() bind(c)
gdk;gdk_pad_event_get_axis_value;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"void gdk_pad_event_get_axis_value (GdkEvent *event, guint *index, double *value);";subroutine gdk_pad_event_get_axis_value(event, index, value) bind(c)
gdk;gdk_pad_event_get_button;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"guint gdk_pad_event_get_button (GdkEvent *event);";function gdk_pad_event_get_button(event) bind(c)
gdk;gdk_pad_event_get_group_mode;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"void gdk_pad_event_get_group_mode (GdkEvent *event, guint *group, guint *mode);";subroutine gdk_pad_event_get_group_mode(event, group, mode) bind(c)
gdk;gdk_pad_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_pad_event_get_type (void) G_GNUC_CONST;";function gdk_pad_event_get_type() bind(c)
gdk;gdk_paintable_compute_concrete_size;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpaintable.h;"void gdk_paintable_compute_concrete_size (GdkPaintable *paintable, double specified_width, double specified_height, double default_width, double default_height, double *concrete_width, double *concrete_height);";subroutine gdk_paintable_compute_concrete_size(paintable, specified_width, specified_height, default_width, default_height, concrete_width, concrete_height) bind(c)
gdk;gdk_paintable_get_current_image;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpaintable.h;"GdkPaintable * gdk_paintable_get_current_image (GdkPaintable *paintable);";function gdk_paintable_get_current_image(paintable) bind(c)
gdk;gdk_paintable_get_flags;;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpaintable.h;"GdkPaintableFlags gdk_paintable_get_flags (GdkPaintable *paintable);";function gdk_paintable_get_flags(paintable) bind(c)
gdk;gdk_paintable_get_intrinsic_aspect_ratio;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpaintable.h;"double gdk_paintable_get_intrinsic_aspect_ratio(GdkPaintable *paintable);";function gdk_paintable_get_intrinsic_aspect_ratio(paintable) bind(c)
gdk;gdk_paintable_get_intrinsic_height;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpaintable.h;"int gdk_paintable_get_intrinsic_height (GdkPaintable *paintable);";function gdk_paintable_get_intrinsic_height(paintable) bind(c)
gdk;gdk_paintable_get_intrinsic_width;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpaintable.h;"int gdk_paintable_get_intrinsic_width (GdkPaintable *paintable);";function gdk_paintable_get_intrinsic_width(paintable) bind(c)
gdk;gdk_paintable_invalidate_contents;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpaintable.h;"void gdk_paintable_invalidate_contents (GdkPaintable *paintable);";subroutine gdk_paintable_invalidate_contents(paintable) bind(c)
gdk;gdk_paintable_invalidate_size;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpaintable.h;"void gdk_paintable_invalidate_size (GdkPaintable *paintable);";subroutine gdk_paintable_invalidate_size(paintable) bind(c)
gdk;gdk_paintable_new_empty;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpaintable.h;"GdkPaintable * gdk_paintable_new_empty (int intrinsic_width, int intrinsic_height);";function gdk_paintable_new_empty(intrinsic_width, intrinsic_height) bind(c)
gdk;gdk_pango_layout_get_clip_region;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpango.h;"cairo_region_t *gdk_pango_layout_get_clip_region (PangoLayout *layout, int x_origin, int y_origin, const int *index_ranges, int n_ranges);";function gdk_pango_layout_get_clip_region(layout, x_origin, y_origin, index_ranges, n_ranges) bind(c)
gdk;gdk_pango_layout_line_get_clip_region;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpango.h;"cairo_region_t *gdk_pango_layout_line_get_clip_region (PangoLayoutLine *line, int x_origin, int y_origin, const int *index_ranges, int n_ranges);";function gdk_pango_layout_line_get_clip_region(line, x_origin, y_origin, index_ranges, n_ranges) bind(c)
gdk;gdk_pixbuf_get_from_surface;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpixbuf.h;"GdkPixbuf *gdk_pixbuf_get_from_surface (cairo_surface_t *surface, int src_x, int src_y, int width, int height);";function gdk_pixbuf_get_from_surface(surface, src_x, src_y, width, height) bind(c)
gdk;gdk_pixbuf_get_from_texture;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpixbuf.h;"GdkPixbuf *gdk_pixbuf_get_from_texture (GdkTexture *texture);";function gdk_pixbuf_get_from_texture(texture) bind(c)
gdk;gdk_popup_get_autohide;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopup.h;"gboolean gdk_popup_get_autohide (GdkPopup *popup);";function gdk_popup_get_autohide(popup) bind(c)
gdk;gdk_popup_get_parent;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopup.h;"GdkSurface * gdk_popup_get_parent (GdkPopup *popup);";function gdk_popup_get_parent(popup) bind(c)
gdk;gdk_popup_get_position_x;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopup.h;"int gdk_popup_get_position_x (GdkPopup *popup);";function gdk_popup_get_position_x(popup) bind(c)
gdk;gdk_popup_get_position_y;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopup.h;"int gdk_popup_get_position_y (GdkPopup *popup);";function gdk_popup_get_position_y(popup) bind(c)
gdk;gdk_popup_get_rect_anchor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopup.h;"GdkGravity gdk_popup_get_rect_anchor (GdkPopup *popup);";function gdk_popup_get_rect_anchor(popup) bind(c)
gdk;gdk_popup_get_surface_anchor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopup.h;"GdkGravity gdk_popup_get_surface_anchor (GdkPopup *popup);";function gdk_popup_get_surface_anchor(popup) bind(c)
gdk;gdk_popup_layout_copy;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"GdkPopupLayout * gdk_popup_layout_copy (GdkPopupLayout *layout);";function gdk_popup_layout_copy(layout) bind(c)
gdk;gdk_popup_layout_equal;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"gboolean gdk_popup_layout_equal (GdkPopupLayout *layout, GdkPopupLayout *other);";function gdk_popup_layout_equal(layout, other) bind(c)
gdk;gdk_popup_layout_get_anchor_hints;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"GdkAnchorHints gdk_popup_layout_get_anchor_hints (GdkPopupLayout *layout);";function gdk_popup_layout_get_anchor_hints(layout) bind(c)
gdk;gdk_popup_layout_get_anchor_rect;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"const GdkRectangle * gdk_popup_layout_get_anchor_rect (GdkPopupLayout *layout);";function gdk_popup_layout_get_anchor_rect(layout) bind(c)
gdk;gdk_popup_layout_get_offset;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"void gdk_popup_layout_get_offset (GdkPopupLayout *layout, int *dx, int *dy);";subroutine gdk_popup_layout_get_offset(layout, dx, dy) bind(c)
gdk;gdk_popup_layout_get_rect_anchor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"GdkGravity gdk_popup_layout_get_rect_anchor (GdkPopupLayout *layout);";function gdk_popup_layout_get_rect_anchor(layout) bind(c)
gdk;gdk_popup_layout_get_surface_anchor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"GdkGravity gdk_popup_layout_get_surface_anchor (GdkPopupLayout *layout);";function gdk_popup_layout_get_surface_anchor(layout) bind(c)
gdk;gdk_popup_layout_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"GType gdk_popup_layout_get_type (void);";function gdk_popup_layout_get_type() bind(c)
gdk;gdk_popup_layout_new;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"GdkPopupLayout * gdk_popup_layout_new (const GdkRectangle *anchor_rect, GdkGravity rect_anchor, GdkGravity surface_anchor);";function gdk_popup_layout_new(anchor_rect, rect_anchor, surface_anchor) bind(c)
gdk;gdk_popup_layout_ref;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"GdkPopupLayout * gdk_popup_layout_ref (GdkPopupLayout *layout);";function gdk_popup_layout_ref(layout) bind(c)
gdk;gdk_popup_layout_set_anchor_hints;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"void gdk_popup_layout_set_anchor_hints (GdkPopupLayout *layout, GdkAnchorHints anchor_hints);";subroutine gdk_popup_layout_set_anchor_hints(layout, anchor_hints) bind(c)
gdk;gdk_popup_layout_set_anchor_rect;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"void gdk_popup_layout_set_anchor_rect (GdkPopupLayout *layout, const GdkRectangle *anchor_rect);";subroutine gdk_popup_layout_set_anchor_rect(layout, anchor_rect) bind(c)
gdk;gdk_popup_layout_set_offset;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"void gdk_popup_layout_set_offset (GdkPopupLayout *layout, int dx, int dy);";subroutine gdk_popup_layout_set_offset(layout, dx, dy) bind(c)
gdk;gdk_popup_layout_set_rect_anchor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"void gdk_popup_layout_set_rect_anchor (GdkPopupLayout *layout, GdkGravity anchor);";subroutine gdk_popup_layout_set_rect_anchor(layout, anchor) bind(c)
gdk;gdk_popup_layout_set_surface_anchor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"void gdk_popup_layout_set_surface_anchor (GdkPopupLayout *layout, GdkGravity anchor);";subroutine gdk_popup_layout_set_surface_anchor(layout, anchor) bind(c)
gdk;gdk_popup_layout_unref;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkpopuplayout.h;"void gdk_popup_layout_unref (GdkPopupLayout *layout);";subroutine gdk_popup_layout_unref(layout) bind(c)
gdk;gdk_proximity_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_proximity_event_get_type (void) G_GNUC_CONST;";function gdk_proximity_event_get_type() bind(c)
gdk;gdk_rectangle_contains_point;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrectangle.h;"gboolean gdk_rectangle_contains_point (const GdkRectangle *rect, int x, int y);";function gdk_rectangle_contains_point(rect, x, y) bind(c)
gdk;gdk_rectangle_equal;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrectangle.h;"gboolean gdk_rectangle_equal (const GdkRectangle *rect1, const GdkRectangle *rect2);";function gdk_rectangle_equal(rect1, rect2) bind(c)
gdk;gdk_rectangle_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrectangle.h;"GType gdk_rectangle_get_type (void) G_GNUC_CONST;";function gdk_rectangle_get_type() bind(c)
gdk;gdk_rectangle_intersect;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrectangle.h;"gboolean gdk_rectangle_intersect (const GdkRectangle *src1, const GdkRectangle *src2, GdkRectangle *dest);";function gdk_rectangle_intersect(src1, src2, dest) bind(c)
gdk;gdk_rectangle_union;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrectangle.h;"void gdk_rectangle_union (const GdkRectangle *src1, const GdkRectangle *src2, GdkRectangle *dest);";subroutine gdk_rectangle_union(src1, src2, dest) bind(c)
gdk;gdk_rgba_copy;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrgba.h;"GdkRGBA * gdk_rgba_copy (const GdkRGBA *rgba);";function gdk_rgba_copy(rgba) bind(c)
gdk;gdk_rgba_equal;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrgba.h;"gboolean gdk_rgba_equal (gconstpointer p1, gconstpointer p2) G_GNUC_PURE;";function gdk_rgba_equal(p1, p2) bind(c)
gdk;gdk_rgba_free;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrgba.h;"void gdk_rgba_free (GdkRGBA *rgba);";subroutine gdk_rgba_free(rgba) bind(c)
gdk;gdk_rgba_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrgba.h;"GType gdk_rgba_get_type (void) G_GNUC_CONST;";function gdk_rgba_get_type() bind(c)
gdk;gdk_rgba_hash;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrgba.h;"guint gdk_rgba_hash (gconstpointer p) G_GNUC_PURE;";function gdk_rgba_hash(p) bind(c)
gdk;gdk_rgba_is_clear;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrgba.h;"gboolean gdk_rgba_is_clear (const GdkRGBA *rgba) G_GNUC_PURE;";function gdk_rgba_is_clear(rgba) bind(c)
gdk;gdk_rgba_is_opaque;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrgba.h;"gboolean gdk_rgba_is_opaque (const GdkRGBA *rgba) G_GNUC_PURE;";function gdk_rgba_is_opaque(rgba) bind(c)
gdk;gdk_rgba_parse;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrgba.h;"gboolean gdk_rgba_parse (GdkRGBA *rgba, const char *spec);";function gdk_rgba_parse(rgba, spec) bind(c)
gdk;gdk_rgba_to_string;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkrgba.h;"char * gdk_rgba_to_string (const GdkRGBA *rgba);";function gdk_rgba_to_string(rgba) bind(c)
gdk;gdk_scroll_event_get_deltas;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"void gdk_scroll_event_get_deltas (GdkEvent *event, double *delta_x, double *delta_y);";subroutine gdk_scroll_event_get_deltas(event, delta_x, delta_y) bind(c)
gdk;gdk_scroll_event_get_direction;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkScrollDirection gdk_scroll_event_get_direction (GdkEvent *event);";function gdk_scroll_event_get_direction(event) bind(c)
gdk;gdk_scroll_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_scroll_event_get_type (void) G_GNUC_CONST;";function gdk_scroll_event_get_type() bind(c)
gdk;gdk_scroll_event_is_stop;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_scroll_event_is_stop (GdkEvent *event);";function gdk_scroll_event_is_stop(event) bind(c)
gdk;gdk_seat_get_capabilities;;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkseat.h;"GdkSeatCapabilities gdk_seat_get_capabilities (GdkSeat *seat);";function gdk_seat_get_capabilities(seat) bind(c)
gdk;gdk_seat_get_devices;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkseat.h;"GList * gdk_seat_get_devices (GdkSeat *seat, GdkSeatCapabilities capabilities);";function gdk_seat_get_devices(seat, capabilities) bind(c)
gdk;gdk_seat_get_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkseat.h;"GdkDisplay * gdk_seat_get_display (GdkSeat *seat);";function gdk_seat_get_display(seat) bind(c)
gdk;gdk_seat_get_keyboard;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkseat.h;"GdkDevice * gdk_seat_get_keyboard (GdkSeat *seat);";function gdk_seat_get_keyboard(seat) bind(c)
gdk;gdk_seat_get_pointer;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkseat.h;"GdkDevice * gdk_seat_get_pointer (GdkSeat *seat);";function gdk_seat_get_pointer(seat) bind(c)
gdk;gdk_seat_get_tools;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkseat.h;"GList * gdk_seat_get_tools (GdkSeat *seat);";function gdk_seat_get_tools(seat) bind(c)
gdk;gdk_seat_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkseat.h;"GType gdk_seat_get_type (void) G_GNUC_CONST;";function gdk_seat_get_type() bind(c)
gdk;gdk_set_allowed_backends;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkdisplaymanager.h;"void gdk_set_allowed_backends (const char *backends);";subroutine gdk_set_allowed_backends(backends) bind(c)
gdk;gdk_surface_beep;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"void gdk_surface_beep (GdkSurface *surface);";subroutine gdk_surface_beep(surface) bind(c)
gdk;gdk_surface_create_cairo_context;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"GdkCairoContext *gdk_surface_create_cairo_context(GdkSurface *surface);";function gdk_surface_create_cairo_context(surface) bind(c)
gdk;gdk_surface_create_gl_context;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"GdkGLContext * gdk_surface_create_gl_context (GdkSurface *surface, GError **error);";function gdk_surface_create_gl_context(surface, error) bind(c)
gdk;gdk_surface_create_similar_surface;;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"cairo_surface_t * gdk_surface_create_similar_surface (GdkSurface *surface, cairo_content_t content, int width, int height);";function gdk_surface_create_similar_surface(surface, content, width, height) bind(c)
gdk;gdk_surface_create_vulkan_context;;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"GdkVulkanContext * gdk_surface_create_vulkan_context(GdkSurface *surface, GError **error);";function gdk_surface_create_vulkan_context(surface, error) bind(c)
gdk;gdk_surface_destroy;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"void gdk_surface_destroy (GdkSurface *surface);";subroutine gdk_surface_destroy(surface) bind(c)
gdk;gdk_surface_get_cursor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"GdkCursor *gdk_surface_get_cursor (GdkSurface *surface);";function gdk_surface_get_cursor(surface) bind(c)
gdk;gdk_surface_get_device_cursor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"GdkCursor *gdk_surface_get_device_cursor (GdkSurface *surface, GdkDevice *device);";function gdk_surface_get_device_cursor(surface, device) bind(c)
gdk;gdk_surface_get_device_position;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"gboolean gdk_surface_get_device_position (GdkSurface *surface, GdkDevice *device, double *x, double *y, GdkModifierType *mask);";function gdk_surface_get_device_position(surface, device, x, y, mask) bind(c)
gdk;gdk_surface_get_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"GdkDisplay * gdk_surface_get_display (GdkSurface *surface);";function gdk_surface_get_display(surface) bind(c)
gdk;gdk_surface_get_frame_clock;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"GdkFrameClock* gdk_surface_get_frame_clock (GdkSurface *surface);";function gdk_surface_get_frame_clock(surface) bind(c)
gdk;gdk_surface_get_height;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"int gdk_surface_get_height (GdkSurface *surface);";function gdk_surface_get_height(surface) bind(c)
gdk;gdk_surface_get_mapped;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"gboolean gdk_surface_get_mapped (GdkSurface *surface);";function gdk_surface_get_mapped(surface) bind(c)
gdk;gdk_surface_get_scale_factor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"int gdk_surface_get_scale_factor (GdkSurface *surface);";function gdk_surface_get_scale_factor(surface) bind(c)
gdk;gdk_surface_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"GType gdk_surface_get_type (void) G_GNUC_CONST;";function gdk_surface_get_type() bind(c)
gdk;gdk_surface_get_width;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"int gdk_surface_get_width (GdkSurface *surface);";function gdk_surface_get_width(surface) bind(c)
gdk;gdk_surface_hide;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"void gdk_surface_hide (GdkSurface *surface);";subroutine gdk_surface_hide(surface) bind(c)
gdk;gdk_surface_is_destroyed;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"gboolean gdk_surface_is_destroyed (GdkSurface *surface);";function gdk_surface_is_destroyed(surface) bind(c)
gdk;gdk_surface_new_popup;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"GdkSurface * gdk_surface_new_popup (GdkSurface *parent, gboolean autohide);";function gdk_surface_new_popup(parent, autohide) bind(c)
gdk;gdk_surface_new_toplevel;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"GdkSurface * gdk_surface_new_toplevel (GdkDisplay *display);";function gdk_surface_new_toplevel(display) bind(c)
gdk;gdk_surface_queue_render;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"void gdk_surface_queue_render (GdkSurface *surface);";subroutine gdk_surface_queue_render(surface) bind(c)
gdk;gdk_surface_request_layout;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"void gdk_surface_request_layout (GdkSurface *surface);";subroutine gdk_surface_request_layout(surface) bind(c)
gdk;gdk_surface_set_cursor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"void gdk_surface_set_cursor (GdkSurface *surface, GdkCursor *cursor);";subroutine gdk_surface_set_cursor(surface, cursor) bind(c)
gdk;gdk_surface_set_device_cursor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"void gdk_surface_set_device_cursor (GdkSurface *surface, GdkDevice *device, GdkCursor *cursor);";subroutine gdk_surface_set_device_cursor(surface, device, cursor) bind(c)
gdk;gdk_surface_set_input_region;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"void gdk_surface_set_input_region (GdkSurface *surface, cairo_region_t *region);";subroutine gdk_surface_set_input_region(surface, region) bind(c)
gdk;gdk_surface_set_opaque_region;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"void gdk_surface_set_opaque_region (GdkSurface *surface, cairo_region_t *region);";subroutine gdk_surface_set_opaque_region(surface, region) bind(c)
gdk;gdk_surface_translate_coordinates;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdksurface.h;"gboolean gdk_surface_translate_coordinates (GdkSurface *from, GdkSurface *to, double *x, double *y);";function gdk_surface_translate_coordinates(from, to, x, y) bind(c)
gdk;gdk_texture_download;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktexture.h;"void gdk_texture_download (GdkTexture *texture, guchar *data, gsize stride);";subroutine gdk_texture_download(texture, data, stride) bind(c)
gdk;gdk_texture_get_height;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktexture.h;"int gdk_texture_get_height (GdkTexture *texture) G_GNUC_PURE;";function gdk_texture_get_height(texture) bind(c)
gdk;gdk_texture_get_width;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktexture.h;"int gdk_texture_get_width (GdkTexture *texture) G_GNUC_PURE;";function gdk_texture_get_width(texture) bind(c)
gdk;gdk_texture_new_for_pixbuf;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktexture.h;"GdkTexture * gdk_texture_new_for_pixbuf (GdkPixbuf *pixbuf);";function gdk_texture_new_for_pixbuf(pixbuf) bind(c)
gdk;gdk_texture_new_from_file;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktexture.h;"GdkTexture * gdk_texture_new_from_file (GFile *file, GError **error);";function gdk_texture_new_from_file(file, error) bind(c)
gdk;gdk_texture_new_from_resource;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktexture.h;"GdkTexture * gdk_texture_new_from_resource (const char *resource_path);";function gdk_texture_new_from_resource(resource_path) bind(c)
gdk;gdk_texture_save_to_png;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktexture.h;"gboolean gdk_texture_save_to_png (GdkTexture *texture, const char *filename);";function gdk_texture_save_to_png(texture, filename) bind(c)
gdk;gdk_toplevel_begin_move;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"void gdk_toplevel_begin_move (GdkToplevel *toplevel, GdkDevice *device, int button, double x, double y, guint32 timestamp);";subroutine gdk_toplevel_begin_move(toplevel, device, button, x, y, timestamp) bind(c)
gdk;gdk_toplevel_begin_resize;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"void gdk_toplevel_begin_resize (GdkToplevel *toplevel, GdkSurfaceEdge edge, GdkDevice *device, int button, double x, double y, guint32 timestamp);";subroutine gdk_toplevel_begin_resize(toplevel, edge, device, button, x, y, timestamp) bind(c)
gdk;gdk_toplevel_focus;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"void gdk_toplevel_focus (GdkToplevel *toplevel, guint32 timestamp);";subroutine gdk_toplevel_focus(toplevel, timestamp) bind(c)
gdk;gdk_toplevel_get_state;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"GdkToplevelState gdk_toplevel_get_state (GdkToplevel *toplevel);";function gdk_toplevel_get_state(toplevel) bind(c)
gdk;gdk_toplevel_inhibit_system_shortcuts;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"void gdk_toplevel_inhibit_system_shortcuts (GdkToplevel *toplevel, GdkEvent *event);";subroutine gdk_toplevel_inhibit_system_shortcuts(toplevel, event) bind(c)
gdk;gdk_toplevel_layout_copy;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"GdkToplevelLayout * gdk_toplevel_layout_copy (GdkToplevelLayout *layout);";function gdk_toplevel_layout_copy(layout) bind(c)
gdk;gdk_toplevel_layout_equal;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"gboolean gdk_toplevel_layout_equal (GdkToplevelLayout *layout, GdkToplevelLayout *other);";function gdk_toplevel_layout_equal(layout, other) bind(c)
gdk;gdk_toplevel_layout_get_fullscreen;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"gboolean gdk_toplevel_layout_get_fullscreen (GdkToplevelLayout *layout, gboolean *fullscreen);";function gdk_toplevel_layout_get_fullscreen(layout, fullscreen) bind(c)
gdk;gdk_toplevel_layout_get_fullscreen_monitor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"GdkMonitor * gdk_toplevel_layout_get_fullscreen_monitor (GdkToplevelLayout *layout);";function gdk_toplevel_layout_get_fullscreen_monitor(layout) bind(c)
gdk;gdk_toplevel_layout_get_maximized;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"gboolean gdk_toplevel_layout_get_maximized (GdkToplevelLayout *layout, gboolean *maximized);";function gdk_toplevel_layout_get_maximized(layout, maximized) bind(c)
gdk;gdk_toplevel_layout_get_resizable;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"gboolean gdk_toplevel_layout_get_resizable (GdkToplevelLayout *layout);";function gdk_toplevel_layout_get_resizable(layout) bind(c)
gdk;gdk_toplevel_layout_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"GType gdk_toplevel_layout_get_type (void);";function gdk_toplevel_layout_get_type() bind(c)
gdk;gdk_toplevel_layout_new;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"GdkToplevelLayout * gdk_toplevel_layout_new (void);";function gdk_toplevel_layout_new() bind(c)
gdk;gdk_toplevel_layout_ref;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"GdkToplevelLayout * gdk_toplevel_layout_ref (GdkToplevelLayout *layout);";function gdk_toplevel_layout_ref(layout) bind(c)
gdk;gdk_toplevel_layout_set_fullscreen;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"void gdk_toplevel_layout_set_fullscreen (GdkToplevelLayout *layout, gboolean fullscreen, GdkMonitor *monitor);";subroutine gdk_toplevel_layout_set_fullscreen(layout, fullscreen, monitor) bind(c)
gdk;gdk_toplevel_layout_set_maximized;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"void gdk_toplevel_layout_set_maximized (GdkToplevelLayout *layout, gboolean maximized);";subroutine gdk_toplevel_layout_set_maximized(layout, maximized) bind(c)
gdk;gdk_toplevel_layout_set_resizable;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"void gdk_toplevel_layout_set_resizable (GdkToplevelLayout *layout, gboolean resizable);";subroutine gdk_toplevel_layout_set_resizable(layout, resizable) bind(c)
gdk;gdk_toplevel_layout_unref;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevellayout.h;"void gdk_toplevel_layout_unref (GdkToplevelLayout *layout);";subroutine gdk_toplevel_layout_unref(layout) bind(c)
gdk;gdk_toplevel_lower;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"gboolean gdk_toplevel_lower (GdkToplevel *toplevel);";function gdk_toplevel_lower(toplevel) bind(c)
gdk;gdk_toplevel_minimize;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"gboolean gdk_toplevel_minimize (GdkToplevel *toplevel);";function gdk_toplevel_minimize(toplevel) bind(c)
gdk;gdk_toplevel_restore_system_shortcuts;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"void gdk_toplevel_restore_system_shortcuts (GdkToplevel *toplevel);";subroutine gdk_toplevel_restore_system_shortcuts(toplevel) bind(c)
gdk;gdk_toplevel_set_decorated;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"void gdk_toplevel_set_decorated (GdkToplevel *toplevel, gboolean decorated);";subroutine gdk_toplevel_set_decorated(toplevel, decorated) bind(c)
gdk;gdk_toplevel_set_deletable;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"void gdk_toplevel_set_deletable (GdkToplevel *toplevel, gboolean deletable);";subroutine gdk_toplevel_set_deletable(toplevel, deletable) bind(c)
gdk;gdk_toplevel_set_icon_list;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"void gdk_toplevel_set_icon_list (GdkToplevel *toplevel, GList *surfaces);";subroutine gdk_toplevel_set_icon_list(toplevel, surfaces) bind(c)
gdk;gdk_toplevel_set_modal;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"void gdk_toplevel_set_modal (GdkToplevel *toplevel, gboolean modal);";subroutine gdk_toplevel_set_modal(toplevel, modal) bind(c)
gdk;gdk_toplevel_set_startup_id;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"void gdk_toplevel_set_startup_id (GdkToplevel *toplevel, const char *startup_id);";subroutine gdk_toplevel_set_startup_id(toplevel, startup_id) bind(c)
gdk;gdk_toplevel_set_title;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"void gdk_toplevel_set_title (GdkToplevel *toplevel, const char *title);";subroutine gdk_toplevel_set_title(toplevel, title) bind(c)
gdk;gdk_toplevel_set_transient_for;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"void gdk_toplevel_set_transient_for (GdkToplevel *toplevel, GdkSurface *parent);";subroutine gdk_toplevel_set_transient_for(toplevel, parent) bind(c)
gdk;gdk_toplevel_show_window_menu;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"gboolean gdk_toplevel_show_window_menu (GdkToplevel *toplevel, GdkEvent *event);";function gdk_toplevel_show_window_menu(toplevel, event) bind(c)
gdk;gdk_toplevel_size_get_bounds;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevelsize.h;"void gdk_toplevel_size_get_bounds (GdkToplevelSize *size, int *bounds_width, int *bounds_height);";subroutine gdk_toplevel_size_get_bounds(size, bounds_width, bounds_height) bind(c)
gdk;gdk_toplevel_size_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevelsize.h;"GType gdk_toplevel_size_get_type (void);";function gdk_toplevel_size_get_type() bind(c)
gdk;gdk_toplevel_size_set_min_size;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevelsize.h;"void gdk_toplevel_size_set_min_size (GdkToplevelSize *size, int min_width, int min_height);";subroutine gdk_toplevel_size_set_min_size(size, min_width, min_height) bind(c)
gdk;gdk_toplevel_size_set_shadow_width;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevelsize.h;"void gdk_toplevel_size_set_shadow_width (GdkToplevelSize *size, int left, int right, int top, int bottom);";subroutine gdk_toplevel_size_set_shadow_width(size, left, right, top, bottom) bind(c)
gdk;gdk_toplevel_size_set_size;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevelsize.h;"void gdk_toplevel_size_set_size (GdkToplevelSize *size, int width, int height);";subroutine gdk_toplevel_size_set_size(size, width, height) bind(c)
gdk;gdk_toplevel_supports_edge_constraints;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdktoplevel.h;"gboolean gdk_toplevel_supports_edge_constraints (GdkToplevel *toplevel);";function gdk_toplevel_supports_edge_constraints(toplevel) bind(c)
gdk;gdk_touch_event_get_emulating_pointer;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"gboolean gdk_touch_event_get_emulating_pointer (GdkEvent *event);";function gdk_touch_event_get_emulating_pointer(event) bind(c)
gdk;gdk_touch_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_touch_event_get_type (void) G_GNUC_CONST;";function gdk_touch_event_get_type() bind(c)
gdk;gdk_touchpad_event_get_deltas;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"void gdk_touchpad_event_get_deltas (GdkEvent *event, double *dx, double *dy);";subroutine gdk_touchpad_event_get_deltas(event, dx, dy) bind(c)
gdk;gdk_touchpad_event_get_gesture_phase;;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GdkTouchpadGesturePhase gdk_touchpad_event_get_gesture_phase (GdkEvent *event);";function gdk_touchpad_event_get_gesture_phase(event) bind(c)
gdk;gdk_touchpad_event_get_n_fingers;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"guint gdk_touchpad_event_get_n_fingers (GdkEvent *event);";function gdk_touchpad_event_get_n_fingers(event) bind(c)
gdk;gdk_touchpad_event_get_pinch_angle_delta;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"double gdk_touchpad_event_get_pinch_angle_delta (GdkEvent *event);";function gdk_touchpad_event_get_pinch_angle_delta(event) bind(c)
gdk;gdk_touchpad_event_get_pinch_scale;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"double gdk_touchpad_event_get_pinch_scale (GdkEvent *event);";function gdk_touchpad_event_get_pinch_scale(event) bind(c)
gdk;gdk_touchpad_event_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkevents.h;"GType gdk_touchpad_event_get_type (void) G_GNUC_CONST;";function gdk_touchpad_event_get_type() bind(c)
gdk;gdk_unicode_to_keyval;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkkeys.h;"guint gdk_unicode_to_keyval (guint32 wc) G_GNUC_CONST;";function gdk_unicode_to_keyval(wc) bind(c)
gdk;gdk_vulkan_context_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkvulkancontext.h;"GType gdk_vulkan_context_get_type (void) G_GNUC_CONST;";function gdk_vulkan_context_get_type() bind(c)
gdk;gdk_vulkan_error_quark;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/gdkvulkancontext.h;"GQuark gdk_vulkan_error_quark (void);";function gdk_vulkan_error_quark() bind(c)
gdk;gdk_wayland_device_get_node_path;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylanddevice.h;"const char *gdk_wayland_device_get_node_path (GdkDevice *device);";function gdk_wayland_device_get_node_path(device) bind(c)
gdk;gdk_wayland_device_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylanddevice.h;"GType gdk_wayland_device_get_type (void);";function gdk_wayland_device_get_type() bind(c)
gdk;gdk_wayland_display_get_startup_notification_id;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylanddisplay.h;"const char * gdk_wayland_display_get_startup_notification_id (GdkDisplay *display);";function gdk_wayland_display_get_startup_notification_id(display) bind(c)
gdk;gdk_wayland_display_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylanddisplay.h;"GType gdk_wayland_display_get_type (void);";function gdk_wayland_display_get_type() bind(c)
gdk;gdk_wayland_display_query_registry;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylanddisplay.h;"gboolean gdk_wayland_display_query_registry (GdkDisplay *display, const char *global);";function gdk_wayland_display_query_registry(display, global) bind(c)
gdk;gdk_wayland_display_set_cursor_theme;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylanddisplay.h;"void gdk_wayland_display_set_cursor_theme (GdkDisplay *display, const char *name, int size);";subroutine gdk_wayland_display_set_cursor_theme(display, name, size) bind(c)
gdk;gdk_wayland_display_set_startup_notification_id;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylanddisplay.h;"void gdk_wayland_display_set_startup_notification_id (GdkDisplay *display, const char *startup_id);";subroutine gdk_wayland_display_set_startup_notification_id(display, startup_id) bind(c)
gdk;gdk_wayland_gl_context_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylandglcontext.h;"GType gdk_wayland_gl_context_get_type (void) G_GNUC_CONST;";function gdk_wayland_gl_context_get_type() bind(c)
gdk;gdk_wayland_monitor_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylandmonitor.h;"GType gdk_wayland_monitor_get_type (void) G_GNUC_CONST;";function gdk_wayland_monitor_get_type() bind(c)
gdk;gdk_wayland_popup_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylandsurface.h;"GType gdk_wayland_popup_get_type (void);";function gdk_wayland_popup_get_type() bind(c)
gdk;gdk_wayland_seat_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylandseat.h;"GType gdk_wayland_seat_get_type (void) G_GNUC_CONST;";function gdk_wayland_seat_get_type() bind(c)
gdk;gdk_wayland_surface_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylandsurface.h;"GType gdk_wayland_surface_get_type (void);";function gdk_wayland_surface_get_type() bind(c)
gdk;gdk_wayland_toplevel_export_handle;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylandsurface.h;"gboolean gdk_wayland_toplevel_export_handle (GdkToplevel *toplevel, GdkWaylandToplevelExported callback, gpointer user_data, GDestroyNotify destroy_func);";function gdk_wayland_toplevel_export_handle(toplevel, callback, user_data, destroy_func) bind(c)
gdk;gdk_wayland_toplevel_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylandsurface.h;"GType gdk_wayland_toplevel_get_type (void);";function gdk_wayland_toplevel_get_type() bind(c)
gdk;gdk_wayland_toplevel_set_application_id;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylandsurface.h;"void gdk_wayland_toplevel_set_application_id (GdkToplevel *toplevel, const char *application_id);";subroutine gdk_wayland_toplevel_set_application_id(toplevel, application_id) bind(c)
gdk;gdk_wayland_toplevel_set_transient_for_exported;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylandsurface.h;"gboolean gdk_wayland_toplevel_set_transient_for_exported (GdkToplevel *toplevel, const char *parent_handle_str);";function gdk_wayland_toplevel_set_transient_for_exported(toplevel, parent_handle_str) bind(c)
gdk;gdk_wayland_toplevel_unexport_handle;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/wayland/gdkwaylandsurface.h;"void gdk_wayland_toplevel_unexport_handle (GdkToplevel *toplevel);";subroutine gdk_wayland_toplevel_unexport_handle(toplevel) bind(c)
gdk;gdk_x11_app_launch_context_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11applaunchcontext.h;"GType gdk_x11_app_launch_context_get_type (void);";function gdk_x11_app_launch_context_get_type() bind(c)
gdk;gdk_x11_device_get_id;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11device.h;"int gdk_x11_device_get_id (GdkDevice *device);";function gdk_x11_device_get_id(device) bind(c)
gdk;gdk_x11_device_manager_lookup;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11devicemanager.h;"GdkDevice * gdk_x11_device_manager_lookup (GdkX11DeviceManagerXI2 *device_manager, int device_id);";function gdk_x11_device_manager_lookup(device_manager, device_id) bind(c)
gdk;gdk_x11_device_manager_xi2_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11devicemanager-xi2.h;"GType gdk_x11_device_manager_xi2_get_type (void) G_GNUC_CONST;";function gdk_x11_device_manager_xi2_get_type() bind(c)
gdk;gdk_x11_device_xi2_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11device-xi2.h;"GType gdk_x11_device_xi2_get_type (void) G_GNUC_CONST;";function gdk_x11_device_xi2_get_type() bind(c)
gdk;gdk_x11_display_error_trap_pop;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"int gdk_x11_display_error_trap_pop (GdkDisplay *display);";function gdk_x11_display_error_trap_pop(display) bind(c)
gdk;gdk_x11_display_error_trap_pop_ignored;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"void gdk_x11_display_error_trap_pop_ignored (GdkDisplay *display);";subroutine gdk_x11_display_error_trap_pop_ignored(display) bind(c)
gdk;gdk_x11_display_error_trap_push;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"void gdk_x11_display_error_trap_push (GdkDisplay *display);";subroutine gdk_x11_display_error_trap_push(display) bind(c)
gdk;gdk_x11_display_get_default_group;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"GdkSurface * gdk_x11_display_get_default_group (GdkDisplay *display);";function gdk_x11_display_get_default_group(display) bind(c)
gdk;gdk_x11_display_get_glx_version;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11glcontext.h;"gboolean gdk_x11_display_get_glx_version (GdkDisplay *display, int *major, int *minor);";function gdk_x11_display_get_glx_version(display, major, minor) bind(c)
gdk;gdk_x11_display_get_primary_monitor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"GdkMonitor * gdk_x11_display_get_primary_monitor (GdkDisplay *display);";function gdk_x11_display_get_primary_monitor(display) bind(c)
gdk;gdk_x11_display_get_screen;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"GdkX11Screen *gdk_x11_display_get_screen (GdkDisplay *display);";function gdk_x11_display_get_screen(display) bind(c)
gdk;gdk_x11_display_get_startup_notification_id;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"const char * gdk_x11_display_get_startup_notification_id (GdkDisplay *display);";function gdk_x11_display_get_startup_notification_id(display) bind(c)
gdk;gdk_x11_display_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"GType gdk_x11_display_get_type (void);";function gdk_x11_display_get_type() bind(c)
gdk;gdk_x11_display_get_user_time;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"guint32 gdk_x11_display_get_user_time (GdkDisplay *display);";function gdk_x11_display_get_user_time(display) bind(c)
gdk;gdk_x11_display_get_xcursor;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"Cursor gdk_x11_display_get_xcursor (GdkDisplay *display, GdkCursor *cursor);";function gdk_x11_display_get_xcursor(display, cursor) bind(c)
gdk;gdk_x11_display_get_xdisplay;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"Display * gdk_x11_display_get_xdisplay (GdkDisplay *display);";function gdk_x11_display_get_xdisplay(display) bind(c)
gdk;gdk_x11_display_get_xrootwindow;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"Window gdk_x11_display_get_xrootwindow (GdkDisplay *display);";function gdk_x11_display_get_xrootwindow(display) bind(c)
gdk;gdk_x11_display_get_xscreen;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"Screen * gdk_x11_display_get_xscreen (GdkDisplay *display);";function gdk_x11_display_get_xscreen(display) bind(c)
gdk;gdk_x11_display_grab;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"void gdk_x11_display_grab (GdkDisplay *display);";subroutine gdk_x11_display_grab(display) bind(c)
gdk;gdk_x11_display_open;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"GdkDisplay * gdk_x11_display_open (const char *display_name);";function gdk_x11_display_open(display_name) bind(c)
gdk;gdk_x11_display_set_cursor_theme;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"void gdk_x11_display_set_cursor_theme (GdkDisplay *display, const char *theme, const int size);";subroutine gdk_x11_display_set_cursor_theme(display, theme, size) bind(c)
gdk;gdk_x11_display_set_program_class;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"void gdk_x11_display_set_program_class (GdkDisplay *display, const char *program_class);";subroutine gdk_x11_display_set_program_class(display, program_class) bind(c)
gdk;gdk_x11_display_set_startup_notification_id;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"void gdk_x11_display_set_startup_notification_id (GdkDisplay *display, const char *startup_id);";subroutine gdk_x11_display_set_startup_notification_id(display, startup_id) bind(c)
gdk;gdk_x11_display_set_surface_scale;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"void gdk_x11_display_set_surface_scale (GdkDisplay *display, int scale);";subroutine gdk_x11_display_set_surface_scale(display, scale) bind(c)
gdk;gdk_x11_display_string_to_compound_text;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11selection.h;"int gdk_x11_display_string_to_compound_text (GdkDisplay *display, const char *str, const char **encoding, int *format, guchar **ctext, int *length);";function gdk_x11_display_string_to_compound_text(display, str, encoding, format, ctext, length) bind(c)
gdk;gdk_x11_display_text_property_to_text_list;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11selection.h;"int gdk_x11_display_text_property_to_text_list (GdkDisplay *display, const char *encoding, int format, const guchar *text, int length, char ***list);";function gdk_x11_display_text_property_to_text_list(display, encoding, format, text, length, list) bind(c)
gdk;gdk_x11_display_ungrab;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"void gdk_x11_display_ungrab (GdkDisplay *display);";subroutine gdk_x11_display_ungrab(display) bind(c)
gdk;gdk_x11_display_utf8_to_compound_text;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11selection.h;"gboolean gdk_x11_display_utf8_to_compound_text (GdkDisplay *display, const char *str, const char **encoding, int *format, guchar **ctext, int *length);";function gdk_x11_display_utf8_to_compound_text(display, str, encoding, format, ctext, length) bind(c)
gdk;gdk_x11_drag_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11dnd.h;"GType gdk_x11_drag_get_type (void);";function gdk_x11_drag_get_type() bind(c)
gdk;gdk_x11_free_compound_text;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11selection.h;"void gdk_x11_free_compound_text (guchar *ctext);";subroutine gdk_x11_free_compound_text(ctext) bind(c)
gdk;gdk_x11_free_text_list;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11selection.h;"void gdk_x11_free_text_list (char **list);";subroutine gdk_x11_free_text_list(list) bind(c)
gdk;gdk_x11_get_server_time;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"guint32 gdk_x11_get_server_time (GdkSurface *surface);";function gdk_x11_get_server_time(surface) bind(c)
gdk;gdk_x11_get_xatom_by_name_for_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11property.h;"Atom gdk_x11_get_xatom_by_name_for_display (GdkDisplay *display, const char *atom_name);";function gdk_x11_get_xatom_by_name_for_display(display, atom_name) bind(c)
gdk;gdk_x11_get_xatom_name_for_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11property.h;"const char * gdk_x11_get_xatom_name_for_display (GdkDisplay *display, Atom xatom);";function gdk_x11_get_xatom_name_for_display(display, xatom) bind(c)
gdk;gdk_x11_gl_context_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11glcontext.h;"GType gdk_x11_gl_context_get_type (void) G_GNUC_CONST;";function gdk_x11_gl_context_get_type() bind(c)
gdk;gdk_x11_lookup_xdisplay;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"GdkDisplay *gdk_x11_lookup_xdisplay (Display *xdisplay);";function gdk_x11_lookup_xdisplay(xdisplay) bind(c)
gdk;gdk_x11_monitor_get_output;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11monitor.h;"XID gdk_x11_monitor_get_output (GdkMonitor *monitor);";function gdk_x11_monitor_get_output(monitor) bind(c)
gdk;gdk_x11_monitor_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11monitor.h;"GType gdk_x11_monitor_get_type (void) G_GNUC_CONST;";function gdk_x11_monitor_get_type() bind(c)
gdk;gdk_x11_monitor_get_workarea;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11monitor.h;"void gdk_x11_monitor_get_workarea (GdkMonitor *monitor, GdkRectangle *workarea);";subroutine gdk_x11_monitor_get_workarea(monitor, workarea) bind(c)
gdk;gdk_x11_screen_get_current_desktop;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11screen.h;"guint32 gdk_x11_screen_get_current_desktop (GdkX11Screen *screen);";function gdk_x11_screen_get_current_desktop(screen) bind(c)
gdk;gdk_x11_screen_get_monitor_output;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11screen.h;"XID gdk_x11_screen_get_monitor_output (GdkX11Screen *screen, int monitor_num);";function gdk_x11_screen_get_monitor_output(screen, monitor_num) bind(c)
gdk;gdk_x11_screen_get_number_of_desktops;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11screen.h;"guint32 gdk_x11_screen_get_number_of_desktops (GdkX11Screen *screen);";function gdk_x11_screen_get_number_of_desktops(screen) bind(c)
gdk;gdk_x11_screen_get_screen_number;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11screen.h;"int gdk_x11_screen_get_screen_number (GdkX11Screen *screen);";function gdk_x11_screen_get_screen_number(screen) bind(c)
gdk;gdk_x11_screen_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11screen.h;"GType gdk_x11_screen_get_type (void);";function gdk_x11_screen_get_type() bind(c)
gdk;gdk_x11_screen_get_window_manager_name;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11screen.h;"const char* gdk_x11_screen_get_window_manager_name (GdkX11Screen *screen);";function gdk_x11_screen_get_window_manager_name(screen) bind(c)
gdk;gdk_x11_screen_get_xscreen;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11screen.h;"Screen * gdk_x11_screen_get_xscreen (GdkX11Screen *screen);";function gdk_x11_screen_get_xscreen(screen) bind(c)
gdk;gdk_x11_screen_supports_net_wm_hint;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11screen.h;"gboolean gdk_x11_screen_supports_net_wm_hint (GdkX11Screen *screen, const char *property_name);";function gdk_x11_screen_supports_net_wm_hint(screen, property_name) bind(c)
gdk;gdk_x11_set_sm_client_id;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11display.h;"void gdk_x11_set_sm_client_id (const char *sm_client_id);";subroutine gdk_x11_set_sm_client_id(sm_client_id) bind(c)
gdk;gdk_x11_surface_get_desktop;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"guint32 gdk_x11_surface_get_desktop (GdkSurface *surface);";function gdk_x11_surface_get_desktop(surface) bind(c)
gdk;gdk_x11_surface_get_group;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"GdkSurface * gdk_x11_surface_get_group (GdkSurface *surface);";function gdk_x11_surface_get_group(surface) bind(c)
gdk;gdk_x11_surface_get_type;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"GType gdk_x11_surface_get_type (void);";function gdk_x11_surface_get_type() bind(c)
gdk;gdk_x11_surface_get_xid;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"Window gdk_x11_surface_get_xid (GdkSurface *surface);";function gdk_x11_surface_get_xid(surface) bind(c)
gdk;gdk_x11_surface_lookup_for_display;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"GdkSurface *gdk_x11_surface_lookup_for_display (GdkDisplay *display, Window window);";function gdk_x11_surface_lookup_for_display(display, window) bind(c)
gdk;gdk_x11_surface_move_to_current_desktop;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"void gdk_x11_surface_move_to_current_desktop (GdkSurface *surface);";subroutine gdk_x11_surface_move_to_current_desktop(surface) bind(c)
gdk;gdk_x11_surface_move_to_desktop;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"void gdk_x11_surface_move_to_desktop (GdkSurface *surface, guint32 desktop);";subroutine gdk_x11_surface_move_to_desktop(surface, desktop) bind(c)
gdk;gdk_x11_surface_set_frame_sync_enabled;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"void gdk_x11_surface_set_frame_sync_enabled (GdkSurface *surface, gboolean frame_sync_enabled);";subroutine gdk_x11_surface_set_frame_sync_enabled(surface, frame_sync_enabled) bind(c)
gdk;gdk_x11_surface_set_group;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"void gdk_x11_surface_set_group (GdkSurface *surface, GdkSurface *leader);";subroutine gdk_x11_surface_set_group(surface, leader) bind(c)
gdk;gdk_x11_surface_set_skip_pager_hint;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"void gdk_x11_surface_set_skip_pager_hint (GdkSurface *surface, gboolean skips_pager);";subroutine gdk_x11_surface_set_skip_pager_hint(surface, skips_pager) bind(c)
gdk;gdk_x11_surface_set_skip_taskbar_hint;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"void gdk_x11_surface_set_skip_taskbar_hint (GdkSurface *surface, gboolean skips_taskbar);";subroutine gdk_x11_surface_set_skip_taskbar_hint(surface, skips_taskbar) bind(c)
gdk;gdk_x11_surface_set_theme_variant;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"void gdk_x11_surface_set_theme_variant (GdkSurface *surface, const char *variant);";subroutine gdk_x11_surface_set_theme_variant(surface, variant) bind(c)
gdk;gdk_x11_surface_set_urgency_hint;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"void gdk_x11_surface_set_urgency_hint (GdkSurface *surface, gboolean urgent);";subroutine gdk_x11_surface_set_urgency_hint(surface, urgent) bind(c)
gdk;gdk_x11_surface_set_user_time;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"void gdk_x11_surface_set_user_time (GdkSurface *surface, guint32 timestamp);";subroutine gdk_x11_surface_set_user_time(surface, timestamp) bind(c)
gdk;gdk_x11_surface_set_utf8_property;GDK_AVAILABLE_IN_ALL;gdk-auto.f90;/usr/include/gtk-4.0/gdk/x11/gdkx11surface.h;"void gdk_x11_surface_set_utf8_property (GdkSurface *surface, const char *name, const char *value);";subroutine gdk_x11_surface_set_utf8_property(surface, name, value) bind(c)
gdk_pixbuf;gdk_colorspace_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h;"GType gdk_colorspace_get_type (void) G_GNUC_CONST;";function gdk_colorspace_get_type() bind(c)
gdk_pixbuf;gdk_interp_type_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h;"GType gdk_interp_type_get_type (void) G_GNUC_CONST;";function gdk_interp_type_get_type() bind(c)
gdk_pixbuf;gdk_pixbuf_add_alpha;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_add_alpha (const GdkPixbuf *pixbuf, gboolean substitute_color, guchar r, guchar g, guchar b);";function gdk_pixbuf_add_alpha(pixbuf, substitute_color, r, g, b) bind(c)
gdk_pixbuf;gdk_pixbuf_alpha_mode_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h;"GType gdk_pixbuf_alpha_mode_get_type (void) G_GNUC_CONST;";function gdk_pixbuf_alpha_mode_get_type() bind(c)
gdk_pixbuf;gdk_pixbuf_animation_get_height;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"int gdk_pixbuf_animation_get_height (GdkPixbufAnimation *animation);";function gdk_pixbuf_animation_get_height(animation) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_get_iter;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GdkPixbufAnimationIter *gdk_pixbuf_animation_get_iter (GdkPixbufAnimation *animation, const GTimeVal *start_time);";function gdk_pixbuf_animation_get_iter(animation, start_time) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_get_static_image;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GdkPixbuf *gdk_pixbuf_animation_get_static_image (GdkPixbufAnimation *animation);";function gdk_pixbuf_animation_get_static_image(animation) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GType gdk_pixbuf_animation_get_type (void) G_GNUC_CONST;";function gdk_pixbuf_animation_get_type() bind(c)
gdk_pixbuf;gdk_pixbuf_animation_get_width;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"int gdk_pixbuf_animation_get_width (GdkPixbufAnimation *animation);";function gdk_pixbuf_animation_get_width(animation) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_is_static_image;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"gboolean gdk_pixbuf_animation_is_static_image (GdkPixbufAnimation *animation);";function gdk_pixbuf_animation_is_static_image(animation) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_iter_advance;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"gboolean gdk_pixbuf_animation_iter_advance (GdkPixbufAnimationIter *iter, const GTimeVal *current_time);";function gdk_pixbuf_animation_iter_advance(iter, current_time) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_iter_get_delay_time;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"int gdk_pixbuf_animation_iter_get_delay_time (GdkPixbufAnimationIter *iter);";function gdk_pixbuf_animation_iter_get_delay_time(iter) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_iter_get_pixbuf;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GdkPixbuf *gdk_pixbuf_animation_iter_get_pixbuf (GdkPixbufAnimationIter *iter);";function gdk_pixbuf_animation_iter_get_pixbuf(iter) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_iter_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GType gdk_pixbuf_animation_iter_get_type (void) G_GNUC_CONST;";function gdk_pixbuf_animation_iter_get_type() bind(c)
gdk_pixbuf;gdk_pixbuf_animation_iter_on_currently_loading_frame;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"gboolean gdk_pixbuf_animation_iter_on_currently_loading_frame (GdkPixbufAnimationIter *iter);";function gdk_pixbuf_animation_iter_on_currently_loading_frame(iter) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_new_from_file;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GdkPixbufAnimation *gdk_pixbuf_animation_new_from_file (const char *filename, GError **error);";function gdk_pixbuf_animation_new_from_file(filename, error) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_new_from_file_utf8;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GdkPixbufAnimation *gdk_pixbuf_animation_new_from_file_utf8 (const char *filename, GError **error);";function gdk_pixbuf_animation_new_from_file_utf8(filename, error) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_new_from_resource;GDK_PIXBUF_AVAILABLE_IN_2_28;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GdkPixbufAnimation *gdk_pixbuf_animation_new_from_resource(const char *resource_path, GError **error);";function gdk_pixbuf_animation_new_from_resource(resource_path, error) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_new_from_stream;GDK_PIXBUF_AVAILABLE_IN_2_28;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GdkPixbufAnimation *gdk_pixbuf_animation_new_from_stream (GInputStream *stream, GCancellable *cancellable, GError **error);";function gdk_pixbuf_animation_new_from_stream(stream, cancellable, error) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_new_from_stream_async;GDK_PIXBUF_AVAILABLE_IN_2_28;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"void gdk_pixbuf_animation_new_from_stream_async (GInputStream *stream, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_pixbuf_animation_new_from_stream_async(stream, cancellable, callback, user_data) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_new_from_stream_finish;GDK_PIXBUF_AVAILABLE_IN_2_28;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GdkPixbufAnimation *gdk_pixbuf_animation_new_from_stream_finish (GAsyncResult*async_result, GError **error);";function gdk_pixbuf_animation_new_from_stream_finish(async_result, error) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_ref;GDK_PIXBUF_DEPRECATED_IN_2_0_FOR(g_object_ref);gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GdkPixbufAnimation *gdk_pixbuf_animation_ref (GdkPixbufAnimation *animation);";function gdk_pixbuf_animation_ref(animation) bind(c)
gdk_pixbuf;gdk_pixbuf_animation_unref;GDK_PIXBUF_DEPRECATED_IN_2_0_FOR(g_object_unref);gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"void gdk_pixbuf_animation_unref (GdkPixbufAnimation *animation);";subroutine gdk_pixbuf_animation_unref(animation) bind(c)
gdk_pixbuf;gdk_pixbuf_apply_embedded_orientation;GDK_PIXBUF_AVAILABLE_IN_2_12;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_apply_embedded_orientation (GdkPixbuf *src);";function gdk_pixbuf_apply_embedded_orientation(src) bind(c)
gdk_pixbuf;gdk_pixbuf_calculate_rowstride;GDK_PIXBUF_AVAILABLE_IN_2_36;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"gint gdk_pixbuf_calculate_rowstride (GdkColorspace colorspace, gboolean has_alpha, int bits_per_sample, int width, int height);";function gdk_pixbuf_calculate_rowstride(colorspace, has_alpha, bits_per_sample, width, height) bind(c)
gdk_pixbuf;gdk_pixbuf_composite;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h;"void gdk_pixbuf_composite (const GdkPixbuf *src, GdkPixbuf *dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, GdkInterpType interp_type, int overall_alpha);";subroutine gdk_pixbuf_composite(src, dest, dest_x, dest_y, dest_width, dest_height, offset_x, offset_y, scale_x, scale_y, interp_type, overall_alpha) bind(c)
gdk_pixbuf;gdk_pixbuf_composite_color;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h;"void gdk_pixbuf_composite_color (const GdkPixbuf *src, GdkPixbuf *dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, GdkInterpType interp_type, int overall_alpha, int check_x, int check_y, int check_size, guint32 color1, guint32 color2);";subroutine gdk_pixbuf_composite_color(src, dest, dest_x, dest_y, dest_width, dest_height, offset_x, offset_y, scale_x, scale_y, interp_type, overall_alpha, check_x, check_y, check_size, color1, color2) bind(c)
gdk_pixbuf;gdk_pixbuf_composite_color_simple;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h;"GdkPixbuf *gdk_pixbuf_composite_color_simple (const GdkPixbuf *src, int dest_width, int dest_height, GdkInterpType interp_type, int overall_alpha, int check_size, guint32 color1, guint32 color2);";function gdk_pixbuf_composite_color_simple(src, dest_width, dest_height, interp_type, overall_alpha, check_size, color1, color2) bind(c)
gdk_pixbuf;gdk_pixbuf_copy;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_copy (const GdkPixbuf *pixbuf);";function gdk_pixbuf_copy(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_copy_area;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"void gdk_pixbuf_copy_area (const GdkPixbuf *src_pixbuf, int src_x, int src_y, int width, int height, GdkPixbuf *dest_pixbuf, int dest_x, int dest_y);";subroutine gdk_pixbuf_copy_area(src_pixbuf, src_x, src_y, width, height, dest_pixbuf, dest_x, dest_y) bind(c)
gdk_pixbuf;gdk_pixbuf_copy_options;GDK_PIXBUF_AVAILABLE_IN_2_36;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"gboolean gdk_pixbuf_copy_options (GdkPixbuf *src_pixbuf, GdkPixbuf *dest_pixbuf);";function gdk_pixbuf_copy_options(src_pixbuf, dest_pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_error_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h;"GType gdk_pixbuf_error_get_type (void) G_GNUC_CONST;";function gdk_pixbuf_error_get_type() bind(c)
gdk_pixbuf;gdk_pixbuf_error_quark;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GQuark gdk_pixbuf_error_quark (void);";function gdk_pixbuf_error_quark() bind(c)
gdk_pixbuf;gdk_pixbuf_fill;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"void gdk_pixbuf_fill (GdkPixbuf *pixbuf, guint32 pixel);";subroutine gdk_pixbuf_fill(pixbuf, pixel) bind(c)
gdk_pixbuf;gdk_pixbuf_flip;GDK_PIXBUF_AVAILABLE_IN_2_6;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h;"GdkPixbuf *gdk_pixbuf_flip (const GdkPixbuf *src, gboolean horizontal);";function gdk_pixbuf_flip(src, horizontal) bind(c)
gdk_pixbuf;gdk_pixbuf_format_copy;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"GdkPixbufFormat *gdk_pixbuf_format_copy (const GdkPixbufFormat *format);";function gdk_pixbuf_format_copy(format) bind(c)
gdk_pixbuf;gdk_pixbuf_format_free;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"void gdk_pixbuf_format_free (GdkPixbufFormat *format);";subroutine gdk_pixbuf_format_free(format) bind(c)
gdk_pixbuf;gdk_pixbuf_format_get_description;GDK_PIXBUF_AVAILABLE_IN_2_2;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"gchar *gdk_pixbuf_format_get_description (GdkPixbufFormat *format);";function gdk_pixbuf_format_get_description(format) bind(c)
gdk_pixbuf;gdk_pixbuf_format_get_extensions;GDK_PIXBUF_AVAILABLE_IN_2_2;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"gchar **gdk_pixbuf_format_get_extensions (GdkPixbufFormat *format);";function gdk_pixbuf_format_get_extensions(format) bind(c)
gdk_pixbuf;gdk_pixbuf_format_get_license;GDK_PIXBUF_AVAILABLE_IN_2_6;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"gchar *gdk_pixbuf_format_get_license (GdkPixbufFormat *format);";function gdk_pixbuf_format_get_license(format) bind(c)
gdk_pixbuf;gdk_pixbuf_format_get_mime_types;GDK_PIXBUF_AVAILABLE_IN_2_2;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"gchar **gdk_pixbuf_format_get_mime_types (GdkPixbufFormat *format);";function gdk_pixbuf_format_get_mime_types(format) bind(c)
gdk_pixbuf;gdk_pixbuf_format_get_name;GDK_PIXBUF_AVAILABLE_IN_2_2;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"gchar *gdk_pixbuf_format_get_name (GdkPixbufFormat *format);";function gdk_pixbuf_format_get_name(format) bind(c)
gdk_pixbuf;gdk_pixbuf_format_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"GType gdk_pixbuf_format_get_type (void) G_GNUC_CONST;";function gdk_pixbuf_format_get_type() bind(c)
gdk_pixbuf;gdk_pixbuf_format_is_disabled;GDK_PIXBUF_AVAILABLE_IN_2_6;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"gboolean gdk_pixbuf_format_is_disabled (GdkPixbufFormat *format);";function gdk_pixbuf_format_is_disabled(format) bind(c)
gdk_pixbuf;gdk_pixbuf_format_is_save_option_supported;GDK_PIXBUF_AVAILABLE_IN_2_36;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"gboolean gdk_pixbuf_format_is_save_option_supported (GdkPixbufFormat *format, const gchar *option_key);";function gdk_pixbuf_format_is_save_option_supported(format, option_key) bind(c)
gdk_pixbuf;gdk_pixbuf_format_is_scalable;GDK_PIXBUF_AVAILABLE_IN_2_6;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"gboolean gdk_pixbuf_format_is_scalable (GdkPixbufFormat *format);";function gdk_pixbuf_format_is_scalable(format) bind(c)
gdk_pixbuf;gdk_pixbuf_format_is_writable;GDK_PIXBUF_AVAILABLE_IN_2_2;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"gboolean gdk_pixbuf_format_is_writable (GdkPixbufFormat *format);";function gdk_pixbuf_format_is_writable(format) bind(c)
gdk_pixbuf;gdk_pixbuf_format_set_disabled;GDK_PIXBUF_AVAILABLE_IN_2_6;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"void gdk_pixbuf_format_set_disabled (GdkPixbufFormat *format, gboolean disabled);";subroutine gdk_pixbuf_format_set_disabled(format, disabled) bind(c)
gdk_pixbuf;gdk_pixbuf_from_pixdata;GDK_PIXBUF_DEPRECATED_IN_2_32;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixdata.h;"GdkPixbuf* gdk_pixbuf_from_pixdata (const GdkPixdata *pixdata, gboolean copy_pixels, GError **error);";function gdk_pixbuf_from_pixdata(pixdata, copy_pixels, error) bind(c)
gdk_pixbuf;gdk_pixbuf_get_bits_per_sample;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"int gdk_pixbuf_get_bits_per_sample (const GdkPixbuf *pixbuf);";function gdk_pixbuf_get_bits_per_sample(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_get_byte_length;GDK_PIXBUF_AVAILABLE_IN_2_26;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"gsize gdk_pixbuf_get_byte_length (const GdkPixbuf *pixbuf);";function gdk_pixbuf_get_byte_length(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_get_colorspace;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkColorspace gdk_pixbuf_get_colorspace (const GdkPixbuf *pixbuf);";function gdk_pixbuf_get_colorspace(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_get_file_info;GDK_PIXBUF_AVAILABLE_IN_2_4;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"GdkPixbufFormat *gdk_pixbuf_get_file_info (const gchar *filename, gint *width, gint *height);";function gdk_pixbuf_get_file_info(filename, width, height) bind(c)
gdk_pixbuf;gdk_pixbuf_get_file_info_async;GDK_PIXBUF_AVAILABLE_IN_2_32;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"void gdk_pixbuf_get_file_info_async (const gchar *filename, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_pixbuf_get_file_info_async(filename, cancellable, callback, user_data) bind(c)
gdk_pixbuf;gdk_pixbuf_get_file_info_finish;GDK_PIXBUF_AVAILABLE_IN_2_32;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"GdkPixbufFormat *gdk_pixbuf_get_file_info_finish (GAsyncResult *async_result, gint *width, gint *height, GError **error);";function gdk_pixbuf_get_file_info_finish(async_result, width, height, error) bind(c)
gdk_pixbuf;gdk_pixbuf_get_formats;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"GSList *gdk_pixbuf_get_formats (void);";function gdk_pixbuf_get_formats() bind(c)
gdk_pixbuf;gdk_pixbuf_get_has_alpha;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"gboolean gdk_pixbuf_get_has_alpha (const GdkPixbuf *pixbuf);";function gdk_pixbuf_get_has_alpha(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_get_height;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"int gdk_pixbuf_get_height (const GdkPixbuf *pixbuf);";function gdk_pixbuf_get_height(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_get_n_channels;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"int gdk_pixbuf_get_n_channels (const GdkPixbuf *pixbuf);";function gdk_pixbuf_get_n_channels(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_get_option;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"const gchar * gdk_pixbuf_get_option (GdkPixbuf *pixbuf, const gchar *key);";function gdk_pixbuf_get_option(pixbuf, key) bind(c)
gdk_pixbuf;gdk_pixbuf_get_options;GDK_PIXBUF_AVAILABLE_IN_2_32;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GHashTable * gdk_pixbuf_get_options (GdkPixbuf *pixbuf);";function gdk_pixbuf_get_options(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_get_pixels;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"guchar *gdk_pixbuf_get_pixels (const GdkPixbuf *pixbuf);";function gdk_pixbuf_get_pixels(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_get_pixels_with_length;GDK_PIXBUF_AVAILABLE_IN_2_26;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"guchar *gdk_pixbuf_get_pixels_with_length (const GdkPixbuf *pixbuf, guint *length);";function gdk_pixbuf_get_pixels_with_length(pixbuf, length) bind(c)
gdk_pixbuf;gdk_pixbuf_get_rowstride;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"int gdk_pixbuf_get_rowstride (const GdkPixbuf *pixbuf);";function gdk_pixbuf_get_rowstride(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GType gdk_pixbuf_get_type (void) G_GNUC_CONST;";function gdk_pixbuf_get_type() bind(c)
gdk_pixbuf;gdk_pixbuf_get_width;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"int gdk_pixbuf_get_width (const GdkPixbuf *pixbuf);";function gdk_pixbuf_get_width(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_init_modules;GDK_PIXBUF_AVAILABLE_IN_2_40;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-io.h;"gboolean gdk_pixbuf_init_modules (const char *path, GError **error);";function gdk_pixbuf_init_modules(path, error) bind(c)
gdk_pixbuf;gdk_pixbuf_loader_close;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h;"gboolean gdk_pixbuf_loader_close (GdkPixbufLoader *loader, GError **error);";function gdk_pixbuf_loader_close(loader, error) bind(c)
gdk_pixbuf;gdk_pixbuf_loader_get_animation;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h;"GdkPixbufAnimation * gdk_pixbuf_loader_get_animation (GdkPixbufLoader *loader);";function gdk_pixbuf_loader_get_animation(loader) bind(c)
gdk_pixbuf;gdk_pixbuf_loader_get_format;GDK_PIXBUF_AVAILABLE_IN_2_2;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h;"GdkPixbufFormat *gdk_pixbuf_loader_get_format (GdkPixbufLoader *loader);";function gdk_pixbuf_loader_get_format(loader) bind(c)
gdk_pixbuf;gdk_pixbuf_loader_get_pixbuf;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h;"GdkPixbuf * gdk_pixbuf_loader_get_pixbuf (GdkPixbufLoader *loader);";function gdk_pixbuf_loader_get_pixbuf(loader) bind(c)
gdk_pixbuf;gdk_pixbuf_loader_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h;"GType gdk_pixbuf_loader_get_type (void) G_GNUC_CONST;";function gdk_pixbuf_loader_get_type() bind(c)
gdk_pixbuf;gdk_pixbuf_loader_new;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h;"GdkPixbufLoader * gdk_pixbuf_loader_new (void);";function gdk_pixbuf_loader_new() bind(c)
gdk_pixbuf;gdk_pixbuf_loader_new_with_mime_type;GDK_PIXBUF_AVAILABLE_IN_2_4;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h;"GdkPixbufLoader * gdk_pixbuf_loader_new_with_mime_type (const char *mime_type, GError **error);";function gdk_pixbuf_loader_new_with_mime_type(mime_type, error) bind(c)
gdk_pixbuf;gdk_pixbuf_loader_new_with_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h;"GdkPixbufLoader * gdk_pixbuf_loader_new_with_type (const char *image_type, GError **error);";function gdk_pixbuf_loader_new_with_type(image_type, error) bind(c)
gdk_pixbuf;gdk_pixbuf_loader_set_size;GDK_PIXBUF_AVAILABLE_IN_2_2;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h;"void gdk_pixbuf_loader_set_size (GdkPixbufLoader *loader, int width, int height);";subroutine gdk_pixbuf_loader_set_size(loader, width, height) bind(c)
gdk_pixbuf;gdk_pixbuf_loader_write;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h;"gboolean gdk_pixbuf_loader_write (GdkPixbufLoader *loader, const guchar *buf, gsize count, GError **error);";function gdk_pixbuf_loader_write(loader, buf, count, error) bind(c)
gdk_pixbuf;gdk_pixbuf_loader_write_bytes;GDK_PIXBUF_AVAILABLE_IN_2_30;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-loader.h;"gboolean gdk_pixbuf_loader_write_bytes (GdkPixbufLoader *loader, GBytes *buffer, GError **error);";function gdk_pixbuf_loader_write_bytes(loader, buffer, error) bind(c)
gdk_pixbuf;gdk_pixbuf_new;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new (GdkColorspace colorspace, gboolean has_alpha, int bits_per_sample, int width, int height);";function gdk_pixbuf_new(colorspace, has_alpha, bits_per_sample, width, height) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_bytes;GDK_PIXBUF_AVAILABLE_IN_2_32;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_bytes (GBytes *data, GdkColorspace colorspace, gboolean has_alpha, int bits_per_sample, int width, int height, int rowstride);";function gdk_pixbuf_new_from_bytes(data, colorspace, has_alpha, bits_per_sample, width, height, rowstride) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_data;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_data (const guchar *data, GdkColorspace colorspace, gboolean has_alpha, int bits_per_sample, int width, int height, int rowstride, GdkPixbufDestroyNotify destroy_fn, gpointer destroy_fn_data);";function gdk_pixbuf_new_from_data(data, colorspace, has_alpha, bits_per_sample, width, height, rowstride, destroy_fn, destroy_fn_data) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_file_at_scale_utf8;GDK_PIXBUF_AVAILABLE_IN_2_6;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_file_at_scale_utf8 (const char *filename, int width, int height, gboolean preserve_aspect_ratio, GError **error);";function gdk_pixbuf_new_from_file_at_scale_utf8(filename, width, height, preserve_aspect_ratio, error) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_file_at_size_utf8;GDK_PIXBUF_AVAILABLE_IN_2_4;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_file_at_size_utf8 (const char *filename, int width, int height, GError **error);";function gdk_pixbuf_new_from_file_at_size_utf8(filename, width, height, error) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_file_utf8;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_file_utf8 (const char *filename, GError **error);";function gdk_pixbuf_new_from_file_utf8(filename, error) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_inline;GDK_PIXBUF_DEPRECATED_IN_2_32;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf* gdk_pixbuf_new_from_inline (gint data_length, const guint8 *data, gboolean copy_pixels, GError **error);";function gdk_pixbuf_new_from_inline(data_length, data, copy_pixels, error) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_resource;GDK_PIXBUF_AVAILABLE_IN_2_26;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_resource (const char *resource_path, GError **error);";function gdk_pixbuf_new_from_resource(resource_path, error) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_resource_at_scale;GDK_PIXBUF_AVAILABLE_IN_2_26;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_resource_at_scale (const char *resource_path, int width, int height, gboolean preserve_aspect_ratio, GError **error);";function gdk_pixbuf_new_from_resource_at_scale(resource_path, width, height, preserve_aspect_ratio, error) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_stream;GDK_PIXBUF_AVAILABLE_IN_2_14;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_stream (GInputStream *stream, GCancellable *cancellable, GError **error);";function gdk_pixbuf_new_from_stream(stream, cancellable, error) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_stream_async;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"void gdk_pixbuf_new_from_stream_async (GInputStream *stream, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_pixbuf_new_from_stream_async(stream, cancellable, callback, user_data) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_stream_at_scale;GDK_PIXBUF_AVAILABLE_IN_2_14;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_stream_at_scale (GInputStream *stream, gint width, gint height, gboolean preserve_aspect_ratio, GCancellable *cancellable, GError **error);";function gdk_pixbuf_new_from_stream_at_scale(stream, width, height, preserve_aspect_ratio, cancellable, error) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_stream_at_scale_async;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"void gdk_pixbuf_new_from_stream_at_scale_async (GInputStream *stream, gint width, gint height, gboolean preserve_aspect_ratio, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_pixbuf_new_from_stream_at_scale_async(stream, width, height, preserve_aspect_ratio, cancellable, callback, user_data) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_stream_finish;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_stream_finish (GAsyncResult *async_result, GError **error);";function gdk_pixbuf_new_from_stream_finish(async_result, error) bind(c)
gdk_pixbuf;gdk_pixbuf_new_from_xpm_data;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_xpm_data (const char **data);";function gdk_pixbuf_new_from_xpm_data(data) bind(c)
gdk_pixbuf;gdk_pixbuf_new_subpixbuf;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_subpixbuf (GdkPixbuf *src_pixbuf, int src_x, int src_y, int width, int height);";function gdk_pixbuf_new_subpixbuf(src_pixbuf, src_x, src_y, width, height) bind(c)
gdk_pixbuf;gdk_pixbuf_non_anim_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GType gdk_pixbuf_non_anim_get_type (void) G_GNUC_CONST;";function gdk_pixbuf_non_anim_get_type() bind(c)
gdk_pixbuf;gdk_pixbuf_non_anim_new;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-animation.h;"GdkPixbufAnimation* gdk_pixbuf_non_anim_new (GdkPixbuf *pixbuf);";function gdk_pixbuf_non_anim_new(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_read_pixel_bytes;GDK_PIXBUF_AVAILABLE_IN_2_32;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GBytes * gdk_pixbuf_read_pixel_bytes (const GdkPixbuf *pixbuf);";function gdk_pixbuf_read_pixel_bytes(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_read_pixels;GDK_PIXBUF_AVAILABLE_IN_2_32;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"const guint8* gdk_pixbuf_read_pixels (const GdkPixbuf *pixbuf);";function gdk_pixbuf_read_pixels(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_ref;GDK_PIXBUF_DEPRECATED_IN_2_0_FOR(g_object_ref);gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_ref (GdkPixbuf *pixbuf);";function gdk_pixbuf_ref(pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_remove_option;GDK_PIXBUF_AVAILABLE_IN_2_36;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"gboolean gdk_pixbuf_remove_option (GdkPixbuf *pixbuf, const gchar *key);";function gdk_pixbuf_remove_option(pixbuf, key) bind(c)
gdk_pixbuf;gdk_pixbuf_rotate_simple;GDK_PIXBUF_AVAILABLE_IN_2_6;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h;"GdkPixbuf *gdk_pixbuf_rotate_simple (const GdkPixbuf *src, GdkPixbufRotation angle);";function gdk_pixbuf_rotate_simple(src, angle) bind(c)
gdk_pixbuf;gdk_pixbuf_rotation_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-enum-types.h;"GType gdk_pixbuf_rotation_get_type (void) G_GNUC_CONST;";function gdk_pixbuf_rotation_get_type() bind(c)
gdk_pixbuf;gdk_pixbuf_saturate_and_pixelate;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"void gdk_pixbuf_saturate_and_pixelate (const GdkPixbuf *src, GdkPixbuf *dest, gfloat saturation, gboolean pixelate);";subroutine gdk_pixbuf_saturate_and_pixelate(src, dest, saturation, pixelate) bind(c)
gdk_pixbuf;gdk_pixbuf_save_to_bufferv;GDK_PIXBUF_AVAILABLE_IN_2_4;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"gboolean gdk_pixbuf_save_to_bufferv (GdkPixbuf *pixbuf, gchar **buffer, gsize *buffer_size, const char *type, char **option_keys, char **option_values, GError **error);";function gdk_pixbuf_save_to_bufferv(pixbuf, buffer, buffer_size, type, option_keys, option_values, error) bind(c)
gdk_pixbuf;gdk_pixbuf_save_to_callbackv;GDK_PIXBUF_AVAILABLE_IN_2_4;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"gboolean gdk_pixbuf_save_to_callbackv (GdkPixbuf *pixbuf, GdkPixbufSaveFunc save_func, gpointer user_data, const char *type, char **option_keys, char **option_values, GError **error);";function gdk_pixbuf_save_to_callbackv(pixbuf, save_func, user_data, type, option_keys, option_values, error) bind(c)
gdk_pixbuf;gdk_pixbuf_save_to_stream_finish;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"gboolean gdk_pixbuf_save_to_stream_finish (GAsyncResult *async_result, GError **error);";function gdk_pixbuf_save_to_stream_finish(async_result, error) bind(c)
gdk_pixbuf;gdk_pixbuf_save_to_streamv;GDK_PIXBUF_AVAILABLE_IN_2_36;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"gboolean gdk_pixbuf_save_to_streamv (GdkPixbuf *pixbuf, GOutputStream *stream, const char *type, char **option_keys, char **option_values, GCancellable *cancellable, GError **error);";function gdk_pixbuf_save_to_streamv(pixbuf, stream, type, option_keys, option_values, cancellable, error) bind(c)
gdk_pixbuf;gdk_pixbuf_save_to_streamv_async;GDK_PIXBUF_AVAILABLE_IN_2_36;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"void gdk_pixbuf_save_to_streamv_async (GdkPixbuf *pixbuf, GOutputStream *stream, const gchar *type, gchar **option_keys, gchar **option_values, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gdk_pixbuf_save_to_streamv_async(pixbuf, stream, type, option_keys, option_values, cancellable, callback, user_data) bind(c)
gdk_pixbuf;gdk_pixbuf_savev_utf8;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"gboolean gdk_pixbuf_savev_utf8 (GdkPixbuf *pixbuf, const char *filename, const char *type, char **option_keys, char **option_values, GError **error);";function gdk_pixbuf_savev_utf8(pixbuf, filename, type, option_keys, option_values, error) bind(c)
gdk_pixbuf;gdk_pixbuf_scale;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h;"void gdk_pixbuf_scale (const GdkPixbuf *src, GdkPixbuf *dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, GdkInterpType interp_type);";subroutine gdk_pixbuf_scale(src, dest, dest_x, dest_y, dest_width, dest_height, offset_x, offset_y, scale_x, scale_y, interp_type) bind(c)
gdk_pixbuf;gdk_pixbuf_scale_simple;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-transform.h;"GdkPixbuf *gdk_pixbuf_scale_simple (const GdkPixbuf *src, int dest_width, int dest_height, GdkInterpType interp_type);";function gdk_pixbuf_scale_simple(src, dest_width, dest_height, interp_type) bind(c)
gdk_pixbuf;gdk_pixbuf_set_option;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"gboolean gdk_pixbuf_set_option (GdkPixbuf *pixbuf, const gchar *key, const gchar *value);";function gdk_pixbuf_set_option(pixbuf, key, value) bind(c)
gdk_pixbuf;gdk_pixbuf_simple_anim_add_frame;GDK_PIXBUF_AVAILABLE_IN_2_8;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h;"void gdk_pixbuf_simple_anim_add_frame (GdkPixbufSimpleAnim *animation, GdkPixbuf *pixbuf);";subroutine gdk_pixbuf_simple_anim_add_frame(animation, pixbuf) bind(c)
gdk_pixbuf;gdk_pixbuf_simple_anim_get_loop;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h;"gboolean gdk_pixbuf_simple_anim_get_loop (GdkPixbufSimpleAnim *animation);";function gdk_pixbuf_simple_anim_get_loop(animation) bind(c)
gdk_pixbuf;gdk_pixbuf_simple_anim_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h;"GType gdk_pixbuf_simple_anim_get_type (void) G_GNUC_CONST;";function gdk_pixbuf_simple_anim_get_type() bind(c)
gdk_pixbuf;gdk_pixbuf_simple_anim_iter_get_type;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h;"GType gdk_pixbuf_simple_anim_iter_get_type (void) G_GNUC_CONST;";function gdk_pixbuf_simple_anim_iter_get_type() bind(c)
gdk_pixbuf;gdk_pixbuf_simple_anim_new;GDK_PIXBUF_AVAILABLE_IN_2_8;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h;"GdkPixbufSimpleAnim *gdk_pixbuf_simple_anim_new (gint width, gint height, gfloat rate);";function gdk_pixbuf_simple_anim_new(width, height, rate) bind(c)
gdk_pixbuf;gdk_pixbuf_simple_anim_set_loop;GDK_PIXBUF_AVAILABLE_IN_ALL;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-simple-anim.h;"void gdk_pixbuf_simple_anim_set_loop (GdkPixbufSimpleAnim *animation, gboolean loop);";subroutine gdk_pixbuf_simple_anim_set_loop(animation, loop) bind(c)
gdk_pixbuf;gdk_pixbuf_unref;GDK_PIXBUF_DEPRECATED_IN_2_0_FOR(g_object_unref);gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"void gdk_pixbuf_unref (GdkPixbuf *pixbuf);";subroutine gdk_pixbuf_unref(pixbuf) bind(c)
gdk_pixbuf;gdk_pixdata_deserialize;GDK_PIXBUF_DEPRECATED_IN_2_32;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixdata.h;"gboolean gdk_pixdata_deserialize (GdkPixdata *pixdata, guint stream_length, const guint8 *stream, GError **error);";function gdk_pixdata_deserialize(pixdata, stream_length, stream, error) bind(c)
gdk_pixbuf;gdk_pixdata_from_pixbuf;GDK_PIXBUF_DEPRECATED_IN_2_32;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixdata.h;"gpointer gdk_pixdata_from_pixbuf (GdkPixdata *pixdata, const GdkPixbuf *pixbuf, gboolean use_rle);";function gdk_pixdata_from_pixbuf(pixdata, pixbuf, use_rle) bind(c)
gdk_pixbuf;gdk_pixdata_serialize;GDK_PIXBUF_DEPRECATED_IN_2_32;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixdata.h;"guint8* gdk_pixdata_serialize (const GdkPixdata *pixdata, guint *stream_length_p);";function gdk_pixdata_serialize(pixdata, stream_length_p) bind(c)
gdk_pixbuf;gdk_pixdata_to_csource;GDK_PIXBUF_DEPRECATED_IN_2_32;gdk-pixbuf-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixdata.h;"GString* gdk_pixdata_to_csource (GdkPixdata *pixdata, const gchar *name, GdkPixdataDumpType dump_type);";function gdk_pixdata_to_csource(pixdata, name, dump_type) bind(c)
graphene;graphene_box_alloc;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"GRAPHENE_BEGIN_DECLS graphene_box_t * graphene_box_alloc (void);";function graphene_box_alloc() bind(c)
graphene;graphene_box_contains_box;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"bool graphene_box_contains_box (const graphene_box_t *a, const graphene_box_t *b);";function graphene_box_contains_box(a, b) bind(c)
graphene;graphene_box_contains_point;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"bool graphene_box_contains_point (const graphene_box_t *box, const graphene_point3d_t *point);";function graphene_box_contains_point(box, point) bind(c)
graphene;graphene_box_empty;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"const graphene_box_t * graphene_box_empty (void);";function graphene_box_empty() bind(c)
graphene;graphene_box_equal;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"bool graphene_box_equal (const graphene_box_t *a, const graphene_box_t *b);";function graphene_box_equal(a, b) bind(c)
graphene;graphene_box_expand;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"void graphene_box_expand (const graphene_box_t *box, const graphene_point3d_t *point, graphene_box_t *res);";subroutine graphene_box_expand(box, point, res) bind(c)
graphene;graphene_box_expand_scalar;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"void graphene_box_expand_scalar (const graphene_box_t *box, float scalar, graphene_box_t *res);";subroutine graphene_box_expand_scalar(box, scalar, res) bind(c)
graphene;graphene_box_expand_vec3;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"void graphene_box_expand_vec3 (const graphene_box_t *box, const graphene_vec3_t *vec, graphene_box_t *res);";subroutine graphene_box_expand_vec3(box, vec, res) bind(c)
graphene;graphene_box_free;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"void graphene_box_free (graphene_box_t *box);";subroutine graphene_box_free(box) bind(c)
graphene;graphene_box_get_bounding_sphere;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"void graphene_box_get_bounding_sphere (const graphene_box_t *box, graphene_sphere_t *sphere);";subroutine graphene_box_get_bounding_sphere(box, sphere) bind(c)
graphene;graphene_box_get_center;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"void graphene_box_get_center (const graphene_box_t *box, graphene_point3d_t *center);";subroutine graphene_box_get_center(box, center) bind(c)
graphene;graphene_box_get_depth;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"float graphene_box_get_depth (const graphene_box_t *box);";function graphene_box_get_depth(box) bind(c)
graphene;graphene_box_get_height;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"float graphene_box_get_height (const graphene_box_t *box);";function graphene_box_get_height(box) bind(c)
graphene;graphene_box_get_max;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"void graphene_box_get_max (const graphene_box_t *box, graphene_point3d_t *max);";subroutine graphene_box_get_max(box, max) bind(c)
graphene;graphene_box_get_min;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"void graphene_box_get_min (const graphene_box_t *box, graphene_point3d_t *min);";subroutine graphene_box_get_min(box, min) bind(c)
graphene;graphene_box_get_size;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"void graphene_box_get_size (const graphene_box_t *box, graphene_vec3_t *size);";subroutine graphene_box_get_size(box, size) bind(c)
graphene;graphene_box_get_type;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_box_get_type (void);";function graphene_box_get_type() bind(c)
graphene;graphene_box_get_width;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"float graphene_box_get_width (const graphene_box_t *box);";function graphene_box_get_width(box) bind(c)
graphene;graphene_box_infinite;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"const graphene_box_t * graphene_box_infinite (void);";function graphene_box_infinite() bind(c)
graphene;graphene_box_init;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"graphene_box_t * graphene_box_init (graphene_box_t *box, const graphene_point3d_t *min, const graphene_point3d_t *max);";function graphene_box_init(box, min, max) bind(c)
graphene;graphene_box_init_from_box;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"graphene_box_t * graphene_box_init_from_box (graphene_box_t *box, const graphene_box_t *src);";function graphene_box_init_from_box(box, src) bind(c)
graphene;graphene_box_init_from_points;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"graphene_box_t * graphene_box_init_from_points (graphene_box_t *box, unsigned int n_points, const graphene_point3d_t *points);";function graphene_box_init_from_points(box, n_points, points) bind(c)
graphene;graphene_box_init_from_vec3;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"graphene_box_t * graphene_box_init_from_vec3 (graphene_box_t *box, const graphene_vec3_t *min, const graphene_vec3_t *max);";function graphene_box_init_from_vec3(box, min, max) bind(c)
graphene;graphene_box_init_from_vectors;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"graphene_box_t * graphene_box_init_from_vectors (graphene_box_t *box, unsigned int n_vectors, const graphene_vec3_t *vectors);";function graphene_box_init_from_vectors(box, n_vectors, vectors) bind(c)
graphene;graphene_box_intersection;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"bool graphene_box_intersection (const graphene_box_t *a, const graphene_box_t *b, graphene_box_t *res);";function graphene_box_intersection(a, b, res) bind(c)
graphene;graphene_box_minus_one;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"const graphene_box_t * graphene_box_minus_one (void);";function graphene_box_minus_one() bind(c)
graphene;graphene_box_one;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"const graphene_box_t * graphene_box_one (void);";function graphene_box_one() bind(c)
graphene;graphene_box_one_minus_one;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"const graphene_box_t * graphene_box_one_minus_one (void);";function graphene_box_one_minus_one() bind(c)
graphene;graphene_box_union;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"void graphene_box_union (const graphene_box_t *a, const graphene_box_t *b, graphene_box_t *res);";subroutine graphene_box_union(a, b, res) bind(c)
graphene;graphene_box_zero;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-box.h;"const graphene_box_t * graphene_box_zero (void);";function graphene_box_zero() bind(c)
graphene;graphene_euler_alloc;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"GRAPHENE_BEGIN_DECLS graphene_euler_t * graphene_euler_alloc (void);";function graphene_euler_alloc() bind(c)
graphene;graphene_euler_equal;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"bool graphene_euler_equal (const graphene_euler_t *a, const graphene_euler_t *b);";function graphene_euler_equal(a, b) bind(c)
graphene;graphene_euler_free;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"void graphene_euler_free (graphene_euler_t *e);";subroutine graphene_euler_free(e) bind(c)
graphene;graphene_euler_get_alpha;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"float graphene_euler_get_alpha (const graphene_euler_t *e);";function graphene_euler_get_alpha(e) bind(c)
graphene;graphene_euler_get_beta;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"float graphene_euler_get_beta (const graphene_euler_t *e);";function graphene_euler_get_beta(e) bind(c)
graphene;graphene_euler_get_gamma;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"float graphene_euler_get_gamma (const graphene_euler_t *e);";function graphene_euler_get_gamma(e) bind(c)
graphene;graphene_euler_get_order;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"graphene_euler_order_t graphene_euler_get_order (const graphene_euler_t *e);";function graphene_euler_get_order(e) bind(c)
graphene;graphene_euler_get_type;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_euler_get_type (void);";function graphene_euler_get_type() bind(c)
graphene;graphene_euler_get_x;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"float graphene_euler_get_x (const graphene_euler_t *e);";function graphene_euler_get_x(e) bind(c)
graphene;graphene_euler_get_y;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"float graphene_euler_get_y (const graphene_euler_t *e);";function graphene_euler_get_y(e) bind(c)
graphene;graphene_euler_get_z;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"float graphene_euler_get_z (const graphene_euler_t *e);";function graphene_euler_get_z(e) bind(c)
graphene;graphene_euler_init;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"graphene_euler_t * graphene_euler_init (graphene_euler_t *e, float x, float y, float z);";function graphene_euler_init(e, x, y, z) bind(c)
graphene;graphene_euler_init_from_euler;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"graphene_euler_t * graphene_euler_init_from_euler (graphene_euler_t *e, const graphene_euler_t *src);";function graphene_euler_init_from_euler(e, src) bind(c)
graphene;graphene_euler_init_from_matrix;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"graphene_euler_t * graphene_euler_init_from_matrix (graphene_euler_t *e, const graphene_matrix_t *m, graphene_euler_order_t order);";function graphene_euler_init_from_matrix(e, m, order) bind(c)
graphene;graphene_euler_init_from_quaternion;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"graphene_euler_t * graphene_euler_init_from_quaternion (graphene_euler_t *e, const graphene_quaternion_t *q, graphene_euler_order_t order);";function graphene_euler_init_from_quaternion(e, q, order) bind(c)
graphene;graphene_euler_init_from_radians;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"graphene_euler_t * graphene_euler_init_from_radians (graphene_euler_t *e, float x, float y, float z, graphene_euler_order_t order);";function graphene_euler_init_from_radians(e, x, y, z, order) bind(c)
graphene;graphene_euler_init_from_vec3;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"graphene_euler_t * graphene_euler_init_from_vec3 (graphene_euler_t *e, const graphene_vec3_t *v, graphene_euler_order_t order);";function graphene_euler_init_from_vec3(e, v, order) bind(c)
graphene;graphene_euler_init_with_order;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"graphene_euler_t * graphene_euler_init_with_order (graphene_euler_t *e, float x, float y, float z, graphene_euler_order_t order);";function graphene_euler_init_with_order(e, x, y, z, order) bind(c)
graphene;graphene_euler_reorder;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"void graphene_euler_reorder (const graphene_euler_t *e, graphene_euler_order_t order, graphene_euler_t *res);";subroutine graphene_euler_reorder(e, order, res) bind(c)
graphene;graphene_euler_to_matrix;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"void graphene_euler_to_matrix (const graphene_euler_t *e, graphene_matrix_t *res);";subroutine graphene_euler_to_matrix(e, res) bind(c)
graphene;graphene_euler_to_quaternion;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"void graphene_euler_to_quaternion (const graphene_euler_t *e, graphene_quaternion_t *res);";subroutine graphene_euler_to_quaternion(e, res) bind(c)
graphene;graphene_euler_to_vec3;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-euler.h;"void graphene_euler_to_vec3 (const graphene_euler_t *e, graphene_vec3_t *res);";subroutine graphene_euler_to_vec3(e, res) bind(c)
graphene;graphene_frustum_alloc;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-frustum.h;"GRAPHENE_BEGIN_DECLS graphene_frustum_t * graphene_frustum_alloc (void);";function graphene_frustum_alloc() bind(c)
graphene;graphene_frustum_contains_point;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-frustum.h;"bool graphene_frustum_contains_point (const graphene_frustum_t *f, const graphene_point3d_t *point);";function graphene_frustum_contains_point(f, point) bind(c)
graphene;graphene_frustum_equal;GRAPHENE_AVAILABLE_IN_1_6;graphene-auto.f90;/usr/include/graphene-1.0/graphene-frustum.h;"bool graphene_frustum_equal (const graphene_frustum_t *a, const graphene_frustum_t *b);";function graphene_frustum_equal(a, b) bind(c)
graphene;graphene_frustum_free;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-frustum.h;"void graphene_frustum_free (graphene_frustum_t *f);";subroutine graphene_frustum_free(f) bind(c)
graphene;graphene_frustum_get_type;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_frustum_get_type (void);";function graphene_frustum_get_type() bind(c)
graphene;graphene_frustum_init;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-frustum.h;"graphene_frustum_t * graphene_frustum_init (graphene_frustum_t *f, const graphene_plane_t *p0, const graphene_plane_t *p1, const graphene_plane_t *p2, const graphene_plane_t *p3, const graphene_plane_t *p4, const graphene_plane_t *p5);";function graphene_frustum_init(f, p0, p1, p2, p3, p4, p5) bind(c)
graphene;graphene_frustum_init_from_frustum;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-frustum.h;"graphene_frustum_t * graphene_frustum_init_from_frustum (graphene_frustum_t *f, const graphene_frustum_t *src);";function graphene_frustum_init_from_frustum(f, src) bind(c)
graphene;graphene_frustum_init_from_matrix;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-frustum.h;"graphene_frustum_t * graphene_frustum_init_from_matrix (graphene_frustum_t *f, const graphene_matrix_t *matrix);";function graphene_frustum_init_from_matrix(f, matrix) bind(c)
graphene;graphene_frustum_intersects_box;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-frustum.h;"bool graphene_frustum_intersects_box (const graphene_frustum_t *f, const graphene_box_t *box);";function graphene_frustum_intersects_box(f, box) bind(c)
graphene;graphene_frustum_intersects_sphere;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-frustum.h;"bool graphene_frustum_intersects_sphere (const graphene_frustum_t *f, const graphene_sphere_t *sphere);";function graphene_frustum_intersects_sphere(f, sphere) bind(c)
graphene;graphene_matrix_alloc;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"GRAPHENE_BEGIN_DECLS graphene_matrix_t * graphene_matrix_alloc (void);";function graphene_matrix_alloc() bind(c)
graphene;graphene_matrix_decompose;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"bool graphene_matrix_decompose (const graphene_matrix_t *m, graphene_vec3_t *translate, graphene_vec3_t *scale, graphene_quaternion_t *rotate, graphene_vec3_t *shear, graphene_vec4_t *perspective);";function graphene_matrix_decompose(m, translate, scale, rotate, shear, perspective) bind(c)
graphene;graphene_matrix_determinant;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"float graphene_matrix_determinant (const graphene_matrix_t *m);";function graphene_matrix_determinant(m) bind(c)
graphene;graphene_matrix_equal;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"bool graphene_matrix_equal (const graphene_matrix_t *a, const graphene_matrix_t *b);";function graphene_matrix_equal(a, b) bind(c)
graphene;graphene_matrix_equal_fast;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"bool graphene_matrix_equal_fast (const graphene_matrix_t *a, const graphene_matrix_t *b);";function graphene_matrix_equal_fast(a, b) bind(c)
graphene;graphene_matrix_free;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_free (graphene_matrix_t *m);";subroutine graphene_matrix_free(m) bind(c)
graphene;graphene_matrix_get_row;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_get_row (const graphene_matrix_t *m, unsigned int index_, graphene_vec4_t *res);";subroutine graphene_matrix_get_row(m, index_, res) bind(c)
graphene;graphene_matrix_get_type;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_matrix_get_type (void);";function graphene_matrix_get_type() bind(c)
graphene;graphene_matrix_get_value;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"float graphene_matrix_get_value (const graphene_matrix_t *m, unsigned int row, unsigned int col);";function graphene_matrix_get_value(m, row, col) bind(c)
graphene;graphene_matrix_get_x_scale;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"float graphene_matrix_get_x_scale (const graphene_matrix_t *m);";function graphene_matrix_get_x_scale(m) bind(c)
graphene;graphene_matrix_get_x_translation;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"float graphene_matrix_get_x_translation (const graphene_matrix_t *m);";function graphene_matrix_get_x_translation(m) bind(c)
graphene;graphene_matrix_get_y_scale;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"float graphene_matrix_get_y_scale (const graphene_matrix_t *m);";function graphene_matrix_get_y_scale(m) bind(c)
graphene;graphene_matrix_get_y_translation;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"float graphene_matrix_get_y_translation (const graphene_matrix_t *m);";function graphene_matrix_get_y_translation(m) bind(c)
graphene;graphene_matrix_get_z_scale;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"float graphene_matrix_get_z_scale (const graphene_matrix_t *m);";function graphene_matrix_get_z_scale(m) bind(c)
graphene;graphene_matrix_get_z_translation;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"float graphene_matrix_get_z_translation (const graphene_matrix_t *m);";function graphene_matrix_get_z_translation(m) bind(c)
graphene;graphene_matrix_init_from_2d;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_from_2d (graphene_matrix_t *m, double xx, double yx, double xy, double yy, double x_0, double y_0);";function graphene_matrix_init_from_2d(m, xx, yx, xy, yy, x_0, y_0) bind(c)
graphene;graphene_matrix_init_from_float;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_from_float (graphene_matrix_t *m, const float *v);";function graphene_matrix_init_from_float(m, v) bind(c)
graphene;graphene_matrix_init_from_matrix;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_from_matrix (graphene_matrix_t *m, const graphene_matrix_t *src);";function graphene_matrix_init_from_matrix(m, src) bind(c)
graphene;graphene_matrix_init_from_vec4;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_from_vec4 (graphene_matrix_t *m, const graphene_vec4_t *v0, const graphene_vec4_t *v1, const graphene_vec4_t *v2, const graphene_vec4_t *v3);";function graphene_matrix_init_from_vec4(m, v0, v1, v2, v3) bind(c)
graphene;graphene_matrix_init_frustum;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_frustum (graphene_matrix_t *m, float left, float right, float bottom, float top, float z_near, float z_far);";function graphene_matrix_init_frustum(m, left, right, bottom, top, z_near, z_far) bind(c)
graphene;graphene_matrix_init_identity;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_identity (graphene_matrix_t *m);";function graphene_matrix_init_identity(m) bind(c)
graphene;graphene_matrix_init_look_at;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_look_at (graphene_matrix_t *m, const graphene_vec3_t *eye, const graphene_vec3_t *center, const graphene_vec3_t *up);";function graphene_matrix_init_look_at(m, eye, center, up) bind(c)
graphene;graphene_matrix_init_ortho;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_ortho (graphene_matrix_t *m, float left, float right, float top, float bottom, float z_near, float z_far);";function graphene_matrix_init_ortho(m, left, right, top, bottom, z_near, z_far) bind(c)
graphene;graphene_matrix_init_perspective;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_perspective (graphene_matrix_t *m, float fovy, float aspect, float z_near, float z_far);";function graphene_matrix_init_perspective(m, fovy, aspect, z_near, z_far) bind(c)
graphene;graphene_matrix_init_rotate;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_rotate (graphene_matrix_t *m, float angle, const graphene_vec3_t *axis);";function graphene_matrix_init_rotate(m, angle, axis) bind(c)
graphene;graphene_matrix_init_scale;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_scale (graphene_matrix_t *m, float x, float y, float z);";function graphene_matrix_init_scale(m, x, y, z) bind(c)
graphene;graphene_matrix_init_skew;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_skew (graphene_matrix_t *m, float x_skew, float y_skew);";function graphene_matrix_init_skew(m, x_skew, y_skew) bind(c)
graphene;graphene_matrix_init_translate;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"graphene_matrix_t * graphene_matrix_init_translate (graphene_matrix_t *m, const graphene_point3d_t *p);";function graphene_matrix_init_translate(m, p) bind(c)
graphene;graphene_matrix_interpolate;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_interpolate (const graphene_matrix_t *a, const graphene_matrix_t *b, double factor, graphene_matrix_t *res);";subroutine graphene_matrix_interpolate(a, b, factor, res) bind(c)
graphene;graphene_matrix_inverse;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"bool graphene_matrix_inverse (const graphene_matrix_t *m, graphene_matrix_t *res);";function graphene_matrix_inverse(m, res) bind(c)
graphene;graphene_matrix_is_2d;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"bool graphene_matrix_is_2d (const graphene_matrix_t *m);";function graphene_matrix_is_2d(m) bind(c)
graphene;graphene_matrix_is_backface_visible;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"bool graphene_matrix_is_backface_visible (const graphene_matrix_t *m);";function graphene_matrix_is_backface_visible(m) bind(c)
graphene;graphene_matrix_is_identity;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"bool graphene_matrix_is_identity (const graphene_matrix_t *m);";function graphene_matrix_is_identity(m) bind(c)
graphene;graphene_matrix_is_singular;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"bool graphene_matrix_is_singular (const graphene_matrix_t *m);";function graphene_matrix_is_singular(m) bind(c)
graphene;graphene_matrix_multiply;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_multiply (const graphene_matrix_t *a, const graphene_matrix_t *b, graphene_matrix_t *res);";subroutine graphene_matrix_multiply(a, b, res) bind(c)
graphene;graphene_matrix_near;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"bool graphene_matrix_near (const graphene_matrix_t *a, const graphene_matrix_t *b, float epsilon);";function graphene_matrix_near(a, b, epsilon) bind(c)
graphene;graphene_matrix_normalize;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_normalize (const graphene_matrix_t *m, graphene_matrix_t *res);";subroutine graphene_matrix_normalize(m, res) bind(c)
graphene;graphene_matrix_perspective;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_perspective (const graphene_matrix_t *m, float depth, graphene_matrix_t *res);";subroutine graphene_matrix_perspective(m, depth, res) bind(c)
graphene;graphene_matrix_print;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_print (const graphene_matrix_t *m);";subroutine graphene_matrix_print(m) bind(c)
graphene;graphene_matrix_project_point;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_project_point (const graphene_matrix_t *m, const graphene_point_t *p, graphene_point_t *res);";subroutine graphene_matrix_project_point(m, p, res) bind(c)
graphene;graphene_matrix_project_rect;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_project_rect (const graphene_matrix_t *m, const graphene_rect_t *r, graphene_quad_t *res);";subroutine graphene_matrix_project_rect(m, r, res) bind(c)
graphene;graphene_matrix_project_rect_bounds;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_project_rect_bounds (const graphene_matrix_t *m, const graphene_rect_t *r, graphene_rect_t *res);";subroutine graphene_matrix_project_rect_bounds(m, r, res) bind(c)
graphene;graphene_matrix_rotate;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_rotate (graphene_matrix_t *m, float angle, const graphene_vec3_t *axis);";subroutine graphene_matrix_rotate(m, angle, axis) bind(c)
graphene;graphene_matrix_rotate_euler;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_rotate_euler (graphene_matrix_t *m, const graphene_euler_t *e);";subroutine graphene_matrix_rotate_euler(m, e) bind(c)
graphene;graphene_matrix_rotate_quaternion;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_rotate_quaternion (graphene_matrix_t *m, const graphene_quaternion_t *q);";subroutine graphene_matrix_rotate_quaternion(m, q) bind(c)
graphene;graphene_matrix_rotate_x;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_rotate_x (graphene_matrix_t *m, float angle);";subroutine graphene_matrix_rotate_x(m, angle) bind(c)
graphene;graphene_matrix_rotate_y;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_rotate_y (graphene_matrix_t *m, float angle);";subroutine graphene_matrix_rotate_y(m, angle) bind(c)
graphene;graphene_matrix_rotate_z;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_rotate_z (graphene_matrix_t *m, float angle);";subroutine graphene_matrix_rotate_z(m, angle) bind(c)
graphene;graphene_matrix_scale;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_scale (graphene_matrix_t *m, float factor_x, float factor_y, float factor_z);";subroutine graphene_matrix_scale(m, factor_x, factor_y, factor_z) bind(c)
graphene;graphene_matrix_skew_xy;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_skew_xy (graphene_matrix_t *m, float factor);";subroutine graphene_matrix_skew_xy(m, factor) bind(c)
graphene;graphene_matrix_skew_xz;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_skew_xz (graphene_matrix_t *m, float factor);";subroutine graphene_matrix_skew_xz(m, factor) bind(c)
graphene;graphene_matrix_skew_yz;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_skew_yz (graphene_matrix_t *m, float factor);";subroutine graphene_matrix_skew_yz(m, factor) bind(c)
graphene;graphene_matrix_to_2d;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"bool graphene_matrix_to_2d (const graphene_matrix_t *m, double *xx, double *yx, double *xy, double *yy, double *x_0, double *y_0);";function graphene_matrix_to_2d(m, xx, yx, xy, yy, x_0, y_0) bind(c)
graphene;graphene_matrix_to_float;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_to_float (const graphene_matrix_t *m, float *v);";subroutine graphene_matrix_to_float(m, v) bind(c)
graphene;graphene_matrix_transform_bounds;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_transform_bounds (const graphene_matrix_t *m, const graphene_rect_t *r, graphene_rect_t *res);";subroutine graphene_matrix_transform_bounds(m, r, res) bind(c)
graphene;graphene_matrix_transform_box;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_transform_box (const graphene_matrix_t *m, const graphene_box_t *b, graphene_box_t *res);";subroutine graphene_matrix_transform_box(m, b, res) bind(c)
graphene;graphene_matrix_transform_point;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_transform_point (const graphene_matrix_t *m, const graphene_point_t *p, graphene_point_t *res);";subroutine graphene_matrix_transform_point(m, p, res) bind(c)
graphene;graphene_matrix_transform_point3d;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_transform_point3d (const graphene_matrix_t *m, const graphene_point3d_t *p, graphene_point3d_t *res);";subroutine graphene_matrix_transform_point3d(m, p, res) bind(c)
graphene;graphene_matrix_transform_ray;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_transform_ray (const graphene_matrix_t *m, const graphene_ray_t *r, graphene_ray_t *res);";subroutine graphene_matrix_transform_ray(m, r, res) bind(c)
graphene;graphene_matrix_transform_rect;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_transform_rect (const graphene_matrix_t *m, const graphene_rect_t *r, graphene_quad_t *res);";subroutine graphene_matrix_transform_rect(m, r, res) bind(c)
graphene;graphene_matrix_transform_sphere;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_transform_sphere (const graphene_matrix_t *m, const graphene_sphere_t *s, graphene_sphere_t *res);";subroutine graphene_matrix_transform_sphere(m, s, res) bind(c)
graphene;graphene_matrix_transform_vec3;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_transform_vec3 (const graphene_matrix_t *m, const graphene_vec3_t *v, graphene_vec3_t *res);";subroutine graphene_matrix_transform_vec3(m, v, res) bind(c)
graphene;graphene_matrix_transform_vec4;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_transform_vec4 (const graphene_matrix_t *m, const graphene_vec4_t *v, graphene_vec4_t *res);";subroutine graphene_matrix_transform_vec4(m, v, res) bind(c)
graphene;graphene_matrix_translate;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_translate (graphene_matrix_t *m, const graphene_point3d_t *pos);";subroutine graphene_matrix_translate(m, pos) bind(c)
graphene;graphene_matrix_transpose;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_transpose (const graphene_matrix_t *m, graphene_matrix_t *res);";subroutine graphene_matrix_transpose(m, res) bind(c)
graphene;graphene_matrix_unproject_point3d;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_unproject_point3d (const graphene_matrix_t *projection, const graphene_matrix_t *modelview, const graphene_point3d_t *point, graphene_point3d_t *res);";subroutine graphene_matrix_unproject_point3d(projection, modelview, point, res) bind(c)
graphene;graphene_matrix_untransform_bounds;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"void graphene_matrix_untransform_bounds (const graphene_matrix_t *m, const graphene_rect_t *r, const graphene_rect_t *bounds, graphene_rect_t *res);";subroutine graphene_matrix_untransform_bounds(m, r, bounds, res) bind(c)
graphene;graphene_matrix_untransform_point;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-matrix.h;"bool graphene_matrix_untransform_point (const graphene_matrix_t *m, const graphene_point_t *p, const graphene_rect_t *bounds, graphene_point_t *res);";function graphene_matrix_untransform_point(m, p, bounds, res) bind(c)
graphene;graphene_plane_alloc;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"GRAPHENE_BEGIN_DECLS graphene_plane_t * graphene_plane_alloc (void);";function graphene_plane_alloc() bind(c)
graphene;graphene_plane_distance;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"float graphene_plane_distance (const graphene_plane_t *p, const graphene_point3d_t *point);";function graphene_plane_distance(p, point) bind(c)
graphene;graphene_plane_equal;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"bool graphene_plane_equal (const graphene_plane_t *a, const graphene_plane_t *b);";function graphene_plane_equal(a, b) bind(c)
graphene;graphene_plane_free;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"void graphene_plane_free (graphene_plane_t *p);";subroutine graphene_plane_free(p) bind(c)
graphene;graphene_plane_get_constant;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"float graphene_plane_get_constant (const graphene_plane_t *p);";function graphene_plane_get_constant(p) bind(c)
graphene;graphene_plane_get_normal;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"void graphene_plane_get_normal (const graphene_plane_t *p, graphene_vec3_t *normal);";subroutine graphene_plane_get_normal(p, normal) bind(c)
graphene;graphene_plane_get_type;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_plane_get_type (void);";function graphene_plane_get_type() bind(c)
graphene;graphene_plane_init;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"graphene_plane_t * graphene_plane_init (graphene_plane_t *p, const graphene_vec3_t *normal, float constant);";function graphene_plane_init(p, normal, constant) bind(c)
graphene;graphene_plane_init_from_plane;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"graphene_plane_t * graphene_plane_init_from_plane (graphene_plane_t *p, const graphene_plane_t *src);";function graphene_plane_init_from_plane(p, src) bind(c)
graphene;graphene_plane_init_from_point;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"graphene_plane_t * graphene_plane_init_from_point (graphene_plane_t *p, const graphene_vec3_t *normal, const graphene_point3d_t *point);";function graphene_plane_init_from_point(p, normal, point) bind(c)
graphene;graphene_plane_init_from_points;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"graphene_plane_t * graphene_plane_init_from_points (graphene_plane_t *p, const graphene_point3d_t *a, const graphene_point3d_t *b, const graphene_point3d_t *c);";function graphene_plane_init_from_points(p, a, b, c) bind(c)
graphene;graphene_plane_init_from_vec4;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"graphene_plane_t * graphene_plane_init_from_vec4 (graphene_plane_t *p, const graphene_vec4_t *src);";function graphene_plane_init_from_vec4(p, src) bind(c)
graphene;graphene_plane_negate;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"void graphene_plane_negate (const graphene_plane_t *p, graphene_plane_t *res);";subroutine graphene_plane_negate(p, res) bind(c)
graphene;graphene_plane_normalize;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"void graphene_plane_normalize (const graphene_plane_t *p, graphene_plane_t *res);";subroutine graphene_plane_normalize(p, res) bind(c)
graphene;graphene_plane_transform;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-plane.h;"void graphene_plane_transform (const graphene_plane_t *p, const graphene_matrix_t *matrix, const graphene_matrix_t *normal_matrix, graphene_plane_t *res);";subroutine graphene_plane_transform(p, matrix, normal_matrix, res) bind(c)
graphene;graphene_point3d_alloc;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"GRAPHENE_BEGIN_DECLS graphene_point3d_t * graphene_point3d_alloc (void);";function graphene_point3d_alloc() bind(c)
graphene;graphene_point3d_cross;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"void graphene_point3d_cross (const graphene_point3d_t *a, const graphene_point3d_t *b, graphene_point3d_t *res);";subroutine graphene_point3d_cross(a, b, res) bind(c)
graphene;graphene_point3d_distance;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"float graphene_point3d_distance (const graphene_point3d_t *a, const graphene_point3d_t *b, graphene_vec3_t *delta);";function graphene_point3d_distance(a, b, delta) bind(c)
graphene;graphene_point3d_dot;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"float graphene_point3d_dot (const graphene_point3d_t *a, const graphene_point3d_t *b);";function graphene_point3d_dot(a, b) bind(c)
graphene;graphene_point3d_equal;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"bool graphene_point3d_equal (const graphene_point3d_t *a, const graphene_point3d_t *b);";function graphene_point3d_equal(a, b) bind(c)
graphene;graphene_point3d_free;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"void graphene_point3d_free (graphene_point3d_t *p);";subroutine graphene_point3d_free(p) bind(c)
graphene;graphene_point3d_get_type;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_point3d_get_type (void);";function graphene_point3d_get_type() bind(c)
graphene;graphene_point3d_init;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"graphene_point3d_t * graphene_point3d_init (graphene_point3d_t *p, float x, float y, float z);";function graphene_point3d_init(p, x, y, z) bind(c)
graphene;graphene_point3d_init_from_point;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"graphene_point3d_t * graphene_point3d_init_from_point (graphene_point3d_t *p, const graphene_point3d_t *src);";function graphene_point3d_init_from_point(p, src) bind(c)
graphene;graphene_point3d_init_from_vec3;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"graphene_point3d_t * graphene_point3d_init_from_vec3 (graphene_point3d_t *p, const graphene_vec3_t *v);";function graphene_point3d_init_from_vec3(p, v) bind(c)
graphene;graphene_point3d_interpolate;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"void graphene_point3d_interpolate (const graphene_point3d_t *a, const graphene_point3d_t *b, double factor, graphene_point3d_t *res);";subroutine graphene_point3d_interpolate(a, b, factor, res) bind(c)
graphene;graphene_point3d_length;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"float graphene_point3d_length (const graphene_point3d_t *p);";function graphene_point3d_length(p) bind(c)
graphene;graphene_point3d_near;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"bool graphene_point3d_near (const graphene_point3d_t *a, const graphene_point3d_t *b, float epsilon);";function graphene_point3d_near(a, b, epsilon) bind(c)
graphene;graphene_point3d_normalize;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"void graphene_point3d_normalize (const graphene_point3d_t *p, graphene_point3d_t *res);";subroutine graphene_point3d_normalize(p, res) bind(c)
graphene;graphene_point3d_normalize_viewport;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"void graphene_point3d_normalize_viewport (const graphene_point3d_t *p, const graphene_rect_t *viewport, float z_near, float z_far, graphene_point3d_t *res);";subroutine graphene_point3d_normalize_viewport(p, viewport, z_near, z_far, res) bind(c)
graphene;graphene_point3d_scale;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"void graphene_point3d_scale (const graphene_point3d_t *p, float factor, graphene_point3d_t *res);";subroutine graphene_point3d_scale(p, factor, res) bind(c)
graphene;graphene_point3d_to_vec3;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"void graphene_point3d_to_vec3 (const graphene_point3d_t *p, graphene_vec3_t *v);";subroutine graphene_point3d_to_vec3(p, v) bind(c)
graphene;graphene_point3d_zero;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point3d.h;"const graphene_point3d_t * graphene_point3d_zero (void);";function graphene_point3d_zero() bind(c)
graphene;graphene_point_alloc;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point.h;"GRAPHENE_BEGIN_DECLS graphene_point_t * graphene_point_alloc (void);";function graphene_point_alloc() bind(c)
graphene;graphene_point_distance;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point.h;"float graphene_point_distance (const graphene_point_t *a, const graphene_point_t *b, float *d_x, float *d_y);";function graphene_point_distance(a, b, d_x, d_y) bind(c)
graphene;graphene_point_equal;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point.h;"bool graphene_point_equal (const graphene_point_t *a, const graphene_point_t *b);";function graphene_point_equal(a, b) bind(c)
graphene;graphene_point_free;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point.h;"void graphene_point_free (graphene_point_t *p);";subroutine graphene_point_free(p) bind(c)
graphene;graphene_point_get_type;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_point_get_type (void);";function graphene_point_get_type() bind(c)
graphene;graphene_point_init;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point.h;"graphene_point_t * graphene_point_init (graphene_point_t *p, float x, float y);";function graphene_point_init(p, x, y) bind(c)
graphene;graphene_point_init_from_point;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point.h;"graphene_point_t * graphene_point_init_from_point (graphene_point_t *p, const graphene_point_t *src);";function graphene_point_init_from_point(p, src) bind(c)
graphene;graphene_point_init_from_vec2;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point.h;"graphene_point_t * graphene_point_init_from_vec2 (graphene_point_t *p, const graphene_vec2_t *src);";function graphene_point_init_from_vec2(p, src) bind(c)
graphene;graphene_point_interpolate;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point.h;"void graphene_point_interpolate (const graphene_point_t *a, const graphene_point_t *b, double factor, graphene_point_t *res);";subroutine graphene_point_interpolate(a, b, factor, res) bind(c)
graphene;graphene_point_near;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point.h;"bool graphene_point_near (const graphene_point_t *a, const graphene_point_t *b, float epsilon);";function graphene_point_near(a, b, epsilon) bind(c)
graphene;graphene_point_to_vec2;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point.h;"void graphene_point_to_vec2 (const graphene_point_t *p, graphene_vec2_t *v);";subroutine graphene_point_to_vec2(p, v) bind(c)
graphene;graphene_point_zero;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-point.h;"const graphene_point_t * graphene_point_zero (void);";function graphene_point_zero() bind(c)
graphene;graphene_quad_alloc;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quad.h;"GRAPHENE_BEGIN_DECLS graphene_quad_t * graphene_quad_alloc (void);";function graphene_quad_alloc() bind(c)
graphene;graphene_quad_bounds;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quad.h;"void graphene_quad_bounds (const graphene_quad_t *q, graphene_rect_t *r);";subroutine graphene_quad_bounds(q, r) bind(c)
graphene;graphene_quad_contains;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quad.h;"bool graphene_quad_contains (const graphene_quad_t *q, const graphene_point_t *p);";function graphene_quad_contains(q, p) bind(c)
graphene;graphene_quad_free;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quad.h;"void graphene_quad_free (graphene_quad_t *q);";subroutine graphene_quad_free(q) bind(c)
graphene;graphene_quad_get_point;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quad.h;"const graphene_point_t *graphene_quad_get_point (const graphene_quad_t *q, unsigned int index_);";function graphene_quad_get_point(q, index_) bind(c)
graphene;graphene_quad_get_type;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_quad_get_type (void);";function graphene_quad_get_type() bind(c)
graphene;graphene_quad_init;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quad.h;"graphene_quad_t * graphene_quad_init (graphene_quad_t *q, const graphene_point_t *p1, const graphene_point_t *p2, const graphene_point_t *p3, const graphene_point_t *p4);";function graphene_quad_init(q, p1, p2, p3, p4) bind(c)
graphene;graphene_quad_init_from_rect;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quad.h;"graphene_quad_t * graphene_quad_init_from_rect (graphene_quad_t *q, const graphene_rect_t *r);";function graphene_quad_init_from_rect(q, r) bind(c)
graphene;graphene_quaternion_add;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"void graphene_quaternion_add (const graphene_quaternion_t *a, const graphene_quaternion_t *b, graphene_quaternion_t *res);";subroutine graphene_quaternion_add(a, b, res) bind(c)
graphene;graphene_quaternion_alloc;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"GRAPHENE_BEGIN_DECLS graphene_quaternion_t * graphene_quaternion_alloc (void);";function graphene_quaternion_alloc() bind(c)
graphene;graphene_quaternion_dot;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"float graphene_quaternion_dot (const graphene_quaternion_t *a, const graphene_quaternion_t *b);";function graphene_quaternion_dot(a, b) bind(c)
graphene;graphene_quaternion_equal;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"bool graphene_quaternion_equal (const graphene_quaternion_t *a, const graphene_quaternion_t *b);";function graphene_quaternion_equal(a, b) bind(c)
graphene;graphene_quaternion_free;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"void graphene_quaternion_free (graphene_quaternion_t *q);";subroutine graphene_quaternion_free(q) bind(c)
graphene;graphene_quaternion_get_type;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_quaternion_get_type (void);";function graphene_quaternion_get_type() bind(c)
graphene;graphene_quaternion_init;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"graphene_quaternion_t * graphene_quaternion_init (graphene_quaternion_t *q, float x, float y, float z, float w);";function graphene_quaternion_init(q, x, y, z, w) bind(c)
graphene;graphene_quaternion_init_from_angle_vec3;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"graphene_quaternion_t * graphene_quaternion_init_from_angle_vec3 (graphene_quaternion_t *q, float angle, const graphene_vec3_t *axis);";function graphene_quaternion_init_from_angle_vec3(q, angle, axis) bind(c)
graphene;graphene_quaternion_init_from_angles;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"graphene_quaternion_t * graphene_quaternion_init_from_angles (graphene_quaternion_t *q, float deg_x, float deg_y, float deg_z);";function graphene_quaternion_init_from_angles(q, deg_x, deg_y, deg_z) bind(c)
graphene;graphene_quaternion_init_from_euler;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"graphene_quaternion_t * graphene_quaternion_init_from_euler (graphene_quaternion_t *q, const graphene_euler_t *e);";function graphene_quaternion_init_from_euler(q, e) bind(c)
graphene;graphene_quaternion_init_from_matrix;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"graphene_quaternion_t * graphene_quaternion_init_from_matrix (graphene_quaternion_t *q, const graphene_matrix_t *m);";function graphene_quaternion_init_from_matrix(q, m) bind(c)
graphene;graphene_quaternion_init_from_quaternion;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"graphene_quaternion_t * graphene_quaternion_init_from_quaternion (graphene_quaternion_t *q, const graphene_quaternion_t *src);";function graphene_quaternion_init_from_quaternion(q, src) bind(c)
graphene;graphene_quaternion_init_from_radians;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"graphene_quaternion_t * graphene_quaternion_init_from_radians (graphene_quaternion_t *q, float rad_x, float rad_y, float rad_z);";function graphene_quaternion_init_from_radians(q, rad_x, rad_y, rad_z) bind(c)
graphene;graphene_quaternion_init_from_vec4;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"graphene_quaternion_t * graphene_quaternion_init_from_vec4 (graphene_quaternion_t *q, const graphene_vec4_t *src);";function graphene_quaternion_init_from_vec4(q, src) bind(c)
graphene;graphene_quaternion_init_identity;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"graphene_quaternion_t * graphene_quaternion_init_identity (graphene_quaternion_t *q);";function graphene_quaternion_init_identity(q) bind(c)
graphene;graphene_quaternion_invert;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"void graphene_quaternion_invert (const graphene_quaternion_t *q, graphene_quaternion_t *res);";subroutine graphene_quaternion_invert(q, res) bind(c)
graphene;graphene_quaternion_multiply;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"void graphene_quaternion_multiply (const graphene_quaternion_t *a, const graphene_quaternion_t *b, graphene_quaternion_t *res);";subroutine graphene_quaternion_multiply(a, b, res) bind(c)
graphene;graphene_quaternion_normalize;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"void graphene_quaternion_normalize (const graphene_quaternion_t *q, graphene_quaternion_t *res);";subroutine graphene_quaternion_normalize(q, res) bind(c)
graphene;graphene_quaternion_scale;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"void graphene_quaternion_scale (const graphene_quaternion_t *q, float factor, graphene_quaternion_t *res);";subroutine graphene_quaternion_scale(q, factor, res) bind(c)
graphene;graphene_quaternion_slerp;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"void graphene_quaternion_slerp (const graphene_quaternion_t *a, const graphene_quaternion_t *b, float factor, graphene_quaternion_t *res);";subroutine graphene_quaternion_slerp(a, b, factor, res) bind(c)
graphene;graphene_quaternion_to_angle_vec3;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"void graphene_quaternion_to_angle_vec3 (const graphene_quaternion_t *q, float *angle, graphene_vec3_t *axis);";subroutine graphene_quaternion_to_angle_vec3(q, angle, axis) bind(c)
graphene;graphene_quaternion_to_angles;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"void graphene_quaternion_to_angles (const graphene_quaternion_t *q, float *deg_x, float *deg_y, float *deg_z);";subroutine graphene_quaternion_to_angles(q, deg_x, deg_y, deg_z) bind(c)
graphene;graphene_quaternion_to_matrix;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"void graphene_quaternion_to_matrix (const graphene_quaternion_t *q, graphene_matrix_t *m);";subroutine graphene_quaternion_to_matrix(q, m) bind(c)
graphene;graphene_quaternion_to_radians;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"void graphene_quaternion_to_radians (const graphene_quaternion_t *q, float *rad_x, float *rad_y, float *rad_z);";subroutine graphene_quaternion_to_radians(q, rad_x, rad_y, rad_z) bind(c)
graphene;graphene_quaternion_to_vec4;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-quaternion.h;"void graphene_quaternion_to_vec4 (const graphene_quaternion_t *q, graphene_vec4_t *res);";subroutine graphene_quaternion_to_vec4(q, res) bind(c)
graphene;graphene_ray_alloc;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"GRAPHENE_BEGIN_DECLS graphene_ray_t * graphene_ray_alloc (void);";function graphene_ray_alloc() bind(c)
graphene;graphene_ray_equal;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"bool graphene_ray_equal (const graphene_ray_t *a, const graphene_ray_t *b);";function graphene_ray_equal(a, b) bind(c)
graphene;graphene_ray_free;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"void graphene_ray_free (graphene_ray_t *r);";subroutine graphene_ray_free(r) bind(c)
graphene;graphene_ray_get_closest_point_to_point;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"void graphene_ray_get_closest_point_to_point (const graphene_ray_t *r, const graphene_point3d_t *p, graphene_point3d_t *res);";subroutine graphene_ray_get_closest_point_to_point(r, p, res) bind(c)
graphene;graphene_ray_get_direction;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"void graphene_ray_get_direction (const graphene_ray_t *r, graphene_vec3_t *direction);";subroutine graphene_ray_get_direction(r, direction) bind(c)
graphene;graphene_ray_get_distance_to_plane;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"float graphene_ray_get_distance_to_plane (const graphene_ray_t *r, const graphene_plane_t *p);";function graphene_ray_get_distance_to_plane(r, p) bind(c)
graphene;graphene_ray_get_distance_to_point;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"float graphene_ray_get_distance_to_point (const graphene_ray_t *r, const graphene_point3d_t *p);";function graphene_ray_get_distance_to_point(r, p) bind(c)
graphene;graphene_ray_get_origin;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"void graphene_ray_get_origin (const graphene_ray_t *r, graphene_point3d_t *origin);";subroutine graphene_ray_get_origin(r, origin) bind(c)
graphene;graphene_ray_get_position_at;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"void graphene_ray_get_position_at (const graphene_ray_t *r, float t, graphene_point3d_t *position);";subroutine graphene_ray_get_position_at(r, t, position) bind(c)
graphene;graphene_ray_get_type;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_ray_get_type (void);";function graphene_ray_get_type() bind(c)
graphene;graphene_ray_init;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"graphene_ray_t * graphene_ray_init (graphene_ray_t *r, const graphene_point3d_t *origin, const graphene_vec3_t *direction);";function graphene_ray_init(r, origin, direction) bind(c)
graphene;graphene_ray_init_from_ray;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"graphene_ray_t * graphene_ray_init_from_ray (graphene_ray_t *r, const graphene_ray_t *src);";function graphene_ray_init_from_ray(r, src) bind(c)
graphene;graphene_ray_init_from_vec3;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"graphene_ray_t * graphene_ray_init_from_vec3 (graphene_ray_t *r, const graphene_vec3_t *origin, const graphene_vec3_t *direction);";function graphene_ray_init_from_vec3(r, origin, direction) bind(c)
graphene;graphene_ray_intersect_box;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"graphene_ray_intersection_kind_t graphene_ray_intersect_box (const graphene_ray_t *r, const graphene_box_t *b, float *t_out);";function graphene_ray_intersect_box(r, b, t_out) bind(c)
graphene;graphene_ray_intersect_sphere;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"graphene_ray_intersection_kind_t graphene_ray_intersect_sphere (const graphene_ray_t *r, const graphene_sphere_t *s, float *t_out);";function graphene_ray_intersect_sphere(r, s, t_out) bind(c)
graphene;graphene_ray_intersect_triangle;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"graphene_ray_intersection_kind_t graphene_ray_intersect_triangle (const graphene_ray_t *r, const graphene_triangle_t *t, float *t_out);";function graphene_ray_intersect_triangle(r, t, t_out) bind(c)
graphene;graphene_ray_intersects_box;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"bool graphene_ray_intersects_box (const graphene_ray_t *r, const graphene_box_t *b);";function graphene_ray_intersects_box(r, b) bind(c)
graphene;graphene_ray_intersects_sphere;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"bool graphene_ray_intersects_sphere (const graphene_ray_t *r, const graphene_sphere_t *s);";function graphene_ray_intersects_sphere(r, s) bind(c)
graphene;graphene_ray_intersects_triangle;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-ray.h;"bool graphene_ray_intersects_triangle (const graphene_ray_t *r, const graphene_triangle_t *t);";function graphene_ray_intersects_triangle(r, t) bind(c)
graphene;graphene_rect_alloc;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"GRAPHENE_BEGIN_DECLS graphene_rect_t * graphene_rect_alloc (void);";function graphene_rect_alloc() bind(c)
graphene;graphene_rect_contains_point;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"bool graphene_rect_contains_point (const graphene_rect_t *r, const graphene_point_t *p);";function graphene_rect_contains_point(r, p) bind(c)
graphene;graphene_rect_contains_rect;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"bool graphene_rect_contains_rect (const graphene_rect_t *a, const graphene_rect_t *b);";function graphene_rect_contains_rect(a, b) bind(c)
graphene;graphene_rect_equal;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"bool graphene_rect_equal (const graphene_rect_t *a, const graphene_rect_t *b);";function graphene_rect_equal(a, b) bind(c)
graphene;graphene_rect_expand;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_expand (const graphene_rect_t *r, const graphene_point_t *p, graphene_rect_t *res);";subroutine graphene_rect_expand(r, p, res) bind(c)
graphene;graphene_rect_free;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_free (graphene_rect_t *r);";subroutine graphene_rect_free(r) bind(c)
graphene;graphene_rect_get_area;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"float graphene_rect_get_area (const graphene_rect_t *r);";function graphene_rect_get_area(r) bind(c)
graphene;graphene_rect_get_bottom_left;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_get_bottom_left (const graphene_rect_t *r, graphene_point_t *p);";subroutine graphene_rect_get_bottom_left(r, p) bind(c)
graphene;graphene_rect_get_bottom_right;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_get_bottom_right (const graphene_rect_t *r, graphene_point_t *p);";subroutine graphene_rect_get_bottom_right(r, p) bind(c)
graphene;graphene_rect_get_center;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_get_center (const graphene_rect_t *r, graphene_point_t *p);";subroutine graphene_rect_get_center(r, p) bind(c)
graphene;graphene_rect_get_height;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"float graphene_rect_get_height (const graphene_rect_t *r);";function graphene_rect_get_height(r) bind(c)
graphene;graphene_rect_get_top_left;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_get_top_left (const graphene_rect_t *r, graphene_point_t *p);";subroutine graphene_rect_get_top_left(r, p) bind(c)
graphene;graphene_rect_get_top_right;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_get_top_right (const graphene_rect_t *r, graphene_point_t *p);";subroutine graphene_rect_get_top_right(r, p) bind(c)
graphene;graphene_rect_get_type;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_rect_get_type (void);";function graphene_rect_get_type() bind(c)
graphene;graphene_rect_get_width;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"float graphene_rect_get_width (const graphene_rect_t *r);";function graphene_rect_get_width(r) bind(c)
graphene;graphene_rect_get_x;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"float graphene_rect_get_x (const graphene_rect_t *r);";function graphene_rect_get_x(r) bind(c)
graphene;graphene_rect_get_y;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"float graphene_rect_get_y (const graphene_rect_t *r);";function graphene_rect_get_y(r) bind(c)
graphene;graphene_rect_init;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"graphene_rect_t * graphene_rect_init (graphene_rect_t *r, float x, float y, float width, float height);";function graphene_rect_init(r, x, y, width, height) bind(c)
graphene;graphene_rect_init_from_rect;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"graphene_rect_t * graphene_rect_init_from_rect (graphene_rect_t *r, const graphene_rect_t *src);";function graphene_rect_init_from_rect(r, src) bind(c)
graphene;graphene_rect_inset;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"graphene_rect_t * graphene_rect_inset (graphene_rect_t *r, float d_x, float d_y);";function graphene_rect_inset(r, d_x, d_y) bind(c)
graphene;graphene_rect_inset_r;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_inset_r (const graphene_rect_t *r, float d_x, float d_y, graphene_rect_t *res);";subroutine graphene_rect_inset_r(r, d_x, d_y, res) bind(c)
graphene;graphene_rect_interpolate;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_interpolate (const graphene_rect_t *a, const graphene_rect_t *b, double factor, graphene_rect_t *res);";subroutine graphene_rect_interpolate(a, b, factor, res) bind(c)
graphene;graphene_rect_intersection;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"bool graphene_rect_intersection (const graphene_rect_t *a, const graphene_rect_t *b, graphene_rect_t *res);";function graphene_rect_intersection(a, b, res) bind(c)
graphene;graphene_rect_normalize;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"graphene_rect_t * graphene_rect_normalize (graphene_rect_t *r);";function graphene_rect_normalize(r) bind(c)
graphene;graphene_rect_normalize_r;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_normalize_r (const graphene_rect_t *r, graphene_rect_t *res);";subroutine graphene_rect_normalize_r(r, res) bind(c)
graphene;graphene_rect_offset;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"graphene_rect_t * graphene_rect_offset (graphene_rect_t *r, float d_x, float d_y);";function graphene_rect_offset(r, d_x, d_y) bind(c)
graphene;graphene_rect_offset_r;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_offset_r (const graphene_rect_t *r, float d_x, float d_y, graphene_rect_t *res);";subroutine graphene_rect_offset_r(r, d_x, d_y, res) bind(c)
graphene;graphene_rect_round;GRAPHENE_DEPRECATED_IN_1_10_FOR (graphene_rect_round_extents);graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_round (const graphene_rect_t *r, graphene_rect_t *res);";subroutine graphene_rect_round(r, res) bind(c)
graphene;graphene_rect_round_extents;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_round_extents (const graphene_rect_t *r, graphene_rect_t *res);";subroutine graphene_rect_round_extents(r, res) bind(c)
graphene;graphene_rect_round_to_pixel;GRAPHENE_DEPRECATED_IN_1_4_FOR (graphene_rect_round);graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"graphene_rect_t * graphene_rect_round_to_pixel (graphene_rect_t *r);";function graphene_rect_round_to_pixel(r) bind(c)
graphene;graphene_rect_scale;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_scale (const graphene_rect_t *r, float s_h, float s_v, graphene_rect_t *res);";subroutine graphene_rect_scale(r, s_h, s_v, res) bind(c)
graphene;graphene_rect_union;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"void graphene_rect_union (const graphene_rect_t *a, const graphene_rect_t *b, graphene_rect_t *res);";subroutine graphene_rect_union(a, b, res) bind(c)
graphene;graphene_rect_zero;GRAPHENE_AVAILABLE_IN_1_4;graphene-auto.f90;/usr/include/graphene-1.0/graphene-rect.h;"const graphene_rect_t * graphene_rect_zero (void);";function graphene_rect_zero() bind(c)
graphene;graphene_simd4x4f_transpose_in_place;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-simd4x4f.h;"GRAPHENE_BEGIN_DECLS void graphene_simd4x4f_transpose_in_place (graphene_simd4x4f_t *s);";subroutine graphene_simd4x4f_transpose_in_place(s) bind(c)
graphene;graphene_size_alloc;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-size.h;"GRAPHENE_BEGIN_DECLS graphene_size_t * graphene_size_alloc (void);";function graphene_size_alloc() bind(c)
graphene;graphene_size_equal;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-size.h;"bool graphene_size_equal (const graphene_size_t *a, const graphene_size_t *b);";function graphene_size_equal(a, b) bind(c)
graphene;graphene_size_free;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-size.h;"void graphene_size_free (graphene_size_t *s);";subroutine graphene_size_free(s) bind(c)
graphene;graphene_size_get_type;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_size_get_type (void);";function graphene_size_get_type() bind(c)
graphene;graphene_size_init;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-size.h;"graphene_size_t * graphene_size_init (graphene_size_t *s, float width, float height);";function graphene_size_init(s, width, height) bind(c)
graphene;graphene_size_init_from_size;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-size.h;"graphene_size_t * graphene_size_init_from_size (graphene_size_t *s, const graphene_size_t *src);";function graphene_size_init_from_size(s, src) bind(c)
graphene;graphene_size_interpolate;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-size.h;"void graphene_size_interpolate (const graphene_size_t *a, const graphene_size_t *b, double factor, graphene_size_t *res);";subroutine graphene_size_interpolate(a, b, factor, res) bind(c)
graphene;graphene_size_scale;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-size.h;"void graphene_size_scale (const graphene_size_t *s, float factor, graphene_size_t *res);";subroutine graphene_size_scale(s, factor, res) bind(c)
graphene;graphene_size_zero;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-size.h;"const graphene_size_t * graphene_size_zero (void);";function graphene_size_zero() bind(c)
graphene;graphene_sphere_alloc;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"GRAPHENE_BEGIN_DECLS graphene_sphere_t * graphene_sphere_alloc (void);";function graphene_sphere_alloc() bind(c)
graphene;graphene_sphere_contains_point;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"bool graphene_sphere_contains_point (const graphene_sphere_t *s, const graphene_point3d_t *point);";function graphene_sphere_contains_point(s, point) bind(c)
graphene;graphene_sphere_distance;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"float graphene_sphere_distance (const graphene_sphere_t *s, const graphene_point3d_t *point);";function graphene_sphere_distance(s, point) bind(c)
graphene;graphene_sphere_equal;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"bool graphene_sphere_equal (const graphene_sphere_t *a, const graphene_sphere_t *b);";function graphene_sphere_equal(a, b) bind(c)
graphene;graphene_sphere_free;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"void graphene_sphere_free (graphene_sphere_t *s);";subroutine graphene_sphere_free(s) bind(c)
graphene;graphene_sphere_get_bounding_box;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"void graphene_sphere_get_bounding_box (const graphene_sphere_t *s, graphene_box_t *box);";subroutine graphene_sphere_get_bounding_box(s, box) bind(c)
graphene;graphene_sphere_get_center;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"void graphene_sphere_get_center (const graphene_sphere_t *s, graphene_point3d_t *center);";subroutine graphene_sphere_get_center(s, center) bind(c)
graphene;graphene_sphere_get_radius;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"float graphene_sphere_get_radius (const graphene_sphere_t *s);";function graphene_sphere_get_radius(s) bind(c)
graphene;graphene_sphere_get_type;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_sphere_get_type (void);";function graphene_sphere_get_type() bind(c)
graphene;graphene_sphere_init;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"graphene_sphere_t * graphene_sphere_init (graphene_sphere_t *s, const graphene_point3d_t *center, float radius);";function graphene_sphere_init(s, center, radius) bind(c)
graphene;graphene_sphere_init_from_points;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"graphene_sphere_t * graphene_sphere_init_from_points (graphene_sphere_t *s, unsigned int n_points, const graphene_point3d_t *points, const graphene_point3d_t *center);";function graphene_sphere_init_from_points(s, n_points, points, center) bind(c)
graphene;graphene_sphere_init_from_vectors;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"graphene_sphere_t * graphene_sphere_init_from_vectors (graphene_sphere_t *s, unsigned int n_vectors, const graphene_vec3_t *vectors, const graphene_point3d_t *center);";function graphene_sphere_init_from_vectors(s, n_vectors, vectors, center) bind(c)
graphene;graphene_sphere_is_empty;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"bool graphene_sphere_is_empty (const graphene_sphere_t *s);";function graphene_sphere_is_empty(s) bind(c)
graphene;graphene_sphere_translate;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-sphere.h;"void graphene_sphere_translate (const graphene_sphere_t *s, const graphene_point3d_t *point, graphene_sphere_t *res);";subroutine graphene_sphere_translate(s, point, res) bind(c)
graphene;graphene_triangle_alloc;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"GRAPHENE_BEGIN_DECLS graphene_triangle_t * graphene_triangle_alloc (void);";function graphene_triangle_alloc() bind(c)
graphene;graphene_triangle_contains_point;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"bool graphene_triangle_contains_point (const graphene_triangle_t *t, const graphene_point3d_t *p);";function graphene_triangle_contains_point(t, p) bind(c)
graphene;graphene_triangle_equal;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"bool graphene_triangle_equal (const graphene_triangle_t *a, const graphene_triangle_t *b);";function graphene_triangle_equal(a, b) bind(c)
graphene;graphene_triangle_free;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"void graphene_triangle_free (graphene_triangle_t *t);";subroutine graphene_triangle_free(t) bind(c)
graphene;graphene_triangle_get_area;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"float graphene_triangle_get_area (const graphene_triangle_t *t);";function graphene_triangle_get_area(t) bind(c)
graphene;graphene_triangle_get_barycoords;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"bool graphene_triangle_get_barycoords (const graphene_triangle_t *t, const graphene_point3d_t *p, graphene_vec2_t *res);";function graphene_triangle_get_barycoords(t, p, res) bind(c)
graphene;graphene_triangle_get_bounding_box;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"void graphene_triangle_get_bounding_box (const graphene_triangle_t *t, graphene_box_t *res);";subroutine graphene_triangle_get_bounding_box(t, res) bind(c)
graphene;graphene_triangle_get_midpoint;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"void graphene_triangle_get_midpoint (const graphene_triangle_t *t, graphene_point3d_t *res);";subroutine graphene_triangle_get_midpoint(t, res) bind(c)
graphene;graphene_triangle_get_normal;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"void graphene_triangle_get_normal (const graphene_triangle_t *t, graphene_vec3_t *res);";subroutine graphene_triangle_get_normal(t, res) bind(c)
graphene;graphene_triangle_get_plane;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"void graphene_triangle_get_plane (const graphene_triangle_t *t, graphene_plane_t *res);";subroutine graphene_triangle_get_plane(t, res) bind(c)
graphene;graphene_triangle_get_points;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"void graphene_triangle_get_points (const graphene_triangle_t *t, graphene_point3d_t *a, graphene_point3d_t *b, graphene_point3d_t *c);";subroutine graphene_triangle_get_points(t, a, b, c) bind(c)
graphene;graphene_triangle_get_type;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_triangle_get_type (void);";function graphene_triangle_get_type() bind(c)
graphene;graphene_triangle_get_uv;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"bool graphene_triangle_get_uv (const graphene_triangle_t *t, const graphene_point3d_t *p, const graphene_vec2_t *uv_a, const graphene_vec2_t *uv_b, const graphene_vec2_t *uv_c, graphene_vec2_t *res);";function graphene_triangle_get_uv(t, p, uv_a, uv_b, uv_c, res) bind(c)
graphene;graphene_triangle_get_vertices;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"void graphene_triangle_get_vertices (const graphene_triangle_t *t, graphene_vec3_t *a, graphene_vec3_t *b, graphene_vec3_t *c);";subroutine graphene_triangle_get_vertices(t, a, b, c) bind(c)
graphene;graphene_triangle_init_from_float;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"graphene_triangle_t * graphene_triangle_init_from_float (graphene_triangle_t *t, const float *a, const float *b, const float *c);";function graphene_triangle_init_from_float(t, a, b, c) bind(c)
graphene;graphene_triangle_init_from_point3d;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"graphene_triangle_t * graphene_triangle_init_from_point3d (graphene_triangle_t *t, const graphene_point3d_t *a, const graphene_point3d_t *b, const graphene_point3d_t *c);";function graphene_triangle_init_from_point3d(t, a, b, c) bind(c)
graphene;graphene_triangle_init_from_vec3;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-triangle.h;"graphene_triangle_t * graphene_triangle_init_from_vec3 (graphene_triangle_t *t, const graphene_vec3_t *a, const graphene_vec3_t *b, const graphene_vec3_t *c);";function graphene_triangle_init_from_vec3(t, a, b, c) bind(c)
graphene;graphene_vec2_add;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"void graphene_vec2_add (const graphene_vec2_t *a, const graphene_vec2_t *b, graphene_vec2_t *res);";subroutine graphene_vec2_add(a, b, res) bind(c)
graphene;graphene_vec2_alloc;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"GRAPHENE_BEGIN_DECLS graphene_vec2_t * graphene_vec2_alloc (void);";function graphene_vec2_alloc() bind(c)
graphene;graphene_vec2_divide;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"void graphene_vec2_divide (const graphene_vec2_t *a, const graphene_vec2_t *b, graphene_vec2_t *res);";subroutine graphene_vec2_divide(a, b, res) bind(c)
graphene;graphene_vec2_dot;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"float graphene_vec2_dot (const graphene_vec2_t *a, const graphene_vec2_t *b);";function graphene_vec2_dot(a, b) bind(c)
graphene;graphene_vec2_equal;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"bool graphene_vec2_equal (const graphene_vec2_t *v1, const graphene_vec2_t *v2);";function graphene_vec2_equal(v1, v2) bind(c)
graphene;graphene_vec2_free;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"void graphene_vec2_free (graphene_vec2_t *v);";subroutine graphene_vec2_free(v) bind(c)
graphene;graphene_vec2_get_type;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_vec2_get_type (void);";function graphene_vec2_get_type() bind(c)
graphene;graphene_vec2_get_x;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"float graphene_vec2_get_x (const graphene_vec2_t *v);";function graphene_vec2_get_x(v) bind(c)
graphene;graphene_vec2_get_y;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"float graphene_vec2_get_y (const graphene_vec2_t *v);";function graphene_vec2_get_y(v) bind(c)
graphene;graphene_vec2_init;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"graphene_vec2_t * graphene_vec2_init (graphene_vec2_t *v, float x, float y);";function graphene_vec2_init(v, x, y) bind(c)
graphene;graphene_vec2_init_from_float;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"graphene_vec2_t * graphene_vec2_init_from_float (graphene_vec2_t *v, const float *src);";function graphene_vec2_init_from_float(v, src) bind(c)
graphene;graphene_vec2_init_from_vec2;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"graphene_vec2_t * graphene_vec2_init_from_vec2 (graphene_vec2_t *v, const graphene_vec2_t *src);";function graphene_vec2_init_from_vec2(v, src) bind(c)
graphene;graphene_vec2_interpolate;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"void graphene_vec2_interpolate (const graphene_vec2_t *v1, const graphene_vec2_t *v2, double factor, graphene_vec2_t *res);";subroutine graphene_vec2_interpolate(v1, v2, factor, res) bind(c)
graphene;graphene_vec2_length;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"float graphene_vec2_length (const graphene_vec2_t *v);";function graphene_vec2_length(v) bind(c)
graphene;graphene_vec2_max;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"void graphene_vec2_max (const graphene_vec2_t *a, const graphene_vec2_t *b, graphene_vec2_t *res);";subroutine graphene_vec2_max(a, b, res) bind(c)
graphene;graphene_vec2_min;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"void graphene_vec2_min (const graphene_vec2_t *a, const graphene_vec2_t *b, graphene_vec2_t *res);";subroutine graphene_vec2_min(a, b, res) bind(c)
graphene;graphene_vec2_multiply;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"void graphene_vec2_multiply (const graphene_vec2_t *a, const graphene_vec2_t *b, graphene_vec2_t *res);";subroutine graphene_vec2_multiply(a, b, res) bind(c)
graphene;graphene_vec2_near;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"bool graphene_vec2_near (const graphene_vec2_t *v1, const graphene_vec2_t *v2, float epsilon);";function graphene_vec2_near(v1, v2, epsilon) bind(c)
graphene;graphene_vec2_negate;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"void graphene_vec2_negate (const graphene_vec2_t *v, graphene_vec2_t *res);";subroutine graphene_vec2_negate(v, res) bind(c)
graphene;graphene_vec2_normalize;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"void graphene_vec2_normalize (const graphene_vec2_t *v, graphene_vec2_t *res);";subroutine graphene_vec2_normalize(v, res) bind(c)
graphene;graphene_vec2_one;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"const graphene_vec2_t * graphene_vec2_one (void);";function graphene_vec2_one() bind(c)
graphene;graphene_vec2_scale;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"void graphene_vec2_scale (const graphene_vec2_t *v, float factor, graphene_vec2_t *res);";subroutine graphene_vec2_scale(v, factor, res) bind(c)
graphene;graphene_vec2_subtract;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"void graphene_vec2_subtract (const graphene_vec2_t *a, const graphene_vec2_t *b, graphene_vec2_t *res);";subroutine graphene_vec2_subtract(a, b, res) bind(c)
graphene;graphene_vec2_to_float;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"void graphene_vec2_to_float (const graphene_vec2_t *v, float *dest);";subroutine graphene_vec2_to_float(v, dest) bind(c)
graphene;graphene_vec2_x_axis;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"const graphene_vec2_t * graphene_vec2_x_axis (void);";function graphene_vec2_x_axis() bind(c)
graphene;graphene_vec2_y_axis;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"const graphene_vec2_t * graphene_vec2_y_axis (void);";function graphene_vec2_y_axis() bind(c)
graphene;graphene_vec2_zero;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec2.h;"const graphene_vec2_t * graphene_vec2_zero (void);";function graphene_vec2_zero() bind(c)
graphene;graphene_vec3_add;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_add (const graphene_vec3_t *a, const graphene_vec3_t *b, graphene_vec3_t *res);";subroutine graphene_vec3_add(a, b, res) bind(c)
graphene;graphene_vec3_alloc;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"GRAPHENE_BEGIN_DECLS graphene_vec3_t * graphene_vec3_alloc (void);";function graphene_vec3_alloc() bind(c)
graphene;graphene_vec3_cross;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_cross (const graphene_vec3_t *a, const graphene_vec3_t *b, graphene_vec3_t *res);";subroutine graphene_vec3_cross(a, b, res) bind(c)
graphene;graphene_vec3_divide;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_divide (const graphene_vec3_t *a, const graphene_vec3_t *b, graphene_vec3_t *res);";subroutine graphene_vec3_divide(a, b, res) bind(c)
graphene;graphene_vec3_dot;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"float graphene_vec3_dot (const graphene_vec3_t *a, const graphene_vec3_t *b);";function graphene_vec3_dot(a, b) bind(c)
graphene;graphene_vec3_equal;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"bool graphene_vec3_equal (const graphene_vec3_t *v1, const graphene_vec3_t *v2);";function graphene_vec3_equal(v1, v2) bind(c)
graphene;graphene_vec3_free;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_free (graphene_vec3_t *v);";subroutine graphene_vec3_free(v) bind(c)
graphene;graphene_vec3_get_type;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_vec3_get_type (void);";function graphene_vec3_get_type() bind(c)
graphene;graphene_vec3_get_x;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"float graphene_vec3_get_x (const graphene_vec3_t *v);";function graphene_vec3_get_x(v) bind(c)
graphene;graphene_vec3_get_xy;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_get_xy (const graphene_vec3_t *v, graphene_vec2_t *res);";subroutine graphene_vec3_get_xy(v, res) bind(c)
graphene;graphene_vec3_get_xy0;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_get_xy0 (const graphene_vec3_t *v, graphene_vec3_t *res);";subroutine graphene_vec3_get_xy0(v, res) bind(c)
graphene;graphene_vec3_get_xyz0;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_get_xyz0 (const graphene_vec3_t *v, graphene_vec4_t *res);";subroutine graphene_vec3_get_xyz0(v, res) bind(c)
graphene;graphene_vec3_get_xyz1;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_get_xyz1 (const graphene_vec3_t *v, graphene_vec4_t *res);";subroutine graphene_vec3_get_xyz1(v, res) bind(c)
graphene;graphene_vec3_get_xyzw;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_get_xyzw (const graphene_vec3_t *v, float w, graphene_vec4_t *res);";subroutine graphene_vec3_get_xyzw(v, w, res) bind(c)
graphene;graphene_vec3_get_y;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"float graphene_vec3_get_y (const graphene_vec3_t *v);";function graphene_vec3_get_y(v) bind(c)
graphene;graphene_vec3_get_z;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"float graphene_vec3_get_z (const graphene_vec3_t *v);";function graphene_vec3_get_z(v) bind(c)
graphene;graphene_vec3_init;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"graphene_vec3_t * graphene_vec3_init (graphene_vec3_t *v, float x, float y, float z);";function graphene_vec3_init(v, x, y, z) bind(c)
graphene;graphene_vec3_init_from_float;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"graphene_vec3_t * graphene_vec3_init_from_float (graphene_vec3_t *v, const float *src);";function graphene_vec3_init_from_float(v, src) bind(c)
graphene;graphene_vec3_init_from_vec3;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"graphene_vec3_t * graphene_vec3_init_from_vec3 (graphene_vec3_t *v, const graphene_vec3_t *src);";function graphene_vec3_init_from_vec3(v, src) bind(c)
graphene;graphene_vec3_interpolate;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_interpolate (const graphene_vec3_t *v1, const graphene_vec3_t *v2, double factor, graphene_vec3_t *res);";subroutine graphene_vec3_interpolate(v1, v2, factor, res) bind(c)
graphene;graphene_vec3_length;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"float graphene_vec3_length (const graphene_vec3_t *v);";function graphene_vec3_length(v) bind(c)
graphene;graphene_vec3_max;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_max (const graphene_vec3_t *a, const graphene_vec3_t *b, graphene_vec3_t *res);";subroutine graphene_vec3_max(a, b, res) bind(c)
graphene;graphene_vec3_min;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_min (const graphene_vec3_t *a, const graphene_vec3_t *b, graphene_vec3_t *res);";subroutine graphene_vec3_min(a, b, res) bind(c)
graphene;graphene_vec3_multiply;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_multiply (const graphene_vec3_t *a, const graphene_vec3_t *b, graphene_vec3_t *res);";subroutine graphene_vec3_multiply(a, b, res) bind(c)
graphene;graphene_vec3_near;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"bool graphene_vec3_near (const graphene_vec3_t *v1, const graphene_vec3_t *v2, float epsilon);";function graphene_vec3_near(v1, v2, epsilon) bind(c)
graphene;graphene_vec3_negate;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_negate (const graphene_vec3_t *v, graphene_vec3_t *res);";subroutine graphene_vec3_negate(v, res) bind(c)
graphene;graphene_vec3_normalize;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_normalize (const graphene_vec3_t *v, graphene_vec3_t *res);";subroutine graphene_vec3_normalize(v, res) bind(c)
graphene;graphene_vec3_one;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"const graphene_vec3_t * graphene_vec3_one (void);";function graphene_vec3_one() bind(c)
graphene;graphene_vec3_scale;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_scale (const graphene_vec3_t *v, float factor, graphene_vec3_t *res);";subroutine graphene_vec3_scale(v, factor, res) bind(c)
graphene;graphene_vec3_subtract;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_subtract (const graphene_vec3_t *a, const graphene_vec3_t *b, graphene_vec3_t *res);";subroutine graphene_vec3_subtract(a, b, res) bind(c)
graphene;graphene_vec3_to_float;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"void graphene_vec3_to_float (const graphene_vec3_t *v, float *dest);";subroutine graphene_vec3_to_float(v, dest) bind(c)
graphene;graphene_vec3_x_axis;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"const graphene_vec3_t * graphene_vec3_x_axis (void);";function graphene_vec3_x_axis() bind(c)
graphene;graphene_vec3_y_axis;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"const graphene_vec3_t * graphene_vec3_y_axis (void);";function graphene_vec3_y_axis() bind(c)
graphene;graphene_vec3_z_axis;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"const graphene_vec3_t * graphene_vec3_z_axis (void);";function graphene_vec3_z_axis() bind(c)
graphene;graphene_vec3_zero;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec3.h;"const graphene_vec3_t * graphene_vec3_zero (void);";function graphene_vec3_zero() bind(c)
graphene;graphene_vec4_add;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_add (const graphene_vec4_t *a, const graphene_vec4_t *b, graphene_vec4_t *res);";subroutine graphene_vec4_add(a, b, res) bind(c)
graphene;graphene_vec4_alloc;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"GRAPHENE_BEGIN_DECLS graphene_vec4_t * graphene_vec4_alloc (void);";function graphene_vec4_alloc() bind(c)
graphene;graphene_vec4_divide;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_divide (const graphene_vec4_t *a, const graphene_vec4_t *b, graphene_vec4_t *res);";subroutine graphene_vec4_divide(a, b, res) bind(c)
graphene;graphene_vec4_dot;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"float graphene_vec4_dot (const graphene_vec4_t *a, const graphene_vec4_t *b);";function graphene_vec4_dot(a, b) bind(c)
graphene;graphene_vec4_equal;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"bool graphene_vec4_equal (const graphene_vec4_t *v1, const graphene_vec4_t *v2);";function graphene_vec4_equal(v1, v2) bind(c)
graphene;graphene_vec4_free;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_free (graphene_vec4_t *v);";subroutine graphene_vec4_free(v) bind(c)
graphene;graphene_vec4_get_type;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-gobject.h;"GType graphene_vec4_get_type (void);";function graphene_vec4_get_type() bind(c)
graphene;graphene_vec4_get_w;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"float graphene_vec4_get_w (const graphene_vec4_t *v);";function graphene_vec4_get_w(v) bind(c)
graphene;graphene_vec4_get_x;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"float graphene_vec4_get_x (const graphene_vec4_t *v);";function graphene_vec4_get_x(v) bind(c)
graphene;graphene_vec4_get_xy;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_get_xy (const graphene_vec4_t *v, graphene_vec2_t *res);";subroutine graphene_vec4_get_xy(v, res) bind(c)
graphene;graphene_vec4_get_xyz;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_get_xyz (const graphene_vec4_t *v, graphene_vec3_t *res);";subroutine graphene_vec4_get_xyz(v, res) bind(c)
graphene;graphene_vec4_get_y;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"float graphene_vec4_get_y (const graphene_vec4_t *v);";function graphene_vec4_get_y(v) bind(c)
graphene;graphene_vec4_get_z;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"float graphene_vec4_get_z (const graphene_vec4_t *v);";function graphene_vec4_get_z(v) bind(c)
graphene;graphene_vec4_init;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"graphene_vec4_t * graphene_vec4_init (graphene_vec4_t *v, float x, float y, float z, float w);";function graphene_vec4_init(v, x, y, z, w) bind(c)
graphene;graphene_vec4_init_from_float;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"graphene_vec4_t * graphene_vec4_init_from_float (graphene_vec4_t *v, const float *src);";function graphene_vec4_init_from_float(v, src) bind(c)
graphene;graphene_vec4_init_from_vec2;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"graphene_vec4_t * graphene_vec4_init_from_vec2 (graphene_vec4_t *v, const graphene_vec2_t *src, float z, float w);";function graphene_vec4_init_from_vec2(v, src, z, w) bind(c)
graphene;graphene_vec4_init_from_vec3;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"graphene_vec4_t * graphene_vec4_init_from_vec3 (graphene_vec4_t *v, const graphene_vec3_t *src, float w);";function graphene_vec4_init_from_vec3(v, src, w) bind(c)
graphene;graphene_vec4_init_from_vec4;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"graphene_vec4_t * graphene_vec4_init_from_vec4 (graphene_vec4_t *v, const graphene_vec4_t *src);";function graphene_vec4_init_from_vec4(v, src) bind(c)
graphene;graphene_vec4_interpolate;GRAPHENE_AVAILABLE_IN_1_10;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_interpolate (const graphene_vec4_t *v1, const graphene_vec4_t *v2, double factor, graphene_vec4_t *res);";subroutine graphene_vec4_interpolate(v1, v2, factor, res) bind(c)
graphene;graphene_vec4_length;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"float graphene_vec4_length (const graphene_vec4_t *v);";function graphene_vec4_length(v) bind(c)
graphene;graphene_vec4_max;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_max (const graphene_vec4_t *a, const graphene_vec4_t *b, graphene_vec4_t *res);";subroutine graphene_vec4_max(a, b, res) bind(c)
graphene;graphene_vec4_min;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_min (const graphene_vec4_t *a, const graphene_vec4_t *b, graphene_vec4_t *res);";subroutine graphene_vec4_min(a, b, res) bind(c)
graphene;graphene_vec4_multiply;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_multiply (const graphene_vec4_t *a, const graphene_vec4_t *b, graphene_vec4_t *res);";subroutine graphene_vec4_multiply(a, b, res) bind(c)
graphene;graphene_vec4_near;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"bool graphene_vec4_near (const graphene_vec4_t *v1, const graphene_vec4_t *v2, float epsilon);";function graphene_vec4_near(v1, v2, epsilon) bind(c)
graphene;graphene_vec4_negate;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_negate (const graphene_vec4_t *v, graphene_vec4_t *res);";subroutine graphene_vec4_negate(v, res) bind(c)
graphene;graphene_vec4_normalize;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_normalize (const graphene_vec4_t *v, graphene_vec4_t *res);";subroutine graphene_vec4_normalize(v, res) bind(c)
graphene;graphene_vec4_one;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"const graphene_vec4_t * graphene_vec4_one (void);";function graphene_vec4_one() bind(c)
graphene;graphene_vec4_scale;GRAPHENE_AVAILABLE_IN_1_2;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_scale (const graphene_vec4_t *v, float factor, graphene_vec4_t *res);";subroutine graphene_vec4_scale(v, factor, res) bind(c)
graphene;graphene_vec4_subtract;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_subtract (const graphene_vec4_t *a, const graphene_vec4_t *b, graphene_vec4_t *res);";subroutine graphene_vec4_subtract(a, b, res) bind(c)
graphene;graphene_vec4_to_float;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"void graphene_vec4_to_float (const graphene_vec4_t *v, float *dest);";subroutine graphene_vec4_to_float(v, dest) bind(c)
graphene;graphene_vec4_w_axis;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"const graphene_vec4_t * graphene_vec4_w_axis (void);";function graphene_vec4_w_axis() bind(c)
graphene;graphene_vec4_x_axis;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"const graphene_vec4_t * graphene_vec4_x_axis (void);";function graphene_vec4_x_axis() bind(c)
graphene;graphene_vec4_y_axis;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"const graphene_vec4_t * graphene_vec4_y_axis (void);";function graphene_vec4_y_axis() bind(c)
graphene;graphene_vec4_z_axis;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"const graphene_vec4_t * graphene_vec4_z_axis (void);";function graphene_vec4_z_axis() bind(c)
graphene;graphene_vec4_zero;GRAPHENE_AVAILABLE_IN_1_0;graphene-auto.f90;/usr/include/graphene-1.0/graphene-vec4.h;"const graphene_vec4_t * graphene_vec4_zero (void);";function graphene_vec4_zero() bind(c)
gsk;gsk_blend_node_get_blend_mode;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskBlendMode gsk_blend_node_get_blend_mode (GskRenderNode *node);";function gsk_blend_node_get_blend_mode(node) bind(c)
gsk;gsk_blend_node_get_bottom_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_blend_node_get_bottom_child (GskRenderNode *node);";function gsk_blend_node_get_bottom_child(node) bind(c)
gsk;gsk_blend_node_get_top_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_blend_node_get_top_child (GskRenderNode *node);";function gsk_blend_node_get_top_child(node) bind(c)
gsk;gsk_blend_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_blend_node_get_type (void) G_GNUC_CONST;";function gsk_blend_node_get_type() bind(c)
gsk;gsk_blend_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_blend_node_new (GskRenderNode *bottom, GskRenderNode *top, GskBlendMode blend_mode);";function gsk_blend_node_new(bottom, top, blend_mode) bind(c)
gsk;gsk_blur_node_get_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_blur_node_get_child (GskRenderNode *node);";function gsk_blur_node_get_child(node) bind(c)
gsk;gsk_blur_node_get_radius;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_blur_node_get_radius (GskRenderNode *node);";function gsk_blur_node_get_radius(node) bind(c)
gsk;gsk_blur_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_blur_node_get_type (void) G_GNUC_CONST;";function gsk_blur_node_get_type() bind(c)
gsk;gsk_blur_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_blur_node_new (GskRenderNode *child, float radius);";function gsk_blur_node_new(child, radius) bind(c)
gsk;gsk_border_node_get_colors;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GdkRGBA * gsk_border_node_get_colors (GskRenderNode *node);";function gsk_border_node_get_colors(node) bind(c)
gsk;gsk_border_node_get_outline;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GskRoundedRect * gsk_border_node_get_outline (GskRenderNode *node);";function gsk_border_node_get_outline(node) bind(c)
gsk;gsk_border_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_border_node_get_type (void) G_GNUC_CONST;";function gsk_border_node_get_type() bind(c)
gsk;gsk_border_node_get_widths;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const float * gsk_border_node_get_widths (GskRenderNode *node);";function gsk_border_node_get_widths(node) bind(c)
gsk;gsk_broadway_renderer_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/broadway/gskbroadwayrenderer.h;"GType gsk_broadway_renderer_get_type (void) G_GNUC_CONST;";function gsk_broadway_renderer_get_type() bind(c)
gsk;gsk_broadway_renderer_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/broadway/gskbroadwayrenderer.h;"GskRenderer * gsk_broadway_renderer_new (void);";function gsk_broadway_renderer_new() bind(c)
gsk;gsk_cairo_node_get_draw_context;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"cairo_t * gsk_cairo_node_get_draw_context (GskRenderNode *node);";function gsk_cairo_node_get_draw_context(node) bind(c)
gsk;gsk_cairo_node_get_surface;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"cairo_surface_t * gsk_cairo_node_get_surface (GskRenderNode *node);";function gsk_cairo_node_get_surface(node) bind(c)
gsk;gsk_cairo_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_cairo_node_get_type (void) G_GNUC_CONST;";function gsk_cairo_node_get_type() bind(c)
gsk;gsk_cairo_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_cairo_node_new (const graphene_rect_t *bounds);";function gsk_cairo_node_new(bounds) bind(c)
gsk;gsk_cairo_renderer_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskcairorenderer.h;"GType gsk_cairo_renderer_get_type (void) G_GNUC_CONST;";function gsk_cairo_renderer_get_type() bind(c)
gsk;gsk_cairo_renderer_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskcairorenderer.h;"GskRenderer * gsk_cairo_renderer_new (void);";function gsk_cairo_renderer_new() bind(c)
gsk;gsk_clip_node_get_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_clip_node_get_child (GskRenderNode *node);";function gsk_clip_node_get_child(node) bind(c)
gsk;gsk_clip_node_get_clip;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const graphene_rect_t * gsk_clip_node_get_clip (GskRenderNode *node);";function gsk_clip_node_get_clip(node) bind(c)
gsk;gsk_clip_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_clip_node_get_type (void) G_GNUC_CONST;";function gsk_clip_node_get_type() bind(c)
gsk;gsk_clip_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_clip_node_new (GskRenderNode *child, const graphene_rect_t *clip);";function gsk_clip_node_new(child, clip) bind(c)
gsk;gsk_color_matrix_node_get_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_color_matrix_node_get_child (GskRenderNode *node);";function gsk_color_matrix_node_get_child(node) bind(c)
gsk;gsk_color_matrix_node_get_color_matrix;;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const graphene_matrix_t * gsk_color_matrix_node_get_color_matrix (GskRenderNode *node);";function gsk_color_matrix_node_get_color_matrix(node) bind(c)
gsk;gsk_color_matrix_node_get_color_offset;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const graphene_vec4_t * gsk_color_matrix_node_get_color_offset (GskRenderNode *node);";function gsk_color_matrix_node_get_color_offset(node) bind(c)
gsk;gsk_color_matrix_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_color_matrix_node_get_type (void) G_GNUC_CONST;";function gsk_color_matrix_node_get_type() bind(c)
gsk;gsk_color_matrix_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_color_matrix_node_new (GskRenderNode *child, const graphene_matrix_t *color_matrix, const graphene_vec4_t *color_offset);";function gsk_color_matrix_node_new(child, color_matrix, color_offset) bind(c)
gsk;gsk_color_node_get_color;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GdkRGBA * gsk_color_node_get_color (GskRenderNode *node);";function gsk_color_node_get_color(node) bind(c)
gsk;gsk_color_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_color_node_get_type (void) G_GNUC_CONST;";function gsk_color_node_get_type() bind(c)
gsk;gsk_color_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_color_node_new (const GdkRGBA *rgba, const graphene_rect_t *bounds);";function gsk_color_node_new(rgba, bounds) bind(c)
gsk;gsk_conic_gradient_node_get_center;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const graphene_point_t * gsk_conic_gradient_node_get_center (GskRenderNode *node);";function gsk_conic_gradient_node_get_center(node) bind(c)
gsk;gsk_conic_gradient_node_get_color_stops;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GskColorStop * gsk_conic_gradient_node_get_color_stops (GskRenderNode *node, gsize *n_stops);";function gsk_conic_gradient_node_get_color_stops(node, n_stops) bind(c)
gsk;gsk_conic_gradient_node_get_n_color_stops;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"gsize gsk_conic_gradient_node_get_n_color_stops (GskRenderNode *node);";function gsk_conic_gradient_node_get_n_color_stops(node) bind(c)
gsk;gsk_conic_gradient_node_get_rotation;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_conic_gradient_node_get_rotation (GskRenderNode *node);";function gsk_conic_gradient_node_get_rotation(node) bind(c)
gsk;gsk_conic_gradient_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_conic_gradient_node_get_type (void) G_GNUC_CONST;";function gsk_conic_gradient_node_get_type() bind(c)
gsk;gsk_conic_gradient_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_conic_gradient_node_new (const graphene_rect_t *bounds, const graphene_point_t *center, float rotation, const GskColorStop *color_stops, gsize n_color_stops);";function gsk_conic_gradient_node_new(bounds, center, rotation, color_stops, n_color_stops) bind(c)
gsk;gsk_container_node_get_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_container_node_get_child (GskRenderNode *node, guint idx);";function gsk_container_node_get_child(node, idx) bind(c)
gsk;gsk_container_node_get_n_children;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"guint gsk_container_node_get_n_children (GskRenderNode *node);";function gsk_container_node_get_n_children(node) bind(c)
gsk;gsk_container_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_container_node_get_type (void) G_GNUC_CONST;";function gsk_container_node_get_type() bind(c)
gsk;gsk_container_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_container_node_new (GskRenderNode **children, guint n_children);";function gsk_container_node_new(children, n_children) bind(c)
gsk;gsk_cross_fade_node_get_end_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_cross_fade_node_get_end_child (GskRenderNode *node);";function gsk_cross_fade_node_get_end_child(node) bind(c)
gsk;gsk_cross_fade_node_get_progress;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_cross_fade_node_get_progress (GskRenderNode *node);";function gsk_cross_fade_node_get_progress(node) bind(c)
gsk;gsk_cross_fade_node_get_start_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_cross_fade_node_get_start_child (GskRenderNode *node);";function gsk_cross_fade_node_get_start_child(node) bind(c)
gsk;gsk_cross_fade_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_cross_fade_node_get_type (void) G_GNUC_CONST;";function gsk_cross_fade_node_get_type() bind(c)
gsk;gsk_cross_fade_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_cross_fade_node_new (GskRenderNode *start, GskRenderNode *end, float progress);";function gsk_cross_fade_node_new(start, end, progress) bind(c)
gsk;gsk_debug_node_get_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_debug_node_get_child (GskRenderNode *node);";function gsk_debug_node_get_child(node) bind(c)
gsk;gsk_debug_node_get_message;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const char * gsk_debug_node_get_message (GskRenderNode *node);";function gsk_debug_node_get_message(node) bind(c)
gsk;gsk_debug_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_debug_node_get_type (void) G_GNUC_CONST;";function gsk_debug_node_get_type() bind(c)
gsk;gsk_debug_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_debug_node_new (GskRenderNode *child, char *message);";function gsk_debug_node_new(child, message) bind(c)
gsk;gsk_gl_renderer_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gl/gskglrenderer.h;"GType gsk_gl_renderer_get_type (void) G_GNUC_CONST;";function gsk_gl_renderer_get_type() bind(c)
gsk;gsk_gl_renderer_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gl/gskglrenderer.h;"GskRenderer * gsk_gl_renderer_new (void);";function gsk_gl_renderer_new() bind(c)
gsk;gsk_gl_shader_compile;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"gboolean gsk_gl_shader_compile (GskGLShader *shader, GskRenderer *renderer, GError **error);";function gsk_gl_shader_compile(shader, renderer, error) bind(c)
gsk;gsk_gl_shader_find_uniform_by_name;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"int gsk_gl_shader_find_uniform_by_name (GskGLShader *shader, const char *name);";function gsk_gl_shader_find_uniform_by_name(shader, name) bind(c)
gsk;gsk_gl_shader_format_args_va;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"GBytes * gsk_gl_shader_format_args_va (GskGLShader *shader, va_list uniforms);";function gsk_gl_shader_format_args_va(shader, uniforms) bind(c)
gsk;gsk_gl_shader_get_arg_bool;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"gboolean gsk_gl_shader_get_arg_bool (GskGLShader *shader, GBytes *args, int idx);";function gsk_gl_shader_get_arg_bool(shader, args, idx) bind(c)
gsk;gsk_gl_shader_get_arg_float;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"float gsk_gl_shader_get_arg_float (GskGLShader *shader, GBytes *args, int idx);";function gsk_gl_shader_get_arg_float(shader, args, idx) bind(c)
gsk;gsk_gl_shader_get_arg_int;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"gint32 gsk_gl_shader_get_arg_int (GskGLShader *shader, GBytes *args, int idx);";function gsk_gl_shader_get_arg_int(shader, args, idx) bind(c)
gsk;gsk_gl_shader_get_arg_uint;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"guint32 gsk_gl_shader_get_arg_uint (GskGLShader *shader, GBytes *args, int idx);";function gsk_gl_shader_get_arg_uint(shader, args, idx) bind(c)
gsk;gsk_gl_shader_get_arg_vec2;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"void gsk_gl_shader_get_arg_vec2 (GskGLShader *shader, GBytes *args, int idx, graphene_vec2_t *out_value);";subroutine gsk_gl_shader_get_arg_vec2(shader, args, idx, out_value) bind(c)
gsk;gsk_gl_shader_get_arg_vec3;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"void gsk_gl_shader_get_arg_vec3 (GskGLShader *shader, GBytes *args, int idx, graphene_vec3_t *out_value);";subroutine gsk_gl_shader_get_arg_vec3(shader, args, idx, out_value) bind(c)
gsk;gsk_gl_shader_get_arg_vec4;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"void gsk_gl_shader_get_arg_vec4 (GskGLShader *shader, GBytes *args, int idx, graphene_vec4_t *out_value);";subroutine gsk_gl_shader_get_arg_vec4(shader, args, idx, out_value) bind(c)
gsk;gsk_gl_shader_get_args_size;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"gsize gsk_gl_shader_get_args_size (GskGLShader *shader);";function gsk_gl_shader_get_args_size(shader) bind(c)
gsk;gsk_gl_shader_get_n_textures;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"int gsk_gl_shader_get_n_textures (GskGLShader *shader);";function gsk_gl_shader_get_n_textures(shader) bind(c)
gsk;gsk_gl_shader_get_n_uniforms;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"int gsk_gl_shader_get_n_uniforms (GskGLShader *shader);";function gsk_gl_shader_get_n_uniforms(shader) bind(c)
gsk;gsk_gl_shader_get_resource;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"const char * gsk_gl_shader_get_resource (GskGLShader *shader);";function gsk_gl_shader_get_resource(shader) bind(c)
gsk;gsk_gl_shader_get_source;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"GBytes * gsk_gl_shader_get_source (GskGLShader *shader);";function gsk_gl_shader_get_source(shader) bind(c)
gsk;gsk_gl_shader_get_uniform_name;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"const char * gsk_gl_shader_get_uniform_name (GskGLShader *shader, int idx);";function gsk_gl_shader_get_uniform_name(shader, idx) bind(c)
gsk;gsk_gl_shader_get_uniform_offset;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"int gsk_gl_shader_get_uniform_offset (GskGLShader *shader, int idx);";function gsk_gl_shader_get_uniform_offset(shader, idx) bind(c)
gsk;gsk_gl_shader_get_uniform_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"GskGLUniformType gsk_gl_shader_get_uniform_type (GskGLShader *shader, int idx);";function gsk_gl_shader_get_uniform_type(shader, idx) bind(c)
gsk;gsk_gl_shader_new_from_resource;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"GskGLShader * gsk_gl_shader_new_from_resource (const char *resource_path);";function gsk_gl_shader_new_from_resource(resource_path) bind(c)
gsk;gsk_gl_shader_node_get_args;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GBytes * gsk_gl_shader_node_get_args (GskRenderNode *node);";function gsk_gl_shader_node_get_args(node) bind(c)
gsk;gsk_gl_shader_node_get_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_gl_shader_node_get_child (GskRenderNode *node, guint idx);";function gsk_gl_shader_node_get_child(node, idx) bind(c)
gsk;gsk_gl_shader_node_get_n_children;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"guint gsk_gl_shader_node_get_n_children (GskRenderNode *node);";function gsk_gl_shader_node_get_n_children(node) bind(c)
gsk;gsk_gl_shader_node_get_shader;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskGLShader * gsk_gl_shader_node_get_shader (GskRenderNode *node);";function gsk_gl_shader_node_get_shader(node) bind(c)
gsk;gsk_gl_shader_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_gl_shader_node_get_type (void) G_GNUC_CONST;";function gsk_gl_shader_node_get_type() bind(c)
gsk;gsk_gl_shader_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_gl_shader_node_new (GskGLShader *shader, const graphene_rect_t *bounds, GBytes *args, GskRenderNode **children, guint n_children);";function gsk_gl_shader_node_new(shader, bounds, args, children, n_children) bind(c)
gsk;gsk_inset_shadow_node_get_blur_radius;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_inset_shadow_node_get_blur_radius (GskRenderNode *node);";function gsk_inset_shadow_node_get_blur_radius(node) bind(c)
gsk;gsk_inset_shadow_node_get_color;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GdkRGBA * gsk_inset_shadow_node_get_color (GskRenderNode *node);";function gsk_inset_shadow_node_get_color(node) bind(c)
gsk;gsk_inset_shadow_node_get_dx;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_inset_shadow_node_get_dx (GskRenderNode *node);";function gsk_inset_shadow_node_get_dx(node) bind(c)
gsk;gsk_inset_shadow_node_get_dy;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_inset_shadow_node_get_dy (GskRenderNode *node);";function gsk_inset_shadow_node_get_dy(node) bind(c)
gsk;gsk_inset_shadow_node_get_outline;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GskRoundedRect * gsk_inset_shadow_node_get_outline (GskRenderNode *node);";function gsk_inset_shadow_node_get_outline(node) bind(c)
gsk;gsk_inset_shadow_node_get_spread;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_inset_shadow_node_get_spread (GskRenderNode *node);";function gsk_inset_shadow_node_get_spread(node) bind(c)
gsk;gsk_inset_shadow_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_inset_shadow_node_get_type (void) G_GNUC_CONST;";function gsk_inset_shadow_node_get_type() bind(c)
gsk;gsk_inset_shadow_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_inset_shadow_node_new (const GskRoundedRect *outline, const GdkRGBA *color, float dx, float dy, float spread, float blur_radius);";function gsk_inset_shadow_node_new(outline, color, dx, dy, spread, blur_radius) bind(c)
gsk;gsk_linear_gradient_node_get_color_stops;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GskColorStop * gsk_linear_gradient_node_get_color_stops (GskRenderNode *node, gsize *n_stops);";function gsk_linear_gradient_node_get_color_stops(node, n_stops) bind(c)
gsk;gsk_linear_gradient_node_get_end;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const graphene_point_t * gsk_linear_gradient_node_get_end (GskRenderNode *node);";function gsk_linear_gradient_node_get_end(node) bind(c)
gsk;gsk_linear_gradient_node_get_n_color_stops;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"gsize gsk_linear_gradient_node_get_n_color_stops (GskRenderNode *node);";function gsk_linear_gradient_node_get_n_color_stops(node) bind(c)
gsk;gsk_linear_gradient_node_get_start;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const graphene_point_t * gsk_linear_gradient_node_get_start (GskRenderNode *node);";function gsk_linear_gradient_node_get_start(node) bind(c)
gsk;gsk_linear_gradient_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_linear_gradient_node_get_type (void) G_GNUC_CONST;";function gsk_linear_gradient_node_get_type() bind(c)
gsk;gsk_linear_gradient_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_linear_gradient_node_new (const graphene_rect_t *bounds, const graphene_point_t *start, const graphene_point_t *end, const GskColorStop *color_stops, gsize n_color_stops);";function gsk_linear_gradient_node_new(bounds, start, end, color_stops, n_color_stops) bind(c)
gsk;gsk_opacity_node_get_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_opacity_node_get_child (GskRenderNode *node);";function gsk_opacity_node_get_child(node) bind(c)
gsk;gsk_opacity_node_get_opacity;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_opacity_node_get_opacity (GskRenderNode *node);";function gsk_opacity_node_get_opacity(node) bind(c)
gsk;gsk_opacity_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_opacity_node_get_type (void) G_GNUC_CONST;";function gsk_opacity_node_get_type() bind(c)
gsk;gsk_opacity_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_opacity_node_new (GskRenderNode *child, float opacity);";function gsk_opacity_node_new(child, opacity) bind(c)
gsk;gsk_outset_shadow_node_get_blur_radius;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_outset_shadow_node_get_blur_radius (GskRenderNode *node);";function gsk_outset_shadow_node_get_blur_radius(node) bind(c)
gsk;gsk_outset_shadow_node_get_color;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GdkRGBA * gsk_outset_shadow_node_get_color (GskRenderNode *node);";function gsk_outset_shadow_node_get_color(node) bind(c)
gsk;gsk_outset_shadow_node_get_dx;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_outset_shadow_node_get_dx (GskRenderNode *node);";function gsk_outset_shadow_node_get_dx(node) bind(c)
gsk;gsk_outset_shadow_node_get_dy;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_outset_shadow_node_get_dy (GskRenderNode *node);";function gsk_outset_shadow_node_get_dy(node) bind(c)
gsk;gsk_outset_shadow_node_get_outline;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GskRoundedRect * gsk_outset_shadow_node_get_outline (GskRenderNode *node);";function gsk_outset_shadow_node_get_outline(node) bind(c)
gsk;gsk_outset_shadow_node_get_spread;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_outset_shadow_node_get_spread (GskRenderNode *node);";function gsk_outset_shadow_node_get_spread(node) bind(c)
gsk;gsk_outset_shadow_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_outset_shadow_node_get_type (void) G_GNUC_CONST;";function gsk_outset_shadow_node_get_type() bind(c)
gsk;gsk_outset_shadow_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_outset_shadow_node_new (const GskRoundedRect *outline, const GdkRGBA *color, float dx, float dy, float spread, float blur_radius);";function gsk_outset_shadow_node_new(outline, color, dx, dy, spread, blur_radius) bind(c)
gsk;gsk_radial_gradient_node_get_center;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const graphene_point_t *gsk_radial_gradient_node_get_center (GskRenderNode *node);";function gsk_radial_gradient_node_get_center(node) bind(c)
gsk;gsk_radial_gradient_node_get_color_stops;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GskColorStop * gsk_radial_gradient_node_get_color_stops (GskRenderNode *node, gsize *n_stops);";function gsk_radial_gradient_node_get_color_stops(node, n_stops) bind(c)
gsk;gsk_radial_gradient_node_get_end;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_radial_gradient_node_get_end (GskRenderNode *node);";function gsk_radial_gradient_node_get_end(node) bind(c)
gsk;gsk_radial_gradient_node_get_hradius;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_radial_gradient_node_get_hradius (GskRenderNode *node);";function gsk_radial_gradient_node_get_hradius(node) bind(c)
gsk;gsk_radial_gradient_node_get_n_color_stops;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"gsize gsk_radial_gradient_node_get_n_color_stops (GskRenderNode *node);";function gsk_radial_gradient_node_get_n_color_stops(node) bind(c)
gsk;gsk_radial_gradient_node_get_start;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_radial_gradient_node_get_start (GskRenderNode *node);";function gsk_radial_gradient_node_get_start(node) bind(c)
gsk;gsk_radial_gradient_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_radial_gradient_node_get_type (void) G_GNUC_CONST;";function gsk_radial_gradient_node_get_type() bind(c)
gsk;gsk_radial_gradient_node_get_vradius;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"float gsk_radial_gradient_node_get_vradius (GskRenderNode *node);";function gsk_radial_gradient_node_get_vradius(node) bind(c)
gsk;gsk_radial_gradient_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_radial_gradient_node_new (const graphene_rect_t *bounds, const graphene_point_t *center, float hradius, float vradius, float start, float end, const GskColorStop *color_stops, gsize n_color_stops);";function gsk_radial_gradient_node_new(bounds, center, hradius, vradius, start, end, color_stops, n_color_stops) bind(c)
gsk;gsk_render_node_deserialize;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_render_node_deserialize (GBytes *bytes, GskParseErrorFunc error_func, gpointer user_data);";function gsk_render_node_deserialize(bytes, error_func, user_data) bind(c)
gsk;gsk_render_node_draw;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"void gsk_render_node_draw (GskRenderNode *node, cairo_t *cr);";subroutine gsk_render_node_draw(node, cr) bind(c)
gsk;gsk_render_node_get_bounds;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"void gsk_render_node_get_bounds (GskRenderNode *node, graphene_rect_t *bounds);";subroutine gsk_render_node_get_bounds(node, bounds) bind(c)
gsk;gsk_render_node_get_node_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNodeType gsk_render_node_get_node_type (GskRenderNode *node);";function gsk_render_node_get_node_type(node) bind(c)
gsk;gsk_render_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_render_node_get_type (void) G_GNUC_CONST;";function gsk_render_node_get_type() bind(c)
gsk;gsk_render_node_ref;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_render_node_ref (GskRenderNode *node);";function gsk_render_node_ref(node) bind(c)
gsk;gsk_render_node_serialize;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GBytes * gsk_render_node_serialize (GskRenderNode *node);";function gsk_render_node_serialize(node) bind(c)
gsk;gsk_render_node_unref;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"void gsk_render_node_unref (GskRenderNode *node);";subroutine gsk_render_node_unref(node) bind(c)
gsk;gsk_render_node_write_to_file;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"gboolean gsk_render_node_write_to_file (GskRenderNode *node, const char *filename, GError **error);";function gsk_render_node_write_to_file(node, filename, error) bind(c)
gsk;gsk_renderer_get_surface;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrenderer.h;"GdkSurface * gsk_renderer_get_surface (GskRenderer *renderer);";function gsk_renderer_get_surface(renderer) bind(c)
gsk;gsk_renderer_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrenderer.h;"GType gsk_renderer_get_type (void) G_GNUC_CONST;";function gsk_renderer_get_type() bind(c)
gsk;gsk_renderer_is_realized;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrenderer.h;"gboolean gsk_renderer_is_realized (GskRenderer *renderer);";function gsk_renderer_is_realized(renderer) bind(c)
gsk;gsk_renderer_new_for_surface;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrenderer.h;"GskRenderer * gsk_renderer_new_for_surface (GdkSurface *surface);";function gsk_renderer_new_for_surface(surface) bind(c)
gsk;gsk_renderer_realize;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrenderer.h;"gboolean gsk_renderer_realize (GskRenderer *renderer, GdkSurface *surface, GError **error);";function gsk_renderer_realize(renderer, surface, error) bind(c)
gsk;gsk_renderer_render;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrenderer.h;"void gsk_renderer_render (GskRenderer *renderer, GskRenderNode *root, const cairo_region_t *region);";subroutine gsk_renderer_render(renderer, root, region) bind(c)
gsk;gsk_renderer_render_texture;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrenderer.h;"GdkTexture * gsk_renderer_render_texture (GskRenderer *renderer, GskRenderNode *root, const graphene_rect_t *viewport);";function gsk_renderer_render_texture(renderer, root, viewport) bind(c)
gsk;gsk_renderer_unrealize;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrenderer.h;"void gsk_renderer_unrealize (GskRenderer *renderer);";subroutine gsk_renderer_unrealize(renderer) bind(c)
gsk;gsk_repeat_node_get_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_repeat_node_get_child (GskRenderNode *node);";function gsk_repeat_node_get_child(node) bind(c)
gsk;gsk_repeat_node_get_child_bounds;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const graphene_rect_t * gsk_repeat_node_get_child_bounds (GskRenderNode *node);";function gsk_repeat_node_get_child_bounds(node) bind(c)
gsk;gsk_repeat_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_repeat_node_get_type (void) G_GNUC_CONST;";function gsk_repeat_node_get_type() bind(c)
gsk;gsk_repeat_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_repeat_node_new (const graphene_rect_t *bounds, GskRenderNode *child, const graphene_rect_t *child_bounds);";function gsk_repeat_node_new(bounds, child, child_bounds) bind(c)
gsk;gsk_repeating_linear_gradient_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_repeating_linear_gradient_node_get_type (void) G_GNUC_CONST;";function gsk_repeating_linear_gradient_node_get_type() bind(c)
gsk;gsk_repeating_linear_gradient_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_repeating_linear_gradient_node_new (const graphene_rect_t *bounds, const graphene_point_t *start, const graphene_point_t *end, const GskColorStop *color_stops, gsize n_color_stops);";function gsk_repeating_linear_gradient_node_new(bounds, start, end, color_stops, n_color_stops) bind(c)
gsk;gsk_repeating_radial_gradient_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_repeating_radial_gradient_node_get_type (void) G_GNUC_CONST;";function gsk_repeating_radial_gradient_node_get_type() bind(c)
gsk;gsk_repeating_radial_gradient_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_repeating_radial_gradient_node_new (const graphene_rect_t *bounds, const graphene_point_t *center, float hradius, float vradius, float start, float end, const GskColorStop *color_stops, gsize n_color_stops);";function gsk_repeating_radial_gradient_node_new(bounds, center, hradius, vradius, start, end, color_stops, n_color_stops) bind(c)
gsk;gsk_rounded_clip_node_get_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_rounded_clip_node_get_child (GskRenderNode *node);";function gsk_rounded_clip_node_get_child(node) bind(c)
gsk;gsk_rounded_clip_node_get_clip;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GskRoundedRect * gsk_rounded_clip_node_get_clip (GskRenderNode *node);";function gsk_rounded_clip_node_get_clip(node) bind(c)
gsk;gsk_rounded_clip_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_rounded_clip_node_get_type (void) G_GNUC_CONST;";function gsk_rounded_clip_node_get_type() bind(c)
gsk;gsk_rounded_clip_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_rounded_clip_node_new (GskRenderNode *child, const GskRoundedRect *clip);";function gsk_rounded_clip_node_new(child, clip) bind(c)
gsk;gsk_rounded_rect_contains_point;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskroundedrect.h;"gboolean gsk_rounded_rect_contains_point (const GskRoundedRect *self, const graphene_point_t *point) G_GNUC_PURE;";function gsk_rounded_rect_contains_point(self, point) bind(c)
gsk;gsk_rounded_rect_contains_rect;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskroundedrect.h;"gboolean gsk_rounded_rect_contains_rect (const GskRoundedRect *self, const graphene_rect_t *rect) G_GNUC_PURE;";function gsk_rounded_rect_contains_rect(self, rect) bind(c)
gsk;gsk_rounded_rect_init;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskroundedrect.h;"GskRoundedRect * gsk_rounded_rect_init (GskRoundedRect *self, const graphene_rect_t *bounds, const graphene_size_t *top_left, const graphene_size_t *top_right, const graphene_size_t *bottom_right, const graphene_size_t *bottom_left);";function gsk_rounded_rect_init(self, bounds, top_left, top_right, bottom_right, bottom_left) bind(c)
gsk;gsk_rounded_rect_init_copy;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskroundedrect.h;"GskRoundedRect * gsk_rounded_rect_init_copy (GskRoundedRect *self, const GskRoundedRect *src);";function gsk_rounded_rect_init_copy(self, src) bind(c)
gsk;gsk_rounded_rect_init_from_rect;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskroundedrect.h;"GskRoundedRect * gsk_rounded_rect_init_from_rect (GskRoundedRect *self, const graphene_rect_t *bounds, float radius);";function gsk_rounded_rect_init_from_rect(self, bounds, radius) bind(c)
gsk;gsk_rounded_rect_intersects_rect;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskroundedrect.h;"gboolean gsk_rounded_rect_intersects_rect (const GskRoundedRect *self, const graphene_rect_t *rect) G_GNUC_PURE;";function gsk_rounded_rect_intersects_rect(self, rect) bind(c)
gsk;gsk_rounded_rect_is_rectilinear;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskroundedrect.h;"gboolean gsk_rounded_rect_is_rectilinear (const GskRoundedRect *self) G_GNUC_PURE;";function gsk_rounded_rect_is_rectilinear(self) bind(c)
gsk;gsk_rounded_rect_normalize;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskroundedrect.h;"GskRoundedRect * gsk_rounded_rect_normalize (GskRoundedRect *self);";function gsk_rounded_rect_normalize(self) bind(c)
gsk;gsk_rounded_rect_offset;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskroundedrect.h;"GskRoundedRect * gsk_rounded_rect_offset (GskRoundedRect *self, float dx, float dy);";function gsk_rounded_rect_offset(self, dx, dy) bind(c)
gsk;gsk_rounded_rect_shrink;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskroundedrect.h;"GskRoundedRect * gsk_rounded_rect_shrink (GskRoundedRect *self, float top, float right, float bottom, float left);";function gsk_rounded_rect_shrink(self, top, right, bottom, left) bind(c)
gsk;gsk_serialization_error_quark;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GQuark gsk_serialization_error_quark (void);";function gsk_serialization_error_quark() bind(c)
gsk;gsk_shader_args_builder_free_to_args;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"GBytes * gsk_shader_args_builder_free_to_args (GskShaderArgsBuilder *builder);";function gsk_shader_args_builder_free_to_args(builder) bind(c)
gsk;gsk_shader_args_builder_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"GType gsk_shader_args_builder_get_type (void) G_GNUC_CONST;";function gsk_shader_args_builder_get_type() bind(c)
gsk;gsk_shader_args_builder_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"GskShaderArgsBuilder *gsk_shader_args_builder_new (GskGLShader *shader, GBytes *initial_values);";function gsk_shader_args_builder_new(shader, initial_values) bind(c)
gsk;gsk_shader_args_builder_ref;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"GskShaderArgsBuilder *gsk_shader_args_builder_ref (GskShaderArgsBuilder *builder);";function gsk_shader_args_builder_ref(builder) bind(c)
gsk;gsk_shader_args_builder_set_bool;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"void gsk_shader_args_builder_set_bool (GskShaderArgsBuilder *builder, int idx, gboolean value);";subroutine gsk_shader_args_builder_set_bool(builder, idx, value) bind(c)
gsk;gsk_shader_args_builder_set_float;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"void gsk_shader_args_builder_set_float (GskShaderArgsBuilder *builder, int idx, float value);";subroutine gsk_shader_args_builder_set_float(builder, idx, value) bind(c)
gsk;gsk_shader_args_builder_set_int;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"void gsk_shader_args_builder_set_int (GskShaderArgsBuilder *builder, int idx, gint32 value);";subroutine gsk_shader_args_builder_set_int(builder, idx, value) bind(c)
gsk;gsk_shader_args_builder_set_uint;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"void gsk_shader_args_builder_set_uint (GskShaderArgsBuilder *builder, int idx, guint32 value);";subroutine gsk_shader_args_builder_set_uint(builder, idx, value) bind(c)
gsk;gsk_shader_args_builder_set_vec2;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"void gsk_shader_args_builder_set_vec2 (GskShaderArgsBuilder *builder, int idx, const graphene_vec2_t *value);";subroutine gsk_shader_args_builder_set_vec2(builder, idx, value) bind(c)
gsk;gsk_shader_args_builder_set_vec3;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"void gsk_shader_args_builder_set_vec3 (GskShaderArgsBuilder *builder, int idx, const graphene_vec3_t *value);";subroutine gsk_shader_args_builder_set_vec3(builder, idx, value) bind(c)
gsk;gsk_shader_args_builder_set_vec4;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"void gsk_shader_args_builder_set_vec4 (GskShaderArgsBuilder *builder, int idx, const graphene_vec4_t *value);";subroutine gsk_shader_args_builder_set_vec4(builder, idx, value) bind(c)
gsk;gsk_shader_args_builder_to_args;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"GBytes * gsk_shader_args_builder_to_args (GskShaderArgsBuilder *builder);";function gsk_shader_args_builder_to_args(builder) bind(c)
gsk;gsk_shader_args_builder_unref;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskglshader.h;"void gsk_shader_args_builder_unref (GskShaderArgsBuilder *builder);";subroutine gsk_shader_args_builder_unref(builder) bind(c)
gsk;gsk_shadow_node_get_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_shadow_node_get_child (GskRenderNode *node);";function gsk_shadow_node_get_child(node) bind(c)
gsk;gsk_shadow_node_get_n_shadows;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"gsize gsk_shadow_node_get_n_shadows (GskRenderNode *node);";function gsk_shadow_node_get_n_shadows(node) bind(c)
gsk;gsk_shadow_node_get_shadow;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GskShadow * gsk_shadow_node_get_shadow (GskRenderNode *node, gsize i);";function gsk_shadow_node_get_shadow(node, i) bind(c)
gsk;gsk_shadow_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_shadow_node_get_type (void) G_GNUC_CONST;";function gsk_shadow_node_get_type() bind(c)
gsk;gsk_shadow_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_shadow_node_new (GskRenderNode *child, const GskShadow *shadows, gsize n_shadows);";function gsk_shadow_node_new(child, shadows, n_shadows) bind(c)
gsk;gsk_text_node_get_color;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const GdkRGBA * gsk_text_node_get_color (GskRenderNode *node);";function gsk_text_node_get_color(node) bind(c)
gsk;gsk_text_node_get_font;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"PangoFont * gsk_text_node_get_font (GskRenderNode *node);";function gsk_text_node_get_font(node) bind(c)
gsk;gsk_text_node_get_glyphs;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const PangoGlyphInfo *gsk_text_node_get_glyphs (GskRenderNode *node, guint *n_glyphs);";function gsk_text_node_get_glyphs(node, n_glyphs) bind(c)
gsk;gsk_text_node_get_num_glyphs;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"guint gsk_text_node_get_num_glyphs (GskRenderNode *node);";function gsk_text_node_get_num_glyphs(node) bind(c)
gsk;gsk_text_node_get_offset;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"const graphene_point_t *gsk_text_node_get_offset (GskRenderNode *node);";function gsk_text_node_get_offset(node) bind(c)
gsk;gsk_text_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_text_node_get_type (void) G_GNUC_CONST;";function gsk_text_node_get_type() bind(c)
gsk;gsk_text_node_has_color_glyphs;;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"gboolean gsk_text_node_has_color_glyphs (GskRenderNode *node);";function gsk_text_node_has_color_glyphs(node) bind(c)
gsk;gsk_text_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_text_node_new (PangoFont *font, PangoGlyphString *glyphs, const GdkRGBA *color, const graphene_point_t *offset);";function gsk_text_node_new(font, glyphs, color, offset) bind(c)
gsk;gsk_texture_node_get_texture;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GdkTexture * gsk_texture_node_get_texture (GskRenderNode *node);";function gsk_texture_node_get_texture(node) bind(c)
gsk;gsk_texture_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_texture_node_get_type (void) G_GNUC_CONST;";function gsk_texture_node_get_type() bind(c)
gsk;gsk_texture_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_texture_node_new (GdkTexture *texture, const graphene_rect_t *bounds);";function gsk_texture_node_new(texture, bounds) bind(c)
gsk;gsk_transform_equal;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"gboolean gsk_transform_equal (GskTransform *first, GskTransform *second) G_GNUC_PURE;";function gsk_transform_equal(first, second) bind(c)
gsk;gsk_transform_get_category;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransformCategory gsk_transform_get_category (GskTransform *self) G_GNUC_PURE;";function gsk_transform_get_category(self) bind(c)
gsk;gsk_transform_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GType gsk_transform_get_type (void) G_GNUC_CONST;";function gsk_transform_get_type() bind(c)
gsk;gsk_transform_invert;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransform * gsk_transform_invert (GskTransform *self) G_GNUC_WARN_UNUSED_RESULT;";function gsk_transform_invert(self) bind(c)
gsk;gsk_transform_matrix;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransform * gsk_transform_matrix (GskTransform *next, const graphene_matrix_t *matrix) G_GNUC_WARN_UNUSED_RESULT;";function gsk_transform_matrix(next, matrix) bind(c)
gsk;gsk_transform_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransform * gsk_transform_new (void);";function gsk_transform_new() bind(c)
gsk;gsk_transform_node_get_child;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_transform_node_get_child (GskRenderNode *node);";function gsk_transform_node_get_child(node) bind(c)
gsk;gsk_transform_node_get_transform;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskTransform * gsk_transform_node_get_transform (GskRenderNode *node);";function gsk_transform_node_get_transform(node) bind(c)
gsk;gsk_transform_node_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GType gsk_transform_node_get_type (void) G_GNUC_CONST;";function gsk_transform_node_get_type() bind(c)
gsk;gsk_transform_node_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gskrendernode.h;"GskRenderNode * gsk_transform_node_new (GskRenderNode *child, GskTransform *transform);";function gsk_transform_node_new(child, transform) bind(c)
gsk;gsk_transform_parse;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"gboolean gsk_transform_parse (const char *string, GskTransform **out_transform);";function gsk_transform_parse(string, out_transform) bind(c)
gsk;gsk_transform_perspective;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransform * gsk_transform_perspective (GskTransform *next, float depth) G_GNUC_WARN_UNUSED_RESULT;";function gsk_transform_perspective(next, depth) bind(c)
gsk;gsk_transform_print;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"void gsk_transform_print (GskTransform *self, GString *string);";subroutine gsk_transform_print(self, string) bind(c)
gsk;gsk_transform_ref;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransform * gsk_transform_ref (GskTransform *self);";function gsk_transform_ref(self) bind(c)
gsk;gsk_transform_rotate;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransform * gsk_transform_rotate (GskTransform *next, float angle) G_GNUC_WARN_UNUSED_RESULT;";function gsk_transform_rotate(next, angle) bind(c)
gsk;gsk_transform_rotate_3d;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransform * gsk_transform_rotate_3d (GskTransform *next, float angle, const graphene_vec3_t *axis) G_GNUC_WARN_UNUSED_RESULT;";function gsk_transform_rotate_3d(next, angle, axis) bind(c)
gsk;gsk_transform_scale;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransform * gsk_transform_scale (GskTransform *next, float factor_x, float factor_y) G_GNUC_WARN_UNUSED_RESULT;";function gsk_transform_scale(next, factor_x, factor_y) bind(c)
gsk;gsk_transform_scale_3d;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransform * gsk_transform_scale_3d (GskTransform *next, float factor_x, float factor_y, float factor_z) G_GNUC_WARN_UNUSED_RESULT;";function gsk_transform_scale_3d(next, factor_x, factor_y, factor_z) bind(c)
gsk;gsk_transform_to_2d;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"void gsk_transform_to_2d (GskTransform *self, float *out_xx, float *out_yx, float *out_xy, float *out_yy, float *out_dx, float *out_dy);";subroutine gsk_transform_to_2d(self, out_xx, out_yx, out_xy, out_yy, out_dx, out_dy) bind(c)
gsk;gsk_transform_to_affine;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"void gsk_transform_to_affine (GskTransform *self, float *out_scale_x, float *out_scale_y, float *out_dx, float *out_dy);";subroutine gsk_transform_to_affine(self, out_scale_x, out_scale_y, out_dx, out_dy) bind(c)
gsk;gsk_transform_to_matrix;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"void gsk_transform_to_matrix (GskTransform *self, graphene_matrix_t *out_matrix);";subroutine gsk_transform_to_matrix(self, out_matrix) bind(c)
gsk;gsk_transform_to_string;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"char * gsk_transform_to_string (GskTransform *self);";function gsk_transform_to_string(self) bind(c)
gsk;gsk_transform_to_translate;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"void gsk_transform_to_translate (GskTransform *self, float *out_dx, float *out_dy);";subroutine gsk_transform_to_translate(self, out_dx, out_dy) bind(c)
gsk;gsk_transform_transform;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransform * gsk_transform_transform (GskTransform *next, GskTransform *other) G_GNUC_WARN_UNUSED_RESULT;";function gsk_transform_transform(next, other) bind(c)
gsk;gsk_transform_transform_bounds;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"void gsk_transform_transform_bounds (GskTransform *self, const graphene_rect_t *rect, graphene_rect_t *out_rect);";subroutine gsk_transform_transform_bounds(self, rect, out_rect) bind(c)
gsk;gsk_transform_transform_point;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"void gsk_transform_transform_point (GskTransform *self, const graphene_point_t *point, graphene_point_t *out_point);";subroutine gsk_transform_transform_point(self, point, out_point) bind(c)
gsk;gsk_transform_translate;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransform * gsk_transform_translate (GskTransform *next, const graphene_point_t *point) G_GNUC_WARN_UNUSED_RESULT;";function gsk_transform_translate(next, point) bind(c)
gsk;gsk_transform_translate_3d;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"GskTransform * gsk_transform_translate_3d (GskTransform *next, const graphene_point3d_t *point) G_GNUC_WARN_UNUSED_RESULT;";function gsk_transform_translate_3d(next, point) bind(c)
gsk;gsk_transform_unref;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/gsktransform.h;"void gsk_transform_unref (GskTransform *self);";subroutine gsk_transform_unref(self) bind(c)
gsk;gsk_vulkan_renderer_get_type;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/vulkan/gskvulkanrenderer.h;"GType gsk_vulkan_renderer_get_type (void) G_GNUC_CONST;";function gsk_vulkan_renderer_get_type() bind(c)
gsk;gsk_vulkan_renderer_new;GDK_AVAILABLE_IN_ALL;gsk-auto.f90;/usr/include/gtk-4.0/gsk/vulkan/gskvulkanrenderer.h;"GskRenderer * gsk_vulkan_renderer_new (void);";function gsk_vulkan_renderer_new() bind(c)
gtk;gtk_about_dialog_add_credit_section;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_add_credit_section (GtkAboutDialog *about, const char *section_name, const char **people);";subroutine gtk_about_dialog_add_credit_section(about, section_name, people) bind(c)
gtk;gtk_about_dialog_get_artists;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * const * gtk_about_dialog_get_artists (GtkAboutDialog *about);";function gtk_about_dialog_get_artists(about) bind(c)
gtk;gtk_about_dialog_get_authors;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * const * gtk_about_dialog_get_authors (GtkAboutDialog *about);";function gtk_about_dialog_get_authors(about) bind(c)
gtk;gtk_about_dialog_get_comments;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * gtk_about_dialog_get_comments (GtkAboutDialog *about);";function gtk_about_dialog_get_comments(about) bind(c)
gtk;gtk_about_dialog_get_copyright;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * gtk_about_dialog_get_copyright (GtkAboutDialog *about);";function gtk_about_dialog_get_copyright(about) bind(c)
gtk;gtk_about_dialog_get_documenters;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * const * gtk_about_dialog_get_documenters (GtkAboutDialog *about);";function gtk_about_dialog_get_documenters(about) bind(c)
gtk;gtk_about_dialog_get_license;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * gtk_about_dialog_get_license (GtkAboutDialog *about);";function gtk_about_dialog_get_license(about) bind(c)
gtk;gtk_about_dialog_get_license_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"GtkLicense gtk_about_dialog_get_license_type (GtkAboutDialog *about);";function gtk_about_dialog_get_license_type(about) bind(c)
gtk;gtk_about_dialog_get_logo;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"GdkPaintable *gtk_about_dialog_get_logo (GtkAboutDialog *about);";function gtk_about_dialog_get_logo(about) bind(c)
gtk;gtk_about_dialog_get_logo_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * gtk_about_dialog_get_logo_icon_name (GtkAboutDialog *about);";function gtk_about_dialog_get_logo_icon_name(about) bind(c)
gtk;gtk_about_dialog_get_program_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * gtk_about_dialog_get_program_name (GtkAboutDialog *about);";function gtk_about_dialog_get_program_name(about) bind(c)
gtk;gtk_about_dialog_get_system_information;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * gtk_about_dialog_get_system_information (GtkAboutDialog *about);";function gtk_about_dialog_get_system_information(about) bind(c)
gtk;gtk_about_dialog_get_translator_credits;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * gtk_about_dialog_get_translator_credits (GtkAboutDialog *about);";function gtk_about_dialog_get_translator_credits(about) bind(c)
gtk;gtk_about_dialog_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"GType gtk_about_dialog_get_type (void) G_GNUC_CONST;";function gtk_about_dialog_get_type() bind(c)
gtk;gtk_about_dialog_get_version;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * gtk_about_dialog_get_version (GtkAboutDialog *about);";function gtk_about_dialog_get_version(about) bind(c)
gtk;gtk_about_dialog_get_website;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * gtk_about_dialog_get_website (GtkAboutDialog *about);";function gtk_about_dialog_get_website(about) bind(c)
gtk;gtk_about_dialog_get_website_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"const char * gtk_about_dialog_get_website_label (GtkAboutDialog *about);";function gtk_about_dialog_get_website_label(about) bind(c)
gtk;gtk_about_dialog_get_wrap_license;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"gboolean gtk_about_dialog_get_wrap_license (GtkAboutDialog *about);";function gtk_about_dialog_get_wrap_license(about) bind(c)
gtk;gtk_about_dialog_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"GtkWidget *gtk_about_dialog_new (void);";function gtk_about_dialog_new() bind(c)
gtk;gtk_about_dialog_set_artists;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_artists (GtkAboutDialog *about, const char **artists);";subroutine gtk_about_dialog_set_artists(about, artists) bind(c)
gtk;gtk_about_dialog_set_authors;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_authors (GtkAboutDialog *about, const char **authors);";subroutine gtk_about_dialog_set_authors(about, authors) bind(c)
gtk;gtk_about_dialog_set_comments;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_comments (GtkAboutDialog *about, const char *comments);";subroutine gtk_about_dialog_set_comments(about, comments) bind(c)
gtk;gtk_about_dialog_set_copyright;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_copyright (GtkAboutDialog *about, const char *copyright);";subroutine gtk_about_dialog_set_copyright(about, copyright) bind(c)
gtk;gtk_about_dialog_set_documenters;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_documenters (GtkAboutDialog *about, const char **documenters);";subroutine gtk_about_dialog_set_documenters(about, documenters) bind(c)
gtk;gtk_about_dialog_set_license;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_license (GtkAboutDialog *about, const char *license);";subroutine gtk_about_dialog_set_license(about, license) bind(c)
gtk;gtk_about_dialog_set_license_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_license_type (GtkAboutDialog *about, GtkLicense license_type);";subroutine gtk_about_dialog_set_license_type(about, license_type) bind(c)
gtk;gtk_about_dialog_set_logo;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_logo (GtkAboutDialog *about, GdkPaintable *logo);";subroutine gtk_about_dialog_set_logo(about, logo) bind(c)
gtk;gtk_about_dialog_set_logo_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_logo_icon_name (GtkAboutDialog *about, const char *icon_name);";subroutine gtk_about_dialog_set_logo_icon_name(about, icon_name) bind(c)
gtk;gtk_about_dialog_set_program_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_program_name (GtkAboutDialog *about, const char *name);";subroutine gtk_about_dialog_set_program_name(about, name) bind(c)
gtk;gtk_about_dialog_set_system_information;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_system_information (GtkAboutDialog *about, const char *system_information);";subroutine gtk_about_dialog_set_system_information(about, system_information) bind(c)
gtk;gtk_about_dialog_set_translator_credits;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_translator_credits (GtkAboutDialog *about, const char *translator_credits);";subroutine gtk_about_dialog_set_translator_credits(about, translator_credits) bind(c)
gtk;gtk_about_dialog_set_version;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_version (GtkAboutDialog *about, const char *version);";subroutine gtk_about_dialog_set_version(about, version) bind(c)
gtk;gtk_about_dialog_set_website;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_website (GtkAboutDialog *about, const char *website);";subroutine gtk_about_dialog_set_website(about, website) bind(c)
gtk;gtk_about_dialog_set_website_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_website_label (GtkAboutDialog *about, const char *website_label);";subroutine gtk_about_dialog_set_website_label(about, website_label) bind(c)
gtk;gtk_about_dialog_set_wrap_license;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaboutdialog.h;"void gtk_about_dialog_set_wrap_license (GtkAboutDialog *about, gboolean wrap_license);";subroutine gtk_about_dialog_set_wrap_license(about, wrap_license) bind(c)
gtk;gtk_accelerator_get_default_mod_mask;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccelgroup.h;"GdkModifierType gtk_accelerator_get_default_mod_mask (void);";function gtk_accelerator_get_default_mod_mask() bind(c)
gtk;gtk_accelerator_get_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccelgroup.h;"char * gtk_accelerator_get_label (guint accelerator_key, GdkModifierType accelerator_mods);";function gtk_accelerator_get_label(accelerator_key, accelerator_mods) bind(c)
gtk;gtk_accelerator_get_label_with_keycode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccelgroup.h;"char * gtk_accelerator_get_label_with_keycode (GdkDisplay *display, guint accelerator_key, guint keycode, GdkModifierType accelerator_mods);";function gtk_accelerator_get_label_with_keycode(display, accelerator_key, keycode, accelerator_mods) bind(c)
gtk;gtk_accelerator_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccelgroup.h;"char * gtk_accelerator_name (guint accelerator_key, GdkModifierType accelerator_mods);";function gtk_accelerator_name(accelerator_key, accelerator_mods) bind(c)
gtk;gtk_accelerator_name_with_keycode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccelgroup.h;"char * gtk_accelerator_name_with_keycode (GdkDisplay *display, guint accelerator_key, guint keycode, GdkModifierType accelerator_mods);";function gtk_accelerator_name_with_keycode(display, accelerator_key, keycode, accelerator_mods) bind(c)
gtk;gtk_accelerator_parse;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccelgroup.h;"gboolean gtk_accelerator_parse (const char *accelerator, guint *accelerator_key, GdkModifierType *accelerator_mods);";function gtk_accelerator_parse(accelerator, accelerator_key, accelerator_mods) bind(c)
gtk;gtk_accelerator_parse_with_keycode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccelgroup.h;"gboolean gtk_accelerator_parse_with_keycode (const char *accelerator, GdkDisplay *display, guint *accelerator_key, guint **accelerator_codes, GdkModifierType *accelerator_mods);";function gtk_accelerator_parse_with_keycode(accelerator, display, accelerator_key, accelerator_codes, accelerator_mods) bind(c)
gtk;gtk_accelerator_valid;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccelgroup.h;"gboolean gtk_accelerator_valid (guint keyval, GdkModifierType modifiers) G_GNUC_CONST;";function gtk_accelerator_valid(keyval, modifiers) bind(c)
gtk;gtk_accessible_property_init_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccessible.h;"void gtk_accessible_property_init_value (GtkAccessibleProperty property, GValue *value);";subroutine gtk_accessible_property_init_value(property, value) bind(c)
gtk;gtk_accessible_relation_init_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccessible.h;"void gtk_accessible_relation_init_value (GtkAccessibleRelation relation, GValue *value);";subroutine gtk_accessible_relation_init_value(relation, value) bind(c)
gtk;gtk_accessible_reset_property;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccessible.h;"void gtk_accessible_reset_property (GtkAccessible *self, GtkAccessibleProperty property);";subroutine gtk_accessible_reset_property(self, property) bind(c)
gtk;gtk_accessible_reset_relation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccessible.h;"void gtk_accessible_reset_relation (GtkAccessible *self, GtkAccessibleRelation relation);";subroutine gtk_accessible_reset_relation(self, relation) bind(c)
gtk;gtk_accessible_reset_state;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccessible.h;"void gtk_accessible_reset_state (GtkAccessible *self, GtkAccessibleState state);";subroutine gtk_accessible_reset_state(self, state) bind(c)
gtk;gtk_accessible_state_init_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaccessible.h;"void gtk_accessible_state_init_value (GtkAccessibleState state, GValue *value);";subroutine gtk_accessible_state_init_value(state, value) bind(c)
gtk;gtk_action_bar_get_center_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionbar.h;"GtkWidget *gtk_action_bar_get_center_widget (GtkActionBar *action_bar);";function gtk_action_bar_get_center_widget(action_bar) bind(c)
gtk;gtk_action_bar_get_revealed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionbar.h;"gboolean gtk_action_bar_get_revealed (GtkActionBar *action_bar);";function gtk_action_bar_get_revealed(action_bar) bind(c)
gtk;gtk_action_bar_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionbar.h;"GType gtk_action_bar_get_type (void) G_GNUC_CONST;";function gtk_action_bar_get_type() bind(c)
gtk;gtk_action_bar_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionbar.h;"GtkWidget *gtk_action_bar_new (void);";function gtk_action_bar_new() bind(c)
gtk;gtk_action_bar_pack_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionbar.h;"void gtk_action_bar_pack_end (GtkActionBar *action_bar, GtkWidget *child);";subroutine gtk_action_bar_pack_end(action_bar, child) bind(c)
gtk;gtk_action_bar_pack_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionbar.h;"void gtk_action_bar_pack_start (GtkActionBar *action_bar, GtkWidget *child);";subroutine gtk_action_bar_pack_start(action_bar, child) bind(c)
gtk;gtk_action_bar_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionbar.h;"void gtk_action_bar_remove (GtkActionBar *action_bar, GtkWidget *child);";subroutine gtk_action_bar_remove(action_bar, child) bind(c)
gtk;gtk_action_bar_set_center_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionbar.h;"void gtk_action_bar_set_center_widget (GtkActionBar *action_bar, GtkWidget *center_widget);";subroutine gtk_action_bar_set_center_widget(action_bar, center_widget) bind(c)
gtk;gtk_action_bar_set_revealed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionbar.h;"void gtk_action_bar_set_revealed (GtkActionBar *action_bar, gboolean revealed);";subroutine gtk_action_bar_set_revealed(action_bar, revealed) bind(c)
gtk;gtk_actionable_get_action_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionable.h;"const char * gtk_actionable_get_action_name (GtkActionable *actionable);";function gtk_actionable_get_action_name(actionable) bind(c)
gtk;gtk_actionable_get_action_target_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionable.h;"GVariant * gtk_actionable_get_action_target_value (GtkActionable *actionable);";function gtk_actionable_get_action_target_value(actionable) bind(c)
gtk;gtk_actionable_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionable.h;"GType gtk_actionable_get_type (void) G_GNUC_CONST;";function gtk_actionable_get_type() bind(c)
gtk;gtk_actionable_set_action_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionable.h;"void gtk_actionable_set_action_name (GtkActionable *actionable, const char *action_name);";subroutine gtk_actionable_set_action_name(actionable, action_name) bind(c)
gtk;gtk_actionable_set_action_target_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionable.h;"void gtk_actionable_set_action_target_value (GtkActionable *actionable, GVariant *target_value);";subroutine gtk_actionable_set_action_target_value(actionable, target_value) bind(c)
gtk;gtk_actionable_set_detailed_action_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkactionable.h;"void gtk_actionable_set_detailed_action_name (GtkActionable *actionable, const char *detailed_action_name);";subroutine gtk_actionable_set_detailed_action_name(actionable, detailed_action_name) bind(c)
gtk;gtk_adjustment_clamp_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"void gtk_adjustment_clamp_page (GtkAdjustment *adjustment, double lower, double upper);";subroutine gtk_adjustment_clamp_page(adjustment, lower, upper) bind(c)
gtk;gtk_adjustment_configure;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"void gtk_adjustment_configure (GtkAdjustment *adjustment, double value, double lower, double upper, double step_increment, double page_increment, double page_size);";subroutine gtk_adjustment_configure(adjustment, value, lower, upper, step_increment, page_increment, page_size) bind(c)
gtk;gtk_adjustment_get_lower;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"double gtk_adjustment_get_lower (GtkAdjustment *adjustment);";function gtk_adjustment_get_lower(adjustment) bind(c)
gtk;gtk_adjustment_get_minimum_increment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"double gtk_adjustment_get_minimum_increment (GtkAdjustment *adjustment);";function gtk_adjustment_get_minimum_increment(adjustment) bind(c)
gtk;gtk_adjustment_get_page_increment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"double gtk_adjustment_get_page_increment (GtkAdjustment *adjustment);";function gtk_adjustment_get_page_increment(adjustment) bind(c)
gtk;gtk_adjustment_get_page_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"double gtk_adjustment_get_page_size (GtkAdjustment *adjustment);";function gtk_adjustment_get_page_size(adjustment) bind(c)
gtk;gtk_adjustment_get_step_increment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"double gtk_adjustment_get_step_increment (GtkAdjustment *adjustment);";function gtk_adjustment_get_step_increment(adjustment) bind(c)
gtk;gtk_adjustment_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"GType gtk_adjustment_get_type (void) G_GNUC_CONST;";function gtk_adjustment_get_type() bind(c)
gtk;gtk_adjustment_get_upper;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"double gtk_adjustment_get_upper (GtkAdjustment *adjustment);";function gtk_adjustment_get_upper(adjustment) bind(c)
gtk;gtk_adjustment_get_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"double gtk_adjustment_get_value (GtkAdjustment *adjustment);";function gtk_adjustment_get_value(adjustment) bind(c)
gtk;gtk_adjustment_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"GtkAdjustment* gtk_adjustment_new (double value, double lower, double upper, double step_increment, double page_increment, double page_size);";function gtk_adjustment_new(value, lower, upper, step_increment, page_increment, page_size) bind(c)
gtk;gtk_adjustment_set_lower;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"void gtk_adjustment_set_lower (GtkAdjustment *adjustment, double lower);";subroutine gtk_adjustment_set_lower(adjustment, lower) bind(c)
gtk;gtk_adjustment_set_page_increment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"void gtk_adjustment_set_page_increment (GtkAdjustment *adjustment, double page_increment);";subroutine gtk_adjustment_set_page_increment(adjustment, page_increment) bind(c)
gtk;gtk_adjustment_set_page_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"void gtk_adjustment_set_page_size (GtkAdjustment *adjustment, double page_size);";subroutine gtk_adjustment_set_page_size(adjustment, page_size) bind(c)
gtk;gtk_adjustment_set_step_increment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"void gtk_adjustment_set_step_increment (GtkAdjustment *adjustment, double step_increment);";subroutine gtk_adjustment_set_step_increment(adjustment, step_increment) bind(c)
gtk;gtk_adjustment_set_upper;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"void gtk_adjustment_set_upper (GtkAdjustment *adjustment, double upper);";subroutine gtk_adjustment_set_upper(adjustment, upper) bind(c)
gtk;gtk_adjustment_set_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkadjustment.h;"void gtk_adjustment_set_value (GtkAdjustment *adjustment, double value);";subroutine gtk_adjustment_set_value(adjustment, value) bind(c)
gtk;gtk_alternative_trigger_get_first;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"GtkShortcutTrigger * gtk_alternative_trigger_get_first (GtkAlternativeTrigger *self);";function gtk_alternative_trigger_get_first(self) bind(c)
gtk;gtk_alternative_trigger_get_second;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"GtkShortcutTrigger * gtk_alternative_trigger_get_second (GtkAlternativeTrigger *self);";function gtk_alternative_trigger_get_second(self) bind(c)
gtk;gtk_app_chooser_button_append_custom_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"void gtk_app_chooser_button_append_custom_item (GtkAppChooserButton *self, const char *name, const char *label, GIcon *icon);";subroutine gtk_app_chooser_button_append_custom_item(self, name, label, icon) bind(c)
gtk;gtk_app_chooser_button_append_separator;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"void gtk_app_chooser_button_append_separator (GtkAppChooserButton *self);";subroutine gtk_app_chooser_button_append_separator(self) bind(c)
gtk;gtk_app_chooser_button_get_heading;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"const char * gtk_app_chooser_button_get_heading (GtkAppChooserButton *self);";function gtk_app_chooser_button_get_heading(self) bind(c)
gtk;gtk_app_chooser_button_get_modal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"gboolean gtk_app_chooser_button_get_modal (GtkAppChooserButton *self);";function gtk_app_chooser_button_get_modal(self) bind(c)
gtk;gtk_app_chooser_button_get_show_default_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"gboolean gtk_app_chooser_button_get_show_default_item (GtkAppChooserButton *self);";function gtk_app_chooser_button_get_show_default_item(self) bind(c)
gtk;gtk_app_chooser_button_get_show_dialog_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"gboolean gtk_app_chooser_button_get_show_dialog_item (GtkAppChooserButton *self);";function gtk_app_chooser_button_get_show_dialog_item(self) bind(c)
gtk;gtk_app_chooser_button_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"GType gtk_app_chooser_button_get_type (void) G_GNUC_CONST;";function gtk_app_chooser_button_get_type() bind(c)
gtk;gtk_app_chooser_button_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"GtkWidget * gtk_app_chooser_button_new (const char *content_type);";function gtk_app_chooser_button_new(content_type) bind(c)
gtk;gtk_app_chooser_button_set_active_custom_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"void gtk_app_chooser_button_set_active_custom_item (GtkAppChooserButton *self, const char *name);";subroutine gtk_app_chooser_button_set_active_custom_item(self, name) bind(c)
gtk;gtk_app_chooser_button_set_heading;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"void gtk_app_chooser_button_set_heading (GtkAppChooserButton *self, const char *heading);";subroutine gtk_app_chooser_button_set_heading(self, heading) bind(c)
gtk;gtk_app_chooser_button_set_modal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"void gtk_app_chooser_button_set_modal (GtkAppChooserButton *self, gboolean modal);";subroutine gtk_app_chooser_button_set_modal(self, modal) bind(c)
gtk;gtk_app_chooser_button_set_show_default_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"void gtk_app_chooser_button_set_show_default_item (GtkAppChooserButton *self, gboolean setting);";subroutine gtk_app_chooser_button_set_show_default_item(self, setting) bind(c)
gtk;gtk_app_chooser_button_set_show_dialog_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserbutton.h;"void gtk_app_chooser_button_set_show_dialog_item (GtkAppChooserButton *self, gboolean setting);";subroutine gtk_app_chooser_button_set_show_dialog_item(self, setting) bind(c)
gtk;gtk_app_chooser_dialog_get_heading;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserdialog.h;"const char * gtk_app_chooser_dialog_get_heading (GtkAppChooserDialog *self);";function gtk_app_chooser_dialog_get_heading(self) bind(c)
gtk;gtk_app_chooser_dialog_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserdialog.h;"GType gtk_app_chooser_dialog_get_type (void) G_GNUC_CONST;";function gtk_app_chooser_dialog_get_type() bind(c)
gtk;gtk_app_chooser_dialog_get_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserdialog.h;"GtkWidget * gtk_app_chooser_dialog_get_widget (GtkAppChooserDialog *self);";function gtk_app_chooser_dialog_get_widget(self) bind(c)
gtk;gtk_app_chooser_dialog_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserdialog.h;"GtkWidget * gtk_app_chooser_dialog_new (GtkWindow *parent, GtkDialogFlags flags, GFile *file);";function gtk_app_chooser_dialog_new(parent, flags, file) bind(c)
gtk;gtk_app_chooser_dialog_new_for_content_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserdialog.h;"GtkWidget * gtk_app_chooser_dialog_new_for_content_type (GtkWindow *parent, GtkDialogFlags flags, const char *content_type);";function gtk_app_chooser_dialog_new_for_content_type(parent, flags, content_type) bind(c)
gtk;gtk_app_chooser_dialog_set_heading;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserdialog.h;"void gtk_app_chooser_dialog_set_heading (GtkAppChooserDialog *self, const char *heading);";subroutine gtk_app_chooser_dialog_set_heading(self, heading) bind(c)
gtk;gtk_app_chooser_get_app_info;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooser.h;"GAppInfo * gtk_app_chooser_get_app_info (GtkAppChooser *self);";function gtk_app_chooser_get_app_info(self) bind(c)
gtk;gtk_app_chooser_get_content_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooser.h;"char * gtk_app_chooser_get_content_type (GtkAppChooser *self);";function gtk_app_chooser_get_content_type(self) bind(c)
gtk;gtk_app_chooser_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooser.h;"GType gtk_app_chooser_get_type (void) G_GNUC_CONST;";function gtk_app_chooser_get_type() bind(c)
gtk;gtk_app_chooser_refresh;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooser.h;"void gtk_app_chooser_refresh (GtkAppChooser *self);";subroutine gtk_app_chooser_refresh(self) bind(c)
gtk;gtk_app_chooser_widget_get_default_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"const char * gtk_app_chooser_widget_get_default_text (GtkAppChooserWidget *self);";function gtk_app_chooser_widget_get_default_text(self) bind(c)
gtk;gtk_app_chooser_widget_get_show_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"gboolean gtk_app_chooser_widget_get_show_all (GtkAppChooserWidget *self);";function gtk_app_chooser_widget_get_show_all(self) bind(c)
gtk;gtk_app_chooser_widget_get_show_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"gboolean gtk_app_chooser_widget_get_show_default (GtkAppChooserWidget *self);";function gtk_app_chooser_widget_get_show_default(self) bind(c)
gtk;gtk_app_chooser_widget_get_show_fallback;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"gboolean gtk_app_chooser_widget_get_show_fallback (GtkAppChooserWidget *self);";function gtk_app_chooser_widget_get_show_fallback(self) bind(c)
gtk;gtk_app_chooser_widget_get_show_other;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"gboolean gtk_app_chooser_widget_get_show_other (GtkAppChooserWidget *self);";function gtk_app_chooser_widget_get_show_other(self) bind(c)
gtk;gtk_app_chooser_widget_get_show_recommended;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"gboolean gtk_app_chooser_widget_get_show_recommended (GtkAppChooserWidget *self);";function gtk_app_chooser_widget_get_show_recommended(self) bind(c)
gtk;gtk_app_chooser_widget_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"GType gtk_app_chooser_widget_get_type (void) G_GNUC_CONST;";function gtk_app_chooser_widget_get_type() bind(c)
gtk;gtk_app_chooser_widget_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"GtkWidget * gtk_app_chooser_widget_new (const char *content_type);";function gtk_app_chooser_widget_new(content_type) bind(c)
gtk;gtk_app_chooser_widget_set_default_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"void gtk_app_chooser_widget_set_default_text (GtkAppChooserWidget *self, const char *text);";subroutine gtk_app_chooser_widget_set_default_text(self, text) bind(c)
gtk;gtk_app_chooser_widget_set_show_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"void gtk_app_chooser_widget_set_show_all (GtkAppChooserWidget *self, gboolean setting);";subroutine gtk_app_chooser_widget_set_show_all(self, setting) bind(c)
gtk;gtk_app_chooser_widget_set_show_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"void gtk_app_chooser_widget_set_show_default (GtkAppChooserWidget *self, gboolean setting);";subroutine gtk_app_chooser_widget_set_show_default(self, setting) bind(c)
gtk;gtk_app_chooser_widget_set_show_fallback;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"void gtk_app_chooser_widget_set_show_fallback (GtkAppChooserWidget *self, gboolean setting);";subroutine gtk_app_chooser_widget_set_show_fallback(self, setting) bind(c)
gtk;gtk_app_chooser_widget_set_show_other;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"void gtk_app_chooser_widget_set_show_other (GtkAppChooserWidget *self, gboolean setting);";subroutine gtk_app_chooser_widget_set_show_other(self, setting) bind(c)
gtk;gtk_app_chooser_widget_set_show_recommended;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkappchooserwidget.h;"void gtk_app_chooser_widget_set_show_recommended (GtkAppChooserWidget *self, gboolean setting);";subroutine gtk_app_chooser_widget_set_show_recommended(self, setting) bind(c)
gtk;gtk_application_add_window;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"void gtk_application_add_window (GtkApplication *application, GtkWindow *window);";subroutine gtk_application_add_window(application, window) bind(c)
gtk;gtk_application_get_accels_for_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"char ** gtk_application_get_accels_for_action (GtkApplication *application, const char *detailed_action_name);";function gtk_application_get_accels_for_action(application, detailed_action_name) bind(c)
gtk;gtk_application_get_actions_for_accel;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"char ** gtk_application_get_actions_for_accel (GtkApplication *application, const char *accel);";function gtk_application_get_actions_for_accel(application, accel) bind(c)
gtk;gtk_application_get_active_window;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"GtkWindow * gtk_application_get_active_window (GtkApplication *application);";function gtk_application_get_active_window(application) bind(c)
gtk;gtk_application_get_menu_by_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"GMenu * gtk_application_get_menu_by_id (GtkApplication *application, const char *id);";function gtk_application_get_menu_by_id(application, id) bind(c)
gtk;gtk_application_get_menubar;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"GMenuModel * gtk_application_get_menubar (GtkApplication *application);";function gtk_application_get_menubar(application) bind(c)
gtk;gtk_application_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"GType gtk_application_get_type (void) G_GNUC_CONST;";function gtk_application_get_type() bind(c)
gtk;gtk_application_get_window_by_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"GtkWindow * gtk_application_get_window_by_id (GtkApplication *application, guint id);";function gtk_application_get_window_by_id(application, id) bind(c)
gtk;gtk_application_get_windows;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"GList * gtk_application_get_windows (GtkApplication *application);";function gtk_application_get_windows(application) bind(c)
gtk;gtk_application_inhibit;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"guint gtk_application_inhibit (GtkApplication *application, GtkWindow *window, GtkApplicationInhibitFlags flags, const char *reason);";function gtk_application_inhibit(application, window, flags, reason) bind(c)
gtk;gtk_application_list_action_descriptions;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"char ** gtk_application_list_action_descriptions (GtkApplication *application);";function gtk_application_list_action_descriptions(application) bind(c)
gtk;gtk_application_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"GtkApplication * gtk_application_new (const char *application_id, GApplicationFlags flags);";function gtk_application_new(application_id, flags) bind(c)
gtk;gtk_application_remove_window;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"void gtk_application_remove_window (GtkApplication *application, GtkWindow *window);";subroutine gtk_application_remove_window(application, window) bind(c)
gtk;gtk_application_set_accels_for_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"void gtk_application_set_accels_for_action (GtkApplication *application, const char *detailed_action_name, const char * const *accels);";subroutine gtk_application_set_accels_for_action(application, detailed_action_name, accels) bind(c)
gtk;gtk_application_set_menubar;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"void gtk_application_set_menubar (GtkApplication *application, GMenuModel *menubar);";subroutine gtk_application_set_menubar(application, menubar) bind(c)
gtk;gtk_application_uninhibit;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplication.h;"void gtk_application_uninhibit (GtkApplication *application, guint cookie);";subroutine gtk_application_uninhibit(application, cookie) bind(c)
gtk;gtk_application_window_get_help_overlay;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplicationwindow.h;"GtkShortcutsWindow * gtk_application_window_get_help_overlay (GtkApplicationWindow *window);";function gtk_application_window_get_help_overlay(window) bind(c)
gtk;gtk_application_window_get_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplicationwindow.h;"guint gtk_application_window_get_id (GtkApplicationWindow *window);";function gtk_application_window_get_id(window) bind(c)
gtk;gtk_application_window_get_show_menubar;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplicationwindow.h;"gboolean gtk_application_window_get_show_menubar (GtkApplicationWindow *window);";function gtk_application_window_get_show_menubar(window) bind(c)
gtk;gtk_application_window_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplicationwindow.h;"GType gtk_application_window_get_type (void) G_GNUC_CONST;";function gtk_application_window_get_type() bind(c)
gtk;gtk_application_window_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplicationwindow.h;"GtkWidget * gtk_application_window_new (GtkApplication *application);";function gtk_application_window_new(application) bind(c)
gtk;gtk_application_window_set_help_overlay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplicationwindow.h;"void gtk_application_window_set_help_overlay (GtkApplicationWindow *window, GtkShortcutsWindow *help_overlay);";subroutine gtk_application_window_set_help_overlay(window, help_overlay) bind(c)
gtk;gtk_application_window_set_show_menubar;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkapplicationwindow.h;"void gtk_application_window_set_show_menubar (GtkApplicationWindow *window, gboolean show_menubar);";subroutine gtk_application_window_set_show_menubar(window, show_menubar) bind(c)
gtk;gtk_aspect_frame_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaspectframe.h;"GtkWidget *gtk_aspect_frame_get_child (GtkAspectFrame *self);";function gtk_aspect_frame_get_child(self) bind(c)
gtk;gtk_aspect_frame_get_obey_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaspectframe.h;"gboolean gtk_aspect_frame_get_obey_child (GtkAspectFrame *self);";function gtk_aspect_frame_get_obey_child(self) bind(c)
gtk;gtk_aspect_frame_get_ratio;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaspectframe.h;"float gtk_aspect_frame_get_ratio (GtkAspectFrame *self);";function gtk_aspect_frame_get_ratio(self) bind(c)
gtk;gtk_aspect_frame_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaspectframe.h;"GType gtk_aspect_frame_get_type (void) G_GNUC_CONST;";function gtk_aspect_frame_get_type() bind(c)
gtk;gtk_aspect_frame_get_xalign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaspectframe.h;"float gtk_aspect_frame_get_xalign (GtkAspectFrame *self);";function gtk_aspect_frame_get_xalign(self) bind(c)
gtk;gtk_aspect_frame_get_yalign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaspectframe.h;"float gtk_aspect_frame_get_yalign (GtkAspectFrame *self);";function gtk_aspect_frame_get_yalign(self) bind(c)
gtk;gtk_aspect_frame_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaspectframe.h;"GtkWidget* gtk_aspect_frame_new (float xalign, float yalign, float ratio, gboolean obey_child);";function gtk_aspect_frame_new(xalign, yalign, ratio, obey_child) bind(c)
gtk;gtk_aspect_frame_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaspectframe.h;"void gtk_aspect_frame_set_child (GtkAspectFrame *self, GtkWidget *child);";subroutine gtk_aspect_frame_set_child(self, child) bind(c)
gtk;gtk_aspect_frame_set_obey_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaspectframe.h;"void gtk_aspect_frame_set_obey_child (GtkAspectFrame *self, gboolean obey_child);";subroutine gtk_aspect_frame_set_obey_child(self, obey_child) bind(c)
gtk;gtk_aspect_frame_set_ratio;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaspectframe.h;"void gtk_aspect_frame_set_ratio (GtkAspectFrame *self, float ratio);";subroutine gtk_aspect_frame_set_ratio(self, ratio) bind(c)
gtk;gtk_aspect_frame_set_xalign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaspectframe.h;"void gtk_aspect_frame_set_xalign (GtkAspectFrame *self, float xalign);";subroutine gtk_aspect_frame_set_xalign(self, xalign) bind(c)
gtk;gtk_aspect_frame_set_yalign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkaspectframe.h;"void gtk_aspect_frame_set_yalign (GtkAspectFrame *self, float yalign);";subroutine gtk_aspect_frame_set_yalign(self, yalign) bind(c)
gtk;gtk_assistant_add_action_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"void gtk_assistant_add_action_widget (GtkAssistant *assistant, GtkWidget *child);";subroutine gtk_assistant_add_action_widget(assistant, child) bind(c)
gtk;gtk_assistant_append_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"int gtk_assistant_append_page (GtkAssistant *assistant, GtkWidget *page);";function gtk_assistant_append_page(assistant, page) bind(c)
gtk;gtk_assistant_commit;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"void gtk_assistant_commit (GtkAssistant *assistant);";subroutine gtk_assistant_commit(assistant) bind(c)
gtk;gtk_assistant_get_current_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"int gtk_assistant_get_current_page (GtkAssistant *assistant);";function gtk_assistant_get_current_page(assistant) bind(c)
gtk;gtk_assistant_get_n_pages;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"int gtk_assistant_get_n_pages (GtkAssistant *assistant);";function gtk_assistant_get_n_pages(assistant) bind(c)
gtk;gtk_assistant_get_nth_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"GtkWidget *gtk_assistant_get_nth_page (GtkAssistant *assistant, int page_num);";function gtk_assistant_get_nth_page(assistant, page_num) bind(c)
gtk;gtk_assistant_get_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"GtkAssistantPage * gtk_assistant_get_page (GtkAssistant *assistant, GtkWidget *child);";function gtk_assistant_get_page(assistant, child) bind(c)
gtk;gtk_assistant_get_page_complete;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"gboolean gtk_assistant_get_page_complete (GtkAssistant *assistant, GtkWidget *page);";function gtk_assistant_get_page_complete(assistant, page) bind(c)
gtk;gtk_assistant_get_page_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"const char * gtk_assistant_get_page_title (GtkAssistant *assistant, GtkWidget *page);";function gtk_assistant_get_page_title(assistant, page) bind(c)
gtk;gtk_assistant_get_page_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"GtkAssistantPageType gtk_assistant_get_page_type (GtkAssistant *assistant, GtkWidget *page);";function gtk_assistant_get_page_type(assistant, page) bind(c)
gtk;gtk_assistant_get_pages;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"GListModel * gtk_assistant_get_pages (GtkAssistant *assistant);";function gtk_assistant_get_pages(assistant) bind(c)
gtk;gtk_assistant_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"GType gtk_assistant_get_type (void) G_GNUC_CONST;";function gtk_assistant_get_type() bind(c)
gtk;gtk_assistant_insert_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"int gtk_assistant_insert_page (GtkAssistant *assistant, GtkWidget *page, int position);";function gtk_assistant_insert_page(assistant, page, position) bind(c)
gtk;gtk_assistant_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"GtkWidget *gtk_assistant_new (void);";function gtk_assistant_new() bind(c)
gtk;gtk_assistant_next_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"void gtk_assistant_next_page (GtkAssistant *assistant);";subroutine gtk_assistant_next_page(assistant) bind(c)
gtk;gtk_assistant_page_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"GtkWidget * gtk_assistant_page_get_child (GtkAssistantPage *page);";function gtk_assistant_page_get_child(page) bind(c)
gtk;gtk_assistant_page_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"GType gtk_assistant_page_get_type (void) G_GNUC_CONST;";function gtk_assistant_page_get_type() bind(c)
gtk;gtk_assistant_prepend_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"int gtk_assistant_prepend_page (GtkAssistant *assistant, GtkWidget *page);";function gtk_assistant_prepend_page(assistant, page) bind(c)
gtk;gtk_assistant_previous_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"void gtk_assistant_previous_page (GtkAssistant *assistant);";subroutine gtk_assistant_previous_page(assistant) bind(c)
gtk;gtk_assistant_remove_action_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"void gtk_assistant_remove_action_widget (GtkAssistant *assistant, GtkWidget *child);";subroutine gtk_assistant_remove_action_widget(assistant, child) bind(c)
gtk;gtk_assistant_remove_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"void gtk_assistant_remove_page (GtkAssistant *assistant, int page_num);";subroutine gtk_assistant_remove_page(assistant, page_num) bind(c)
gtk;gtk_assistant_set_current_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"void gtk_assistant_set_current_page (GtkAssistant *assistant, int page_num);";subroutine gtk_assistant_set_current_page(assistant, page_num) bind(c)
gtk;gtk_assistant_set_forward_page_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"void gtk_assistant_set_forward_page_func (GtkAssistant *assistant, GtkAssistantPageFunc page_func, gpointer data, GDestroyNotify destroy);";subroutine gtk_assistant_set_forward_page_func(assistant, page_func, data, destroy) bind(c)
gtk;gtk_assistant_set_page_complete;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"void gtk_assistant_set_page_complete (GtkAssistant *assistant, GtkWidget *page, gboolean complete);";subroutine gtk_assistant_set_page_complete(assistant, page, complete) bind(c)
gtk;gtk_assistant_set_page_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"void gtk_assistant_set_page_title (GtkAssistant *assistant, GtkWidget *page, const char *title);";subroutine gtk_assistant_set_page_title(assistant, page, title) bind(c)
gtk;gtk_assistant_set_page_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"void gtk_assistant_set_page_type (GtkAssistant *assistant, GtkWidget *page, GtkAssistantPageType type);";subroutine gtk_assistant_set_page_type(assistant, page, type) bind(c)
gtk;gtk_assistant_update_buttons_state;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkassistant.h;"void gtk_assistant_update_buttons_state (GtkAssistant *assistant);";subroutine gtk_assistant_update_buttons_state(assistant) bind(c)
gtk;gtk_at_context_create;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkatcontext.h;"GtkATContext * gtk_at_context_create (GtkAccessibleRole accessible_role, GtkAccessible *accessible, GdkDisplay *display);";function gtk_at_context_create(accessible_role, accessible, display) bind(c)
gtk;gtk_at_context_get_accessible_role;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkatcontext.h;"GtkAccessibleRole gtk_at_context_get_accessible_role (GtkATContext *self);";function gtk_at_context_get_accessible_role(self) bind(c)
gtk;gtk_bitset_add;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"gboolean gtk_bitset_add (GtkBitset *self, guint value);";function gtk_bitset_add(self, value) bind(c)
gtk;gtk_bitset_add_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_add_range (GtkBitset *self, guint start, guint n_items);";subroutine gtk_bitset_add_range(self, start, n_items) bind(c)
gtk;gtk_bitset_add_range_closed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_add_range_closed (GtkBitset *self, guint first, guint last);";subroutine gtk_bitset_add_range_closed(self, first, last) bind(c)
gtk;gtk_bitset_add_rectangle;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_add_rectangle (GtkBitset *self, guint start, guint width, guint height, guint stride);";subroutine gtk_bitset_add_rectangle(self, start, width, height, stride) bind(c)
gtk;gtk_bitset_contains;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"gboolean gtk_bitset_contains (const GtkBitset *self, guint value);";function gtk_bitset_contains(self, value) bind(c)
gtk;gtk_bitset_copy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"GtkBitset * gtk_bitset_copy (const GtkBitset *self);";function gtk_bitset_copy(self) bind(c)
gtk;gtk_bitset_difference;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_difference (GtkBitset *self, const GtkBitset *other);";subroutine gtk_bitset_difference(self, other) bind(c)
gtk;gtk_bitset_equals;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"gboolean gtk_bitset_equals (const GtkBitset *self, const GtkBitset *other);";function gtk_bitset_equals(self, other) bind(c)
gtk;gtk_bitset_get_maximum;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"guint gtk_bitset_get_maximum (const GtkBitset *self);";function gtk_bitset_get_maximum(self) bind(c)
gtk;gtk_bitset_get_minimum;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"guint gtk_bitset_get_minimum (const GtkBitset *self);";function gtk_bitset_get_minimum(self) bind(c)
gtk;gtk_bitset_get_nth;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"guint gtk_bitset_get_nth (const GtkBitset *self, guint nth);";function gtk_bitset_get_nth(self, nth) bind(c)
gtk;gtk_bitset_get_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"guint64 gtk_bitset_get_size (const GtkBitset *self);";function gtk_bitset_get_size(self) bind(c)
gtk;gtk_bitset_get_size_in_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"guint64 gtk_bitset_get_size_in_range (const GtkBitset *self, guint first, guint last);";function gtk_bitset_get_size_in_range(self, first, last) bind(c)
gtk;gtk_bitset_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"GType gtk_bitset_get_type (void) G_GNUC_CONST;";function gtk_bitset_get_type() bind(c)
gtk;gtk_bitset_intersect;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_intersect (GtkBitset *self, const GtkBitset *other);";subroutine gtk_bitset_intersect(self, other) bind(c)
gtk;gtk_bitset_is_empty;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"gboolean gtk_bitset_is_empty (const GtkBitset *self);";function gtk_bitset_is_empty(self) bind(c)
gtk;gtk_bitset_iter_get_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"guint gtk_bitset_iter_get_value (const GtkBitsetIter *iter);";function gtk_bitset_iter_get_value(iter) bind(c)
gtk;gtk_bitset_iter_init_at;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"gboolean gtk_bitset_iter_init_at (GtkBitsetIter *iter, const GtkBitset *set, guint target, guint *value);";function gtk_bitset_iter_init_at(iter, set, target, value) bind(c)
gtk;gtk_bitset_iter_init_first;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"gboolean gtk_bitset_iter_init_first (GtkBitsetIter *iter, const GtkBitset *set, guint *value);";function gtk_bitset_iter_init_first(iter, set, value) bind(c)
gtk;gtk_bitset_iter_init_last;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"gboolean gtk_bitset_iter_init_last (GtkBitsetIter *iter, const GtkBitset *set, guint *value);";function gtk_bitset_iter_init_last(iter, set, value) bind(c)
gtk;gtk_bitset_iter_is_valid;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"gboolean gtk_bitset_iter_is_valid (const GtkBitsetIter *iter);";function gtk_bitset_iter_is_valid(iter) bind(c)
gtk;gtk_bitset_iter_next;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"gboolean gtk_bitset_iter_next (GtkBitsetIter *iter, guint *value);";function gtk_bitset_iter_next(iter, value) bind(c)
gtk;gtk_bitset_iter_previous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"gboolean gtk_bitset_iter_previous (GtkBitsetIter *iter, guint *value);";function gtk_bitset_iter_previous(iter, value) bind(c)
gtk;gtk_bitset_new_empty;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"GtkBitset * gtk_bitset_new_empty (void);";function gtk_bitset_new_empty() bind(c)
gtk;gtk_bitset_new_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"GtkBitset * gtk_bitset_new_range (guint start, guint n_items);";function gtk_bitset_new_range(start, n_items) bind(c)
gtk;gtk_bitset_ref;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"GtkBitset * gtk_bitset_ref (GtkBitset *self);";function gtk_bitset_ref(self) bind(c)
gtk;gtk_bitset_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"gboolean gtk_bitset_remove (GtkBitset *self, guint value);";function gtk_bitset_remove(self, value) bind(c)
gtk;gtk_bitset_remove_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_remove_all (GtkBitset *self);";subroutine gtk_bitset_remove_all(self) bind(c)
gtk;gtk_bitset_remove_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_remove_range (GtkBitset *self, guint start, guint n_items);";subroutine gtk_bitset_remove_range(self, start, n_items) bind(c)
gtk;gtk_bitset_remove_range_closed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_remove_range_closed (GtkBitset *self, guint first, guint last);";subroutine gtk_bitset_remove_range_closed(self, first, last) bind(c)
gtk;gtk_bitset_remove_rectangle;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_remove_rectangle (GtkBitset *self, guint start, guint width, guint height, guint stride);";subroutine gtk_bitset_remove_rectangle(self, start, width, height, stride) bind(c)
gtk;gtk_bitset_shift_left;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_shift_left (GtkBitset *self, guint amount);";subroutine gtk_bitset_shift_left(self, amount) bind(c)
gtk;gtk_bitset_shift_right;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_shift_right (GtkBitset *self, guint amount);";subroutine gtk_bitset_shift_right(self, amount) bind(c)
gtk;gtk_bitset_splice;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_splice (GtkBitset *self, guint position, guint removed, guint added);";subroutine gtk_bitset_splice(self, position, removed, added) bind(c)
gtk;gtk_bitset_subtract;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_subtract (GtkBitset *self, const GtkBitset *other);";subroutine gtk_bitset_subtract(self, other) bind(c)
gtk;gtk_bitset_union;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_union (GtkBitset *self, const GtkBitset *other);";subroutine gtk_bitset_union(self, other) bind(c)
gtk;gtk_bitset_unref;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbitset.h;"void gtk_bitset_unref (GtkBitset *self);";subroutine gtk_bitset_unref(self) bind(c)
gtk;gtk_bookmark_list_get_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbookmarklist.h;"const char * gtk_bookmark_list_get_attributes (GtkBookmarkList *self);";function gtk_bookmark_list_get_attributes(self) bind(c)
gtk;gtk_bookmark_list_get_filename;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbookmarklist.h;"const char * gtk_bookmark_list_get_filename (GtkBookmarkList *self);";function gtk_bookmark_list_get_filename(self) bind(c)
gtk;gtk_bookmark_list_get_io_priority;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbookmarklist.h;"int gtk_bookmark_list_get_io_priority (GtkBookmarkList *self);";function gtk_bookmark_list_get_io_priority(self) bind(c)
gtk;gtk_bookmark_list_is_loading;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbookmarklist.h;"gboolean gtk_bookmark_list_is_loading (GtkBookmarkList *self);";function gtk_bookmark_list_is_loading(self) bind(c)
gtk;gtk_bookmark_list_set_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbookmarklist.h;"void gtk_bookmark_list_set_attributes (GtkBookmarkList *self, const char *attributes);";subroutine gtk_bookmark_list_set_attributes(self, attributes) bind(c)
gtk;gtk_bookmark_list_set_io_priority;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbookmarklist.h;"void gtk_bookmark_list_set_io_priority (GtkBookmarkList *self, int io_priority);";subroutine gtk_bookmark_list_set_io_priority(self, io_priority) bind(c)
gtk;gtk_bool_filter_get_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkboolfilter.h;"GtkExpression * gtk_bool_filter_get_expression (GtkBoolFilter *self);";function gtk_bool_filter_get_expression(self) bind(c)
gtk;gtk_bool_filter_get_invert;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkboolfilter.h;"gboolean gtk_bool_filter_get_invert (GtkBoolFilter *self);";function gtk_bool_filter_get_invert(self) bind(c)
gtk;gtk_bool_filter_set_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkboolfilter.h;"void gtk_bool_filter_set_expression (GtkBoolFilter *self, GtkExpression *expression);";subroutine gtk_bool_filter_set_expression(self, expression) bind(c)
gtk;gtk_bool_filter_set_invert;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkboolfilter.h;"void gtk_bool_filter_set_invert (GtkBoolFilter *self, gboolean invert);";subroutine gtk_bool_filter_set_invert(self, invert) bind(c)
gtk;gtk_border_copy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkborder.h;"GtkBorder *gtk_border_copy (const GtkBorder *border_);";function gtk_border_copy(border_) bind(c)
gtk;gtk_border_free;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkborder.h;"void gtk_border_free (GtkBorder *border_);";subroutine gtk_border_free(border_) bind(c)
gtk;gtk_border_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkborder.h;"GType gtk_border_get_type (void) G_GNUC_CONST;";function gtk_border_get_type() bind(c)
gtk;gtk_border_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkborder.h;"GtkBorder *gtk_border_new (void) G_GNUC_MALLOC;";function gtk_border_new() bind(c)
gtk;gtk_box_append;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"void gtk_box_append (GtkBox *box, GtkWidget *child);";subroutine gtk_box_append(box, child) bind(c)
gtk;gtk_box_get_baseline_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"GtkBaselinePosition gtk_box_get_baseline_position (GtkBox *box);";function gtk_box_get_baseline_position(box) bind(c)
gtk;gtk_box_get_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"gboolean gtk_box_get_homogeneous (GtkBox *box);";function gtk_box_get_homogeneous(box) bind(c)
gtk;gtk_box_get_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"int gtk_box_get_spacing (GtkBox *box);";function gtk_box_get_spacing(box) bind(c)
gtk;gtk_box_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"GType gtk_box_get_type (void) G_GNUC_CONST;";function gtk_box_get_type() bind(c)
gtk;gtk_box_insert_child_after;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"void gtk_box_insert_child_after (GtkBox *box, GtkWidget *child, GtkWidget *sibling);";subroutine gtk_box_insert_child_after(box, child, sibling) bind(c)
gtk;gtk_box_layout_get_baseline_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkboxlayout.h;"GtkBaselinePosition gtk_box_layout_get_baseline_position (GtkBoxLayout *box_layout);";function gtk_box_layout_get_baseline_position(box_layout) bind(c)
gtk;gtk_box_layout_get_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkboxlayout.h;"gboolean gtk_box_layout_get_homogeneous (GtkBoxLayout *box_layout);";function gtk_box_layout_get_homogeneous(box_layout) bind(c)
gtk;gtk_box_layout_get_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkboxlayout.h;"guint gtk_box_layout_get_spacing (GtkBoxLayout *box_layout);";function gtk_box_layout_get_spacing(box_layout) bind(c)
gtk;gtk_box_layout_set_baseline_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkboxlayout.h;"void gtk_box_layout_set_baseline_position (GtkBoxLayout *box_layout, GtkBaselinePosition position);";subroutine gtk_box_layout_set_baseline_position(box_layout, position) bind(c)
gtk;gtk_box_layout_set_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkboxlayout.h;"void gtk_box_layout_set_homogeneous (GtkBoxLayout *box_layout, gboolean homogeneous);";subroutine gtk_box_layout_set_homogeneous(box_layout, homogeneous) bind(c)
gtk;gtk_box_layout_set_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkboxlayout.h;"void gtk_box_layout_set_spacing (GtkBoxLayout *box_layout, guint spacing);";subroutine gtk_box_layout_set_spacing(box_layout, spacing) bind(c)
gtk;gtk_box_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"GtkWidget* gtk_box_new (GtkOrientation orientation, int spacing);";function gtk_box_new(orientation, spacing) bind(c)
gtk;gtk_box_prepend;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"void gtk_box_prepend (GtkBox *box, GtkWidget *child);";subroutine gtk_box_prepend(box, child) bind(c)
gtk;gtk_box_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"void gtk_box_remove (GtkBox *box, GtkWidget *child);";subroutine gtk_box_remove(box, child) bind(c)
gtk;gtk_box_reorder_child_after;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"void gtk_box_reorder_child_after (GtkBox *box, GtkWidget *child, GtkWidget *sibling);";subroutine gtk_box_reorder_child_after(box, child, sibling) bind(c)
gtk;gtk_box_set_baseline_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"void gtk_box_set_baseline_position (GtkBox *box, GtkBaselinePosition position);";subroutine gtk_box_set_baseline_position(box, position) bind(c)
gtk;gtk_box_set_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"void gtk_box_set_homogeneous (GtkBox *box, gboolean homogeneous);";subroutine gtk_box_set_homogeneous(box, homogeneous) bind(c)
gtk;gtk_box_set_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbox.h;"void gtk_box_set_spacing (GtkBox *box, int spacing);";subroutine gtk_box_set_spacing(box, spacing) bind(c)
gtk;gtk_buildable_get_buildable_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuildable.h;"const char * gtk_buildable_get_buildable_id (GtkBuildable *buildable);";function gtk_buildable_get_buildable_id(buildable) bind(c)
gtk;gtk_buildable_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuildable.h;"GType gtk_buildable_get_type (void) G_GNUC_CONST;";function gtk_buildable_get_type() bind(c)
gtk;gtk_buildable_parse_context_get_element;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuildable.h;"const char * gtk_buildable_parse_context_get_element (GtkBuildableParseContext *context);";function gtk_buildable_parse_context_get_element(context) bind(c)
gtk;gtk_buildable_parse_context_get_element_stack;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuildable.h;"GPtrArray *gtk_buildable_parse_context_get_element_stack (GtkBuildableParseContext *context);";function gtk_buildable_parse_context_get_element_stack(context) bind(c)
gtk;gtk_buildable_parse_context_get_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuildable.h;"void gtk_buildable_parse_context_get_position (GtkBuildableParseContext *context, int *line_number, int *char_number);";subroutine gtk_buildable_parse_context_get_position(context, line_number, char_number) bind(c)
gtk;gtk_buildable_parse_context_pop;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuildable.h;"gpointer gtk_buildable_parse_context_pop (GtkBuildableParseContext *context);";function gtk_buildable_parse_context_pop(context) bind(c)
gtk;gtk_buildable_parse_context_push;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuildable.h;"void gtk_buildable_parse_context_push (GtkBuildableParseContext *context, const GtkBuildableParser *parser, gpointer user_data);";subroutine gtk_buildable_parse_context_push(context, parser, user_data) bind(c)
gtk;gtk_builder_add_from_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"gboolean gtk_builder_add_from_file (GtkBuilder *builder, const char *filename, GError **error);";function gtk_builder_add_from_file(builder, filename, error) bind(c)
gtk;gtk_builder_add_from_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"gboolean gtk_builder_add_from_resource (GtkBuilder *builder, const char *resource_path, GError **error);";function gtk_builder_add_from_resource(builder, resource_path, error) bind(c)
gtk;gtk_builder_add_from_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"gboolean gtk_builder_add_from_string (GtkBuilder *builder, const char *buffer, gssize length, GError **error);";function gtk_builder_add_from_string(builder, buffer, length, error) bind(c)
gtk;gtk_builder_add_objects_from_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"gboolean gtk_builder_add_objects_from_file (GtkBuilder *builder, const char *filename, const char **object_ids, GError **error);";function gtk_builder_add_objects_from_file(builder, filename, object_ids, error) bind(c)
gtk;gtk_builder_add_objects_from_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"gboolean gtk_builder_add_objects_from_resource(GtkBuilder *builder, const char *resource_path, const char **object_ids, GError **error);";function gtk_builder_add_objects_from_resource(builder, resource_path, object_ids, error) bind(c)
gtk;gtk_builder_add_objects_from_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"gboolean gtk_builder_add_objects_from_string (GtkBuilder *builder, const char *buffer, gssize length, const char **object_ids, GError **error);";function gtk_builder_add_objects_from_string(builder, buffer, length, object_ids, error) bind(c)
gtk;gtk_builder_create_closure;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"GClosure * gtk_builder_create_closure (GtkBuilder *builder, const char *function_name, GtkBuilderClosureFlags flags, GObject *object, GError **error);";function gtk_builder_create_closure(builder, function_name, flags, object, error) bind(c)
gtk;gtk_builder_cscope_add_callback_symbol;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilderscope.h;"void gtk_builder_cscope_add_callback_symbol (GtkBuilderCScope *self, const char *callback_name, GCallback callback_symbol);";subroutine gtk_builder_cscope_add_callback_symbol(self, callback_name, callback_symbol) bind(c)
gtk;gtk_builder_cscope_lookup_callback_symbol;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilderscope.h;"GCallback gtk_builder_cscope_lookup_callback_symbol(GtkBuilderCScope *self, const char *callback_name);";function gtk_builder_cscope_lookup_callback_symbol(self, callback_name) bind(c)
gtk;gtk_builder_error_quark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"GQuark gtk_builder_error_quark (void);";function gtk_builder_error_quark() bind(c)
gtk;gtk_builder_expose_object;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"void gtk_builder_expose_object (GtkBuilder *builder, const char *name, GObject *object);";subroutine gtk_builder_expose_object(builder, name, object) bind(c)
gtk;gtk_builder_extend_with_template;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"gboolean gtk_builder_extend_with_template (GtkBuilder *builder, GObject *object, GType template_type, const char *buffer, gssize length, GError **error);";function gtk_builder_extend_with_template(builder, object, template_type, buffer, length, error) bind(c)
gtk;gtk_builder_get_current_object;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"GObject * gtk_builder_get_current_object (GtkBuilder *builder);";function gtk_builder_get_current_object(builder) bind(c)
gtk;gtk_builder_get_object;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"GObject* gtk_builder_get_object (GtkBuilder *builder, const char *name);";function gtk_builder_get_object(builder, name) bind(c)
gtk;gtk_builder_get_objects;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"GSList* gtk_builder_get_objects (GtkBuilder *builder);";function gtk_builder_get_objects(builder) bind(c)
gtk;gtk_builder_get_scope;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"GtkBuilderScope *gtk_builder_get_scope (GtkBuilder *builder);";function gtk_builder_get_scope(builder) bind(c)
gtk;gtk_builder_get_translation_domain;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"const char * gtk_builder_get_translation_domain (GtkBuilder *builder);";function gtk_builder_get_translation_domain(builder) bind(c)
gtk;gtk_builder_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"GType gtk_builder_get_type (void) G_GNUC_CONST;";function gtk_builder_get_type() bind(c)
gtk;gtk_builder_get_type_from_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"GType gtk_builder_get_type_from_name (GtkBuilder *builder, const char *type_name);";function gtk_builder_get_type_from_name(builder, type_name) bind(c)
gtk;gtk_builder_list_item_factory_get_bytes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilderlistitemfactory.h;"GBytes * gtk_builder_list_item_factory_get_bytes (GtkBuilderListItemFactory *self) G_GNUC_PURE;";function gtk_builder_list_item_factory_get_bytes(self) bind(c)
gtk;gtk_builder_list_item_factory_get_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilderlistitemfactory.h;"const char * gtk_builder_list_item_factory_get_resource (GtkBuilderListItemFactory *self) G_GNUC_PURE;";function gtk_builder_list_item_factory_get_resource(self) bind(c)
gtk;gtk_builder_list_item_factory_get_scope;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilderlistitemfactory.h;"GtkBuilderScope * gtk_builder_list_item_factory_get_scope (GtkBuilderListItemFactory *self) G_GNUC_PURE;";function gtk_builder_list_item_factory_get_scope(self) bind(c)
gtk;gtk_builder_list_item_factory_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilderlistitemfactory.h;"GType gtk_builder_list_item_factory_get_type (void) G_GNUC_CONST;";function gtk_builder_list_item_factory_get_type() bind(c)
gtk;gtk_builder_list_item_factory_new_from_bytes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilderlistitemfactory.h;"GtkListItemFactory * gtk_builder_list_item_factory_new_from_bytes (GtkBuilderScope *scope, GBytes *bytes);";function gtk_builder_list_item_factory_new_from_bytes(scope, bytes) bind(c)
gtk;gtk_builder_list_item_factory_new_from_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilderlistitemfactory.h;"GtkListItemFactory * gtk_builder_list_item_factory_new_from_resource (GtkBuilderScope *scope, const char *resource_path);";function gtk_builder_list_item_factory_new_from_resource(scope, resource_path) bind(c)
gtk;gtk_builder_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"GtkBuilder* gtk_builder_new (void);";function gtk_builder_new() bind(c)
gtk;gtk_builder_new_from_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"GtkBuilder * gtk_builder_new_from_file (const char *filename);";function gtk_builder_new_from_file(filename) bind(c)
gtk;gtk_builder_new_from_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"GtkBuilder * gtk_builder_new_from_resource (const char *resource_path);";function gtk_builder_new_from_resource(resource_path) bind(c)
gtk;gtk_builder_new_from_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"GtkBuilder * gtk_builder_new_from_string (const char *string, gssize length);";function gtk_builder_new_from_string(string, length) bind(c)
gtk;gtk_builder_set_current_object;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"void gtk_builder_set_current_object (GtkBuilder *builder, GObject *current_object);";subroutine gtk_builder_set_current_object(builder, current_object) bind(c)
gtk;gtk_builder_set_scope;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"void gtk_builder_set_scope (GtkBuilder *builder, GtkBuilderScope *scope);";subroutine gtk_builder_set_scope(builder, scope) bind(c)
gtk;gtk_builder_set_translation_domain;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"void gtk_builder_set_translation_domain (GtkBuilder *builder, const char *domain);";subroutine gtk_builder_set_translation_domain(builder, domain) bind(c)
gtk;gtk_builder_value_from_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"gboolean gtk_builder_value_from_string (GtkBuilder *builder, GParamSpec *pspec, const char *string, GValue *value, GError **error);";function gtk_builder_value_from_string(builder, pspec, string, value, error) bind(c)
gtk;gtk_builder_value_from_string_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbuilder.h;"gboolean gtk_builder_value_from_string_type (GtkBuilder *builder, GType type, const char *string, GValue *value, GError **error);";function gtk_builder_value_from_string_type(builder, type, string, value, error) bind(c)
gtk;gtk_button_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"GtkWidget * gtk_button_get_child (GtkButton *button);";function gtk_button_get_child(button) bind(c)
gtk;gtk_button_get_has_frame;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"gboolean gtk_button_get_has_frame (GtkButton *button);";function gtk_button_get_has_frame(button) bind(c)
gtk;gtk_button_get_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"const char * gtk_button_get_icon_name (GtkButton *button);";function gtk_button_get_icon_name(button) bind(c)
gtk;gtk_button_get_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"const char * gtk_button_get_label (GtkButton *button);";function gtk_button_get_label(button) bind(c)
gtk;gtk_button_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"GType gtk_button_get_type (void) G_GNUC_CONST;";function gtk_button_get_type() bind(c)
gtk;gtk_button_get_use_underline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"gboolean gtk_button_get_use_underline (GtkButton *button);";function gtk_button_get_use_underline(button) bind(c)
gtk;gtk_button_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"GtkWidget* gtk_button_new (void);";function gtk_button_new() bind(c)
gtk;gtk_button_new_from_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"GtkWidget* gtk_button_new_from_icon_name (const char *icon_name);";function gtk_button_new_from_icon_name(icon_name) bind(c)
gtk;gtk_button_new_with_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"GtkWidget* gtk_button_new_with_label (const char *label);";function gtk_button_new_with_label(label) bind(c)
gtk;gtk_button_new_with_mnemonic;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"GtkWidget* gtk_button_new_with_mnemonic (const char *label);";function gtk_button_new_with_mnemonic(label) bind(c)
gtk;gtk_button_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"void gtk_button_set_child (GtkButton *button, GtkWidget *child);";subroutine gtk_button_set_child(button, child) bind(c)
gtk;gtk_button_set_has_frame;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"void gtk_button_set_has_frame (GtkButton *button, gboolean has_frame);";subroutine gtk_button_set_has_frame(button, has_frame) bind(c)
gtk;gtk_button_set_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"void gtk_button_set_icon_name (GtkButton *button, const char *icon_name);";subroutine gtk_button_set_icon_name(button, icon_name) bind(c)
gtk;gtk_button_set_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"void gtk_button_set_label (GtkButton *button, const char *label);";subroutine gtk_button_set_label(button, label) bind(c)
gtk;gtk_button_set_use_underline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkbutton.h;"void gtk_button_set_use_underline (GtkButton *button, gboolean use_underline);";subroutine gtk_button_set_use_underline(button, use_underline) bind(c)
gtk;gtk_calendar_clear_marks;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"void gtk_calendar_clear_marks (GtkCalendar *calendar);";subroutine gtk_calendar_clear_marks(calendar) bind(c)
gtk;gtk_calendar_get_date;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"GDateTime * gtk_calendar_get_date (GtkCalendar *self);";function gtk_calendar_get_date(self) bind(c)
gtk;gtk_calendar_get_day_is_marked;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"gboolean gtk_calendar_get_day_is_marked (GtkCalendar *calendar, guint day);";function gtk_calendar_get_day_is_marked(calendar, day) bind(c)
gtk;gtk_calendar_get_show_day_names;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"gboolean gtk_calendar_get_show_day_names (GtkCalendar *self);";function gtk_calendar_get_show_day_names(self) bind(c)
gtk;gtk_calendar_get_show_heading;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"gboolean gtk_calendar_get_show_heading (GtkCalendar *self);";function gtk_calendar_get_show_heading(self) bind(c)
gtk;gtk_calendar_get_show_week_numbers;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"gboolean gtk_calendar_get_show_week_numbers (GtkCalendar *self);";function gtk_calendar_get_show_week_numbers(self) bind(c)
gtk;gtk_calendar_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"GType gtk_calendar_get_type (void) G_GNUC_CONST;";function gtk_calendar_get_type() bind(c)
gtk;gtk_calendar_mark_day;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"void gtk_calendar_mark_day (GtkCalendar *calendar, guint day);";subroutine gtk_calendar_mark_day(calendar, day) bind(c)
gtk;gtk_calendar_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"GtkWidget* gtk_calendar_new (void);";function gtk_calendar_new() bind(c)
gtk;gtk_calendar_select_day;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"void gtk_calendar_select_day (GtkCalendar *self, GDateTime *date);";subroutine gtk_calendar_select_day(self, date) bind(c)
gtk;gtk_calendar_set_show_day_names;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"void gtk_calendar_set_show_day_names (GtkCalendar *self, gboolean value);";subroutine gtk_calendar_set_show_day_names(self, value) bind(c)
gtk;gtk_calendar_set_show_heading;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"void gtk_calendar_set_show_heading (GtkCalendar *self, gboolean value);";subroutine gtk_calendar_set_show_heading(self, value) bind(c)
gtk;gtk_calendar_set_show_week_numbers;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"void gtk_calendar_set_show_week_numbers (GtkCalendar *self, gboolean value);";subroutine gtk_calendar_set_show_week_numbers(self, value) bind(c)
gtk;gtk_calendar_unmark_day;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcalendar.h;"void gtk_calendar_unmark_day (GtkCalendar *calendar, guint day);";subroutine gtk_calendar_unmark_day(calendar, day) bind(c)
gtk;gtk_cclosure_expression_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GType gtk_cclosure_expression_get_type (void) G_GNUC_CONST;";function gtk_cclosure_expression_get_type() bind(c)
gtk;gtk_cclosure_expression_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpression * gtk_cclosure_expression_new (GType value_type, GClosureMarshal marshal, guint n_params, GtkExpression **params, GCallback callback_func, gpointer user_data, GClosureNotify user_destroy);";function gtk_cclosure_expression_new(value_type, marshal, n_params, params, callback_func, user_data, user_destroy) bind(c)
gtk;gtk_cell_area_activate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"gboolean gtk_cell_area_activate (GtkCellArea *area, GtkCellAreaContext *context, GtkWidget *widget, const GdkRectangle *cell_area, GtkCellRendererState flags, gboolean edit_only);";function gtk_cell_area_activate(area, context, widget, cell_area, flags, edit_only) bind(c)
gtk;gtk_cell_area_activate_cell;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"gboolean gtk_cell_area_activate_cell (GtkCellArea *area, GtkWidget *widget, GtkCellRenderer *renderer, GdkEvent *event, const GdkRectangle *cell_area, GtkCellRendererState flags);";function gtk_cell_area_activate_cell(area, widget, renderer, event, cell_area, flags) bind(c)
gtk;gtk_cell_area_add;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_add (GtkCellArea *area, GtkCellRenderer *renderer);";subroutine gtk_cell_area_add(area, renderer) bind(c)
gtk;gtk_cell_area_add_focus_sibling;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_add_focus_sibling (GtkCellArea *area, GtkCellRenderer *renderer, GtkCellRenderer *sibling);";subroutine gtk_cell_area_add_focus_sibling(area, renderer, sibling) bind(c)
gtk;gtk_cell_area_apply_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_apply_attributes (GtkCellArea *area, GtkTreeModel *tree_model, GtkTreeIter *iter, gboolean is_expander, gboolean is_expanded);";subroutine gtk_cell_area_apply_attributes(area, tree_model, iter, is_expander, is_expanded) bind(c)
gtk;gtk_cell_area_attribute_connect;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_attribute_connect (GtkCellArea *area, GtkCellRenderer *renderer, const char *attribute, int column);";subroutine gtk_cell_area_attribute_connect(area, renderer, attribute, column) bind(c)
gtk;gtk_cell_area_attribute_disconnect;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_attribute_disconnect (GtkCellArea *area, GtkCellRenderer *renderer, const char *attribute);";subroutine gtk_cell_area_attribute_disconnect(area, renderer, attribute) bind(c)
gtk;gtk_cell_area_attribute_get_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"int gtk_cell_area_attribute_get_column (GtkCellArea *area, GtkCellRenderer *renderer, const char *attribute);";function gtk_cell_area_attribute_get_column(area, renderer, attribute) bind(c)
gtk;gtk_cell_area_box_get_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareabox.h;"int gtk_cell_area_box_get_spacing (GtkCellAreaBox *box);";function gtk_cell_area_box_get_spacing(box) bind(c)
gtk;gtk_cell_area_box_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareabox.h;"GType gtk_cell_area_box_get_type (void) G_GNUC_CONST;";function gtk_cell_area_box_get_type() bind(c)
gtk;gtk_cell_area_box_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareabox.h;"GtkCellArea *gtk_cell_area_box_new (void);";function gtk_cell_area_box_new() bind(c)
gtk;gtk_cell_area_box_pack_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareabox.h;"void gtk_cell_area_box_pack_end (GtkCellAreaBox *box, GtkCellRenderer *renderer, gboolean expand, gboolean align, gboolean fixed);";subroutine gtk_cell_area_box_pack_end(box, renderer, expand, align, fixed) bind(c)
gtk;gtk_cell_area_box_pack_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareabox.h;"void gtk_cell_area_box_pack_start (GtkCellAreaBox *box, GtkCellRenderer *renderer, gboolean expand, gboolean align, gboolean fixed);";subroutine gtk_cell_area_box_pack_start(box, renderer, expand, align, fixed) bind(c)
gtk;gtk_cell_area_box_set_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareabox.h;"void gtk_cell_area_box_set_spacing (GtkCellAreaBox *box, int spacing);";subroutine gtk_cell_area_box_set_spacing(box, spacing) bind(c)
gtk;gtk_cell_area_cell_get_property;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_cell_get_property (GtkCellArea *area, GtkCellRenderer *renderer, const char *property_name, GValue *value);";subroutine gtk_cell_area_cell_get_property(area, renderer, property_name, value) bind(c)
gtk;gtk_cell_area_cell_get_valist;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_cell_get_valist (GtkCellArea *area, GtkCellRenderer *renderer, const char *first_property_name, va_list var_args);";subroutine gtk_cell_area_cell_get_valist(area, renderer, first_property_name, var_args) bind(c)
gtk;gtk_cell_area_cell_set_property;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_cell_set_property (GtkCellArea *area, GtkCellRenderer *renderer, const char *property_name, const GValue *value);";subroutine gtk_cell_area_cell_set_property(area, renderer, property_name, value) bind(c)
gtk;gtk_cell_area_cell_set_valist;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_cell_set_valist (GtkCellArea *area, GtkCellRenderer *renderer, const char *first_property_name, va_list var_args);";subroutine gtk_cell_area_cell_set_valist(area, renderer, first_property_name, var_args) bind(c)
gtk;gtk_cell_area_class_find_cell_property;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"GParamSpec* gtk_cell_area_class_find_cell_property (GtkCellAreaClass *aclass, const char *property_name);";function gtk_cell_area_class_find_cell_property(aclass, property_name) bind(c)
gtk;gtk_cell_area_class_install_cell_property;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_class_install_cell_property (GtkCellAreaClass *aclass, guint property_id, GParamSpec *pspec);";subroutine gtk_cell_area_class_install_cell_property(aclass, property_id, pspec) bind(c)
gtk;gtk_cell_area_class_list_cell_properties;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"GParamSpec** gtk_cell_area_class_list_cell_properties (GtkCellAreaClass *aclass, guint *n_properties);";function gtk_cell_area_class_list_cell_properties(aclass, n_properties) bind(c)
gtk;gtk_cell_area_context_allocate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareacontext.h;"void gtk_cell_area_context_allocate (GtkCellAreaContext *context, int width, int height);";subroutine gtk_cell_area_context_allocate(context, width, height) bind(c)
gtk;gtk_cell_area_context_get_allocation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareacontext.h;"void gtk_cell_area_context_get_allocation (GtkCellAreaContext *context, int *width, int *height);";subroutine gtk_cell_area_context_get_allocation(context, width, height) bind(c)
gtk;gtk_cell_area_context_get_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareacontext.h;"GtkCellArea *gtk_cell_area_context_get_area (GtkCellAreaContext *context);";function gtk_cell_area_context_get_area(context) bind(c)
gtk;gtk_cell_area_context_get_preferred_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareacontext.h;"void gtk_cell_area_context_get_preferred_height (GtkCellAreaContext *context, int *minimum_height, int *natural_height);";subroutine gtk_cell_area_context_get_preferred_height(context, minimum_height, natural_height) bind(c)
gtk;gtk_cell_area_context_get_preferred_height_for_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareacontext.h;"void gtk_cell_area_context_get_preferred_height_for_width (GtkCellAreaContext *context, int width, int *minimum_height, int *natural_height);";subroutine gtk_cell_area_context_get_preferred_height_for_width(context, width, minimum_height, natural_height) bind(c)
gtk;gtk_cell_area_context_get_preferred_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareacontext.h;"void gtk_cell_area_context_get_preferred_width (GtkCellAreaContext *context, int *minimum_width, int *natural_width);";subroutine gtk_cell_area_context_get_preferred_width(context, minimum_width, natural_width) bind(c)
gtk;gtk_cell_area_context_get_preferred_width_for_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareacontext.h;"void gtk_cell_area_context_get_preferred_width_for_height (GtkCellAreaContext *context, int height, int *minimum_width, int *natural_width);";subroutine gtk_cell_area_context_get_preferred_width_for_height(context, height, minimum_width, natural_width) bind(c)
gtk;gtk_cell_area_context_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareacontext.h;"GType gtk_cell_area_context_get_type (void) G_GNUC_CONST;";function gtk_cell_area_context_get_type() bind(c)
gtk;gtk_cell_area_context_push_preferred_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareacontext.h;"void gtk_cell_area_context_push_preferred_height (GtkCellAreaContext *context, int minimum_height, int natural_height);";subroutine gtk_cell_area_context_push_preferred_height(context, minimum_height, natural_height) bind(c)
gtk;gtk_cell_area_context_push_preferred_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareacontext.h;"void gtk_cell_area_context_push_preferred_width (GtkCellAreaContext *context, int minimum_width, int natural_width);";subroutine gtk_cell_area_context_push_preferred_width(context, minimum_width, natural_width) bind(c)
gtk;gtk_cell_area_context_reset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellareacontext.h;"void gtk_cell_area_context_reset (GtkCellAreaContext *context);";subroutine gtk_cell_area_context_reset(context) bind(c)
gtk;gtk_cell_area_copy_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"GtkCellAreaContext *gtk_cell_area_copy_context (GtkCellArea *area, GtkCellAreaContext *context);";function gtk_cell_area_copy_context(area, context) bind(c)
gtk;gtk_cell_area_create_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"GtkCellAreaContext *gtk_cell_area_create_context (GtkCellArea *area);";function gtk_cell_area_create_context(area) bind(c)
gtk;gtk_cell_area_event;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"int gtk_cell_area_event (GtkCellArea *area, GtkCellAreaContext *context, GtkWidget *widget, GdkEvent *event, const GdkRectangle *cell_area, GtkCellRendererState flags);";function gtk_cell_area_event(area, context, widget, event, cell_area, flags) bind(c)
gtk;gtk_cell_area_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"gboolean gtk_cell_area_focus (GtkCellArea *area, GtkDirectionType direction);";function gtk_cell_area_focus(area, direction) bind(c)
gtk;gtk_cell_area_foreach;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_foreach (GtkCellArea *area, GtkCellCallback callback, gpointer callback_data);";subroutine gtk_cell_area_foreach(area, callback, callback_data) bind(c)
gtk;gtk_cell_area_foreach_alloc;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_foreach_alloc (GtkCellArea *area, GtkCellAreaContext *context, GtkWidget *widget, const GdkRectangle *cell_area, const GdkRectangle *background_area, GtkCellAllocCallback callback, gpointer callback_data);";subroutine gtk_cell_area_foreach_alloc(area, context, widget, cell_area, background_area, callback, callback_data) bind(c)
gtk;gtk_cell_area_get_cell_allocation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_get_cell_allocation (GtkCellArea *area, GtkCellAreaContext *context, GtkWidget *widget, GtkCellRenderer *renderer, const GdkRectangle *cell_area, GdkRectangle *allocation);";subroutine gtk_cell_area_get_cell_allocation(area, context, widget, renderer, cell_area, allocation) bind(c)
gtk;gtk_cell_area_get_cell_at_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"GtkCellRenderer *gtk_cell_area_get_cell_at_position (GtkCellArea *area, GtkCellAreaContext *context, GtkWidget *widget, const GdkRectangle *cell_area, int x, int y, GdkRectangle *alloc_area);";function gtk_cell_area_get_cell_at_position(area, context, widget, cell_area, x, y, alloc_area) bind(c)
gtk;gtk_cell_area_get_current_path_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"const char * gtk_cell_area_get_current_path_string (GtkCellArea *area);";function gtk_cell_area_get_current_path_string(area) bind(c)
gtk;gtk_cell_area_get_edit_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"GtkCellEditable *gtk_cell_area_get_edit_widget (GtkCellArea *area);";function gtk_cell_area_get_edit_widget(area) bind(c)
gtk;gtk_cell_area_get_edited_cell;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"GtkCellRenderer *gtk_cell_area_get_edited_cell (GtkCellArea *area);";function gtk_cell_area_get_edited_cell(area) bind(c)
gtk;gtk_cell_area_get_focus_cell;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"GtkCellRenderer *gtk_cell_area_get_focus_cell (GtkCellArea *area);";function gtk_cell_area_get_focus_cell(area) bind(c)
gtk;gtk_cell_area_get_focus_from_sibling;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"GtkCellRenderer *gtk_cell_area_get_focus_from_sibling (GtkCellArea *area, GtkCellRenderer *renderer);";function gtk_cell_area_get_focus_from_sibling(area, renderer) bind(c)
gtk;gtk_cell_area_get_focus_siblings;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"const GList * gtk_cell_area_get_focus_siblings (GtkCellArea *area, GtkCellRenderer *renderer);";function gtk_cell_area_get_focus_siblings(area, renderer) bind(c)
gtk;gtk_cell_area_get_preferred_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_get_preferred_height (GtkCellArea *area, GtkCellAreaContext *context, GtkWidget *widget, int *minimum_height, int *natural_height);";subroutine gtk_cell_area_get_preferred_height(area, context, widget, minimum_height, natural_height) bind(c)
gtk;gtk_cell_area_get_preferred_height_for_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_get_preferred_height_for_width (GtkCellArea *area, GtkCellAreaContext *context, GtkWidget *widget, int width, int *minimum_height, int *natural_height);";subroutine gtk_cell_area_get_preferred_height_for_width(area, context, widget, width, minimum_height, natural_height) bind(c)
gtk;gtk_cell_area_get_preferred_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_get_preferred_width (GtkCellArea *area, GtkCellAreaContext *context, GtkWidget *widget, int *minimum_width, int *natural_width);";subroutine gtk_cell_area_get_preferred_width(area, context, widget, minimum_width, natural_width) bind(c)
gtk;gtk_cell_area_get_preferred_width_for_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_get_preferred_width_for_height (GtkCellArea *area, GtkCellAreaContext *context, GtkWidget *widget, int height, int *minimum_width, int *natural_width);";subroutine gtk_cell_area_get_preferred_width_for_height(area, context, widget, height, minimum_width, natural_width) bind(c)
gtk;gtk_cell_area_get_request_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"GtkSizeRequestMode gtk_cell_area_get_request_mode (GtkCellArea *area);";function gtk_cell_area_get_request_mode(area) bind(c)
gtk;gtk_cell_area_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"GType gtk_cell_area_get_type (void) G_GNUC_CONST;";function gtk_cell_area_get_type() bind(c)
gtk;gtk_cell_area_has_renderer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"gboolean gtk_cell_area_has_renderer (GtkCellArea *area, GtkCellRenderer *renderer);";function gtk_cell_area_has_renderer(area, renderer) bind(c)
gtk;gtk_cell_area_inner_cell_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_inner_cell_area (GtkCellArea *area, GtkWidget *widget, const GdkRectangle *cell_area, GdkRectangle *inner_area);";subroutine gtk_cell_area_inner_cell_area(area, widget, cell_area, inner_area) bind(c)
gtk;gtk_cell_area_is_activatable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"gboolean gtk_cell_area_is_activatable (GtkCellArea *area);";function gtk_cell_area_is_activatable(area) bind(c)
gtk;gtk_cell_area_is_focus_sibling;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"gboolean gtk_cell_area_is_focus_sibling (GtkCellArea *area, GtkCellRenderer *renderer, GtkCellRenderer *sibling);";function gtk_cell_area_is_focus_sibling(area, renderer, sibling) bind(c)
gtk;gtk_cell_area_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_remove (GtkCellArea *area, GtkCellRenderer *renderer);";subroutine gtk_cell_area_remove(area, renderer) bind(c)
gtk;gtk_cell_area_remove_focus_sibling;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_remove_focus_sibling (GtkCellArea *area, GtkCellRenderer *renderer, GtkCellRenderer *sibling);";subroutine gtk_cell_area_remove_focus_sibling(area, renderer, sibling) bind(c)
gtk;gtk_cell_area_request_renderer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_request_renderer (GtkCellArea *area, GtkCellRenderer *renderer, GtkOrientation orientation, GtkWidget *widget, int for_size, int *minimum_size, int *natural_size);";subroutine gtk_cell_area_request_renderer(area, renderer, orientation, widget, for_size, minimum_size, natural_size) bind(c)
gtk;gtk_cell_area_set_focus_cell;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_set_focus_cell (GtkCellArea *area, GtkCellRenderer *renderer);";subroutine gtk_cell_area_set_focus_cell(area, renderer) bind(c)
gtk;gtk_cell_area_snapshot;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_snapshot (GtkCellArea *area, GtkCellAreaContext *context, GtkWidget *widget, GtkSnapshot *snapshot, const GdkRectangle *background_area, const GdkRectangle *cell_area, GtkCellRendererState flags, gboolean paint_focus);";subroutine gtk_cell_area_snapshot(area, context, widget, snapshot, background_area, cell_area, flags, paint_focus) bind(c)
gtk;gtk_cell_area_stop_editing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellarea.h;"void gtk_cell_area_stop_editing (GtkCellArea *area, gboolean canceled);";subroutine gtk_cell_area_stop_editing(area, canceled) bind(c)
gtk;gtk_cell_editable_editing_done;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelleditable.h;"void gtk_cell_editable_editing_done (GtkCellEditable *cell_editable);";subroutine gtk_cell_editable_editing_done(cell_editable) bind(c)
gtk;gtk_cell_editable_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelleditable.h;"GType gtk_cell_editable_get_type (void) G_GNUC_CONST;";function gtk_cell_editable_get_type() bind(c)
gtk;gtk_cell_editable_remove_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelleditable.h;"void gtk_cell_editable_remove_widget (GtkCellEditable *cell_editable);";subroutine gtk_cell_editable_remove_widget(cell_editable) bind(c)
gtk;gtk_cell_editable_start_editing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelleditable.h;"void gtk_cell_editable_start_editing (GtkCellEditable *cell_editable, GdkEvent *event);";subroutine gtk_cell_editable_start_editing(cell_editable, event) bind(c)
gtk;gtk_cell_layout_add_attribute;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelllayout.h;"void gtk_cell_layout_add_attribute (GtkCellLayout *cell_layout, GtkCellRenderer *cell, const char *attribute, int column);";subroutine gtk_cell_layout_add_attribute(cell_layout, cell, attribute, column) bind(c)
gtk;gtk_cell_layout_clear;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelllayout.h;"void gtk_cell_layout_clear (GtkCellLayout *cell_layout);";subroutine gtk_cell_layout_clear(cell_layout) bind(c)
gtk;gtk_cell_layout_clear_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelllayout.h;"void gtk_cell_layout_clear_attributes (GtkCellLayout *cell_layout, GtkCellRenderer *cell);";subroutine gtk_cell_layout_clear_attributes(cell_layout, cell) bind(c)
gtk;gtk_cell_layout_get_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelllayout.h;"GtkCellArea *gtk_cell_layout_get_area (GtkCellLayout *cell_layout);";function gtk_cell_layout_get_area(cell_layout) bind(c)
gtk;gtk_cell_layout_get_cells;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelllayout.h;"GList *gtk_cell_layout_get_cells (GtkCellLayout *cell_layout);";function gtk_cell_layout_get_cells(cell_layout) bind(c)
gtk;gtk_cell_layout_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelllayout.h;"GType gtk_cell_layout_get_type (void) G_GNUC_CONST;";function gtk_cell_layout_get_type() bind(c)
gtk;gtk_cell_layout_pack_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelllayout.h;"void gtk_cell_layout_pack_end (GtkCellLayout *cell_layout, GtkCellRenderer *cell, gboolean expand);";subroutine gtk_cell_layout_pack_end(cell_layout, cell, expand) bind(c)
gtk;gtk_cell_layout_pack_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelllayout.h;"void gtk_cell_layout_pack_start (GtkCellLayout *cell_layout, GtkCellRenderer *cell, gboolean expand);";subroutine gtk_cell_layout_pack_start(cell_layout, cell, expand) bind(c)
gtk;gtk_cell_layout_reorder;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelllayout.h;"void gtk_cell_layout_reorder (GtkCellLayout *cell_layout, GtkCellRenderer *cell, int position);";subroutine gtk_cell_layout_reorder(cell_layout, cell, position) bind(c)
gtk;gtk_cell_layout_set_cell_data_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcelllayout.h;"void gtk_cell_layout_set_cell_data_func (GtkCellLayout *cell_layout, GtkCellRenderer *cell, GtkCellLayoutDataFunc func, gpointer func_data, GDestroyNotify destroy);";subroutine gtk_cell_layout_set_cell_data_func(cell_layout, cell, func, func_data, destroy) bind(c)
gtk;gtk_cell_renderer_accel_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrendereraccel.h;"GType gtk_cell_renderer_accel_get_type (void) G_GNUC_CONST;";function gtk_cell_renderer_accel_get_type() bind(c)
gtk;gtk_cell_renderer_accel_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrendereraccel.h;"GtkCellRenderer *gtk_cell_renderer_accel_new (void);";function gtk_cell_renderer_accel_new() bind(c)
gtk;gtk_cell_renderer_activate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"gboolean gtk_cell_renderer_activate (GtkCellRenderer *cell, GdkEvent *event, GtkWidget *widget, const char *path, const GdkRectangle *background_area, const GdkRectangle *cell_area, GtkCellRendererState flags);";function gtk_cell_renderer_activate(cell, event, widget, path, background_area, cell_area, flags) bind(c)
gtk;gtk_cell_renderer_combo_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderercombo.h;"GType gtk_cell_renderer_combo_get_type (void) G_GNUC_CONST;";function gtk_cell_renderer_combo_get_type() bind(c)
gtk;gtk_cell_renderer_combo_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderercombo.h;"GtkCellRenderer *gtk_cell_renderer_combo_new (void);";function gtk_cell_renderer_combo_new() bind(c)
gtk;gtk_cell_renderer_get_aligned_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_get_aligned_area (GtkCellRenderer *cell, GtkWidget *widget, GtkCellRendererState flags, const GdkRectangle *cell_area, GdkRectangle *aligned_area);";subroutine gtk_cell_renderer_get_aligned_area(cell, widget, flags, cell_area, aligned_area) bind(c)
gtk;gtk_cell_renderer_get_alignment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_get_alignment (GtkCellRenderer *cell, float *xalign, float *yalign);";subroutine gtk_cell_renderer_get_alignment(cell, xalign, yalign) bind(c)
gtk;gtk_cell_renderer_get_fixed_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_get_fixed_size (GtkCellRenderer *cell, int *width, int *height);";subroutine gtk_cell_renderer_get_fixed_size(cell, width, height) bind(c)
gtk;gtk_cell_renderer_get_is_expanded;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"gboolean gtk_cell_renderer_get_is_expanded (GtkCellRenderer *cell);";function gtk_cell_renderer_get_is_expanded(cell) bind(c)
gtk;gtk_cell_renderer_get_is_expander;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"gboolean gtk_cell_renderer_get_is_expander (GtkCellRenderer *cell);";function gtk_cell_renderer_get_is_expander(cell) bind(c)
gtk;gtk_cell_renderer_get_padding;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_get_padding (GtkCellRenderer *cell, int *xpad, int *ypad);";subroutine gtk_cell_renderer_get_padding(cell, xpad, ypad) bind(c)
gtk;gtk_cell_renderer_get_preferred_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_get_preferred_height (GtkCellRenderer *cell, GtkWidget *widget, int *minimum_size, int *natural_size);";subroutine gtk_cell_renderer_get_preferred_height(cell, widget, minimum_size, natural_size) bind(c)
gtk;gtk_cell_renderer_get_preferred_height_for_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_get_preferred_height_for_width (GtkCellRenderer *cell, GtkWidget *widget, int width, int *minimum_height, int *natural_height);";subroutine gtk_cell_renderer_get_preferred_height_for_width(cell, widget, width, minimum_height, natural_height) bind(c)
gtk;gtk_cell_renderer_get_preferred_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_get_preferred_size (GtkCellRenderer *cell, GtkWidget *widget, GtkRequisition *minimum_size, GtkRequisition *natural_size);";subroutine gtk_cell_renderer_get_preferred_size(cell, widget, minimum_size, natural_size) bind(c)
gtk;gtk_cell_renderer_get_preferred_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_get_preferred_width (GtkCellRenderer *cell, GtkWidget *widget, int *minimum_size, int *natural_size);";subroutine gtk_cell_renderer_get_preferred_width(cell, widget, minimum_size, natural_size) bind(c)
gtk;gtk_cell_renderer_get_preferred_width_for_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_get_preferred_width_for_height (GtkCellRenderer *cell, GtkWidget *widget, int height, int *minimum_width, int *natural_width);";subroutine gtk_cell_renderer_get_preferred_width_for_height(cell, widget, height, minimum_width, natural_width) bind(c)
gtk;gtk_cell_renderer_get_request_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"GtkSizeRequestMode gtk_cell_renderer_get_request_mode (GtkCellRenderer *cell);";function gtk_cell_renderer_get_request_mode(cell) bind(c)
gtk;gtk_cell_renderer_get_sensitive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"gboolean gtk_cell_renderer_get_sensitive (GtkCellRenderer *cell);";function gtk_cell_renderer_get_sensitive(cell) bind(c)
gtk;gtk_cell_renderer_get_state;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"GtkStateFlags gtk_cell_renderer_get_state (GtkCellRenderer *cell, GtkWidget *widget, GtkCellRendererState cell_state);";function gtk_cell_renderer_get_state(cell, widget, cell_state) bind(c)
gtk;gtk_cell_renderer_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"GType gtk_cell_renderer_get_type (void) G_GNUC_CONST;";function gtk_cell_renderer_get_type() bind(c)
gtk;gtk_cell_renderer_get_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"gboolean gtk_cell_renderer_get_visible (GtkCellRenderer *cell);";function gtk_cell_renderer_get_visible(cell) bind(c)
gtk;gtk_cell_renderer_is_activatable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"gboolean gtk_cell_renderer_is_activatable (GtkCellRenderer *cell);";function gtk_cell_renderer_is_activatable(cell) bind(c)
gtk;gtk_cell_renderer_pixbuf_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrendererpixbuf.h;"GType gtk_cell_renderer_pixbuf_get_type (void) G_GNUC_CONST;";function gtk_cell_renderer_pixbuf_get_type() bind(c)
gtk;gtk_cell_renderer_pixbuf_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrendererpixbuf.h;"GtkCellRenderer *gtk_cell_renderer_pixbuf_new (void);";function gtk_cell_renderer_pixbuf_new() bind(c)
gtk;gtk_cell_renderer_progress_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrendererprogress.h;"GType gtk_cell_renderer_progress_get_type (void) G_GNUC_CONST;";function gtk_cell_renderer_progress_get_type() bind(c)
gtk;gtk_cell_renderer_progress_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrendererprogress.h;"GtkCellRenderer* gtk_cell_renderer_progress_new (void);";function gtk_cell_renderer_progress_new() bind(c)
gtk;gtk_cell_renderer_set_alignment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_set_alignment (GtkCellRenderer *cell, float xalign, float yalign);";subroutine gtk_cell_renderer_set_alignment(cell, xalign, yalign) bind(c)
gtk;gtk_cell_renderer_set_fixed_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_set_fixed_size (GtkCellRenderer *cell, int width, int height);";subroutine gtk_cell_renderer_set_fixed_size(cell, width, height) bind(c)
gtk;gtk_cell_renderer_set_is_expanded;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_set_is_expanded (GtkCellRenderer *cell, gboolean is_expanded);";subroutine gtk_cell_renderer_set_is_expanded(cell, is_expanded) bind(c)
gtk;gtk_cell_renderer_set_is_expander;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_set_is_expander (GtkCellRenderer *cell, gboolean is_expander);";subroutine gtk_cell_renderer_set_is_expander(cell, is_expander) bind(c)
gtk;gtk_cell_renderer_set_padding;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_set_padding (GtkCellRenderer *cell, int xpad, int ypad);";subroutine gtk_cell_renderer_set_padding(cell, xpad, ypad) bind(c)
gtk;gtk_cell_renderer_set_sensitive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_set_sensitive (GtkCellRenderer *cell, gboolean sensitive);";subroutine gtk_cell_renderer_set_sensitive(cell, sensitive) bind(c)
gtk;gtk_cell_renderer_set_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_set_visible (GtkCellRenderer *cell, gboolean visible);";subroutine gtk_cell_renderer_set_visible(cell, visible) bind(c)
gtk;gtk_cell_renderer_snapshot;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_snapshot (GtkCellRenderer *cell, GtkSnapshot *snapshot, GtkWidget *widget, const GdkRectangle *background_area, const GdkRectangle *cell_area, GtkCellRendererState flags);";subroutine gtk_cell_renderer_snapshot(cell, snapshot, widget, background_area, cell_area, flags) bind(c)
gtk;gtk_cell_renderer_spin_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrendererspin.h;"GType gtk_cell_renderer_spin_get_type (void);";function gtk_cell_renderer_spin_get_type() bind(c)
gtk;gtk_cell_renderer_spin_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrendererspin.h;"GtkCellRenderer *gtk_cell_renderer_spin_new (void);";function gtk_cell_renderer_spin_new() bind(c)
gtk;gtk_cell_renderer_spinner_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrendererspinner.h;"GType gtk_cell_renderer_spinner_get_type (void) G_GNUC_CONST;";function gtk_cell_renderer_spinner_get_type() bind(c)
gtk;gtk_cell_renderer_spinner_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrendererspinner.h;"GtkCellRenderer *gtk_cell_renderer_spinner_new (void);";function gtk_cell_renderer_spinner_new() bind(c)
gtk;gtk_cell_renderer_start_editing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"GtkCellEditable *gtk_cell_renderer_start_editing (GtkCellRenderer *cell, GdkEvent *event, GtkWidget *widget, const char *path, const GdkRectangle *background_area, const GdkRectangle *cell_area, GtkCellRendererState flags);";function gtk_cell_renderer_start_editing(cell, event, widget, path, background_area, cell_area, flags) bind(c)
gtk;gtk_cell_renderer_stop_editing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderer.h;"void gtk_cell_renderer_stop_editing (GtkCellRenderer *cell, gboolean canceled);";subroutine gtk_cell_renderer_stop_editing(cell, canceled) bind(c)
gtk;gtk_cell_renderer_text_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderertext.h;"GType gtk_cell_renderer_text_get_type (void) G_GNUC_CONST;";function gtk_cell_renderer_text_get_type() bind(c)
gtk;gtk_cell_renderer_text_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderertext.h;"GtkCellRenderer *gtk_cell_renderer_text_new (void);";function gtk_cell_renderer_text_new() bind(c)
gtk;gtk_cell_renderer_text_set_fixed_height_from_font;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderertext.h;"void gtk_cell_renderer_text_set_fixed_height_from_font (GtkCellRendererText *renderer, int number_of_rows);";subroutine gtk_cell_renderer_text_set_fixed_height_from_font(renderer, number_of_rows) bind(c)
gtk;gtk_cell_renderer_toggle_get_activatable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderertoggle.h;"gboolean gtk_cell_renderer_toggle_get_activatable (GtkCellRendererToggle *toggle);";function gtk_cell_renderer_toggle_get_activatable(toggle) bind(c)
gtk;gtk_cell_renderer_toggle_get_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderertoggle.h;"gboolean gtk_cell_renderer_toggle_get_active (GtkCellRendererToggle *toggle);";function gtk_cell_renderer_toggle_get_active(toggle) bind(c)
gtk;gtk_cell_renderer_toggle_get_radio;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderertoggle.h;"gboolean gtk_cell_renderer_toggle_get_radio (GtkCellRendererToggle *toggle);";function gtk_cell_renderer_toggle_get_radio(toggle) bind(c)
gtk;gtk_cell_renderer_toggle_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderertoggle.h;"GType gtk_cell_renderer_toggle_get_type (void) G_GNUC_CONST;";function gtk_cell_renderer_toggle_get_type() bind(c)
gtk;gtk_cell_renderer_toggle_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderertoggle.h;"GtkCellRenderer *gtk_cell_renderer_toggle_new (void);";function gtk_cell_renderer_toggle_new() bind(c)
gtk;gtk_cell_renderer_toggle_set_activatable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderertoggle.h;"void gtk_cell_renderer_toggle_set_activatable (GtkCellRendererToggle *toggle, gboolean setting);";subroutine gtk_cell_renderer_toggle_set_activatable(toggle, setting) bind(c)
gtk;gtk_cell_renderer_toggle_set_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderertoggle.h;"void gtk_cell_renderer_toggle_set_active (GtkCellRendererToggle *toggle, gboolean setting);";subroutine gtk_cell_renderer_toggle_set_active(toggle, setting) bind(c)
gtk;gtk_cell_renderer_toggle_set_radio;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellrenderertoggle.h;"void gtk_cell_renderer_toggle_set_radio (GtkCellRendererToggle *toggle, gboolean radio);";subroutine gtk_cell_renderer_toggle_set_radio(toggle, radio) bind(c)
gtk;gtk_cell_view_get_displayed_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"GtkTreePath *gtk_cell_view_get_displayed_row (GtkCellView *cell_view);";function gtk_cell_view_get_displayed_row(cell_view) bind(c)
gtk;gtk_cell_view_get_draw_sensitive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"gboolean gtk_cell_view_get_draw_sensitive (GtkCellView *cell_view);";function gtk_cell_view_get_draw_sensitive(cell_view) bind(c)
gtk;gtk_cell_view_get_fit_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"gboolean gtk_cell_view_get_fit_model (GtkCellView *cell_view);";function gtk_cell_view_get_fit_model(cell_view) bind(c)
gtk;gtk_cell_view_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"GtkTreeModel *gtk_cell_view_get_model (GtkCellView *cell_view);";function gtk_cell_view_get_model(cell_view) bind(c)
gtk;gtk_cell_view_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"GType gtk_cell_view_get_type (void) G_GNUC_CONST;";function gtk_cell_view_get_type() bind(c)
gtk;gtk_cell_view_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"GtkWidget *gtk_cell_view_new (void);";function gtk_cell_view_new() bind(c)
gtk;gtk_cell_view_new_with_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"GtkWidget *gtk_cell_view_new_with_context (GtkCellArea *area, GtkCellAreaContext *context);";function gtk_cell_view_new_with_context(area, context) bind(c)
gtk;gtk_cell_view_new_with_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"GtkWidget *gtk_cell_view_new_with_markup (const char *markup);";function gtk_cell_view_new_with_markup(markup) bind(c)
gtk;gtk_cell_view_new_with_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"GtkWidget *gtk_cell_view_new_with_text (const char *text);";function gtk_cell_view_new_with_text(text) bind(c)
gtk;gtk_cell_view_new_with_texture;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"GtkWidget *gtk_cell_view_new_with_texture (GdkTexture *texture);";function gtk_cell_view_new_with_texture(texture) bind(c)
gtk;gtk_cell_view_set_displayed_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"void gtk_cell_view_set_displayed_row (GtkCellView *cell_view, GtkTreePath *path);";subroutine gtk_cell_view_set_displayed_row(cell_view, path) bind(c)
gtk;gtk_cell_view_set_draw_sensitive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"void gtk_cell_view_set_draw_sensitive (GtkCellView *cell_view, gboolean draw_sensitive);";subroutine gtk_cell_view_set_draw_sensitive(cell_view, draw_sensitive) bind(c)
gtk;gtk_cell_view_set_fit_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"void gtk_cell_view_set_fit_model (GtkCellView *cell_view, gboolean fit_model);";subroutine gtk_cell_view_set_fit_model(cell_view, fit_model) bind(c)
gtk;gtk_cell_view_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcellview.h;"void gtk_cell_view_set_model (GtkCellView *cell_view, GtkTreeModel *model);";subroutine gtk_cell_view_set_model(cell_view, model) bind(c)
gtk;gtk_center_box_get_baseline_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterbox.h;"GtkBaselinePosition gtk_center_box_get_baseline_position (GtkCenterBox *self);";function gtk_center_box_get_baseline_position(self) bind(c)
gtk;gtk_center_box_get_center_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterbox.h;"GtkWidget * gtk_center_box_get_center_widget (GtkCenterBox *self);";function gtk_center_box_get_center_widget(self) bind(c)
gtk;gtk_center_box_get_end_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterbox.h;"GtkWidget * gtk_center_box_get_end_widget (GtkCenterBox *self);";function gtk_center_box_get_end_widget(self) bind(c)
gtk;gtk_center_box_get_start_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterbox.h;"GtkWidget * gtk_center_box_get_start_widget (GtkCenterBox *self);";function gtk_center_box_get_start_widget(self) bind(c)
gtk;gtk_center_box_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterbox.h;"GType gtk_center_box_get_type (void) G_GNUC_CONST;";function gtk_center_box_get_type() bind(c)
gtk;gtk_center_box_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterbox.h;"GtkWidget *gtk_center_box_new (void);";function gtk_center_box_new() bind(c)
gtk;gtk_center_box_set_baseline_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterbox.h;"void gtk_center_box_set_baseline_position (GtkCenterBox *self, GtkBaselinePosition position);";subroutine gtk_center_box_set_baseline_position(self, position) bind(c)
gtk;gtk_center_box_set_center_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterbox.h;"void gtk_center_box_set_center_widget (GtkCenterBox *self, GtkWidget *child);";subroutine gtk_center_box_set_center_widget(self, child) bind(c)
gtk;gtk_center_box_set_end_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterbox.h;"void gtk_center_box_set_end_widget (GtkCenterBox *self, GtkWidget *child);";subroutine gtk_center_box_set_end_widget(self, child) bind(c)
gtk;gtk_center_box_set_start_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterbox.h;"void gtk_center_box_set_start_widget (GtkCenterBox *self, GtkWidget *child);";subroutine gtk_center_box_set_start_widget(self, child) bind(c)
gtk;gtk_center_layout_get_baseline_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterlayout.h;"GtkBaselinePosition gtk_center_layout_get_baseline_position (GtkCenterLayout *self);";function gtk_center_layout_get_baseline_position(self) bind(c)
gtk;gtk_center_layout_get_center_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterlayout.h;"GtkWidget * gtk_center_layout_get_center_widget (GtkCenterLayout *self);";function gtk_center_layout_get_center_widget(self) bind(c)
gtk;gtk_center_layout_get_end_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterlayout.h;"GtkWidget * gtk_center_layout_get_end_widget (GtkCenterLayout *self);";function gtk_center_layout_get_end_widget(self) bind(c)
gtk;gtk_center_layout_get_orientation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterlayout.h;"GtkOrientation gtk_center_layout_get_orientation (GtkCenterLayout *self);";function gtk_center_layout_get_orientation(self) bind(c)
gtk;gtk_center_layout_get_start_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterlayout.h;"GtkWidget * gtk_center_layout_get_start_widget (GtkCenterLayout *self);";function gtk_center_layout_get_start_widget(self) bind(c)
gtk;gtk_center_layout_set_baseline_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterlayout.h;"void gtk_center_layout_set_baseline_position (GtkCenterLayout *self, GtkBaselinePosition baseline_position);";subroutine gtk_center_layout_set_baseline_position(self, baseline_position) bind(c)
gtk;gtk_center_layout_set_center_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterlayout.h;"void gtk_center_layout_set_center_widget (GtkCenterLayout *self, GtkWidget *widget);";subroutine gtk_center_layout_set_center_widget(self, widget) bind(c)
gtk;gtk_center_layout_set_end_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterlayout.h;"void gtk_center_layout_set_end_widget (GtkCenterLayout *self, GtkWidget *widget);";subroutine gtk_center_layout_set_end_widget(self, widget) bind(c)
gtk;gtk_center_layout_set_orientation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterlayout.h;"void gtk_center_layout_set_orientation (GtkCenterLayout *self, GtkOrientation orientation);";subroutine gtk_center_layout_set_orientation(self, orientation) bind(c)
gtk;gtk_center_layout_set_start_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcenterlayout.h;"void gtk_center_layout_set_start_widget (GtkCenterLayout *self, GtkWidget *widget);";subroutine gtk_center_layout_set_start_widget(self, widget) bind(c)
gtk;gtk_check_button_get_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"gboolean gtk_check_button_get_active (GtkCheckButton *self);";function gtk_check_button_get_active(self) bind(c)
gtk;gtk_check_button_get_inconsistent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"gboolean gtk_check_button_get_inconsistent (GtkCheckButton *check_button);";function gtk_check_button_get_inconsistent(check_button) bind(c)
gtk;gtk_check_button_get_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"const char * gtk_check_button_get_label (GtkCheckButton *self);";function gtk_check_button_get_label(self) bind(c)
gtk;gtk_check_button_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"GType gtk_check_button_get_type (void) G_GNUC_CONST;";function gtk_check_button_get_type() bind(c)
gtk;gtk_check_button_get_use_underline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"gboolean gtk_check_button_get_use_underline (GtkCheckButton *self);";function gtk_check_button_get_use_underline(self) bind(c)
gtk;gtk_check_button_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"GtkWidget * gtk_check_button_new (void);";function gtk_check_button_new() bind(c)
gtk;gtk_check_button_new_with_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"GtkWidget * gtk_check_button_new_with_label (const char *label);";function gtk_check_button_new_with_label(label) bind(c)
gtk;gtk_check_button_new_with_mnemonic;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"GtkWidget * gtk_check_button_new_with_mnemonic (const char *label);";function gtk_check_button_new_with_mnemonic(label) bind(c)
gtk;gtk_check_button_set_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"void gtk_check_button_set_active (GtkCheckButton *self, gboolean setting);";subroutine gtk_check_button_set_active(self, setting) bind(c)
gtk;gtk_check_button_set_group;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"void gtk_check_button_set_group (GtkCheckButton *self, GtkCheckButton *group);";subroutine gtk_check_button_set_group(self, group) bind(c)
gtk;gtk_check_button_set_inconsistent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"void gtk_check_button_set_inconsistent (GtkCheckButton *check_button, gboolean inconsistent);";subroutine gtk_check_button_set_inconsistent(check_button, inconsistent) bind(c)
gtk;gtk_check_button_set_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"void gtk_check_button_set_label (GtkCheckButton *self, const char *label);";subroutine gtk_check_button_set_label(self, label) bind(c)
gtk;gtk_check_button_set_use_underline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcheckbutton.h;"void gtk_check_button_set_use_underline (GtkCheckButton *self, gboolean setting);";subroutine gtk_check_button_set_use_underline(self, setting) bind(c)
gtk;gtk_check_version;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkversion.h;"const char * gtk_check_version (guint required_major, guint required_minor, guint required_micro);";function gtk_check_version(required_major, required_minor, required_micro) bind(c)
gtk;gtk_closure_expression_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GType gtk_closure_expression_get_type (void) G_GNUC_CONST;";function gtk_closure_expression_get_type() bind(c)
gtk;gtk_closure_expression_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpression * gtk_closure_expression_new (GType value_type, GClosure *closure, guint n_params, GtkExpression **params);";function gtk_closure_expression_new(value_type, closure, n_params, params) bind(c)
gtk;gtk_color_button_get_modal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorbutton.h;"gboolean gtk_color_button_get_modal (GtkColorButton *button);";function gtk_color_button_get_modal(button) bind(c)
gtk;gtk_color_button_get_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorbutton.h;"const char *gtk_color_button_get_title (GtkColorButton *button);";function gtk_color_button_get_title(button) bind(c)
gtk;gtk_color_button_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorbutton.h;"GType gtk_color_button_get_type (void) G_GNUC_CONST;";function gtk_color_button_get_type() bind(c)
gtk;gtk_color_button_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorbutton.h;"GtkWidget * gtk_color_button_new (void);";function gtk_color_button_new() bind(c)
gtk;gtk_color_button_new_with_rgba;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorbutton.h;"GtkWidget * gtk_color_button_new_with_rgba (const GdkRGBA *rgba);";function gtk_color_button_new_with_rgba(rgba) bind(c)
gtk;gtk_color_button_set_modal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorbutton.h;"void gtk_color_button_set_modal (GtkColorButton *button, gboolean modal);";subroutine gtk_color_button_set_modal(button, modal) bind(c)
gtk;gtk_color_button_set_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorbutton.h;"void gtk_color_button_set_title (GtkColorButton *button, const char *title);";subroutine gtk_color_button_set_title(button, title) bind(c)
gtk;gtk_color_chooser_add_palette;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorchooser.h;"void gtk_color_chooser_add_palette (GtkColorChooser *chooser, GtkOrientation orientation, int colors_per_line, int n_colors, GdkRGBA *colors);";subroutine gtk_color_chooser_add_palette(chooser, orientation, colors_per_line, n_colors, colors) bind(c)
gtk;gtk_color_chooser_dialog_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorchooserdialog.h;"GType gtk_color_chooser_dialog_get_type (void) G_GNUC_CONST;";function gtk_color_chooser_dialog_get_type() bind(c)
gtk;gtk_color_chooser_dialog_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorchooserdialog.h;"GtkWidget * gtk_color_chooser_dialog_new (const char *title, GtkWindow *parent);";function gtk_color_chooser_dialog_new(title, parent) bind(c)
gtk;gtk_color_chooser_get_rgba;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorchooser.h;"void gtk_color_chooser_get_rgba (GtkColorChooser *chooser, GdkRGBA *color);";subroutine gtk_color_chooser_get_rgba(chooser, color) bind(c)
gtk;gtk_color_chooser_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorchooser.h;"GType gtk_color_chooser_get_type (void) G_GNUC_CONST;";function gtk_color_chooser_get_type() bind(c)
gtk;gtk_color_chooser_get_use_alpha;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorchooser.h;"gboolean gtk_color_chooser_get_use_alpha (GtkColorChooser *chooser);";function gtk_color_chooser_get_use_alpha(chooser) bind(c)
gtk;gtk_color_chooser_set_rgba;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorchooser.h;"void gtk_color_chooser_set_rgba (GtkColorChooser *chooser, const GdkRGBA *color);";subroutine gtk_color_chooser_set_rgba(chooser, color) bind(c)
gtk;gtk_color_chooser_set_use_alpha;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorchooser.h;"void gtk_color_chooser_set_use_alpha (GtkColorChooser *chooser, gboolean use_alpha);";subroutine gtk_color_chooser_set_use_alpha(chooser, use_alpha) bind(c)
gtk;gtk_color_chooser_widget_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorchooserwidget.h;"GType gtk_color_chooser_widget_get_type (void) G_GNUC_CONST;";function gtk_color_chooser_widget_get_type() bind(c)
gtk;gtk_color_chooser_widget_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorchooserwidget.h;"GtkWidget * gtk_color_chooser_widget_new (void);";function gtk_color_chooser_widget_new() bind(c)
gtk;gtk_column_view_append_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"void gtk_column_view_append_column (GtkColumnView *self, GtkColumnViewColumn *column);";subroutine gtk_column_view_append_column(self, column) bind(c)
gtk;gtk_column_view_column_get_column_view;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"GtkColumnView * gtk_column_view_column_get_column_view (GtkColumnViewColumn *self);";function gtk_column_view_column_get_column_view(self) bind(c)
gtk;gtk_column_view_column_get_expand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"gboolean gtk_column_view_column_get_expand (GtkColumnViewColumn *self);";function gtk_column_view_column_get_expand(self) bind(c)
gtk;gtk_column_view_column_get_factory;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"GtkListItemFactory * gtk_column_view_column_get_factory (GtkColumnViewColumn *self);";function gtk_column_view_column_get_factory(self) bind(c)
gtk;gtk_column_view_column_get_fixed_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"int gtk_column_view_column_get_fixed_width (GtkColumnViewColumn *self);";function gtk_column_view_column_get_fixed_width(self) bind(c)
gtk;gtk_column_view_column_get_header_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"GMenuModel * gtk_column_view_column_get_header_menu (GtkColumnViewColumn *self);";function gtk_column_view_column_get_header_menu(self) bind(c)
gtk;gtk_column_view_column_get_resizable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"gboolean gtk_column_view_column_get_resizable (GtkColumnViewColumn *self);";function gtk_column_view_column_get_resizable(self) bind(c)
gtk;gtk_column_view_column_get_sorter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"GtkSorter * gtk_column_view_column_get_sorter (GtkColumnViewColumn *self);";function gtk_column_view_column_get_sorter(self) bind(c)
gtk;gtk_column_view_column_get_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"const char * gtk_column_view_column_get_title (GtkColumnViewColumn *self);";function gtk_column_view_column_get_title(self) bind(c)
gtk;gtk_column_view_column_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"GType gtk_column_view_column_get_type (void) G_GNUC_CONST;";function gtk_column_view_column_get_type() bind(c)
gtk;gtk_column_view_column_get_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"gboolean gtk_column_view_column_get_visible (GtkColumnViewColumn *self);";function gtk_column_view_column_get_visible(self) bind(c)
gtk;gtk_column_view_column_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"GtkColumnViewColumn * gtk_column_view_column_new (const char *title, GtkListItemFactory *factory);";function gtk_column_view_column_new(title, factory) bind(c)
gtk;gtk_column_view_column_set_expand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"void gtk_column_view_column_set_expand (GtkColumnViewColumn *self, gboolean expand);";subroutine gtk_column_view_column_set_expand(self, expand) bind(c)
gtk;gtk_column_view_column_set_factory;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"void gtk_column_view_column_set_factory (GtkColumnViewColumn *self, GtkListItemFactory *factory);";subroutine gtk_column_view_column_set_factory(self, factory) bind(c)
gtk;gtk_column_view_column_set_fixed_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"void gtk_column_view_column_set_fixed_width (GtkColumnViewColumn *self, int fixed_width);";subroutine gtk_column_view_column_set_fixed_width(self, fixed_width) bind(c)
gtk;gtk_column_view_column_set_header_menu;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"void gtk_column_view_column_set_header_menu (GtkColumnViewColumn *self, GMenuModel *menu);";subroutine gtk_column_view_column_set_header_menu(self, menu) bind(c)
gtk;gtk_column_view_column_set_resizable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"void gtk_column_view_column_set_resizable (GtkColumnViewColumn *self, gboolean resizable);";subroutine gtk_column_view_column_set_resizable(self, resizable) bind(c)
gtk;gtk_column_view_column_set_sorter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"void gtk_column_view_column_set_sorter (GtkColumnViewColumn *self, GtkSorter *sorter);";subroutine gtk_column_view_column_set_sorter(self, sorter) bind(c)
gtk;gtk_column_view_column_set_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"void gtk_column_view_column_set_title (GtkColumnViewColumn *self, const char *title);";subroutine gtk_column_view_column_set_title(self, title) bind(c)
gtk;gtk_column_view_column_set_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnviewcolumn.h;"void gtk_column_view_column_set_visible (GtkColumnViewColumn *self, gboolean visible);";subroutine gtk_column_view_column_set_visible(self, visible) bind(c)
gtk;gtk_column_view_get_columns;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"GListModel * gtk_column_view_get_columns (GtkColumnView *self);";function gtk_column_view_get_columns(self) bind(c)
gtk;gtk_column_view_get_enable_rubberband;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"gboolean gtk_column_view_get_enable_rubberband (GtkColumnView *self);";function gtk_column_view_get_enable_rubberband(self) bind(c)
gtk;gtk_column_view_get_model;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"GtkSelectionModel * gtk_column_view_get_model (GtkColumnView *self);";function gtk_column_view_get_model(self) bind(c)
gtk;gtk_column_view_get_reorderable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"gboolean gtk_column_view_get_reorderable (GtkColumnView *self);";function gtk_column_view_get_reorderable(self) bind(c)
gtk;gtk_column_view_get_show_column_separators;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"gboolean gtk_column_view_get_show_column_separators (GtkColumnView *self);";function gtk_column_view_get_show_column_separators(self) bind(c)
gtk;gtk_column_view_get_show_row_separators;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"gboolean gtk_column_view_get_show_row_separators (GtkColumnView *self);";function gtk_column_view_get_show_row_separators(self) bind(c)
gtk;gtk_column_view_get_single_click_activate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"gboolean gtk_column_view_get_single_click_activate (GtkColumnView *self);";function gtk_column_view_get_single_click_activate(self) bind(c)
gtk;gtk_column_view_get_sorter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"GtkSorter * gtk_column_view_get_sorter (GtkColumnView *self);";function gtk_column_view_get_sorter(self) bind(c)
gtk;gtk_column_view_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"GType gtk_column_view_get_type (void) G_GNUC_CONST;";function gtk_column_view_get_type() bind(c)
gtk;gtk_column_view_insert_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"void gtk_column_view_insert_column (GtkColumnView *self, guint position, GtkColumnViewColumn *column);";subroutine gtk_column_view_insert_column(self, position, column) bind(c)
gtk;gtk_column_view_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"GtkWidget * gtk_column_view_new (GtkSelectionModel *model);";function gtk_column_view_new(model) bind(c)
gtk;gtk_column_view_remove_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"void gtk_column_view_remove_column (GtkColumnView *self, GtkColumnViewColumn *column);";subroutine gtk_column_view_remove_column(self, column) bind(c)
gtk;gtk_column_view_set_enable_rubberband;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"void gtk_column_view_set_enable_rubberband (GtkColumnView *self, gboolean enable_rubberband);";subroutine gtk_column_view_set_enable_rubberband(self, enable_rubberband) bind(c)
gtk;gtk_column_view_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"void gtk_column_view_set_model (GtkColumnView *self, GtkSelectionModel *model);";subroutine gtk_column_view_set_model(self, model) bind(c)
gtk;gtk_column_view_set_reorderable;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"void gtk_column_view_set_reorderable (GtkColumnView *self, gboolean reorderable);";subroutine gtk_column_view_set_reorderable(self, reorderable) bind(c)
gtk;gtk_column_view_set_show_column_separators;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"void gtk_column_view_set_show_column_separators (GtkColumnView *self, gboolean show_column_separators);";subroutine gtk_column_view_set_show_column_separators(self, show_column_separators) bind(c)
gtk;gtk_column_view_set_show_row_separators;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"void gtk_column_view_set_show_row_separators (GtkColumnView *self, gboolean show_row_separators);";subroutine gtk_column_view_set_show_row_separators(self, show_row_separators) bind(c)
gtk;gtk_column_view_set_single_click_activate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"void gtk_column_view_set_single_click_activate (GtkColumnView *self, gboolean single_click_activate);";subroutine gtk_column_view_set_single_click_activate(self, single_click_activate) bind(c)
gtk;gtk_column_view_sort_by_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolumnview.h;"void gtk_column_view_sort_by_column (GtkColumnView *self, GtkColumnViewColumn *column, GtkSortType direction);";subroutine gtk_column_view_sort_by_column(self, column, direction) bind(c)
gtk;gtk_combo_box_get_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"int gtk_combo_box_get_active (GtkComboBox *combo_box);";function gtk_combo_box_get_active(combo_box) bind(c)
gtk;gtk_combo_box_get_active_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"const char * gtk_combo_box_get_active_id (GtkComboBox *combo_box);";function gtk_combo_box_get_active_id(combo_box) bind(c)
gtk;gtk_combo_box_get_active_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"gboolean gtk_combo_box_get_active_iter (GtkComboBox *combo_box, GtkTreeIter *iter);";function gtk_combo_box_get_active_iter(combo_box, iter) bind(c)
gtk;gtk_combo_box_get_button_sensitivity;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"GtkSensitivityType gtk_combo_box_get_button_sensitivity (GtkComboBox *combo_box);";function gtk_combo_box_get_button_sensitivity(combo_box) bind(c)
gtk;gtk_combo_box_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"GtkWidget * gtk_combo_box_get_child (GtkComboBox *combo_box);";function gtk_combo_box_get_child(combo_box) bind(c)
gtk;gtk_combo_box_get_entry_text_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"int gtk_combo_box_get_entry_text_column (GtkComboBox *combo_box);";function gtk_combo_box_get_entry_text_column(combo_box) bind(c)
gtk;gtk_combo_box_get_has_entry;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"gboolean gtk_combo_box_get_has_entry (GtkComboBox *combo_box);";function gtk_combo_box_get_has_entry(combo_box) bind(c)
gtk;gtk_combo_box_get_id_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"int gtk_combo_box_get_id_column (GtkComboBox *combo_box);";function gtk_combo_box_get_id_column(combo_box) bind(c)
gtk;gtk_combo_box_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"GtkTreeModel *gtk_combo_box_get_model (GtkComboBox *combo_box);";function gtk_combo_box_get_model(combo_box) bind(c)
gtk;gtk_combo_box_get_popup_fixed_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"gboolean gtk_combo_box_get_popup_fixed_width (GtkComboBox *combo_box);";function gtk_combo_box_get_popup_fixed_width(combo_box) bind(c)
gtk;gtk_combo_box_get_row_separator_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"GtkTreeViewRowSeparatorFunc gtk_combo_box_get_row_separator_func (GtkComboBox *combo_box);";function gtk_combo_box_get_row_separator_func(combo_box) bind(c)
gtk;gtk_combo_box_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"GType gtk_combo_box_get_type (void) G_GNUC_CONST;";function gtk_combo_box_get_type() bind(c)
gtk;gtk_combo_box_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"GtkWidget *gtk_combo_box_new (void);";function gtk_combo_box_new() bind(c)
gtk;gtk_combo_box_new_with_entry;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"GtkWidget *gtk_combo_box_new_with_entry (void);";function gtk_combo_box_new_with_entry() bind(c)
gtk;gtk_combo_box_new_with_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"GtkWidget *gtk_combo_box_new_with_model (GtkTreeModel *model);";function gtk_combo_box_new_with_model(model) bind(c)
gtk;gtk_combo_box_new_with_model_and_entry;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"GtkWidget *gtk_combo_box_new_with_model_and_entry (GtkTreeModel *model);";function gtk_combo_box_new_with_model_and_entry(model) bind(c)
gtk;gtk_combo_box_popdown;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"void gtk_combo_box_popdown (GtkComboBox *combo_box);";subroutine gtk_combo_box_popdown(combo_box) bind(c)
gtk;gtk_combo_box_popup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"void gtk_combo_box_popup (GtkComboBox *combo_box);";subroutine gtk_combo_box_popup(combo_box) bind(c)
gtk;gtk_combo_box_popup_for_device;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"void gtk_combo_box_popup_for_device (GtkComboBox *combo_box, GdkDevice *device);";subroutine gtk_combo_box_popup_for_device(combo_box, device) bind(c)
gtk;gtk_combo_box_set_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"void gtk_combo_box_set_active (GtkComboBox *combo_box, int index_);";subroutine gtk_combo_box_set_active(combo_box, index_) bind(c)
gtk;gtk_combo_box_set_active_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"gboolean gtk_combo_box_set_active_id (GtkComboBox *combo_box, const char *active_id);";function gtk_combo_box_set_active_id(combo_box, active_id) bind(c)
gtk;gtk_combo_box_set_active_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"void gtk_combo_box_set_active_iter (GtkComboBox *combo_box, GtkTreeIter *iter);";subroutine gtk_combo_box_set_active_iter(combo_box, iter) bind(c)
gtk;gtk_combo_box_set_button_sensitivity;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"void gtk_combo_box_set_button_sensitivity (GtkComboBox *combo_box, GtkSensitivityType sensitivity);";subroutine gtk_combo_box_set_button_sensitivity(combo_box, sensitivity) bind(c)
gtk;gtk_combo_box_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"void gtk_combo_box_set_child (GtkComboBox *combo_box, GtkWidget *child);";subroutine gtk_combo_box_set_child(combo_box, child) bind(c)
gtk;gtk_combo_box_set_entry_text_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"void gtk_combo_box_set_entry_text_column (GtkComboBox *combo_box, int text_column);";subroutine gtk_combo_box_set_entry_text_column(combo_box, text_column) bind(c)
gtk;gtk_combo_box_set_id_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"void gtk_combo_box_set_id_column (GtkComboBox *combo_box, int id_column);";subroutine gtk_combo_box_set_id_column(combo_box, id_column) bind(c)
gtk;gtk_combo_box_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"void gtk_combo_box_set_model (GtkComboBox *combo_box, GtkTreeModel *model);";subroutine gtk_combo_box_set_model(combo_box, model) bind(c)
gtk;gtk_combo_box_set_popup_fixed_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"void gtk_combo_box_set_popup_fixed_width (GtkComboBox *combo_box, gboolean fixed);";subroutine gtk_combo_box_set_popup_fixed_width(combo_box, fixed) bind(c)
gtk;gtk_combo_box_set_row_separator_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcombobox.h;"void gtk_combo_box_set_row_separator_func (GtkComboBox *combo_box, GtkTreeViewRowSeparatorFunc func, gpointer data, GDestroyNotify destroy);";subroutine gtk_combo_box_set_row_separator_func(combo_box, func, data, destroy) bind(c)
gtk;gtk_combo_box_text_append;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcomboboxtext.h;"void gtk_combo_box_text_append (GtkComboBoxText *combo_box, const char *id, const char *text);";subroutine gtk_combo_box_text_append(combo_box, id, text) bind(c)
gtk;gtk_combo_box_text_append_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcomboboxtext.h;"void gtk_combo_box_text_append_text (GtkComboBoxText *combo_box, const char *text);";subroutine gtk_combo_box_text_append_text(combo_box, text) bind(c)
gtk;gtk_combo_box_text_get_active_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcomboboxtext.h;"char *gtk_combo_box_text_get_active_text (GtkComboBoxText *combo_box);";function gtk_combo_box_text_get_active_text(combo_box) bind(c)
gtk;gtk_combo_box_text_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcomboboxtext.h;"GType gtk_combo_box_text_get_type (void) G_GNUC_CONST;";function gtk_combo_box_text_get_type() bind(c)
gtk;gtk_combo_box_text_insert;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcomboboxtext.h;"void gtk_combo_box_text_insert (GtkComboBoxText *combo_box, int position, const char *id, const char *text);";subroutine gtk_combo_box_text_insert(combo_box, position, id, text) bind(c)
gtk;gtk_combo_box_text_insert_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcomboboxtext.h;"void gtk_combo_box_text_insert_text (GtkComboBoxText *combo_box, int position, const char *text);";subroutine gtk_combo_box_text_insert_text(combo_box, position, text) bind(c)
gtk;gtk_combo_box_text_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcomboboxtext.h;"GtkWidget* gtk_combo_box_text_new (void);";function gtk_combo_box_text_new() bind(c)
gtk;gtk_combo_box_text_new_with_entry;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcomboboxtext.h;"GtkWidget* gtk_combo_box_text_new_with_entry (void);";function gtk_combo_box_text_new_with_entry() bind(c)
gtk;gtk_combo_box_text_prepend;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcomboboxtext.h;"void gtk_combo_box_text_prepend (GtkComboBoxText *combo_box, const char *id, const char *text);";subroutine gtk_combo_box_text_prepend(combo_box, id, text) bind(c)
gtk;gtk_combo_box_text_prepend_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcomboboxtext.h;"void gtk_combo_box_text_prepend_text (GtkComboBoxText *combo_box, const char *text);";subroutine gtk_combo_box_text_prepend_text(combo_box, text) bind(c)
gtk;gtk_combo_box_text_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcomboboxtext.h;"void gtk_combo_box_text_remove (GtkComboBoxText *combo_box, int position);";subroutine gtk_combo_box_text_remove(combo_box, position) bind(c)
gtk;gtk_combo_box_text_remove_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcomboboxtext.h;"void gtk_combo_box_text_remove_all (GtkComboBoxText *combo_box);";subroutine gtk_combo_box_text_remove_all(combo_box) bind(c)
gtk;gtk_constant_expression_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GType gtk_constant_expression_get_type (void) G_GNUC_CONST;";function gtk_constant_expression_get_type() bind(c)
gtk;gtk_constant_expression_get_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"const GValue * gtk_constant_expression_get_value (GtkExpression *expression);";function gtk_constant_expression_get_value(expression) bind(c)
gtk;gtk_constant_expression_new_for_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpression * gtk_constant_expression_new_for_value (const GValue *value);";function gtk_constant_expression_new_for_value(value) bind(c)
gtk;gtk_constraint_get_constant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraint.h;"double gtk_constraint_get_constant (GtkConstraint *constraint);";function gtk_constraint_get_constant(constraint) bind(c)
gtk;gtk_constraint_get_multiplier;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraint.h;"double gtk_constraint_get_multiplier (GtkConstraint *constraint);";function gtk_constraint_get_multiplier(constraint) bind(c)
gtk;gtk_constraint_get_relation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraint.h;"GtkConstraintRelation gtk_constraint_get_relation (GtkConstraint *constraint);";function gtk_constraint_get_relation(constraint) bind(c)
gtk;gtk_constraint_get_source;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraint.h;"GtkConstraintTarget * gtk_constraint_get_source (GtkConstraint *constraint);";function gtk_constraint_get_source(constraint) bind(c)
gtk;gtk_constraint_get_source_attribute;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraint.h;"GtkConstraintAttribute gtk_constraint_get_source_attribute (GtkConstraint *constraint);";function gtk_constraint_get_source_attribute(constraint) bind(c)
gtk;gtk_constraint_get_strength;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraint.h;"int gtk_constraint_get_strength (GtkConstraint *constraint);";function gtk_constraint_get_strength(constraint) bind(c)
gtk;gtk_constraint_get_target;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraint.h;"GtkConstraintTarget * gtk_constraint_get_target (GtkConstraint *constraint);";function gtk_constraint_get_target(constraint) bind(c)
gtk;gtk_constraint_get_target_attribute;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraint.h;"GtkConstraintAttribute gtk_constraint_get_target_attribute (GtkConstraint *constraint);";function gtk_constraint_get_target_attribute(constraint) bind(c)
gtk;gtk_constraint_guide_get_max_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintguide.h;"void gtk_constraint_guide_get_max_size (GtkConstraintGuide *guide, int *width, int *height);";subroutine gtk_constraint_guide_get_max_size(guide, width, height) bind(c)
gtk;gtk_constraint_guide_get_min_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintguide.h;"void gtk_constraint_guide_get_min_size (GtkConstraintGuide *guide, int *width, int *height);";subroutine gtk_constraint_guide_get_min_size(guide, width, height) bind(c)
gtk;gtk_constraint_guide_get_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintguide.h;"const char * gtk_constraint_guide_get_name (GtkConstraintGuide *guide);";function gtk_constraint_guide_get_name(guide) bind(c)
gtk;gtk_constraint_guide_get_nat_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintguide.h;"void gtk_constraint_guide_get_nat_size (GtkConstraintGuide *guide, int *width, int *height);";subroutine gtk_constraint_guide_get_nat_size(guide, width, height) bind(c)
gtk;gtk_constraint_guide_get_strength;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintguide.h;"GtkConstraintStrength gtk_constraint_guide_get_strength (GtkConstraintGuide *guide);";function gtk_constraint_guide_get_strength(guide) bind(c)
gtk;gtk_constraint_guide_set_max_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintguide.h;"void gtk_constraint_guide_set_max_size (GtkConstraintGuide *guide, int width, int height);";subroutine gtk_constraint_guide_set_max_size(guide, width, height) bind(c)
gtk;gtk_constraint_guide_set_min_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintguide.h;"void gtk_constraint_guide_set_min_size (GtkConstraintGuide *guide, int width, int height);";subroutine gtk_constraint_guide_set_min_size(guide, width, height) bind(c)
gtk;gtk_constraint_guide_set_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintguide.h;"void gtk_constraint_guide_set_name (GtkConstraintGuide *guide, const char *name);";subroutine gtk_constraint_guide_set_name(guide, name) bind(c)
gtk;gtk_constraint_guide_set_nat_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintguide.h;"void gtk_constraint_guide_set_nat_size (GtkConstraintGuide *guide, int width, int height);";subroutine gtk_constraint_guide_set_nat_size(guide, width, height) bind(c)
gtk;gtk_constraint_guide_set_strength;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintguide.h;"void gtk_constraint_guide_set_strength (GtkConstraintGuide *guide, GtkConstraintStrength strength);";subroutine gtk_constraint_guide_set_strength(guide, strength) bind(c)
gtk;gtk_constraint_is_attached;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraint.h;"gboolean gtk_constraint_is_attached (GtkConstraint *constraint);";function gtk_constraint_is_attached(constraint) bind(c)
gtk;gtk_constraint_is_constant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraint.h;"gboolean gtk_constraint_is_constant (GtkConstraint *constraint);";function gtk_constraint_is_constant(constraint) bind(c)
gtk;gtk_constraint_is_required;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraint.h;"gboolean gtk_constraint_is_required (GtkConstraint *constraint);";function gtk_constraint_is_required(constraint) bind(c)
gtk;gtk_constraint_layout_add_constraint;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintlayout.h;"void gtk_constraint_layout_add_constraint (GtkConstraintLayout *layout, GtkConstraint *constraint);";subroutine gtk_constraint_layout_add_constraint(layout, constraint) bind(c)
gtk;gtk_constraint_layout_add_constraints_from_descriptionv;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintlayout.h;"GList * gtk_constraint_layout_add_constraints_from_descriptionv (GtkConstraintLayout *layout, const char * const lines[], gsize n_lines, int hspacing, int vspacing, GHashTable *views, GError **error);";function gtk_constraint_layout_add_constraints_from_descriptionv(layout, lines, n_lines, hspacing, vspacing, views, error) bind(c)
gtk;gtk_constraint_layout_add_guide;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintlayout.h;"void gtk_constraint_layout_add_guide (GtkConstraintLayout *layout, GtkConstraintGuide *guide);";subroutine gtk_constraint_layout_add_guide(layout, guide) bind(c)
gtk;gtk_constraint_layout_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintlayout.h;"GtkLayoutManager * gtk_constraint_layout_new (void);";function gtk_constraint_layout_new() bind(c)
gtk;gtk_constraint_layout_observe_constraints;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintlayout.h;"GListModel * gtk_constraint_layout_observe_constraints (GtkConstraintLayout *layout);";function gtk_constraint_layout_observe_constraints(layout) bind(c)
gtk;gtk_constraint_layout_observe_guides;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintlayout.h;"GListModel * gtk_constraint_layout_observe_guides (GtkConstraintLayout *layout);";function gtk_constraint_layout_observe_guides(layout) bind(c)
gtk;gtk_constraint_layout_remove_all_constraints;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintlayout.h;"void gtk_constraint_layout_remove_all_constraints (GtkConstraintLayout *layout);";subroutine gtk_constraint_layout_remove_all_constraints(layout) bind(c)
gtk;gtk_constraint_layout_remove_constraint;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintlayout.h;"void gtk_constraint_layout_remove_constraint (GtkConstraintLayout *layout, GtkConstraint *constraint);";subroutine gtk_constraint_layout_remove_constraint(layout, constraint) bind(c)
gtk;gtk_constraint_layout_remove_guide;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraintlayout.h;"void gtk_constraint_layout_remove_guide (GtkConstraintLayout *layout, GtkConstraintGuide *guide);";subroutine gtk_constraint_layout_remove_guide(layout, guide) bind(c)
gtk;gtk_constraint_new_constant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkconstraint.h;"GtkConstraint * gtk_constraint_new_constant (gpointer target, GtkConstraintAttribute target_attribute, GtkConstraintRelation relation, double constant, int strength);";function gtk_constraint_new_constant(target, target_attribute, relation, constant, strength) bind(c)
gtk;gtk_css_parser_error_quark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/css/gtkcsserror.h;"GQuark gtk_css_parser_error_quark (void);";function gtk_css_parser_error_quark() bind(c)
gtk;gtk_css_parser_warning_quark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/css/gtkcsserror.h;"GQuark gtk_css_parser_warning_quark (void);";function gtk_css_parser_warning_quark() bind(c)
gtk;gtk_css_provider_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcssprovider.h;"GType gtk_css_provider_get_type (void) G_GNUC_CONST;";function gtk_css_provider_get_type() bind(c)
gtk;gtk_css_provider_load_from_data;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcssprovider.h;"void gtk_css_provider_load_from_data (GtkCssProvider *css_provider, const char *data, gssize length);";subroutine gtk_css_provider_load_from_data(css_provider, data, length) bind(c)
gtk;gtk_css_provider_load_from_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcssprovider.h;"void gtk_css_provider_load_from_file (GtkCssProvider *css_provider, GFile *file);";subroutine gtk_css_provider_load_from_file(css_provider, file) bind(c)
gtk;gtk_css_provider_load_from_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcssprovider.h;"void gtk_css_provider_load_from_path (GtkCssProvider *css_provider, const char *path);";subroutine gtk_css_provider_load_from_path(css_provider, path) bind(c)
gtk;gtk_css_provider_load_from_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcssprovider.h;"void gtk_css_provider_load_from_resource (GtkCssProvider *css_provider, const char *resource_path);";subroutine gtk_css_provider_load_from_resource(css_provider, resource_path) bind(c)
gtk;gtk_css_provider_load_named;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcssprovider.h;"void gtk_css_provider_load_named (GtkCssProvider *provider, const char *name, const char *variant);";subroutine gtk_css_provider_load_named(provider, name, variant) bind(c)
gtk;gtk_css_provider_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcssprovider.h;"GtkCssProvider * gtk_css_provider_new (void);";function gtk_css_provider_new() bind(c)
gtk;gtk_css_provider_to_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcssprovider.h;"char * gtk_css_provider_to_string (GtkCssProvider *provider);";function gtk_css_provider_to_string(provider) bind(c)
gtk;gtk_css_section_get_end_location;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/css/gtkcsssection.h;"const GtkCssLocation * gtk_css_section_get_end_location (const GtkCssSection *section);";function gtk_css_section_get_end_location(section) bind(c)
gtk;gtk_css_section_get_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/css/gtkcsssection.h;"GFile * gtk_css_section_get_file (const GtkCssSection *section);";function gtk_css_section_get_file(section) bind(c)
gtk;gtk_css_section_get_parent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/css/gtkcsssection.h;"GtkCssSection * gtk_css_section_get_parent (const GtkCssSection *section);";function gtk_css_section_get_parent(section) bind(c)
gtk;gtk_css_section_get_start_location;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/css/gtkcsssection.h;"const GtkCssLocation * gtk_css_section_get_start_location (const GtkCssSection *section);";function gtk_css_section_get_start_location(section) bind(c)
gtk;gtk_css_section_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/css/gtkcsssection.h;"GType gtk_css_section_get_type (void) G_GNUC_CONST;";function gtk_css_section_get_type() bind(c)
gtk;gtk_css_section_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/css/gtkcsssection.h;"GtkCssSection * gtk_css_section_new (GFile *file, const GtkCssLocation *start, const GtkCssLocation *end);";function gtk_css_section_new(file, start, end) bind(c)
gtk;gtk_css_section_print;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/css/gtkcsssection.h;"void gtk_css_section_print (const GtkCssSection *section, GString *string);";subroutine gtk_css_section_print(section, string) bind(c)
gtk;gtk_css_section_ref;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/css/gtkcsssection.h;"GtkCssSection * gtk_css_section_ref (GtkCssSection *section);";function gtk_css_section_ref(section) bind(c)
gtk;gtk_css_section_to_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/css/gtkcsssection.h;"char * gtk_css_section_to_string (const GtkCssSection *section);";function gtk_css_section_to_string(section) bind(c)
gtk;gtk_css_section_unref;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/css/gtkcsssection.h;"void gtk_css_section_unref (GtkCssSection *section);";subroutine gtk_css_section_unref(section) bind(c)
gtk;gtk_custom_filter_set_filter_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcustomfilter.h;"void gtk_custom_filter_set_filter_func (GtkCustomFilter *self, GtkCustomFilterFunc match_func, gpointer user_data, GDestroyNotify user_destroy);";subroutine gtk_custom_filter_set_filter_func(self, match_func, user_data, user_destroy) bind(c)
gtk;gtk_custom_sorter_set_sort_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcustomsorter.h;"void gtk_custom_sorter_set_sort_func (GtkCustomSorter *self, GCompareDataFunc sort_func, gpointer user_data, GDestroyNotify user_destroy);";subroutine gtk_custom_sorter_set_sort_func(self, sort_func, user_data, user_destroy) bind(c)
gtk;gtk_dialog_add_action_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdialog.h;"void gtk_dialog_add_action_widget (GtkDialog *dialog, GtkWidget *child, int response_id);";subroutine gtk_dialog_add_action_widget(dialog, child, response_id) bind(c)
gtk;gtk_dialog_add_button;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdialog.h;"GtkWidget* gtk_dialog_add_button (GtkDialog *dialog, const char *button_text, int response_id);";function gtk_dialog_add_button(dialog, button_text, response_id) bind(c)
gtk;gtk_dialog_get_content_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdialog.h;"GtkWidget * gtk_dialog_get_content_area (GtkDialog *dialog);";function gtk_dialog_get_content_area(dialog) bind(c)
gtk;gtk_dialog_get_header_bar;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdialog.h;"GtkWidget * gtk_dialog_get_header_bar (GtkDialog *dialog);";function gtk_dialog_get_header_bar(dialog) bind(c)
gtk;gtk_dialog_get_response_for_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdialog.h;"int gtk_dialog_get_response_for_widget (GtkDialog *dialog, GtkWidget *widget);";function gtk_dialog_get_response_for_widget(dialog, widget) bind(c)
gtk;gtk_dialog_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdialog.h;"GType gtk_dialog_get_type (void) G_GNUC_CONST;";function gtk_dialog_get_type() bind(c)
gtk;gtk_dialog_get_widget_for_response;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdialog.h;"GtkWidget* gtk_dialog_get_widget_for_response (GtkDialog *dialog, int response_id);";function gtk_dialog_get_widget_for_response(dialog, response_id) bind(c)
gtk;gtk_dialog_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdialog.h;"GtkWidget* gtk_dialog_new (void);";function gtk_dialog_new() bind(c)
gtk;gtk_dialog_response;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdialog.h;"void gtk_dialog_response (GtkDialog *dialog, int response_id);";subroutine gtk_dialog_response(dialog, response_id) bind(c)
gtk;gtk_dialog_set_default_response;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdialog.h;"void gtk_dialog_set_default_response (GtkDialog *dialog, int response_id);";subroutine gtk_dialog_set_default_response(dialog, response_id) bind(c)
gtk;gtk_dialog_set_response_sensitive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdialog.h;"void gtk_dialog_set_response_sensitive (GtkDialog *dialog, int response_id, gboolean setting);";subroutine gtk_dialog_set_response_sensitive(dialog, response_id, setting) bind(c)
gtk;gtk_directory_list_get_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdirectorylist.h;"const char * gtk_directory_list_get_attributes (GtkDirectoryList *self);";function gtk_directory_list_get_attributes(self) bind(c)
gtk;gtk_directory_list_get_error;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdirectorylist.h;"const GError * gtk_directory_list_get_error (GtkDirectoryList *self);";function gtk_directory_list_get_error(self) bind(c)
gtk;gtk_directory_list_get_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdirectorylist.h;"GFile * gtk_directory_list_get_file (GtkDirectoryList *self);";function gtk_directory_list_get_file(self) bind(c)
gtk;gtk_directory_list_get_io_priority;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdirectorylist.h;"int gtk_directory_list_get_io_priority (GtkDirectoryList *self);";function gtk_directory_list_get_io_priority(self) bind(c)
gtk;gtk_directory_list_get_monitored;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdirectorylist.h;"gboolean gtk_directory_list_get_monitored (GtkDirectoryList *self);";function gtk_directory_list_get_monitored(self) bind(c)
gtk;gtk_directory_list_is_loading;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdirectorylist.h;"gboolean gtk_directory_list_is_loading (GtkDirectoryList *self);";function gtk_directory_list_is_loading(self) bind(c)
gtk;gtk_directory_list_set_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdirectorylist.h;"void gtk_directory_list_set_attributes (GtkDirectoryList *self, const char *attributes);";subroutine gtk_directory_list_set_attributes(self, attributes) bind(c)
gtk;gtk_directory_list_set_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdirectorylist.h;"void gtk_directory_list_set_file (GtkDirectoryList *self, GFile *file);";subroutine gtk_directory_list_set_file(self, file) bind(c)
gtk;gtk_directory_list_set_io_priority;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdirectorylist.h;"void gtk_directory_list_set_io_priority (GtkDirectoryList *self, int io_priority);";subroutine gtk_directory_list_set_io_priority(self, io_priority) bind(c)
gtk;gtk_directory_list_set_monitored;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdirectorylist.h;"void gtk_directory_list_set_monitored (GtkDirectoryList *self, gboolean monitored);";subroutine gtk_directory_list_set_monitored(self, monitored) bind(c)
gtk;gtk_disable_setlocale;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmain.h;"void gtk_disable_setlocale (void);";subroutine gtk_disable_setlocale() bind(c)
gtk;gtk_distribute_natural_allocation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksizerequest.h;"int gtk_distribute_natural_allocation (int extra_space, guint n_requested_sizes, GtkRequestedSize *sizes);";function gtk_distribute_natural_allocation(extra_space, n_requested_sizes, sizes) bind(c)
gtk;gtk_drag_check_threshold;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragsource.h;"gboolean gtk_drag_check_threshold (GtkWidget *widget, int start_x, int start_y, int current_x, int current_y);";function gtk_drag_check_threshold(widget, start_x, start_y, current_x, current_y) bind(c)
gtk;gtk_drag_icon_create_widget_for_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragicon.h;"GtkWidget * gtk_drag_icon_create_widget_for_value (const GValue *value);";function gtk_drag_icon_create_widget_for_value(value) bind(c)
gtk;gtk_drag_icon_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragicon.h;"GtkWidget * gtk_drag_icon_get_child (GtkDragIcon *self);";function gtk_drag_icon_get_child(self) bind(c)
gtk;gtk_drag_icon_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragicon.h;"void gtk_drag_icon_set_child (GtkDragIcon *self, GtkWidget *child);";subroutine gtk_drag_icon_set_child(self, child) bind(c)
gtk;gtk_drag_icon_set_from_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragicon.h;"void gtk_drag_icon_set_from_paintable (GdkDrag *drag, GdkPaintable *paintable, int hot_x, int hot_y);";subroutine gtk_drag_icon_set_from_paintable(drag, paintable, hot_x, hot_y) bind(c)
gtk;gtk_drag_source_drag_cancel;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragsource.h;"void gtk_drag_source_drag_cancel (GtkDragSource *source);";subroutine gtk_drag_source_drag_cancel(source) bind(c)
gtk;gtk_drag_source_get_actions;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragsource.h;"GdkDragAction gtk_drag_source_get_actions (GtkDragSource *source);";function gtk_drag_source_get_actions(source) bind(c)
gtk;gtk_drag_source_get_content;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragsource.h;"GdkContentProvider *gtk_drag_source_get_content (GtkDragSource *source);";function gtk_drag_source_get_content(source) bind(c)
gtk;gtk_drag_source_get_drag;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragsource.h;"GdkDrag * gtk_drag_source_get_drag (GtkDragSource *source);";function gtk_drag_source_get_drag(source) bind(c)
gtk;gtk_drag_source_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragsource.h;"GType gtk_drag_source_get_type (void) G_GNUC_CONST;";function gtk_drag_source_get_type() bind(c)
gtk;gtk_drag_source_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragsource.h;"GtkDragSource *gtk_drag_source_new (void);";function gtk_drag_source_new() bind(c)
gtk;gtk_drag_source_set_actions;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragsource.h;"void gtk_drag_source_set_actions (GtkDragSource *source, GdkDragAction actions);";subroutine gtk_drag_source_set_actions(source, actions) bind(c)
gtk;gtk_drag_source_set_content;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragsource.h;"void gtk_drag_source_set_content (GtkDragSource *source, GdkContentProvider *content);";subroutine gtk_drag_source_set_content(source, content) bind(c)
gtk;gtk_drag_source_set_icon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdragsource.h;"void gtk_drag_source_set_icon (GtkDragSource *source, GdkPaintable *paintable, int hot_x, int hot_y);";subroutine gtk_drag_source_set_icon(source, paintable, hot_x, hot_y) bind(c)
gtk;gtk_drawing_area_get_content_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdrawingarea.h;"int gtk_drawing_area_get_content_height (GtkDrawingArea *self);";function gtk_drawing_area_get_content_height(self) bind(c)
gtk;gtk_drawing_area_get_content_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdrawingarea.h;"int gtk_drawing_area_get_content_width (GtkDrawingArea *self);";function gtk_drawing_area_get_content_width(self) bind(c)
gtk;gtk_drawing_area_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdrawingarea.h;"GType gtk_drawing_area_get_type (void) G_GNUC_CONST;";function gtk_drawing_area_get_type() bind(c)
gtk;gtk_drawing_area_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdrawingarea.h;"GtkWidget* gtk_drawing_area_new (void);";function gtk_drawing_area_new() bind(c)
gtk;gtk_drawing_area_set_content_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdrawingarea.h;"void gtk_drawing_area_set_content_height (GtkDrawingArea *self, int height);";subroutine gtk_drawing_area_set_content_height(self, height) bind(c)
gtk;gtk_drawing_area_set_content_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdrawingarea.h;"void gtk_drawing_area_set_content_width (GtkDrawingArea *self, int width);";subroutine gtk_drawing_area_set_content_width(self, width) bind(c)
gtk;gtk_drawing_area_set_draw_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdrawingarea.h;"void gtk_drawing_area_set_draw_func (GtkDrawingArea *self, GtkDrawingAreaDrawFunc draw_func, gpointer user_data, GDestroyNotify destroy);";subroutine gtk_drawing_area_set_draw_func(self, draw_func, user_data, destroy) bind(c)
gtk;gtk_drop_controller_motion_contains_pointer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropcontrollermotion.h;"gboolean gtk_drop_controller_motion_contains_pointer (GtkDropControllerMotion *self);";function gtk_drop_controller_motion_contains_pointer(self) bind(c)
gtk;gtk_drop_controller_motion_get_drop;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropcontrollermotion.h;"GdkDrop * gtk_drop_controller_motion_get_drop (GtkDropControllerMotion *self);";function gtk_drop_controller_motion_get_drop(self) bind(c)
gtk;gtk_drop_controller_motion_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropcontrollermotion.h;"GType gtk_drop_controller_motion_get_type (void) G_GNUC_CONST;";function gtk_drop_controller_motion_get_type() bind(c)
gtk;gtk_drop_controller_motion_is_pointer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropcontrollermotion.h;"gboolean gtk_drop_controller_motion_is_pointer (GtkDropControllerMotion *self);";function gtk_drop_controller_motion_is_pointer(self) bind(c)
gtk;gtk_drop_controller_motion_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropcontrollermotion.h;"GtkEventController * gtk_drop_controller_motion_new (void);";function gtk_drop_controller_motion_new() bind(c)
gtk;gtk_drop_down_get_enable_search;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"gboolean gtk_drop_down_get_enable_search (GtkDropDown *self);";function gtk_drop_down_get_enable_search(self) bind(c)
gtk;gtk_drop_down_get_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"GtkExpression * gtk_drop_down_get_expression (GtkDropDown *self);";function gtk_drop_down_get_expression(self) bind(c)
gtk;gtk_drop_down_get_factory;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"GtkListItemFactory * gtk_drop_down_get_factory (GtkDropDown *self);";function gtk_drop_down_get_factory(self) bind(c)
gtk;gtk_drop_down_get_list_factory;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"GtkListItemFactory * gtk_drop_down_get_list_factory (GtkDropDown *self);";function gtk_drop_down_get_list_factory(self) bind(c)
gtk;gtk_drop_down_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"GListModel * gtk_drop_down_get_model (GtkDropDown *self);";function gtk_drop_down_get_model(self) bind(c)
gtk;gtk_drop_down_get_selected;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"guint gtk_drop_down_get_selected (GtkDropDown *self);";function gtk_drop_down_get_selected(self) bind(c)
gtk;gtk_drop_down_get_selected_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"gpointer gtk_drop_down_get_selected_item (GtkDropDown *self);";function gtk_drop_down_get_selected_item(self) bind(c)
gtk;gtk_drop_down_new_from_strings;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"GtkWidget * gtk_drop_down_new_from_strings (const char * const * strings);";function gtk_drop_down_new_from_strings(strings) bind(c)
gtk;gtk_drop_down_set_enable_search;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"void gtk_drop_down_set_enable_search (GtkDropDown *self, gboolean enable_search);";subroutine gtk_drop_down_set_enable_search(self, enable_search) bind(c)
gtk;gtk_drop_down_set_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"void gtk_drop_down_set_expression (GtkDropDown *self, GtkExpression *expression);";subroutine gtk_drop_down_set_expression(self, expression) bind(c)
gtk;gtk_drop_down_set_factory;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"void gtk_drop_down_set_factory (GtkDropDown *self, GtkListItemFactory *factory);";subroutine gtk_drop_down_set_factory(self, factory) bind(c)
gtk;gtk_drop_down_set_list_factory;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"void gtk_drop_down_set_list_factory (GtkDropDown *self, GtkListItemFactory *factory);";subroutine gtk_drop_down_set_list_factory(self, factory) bind(c)
gtk;gtk_drop_down_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"void gtk_drop_down_set_model (GtkDropDown *self, GListModel *model);";subroutine gtk_drop_down_set_model(self, model) bind(c)
gtk;gtk_drop_down_set_selected;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdropdown.h;"void gtk_drop_down_set_selected (GtkDropDown *self, guint position);";subroutine gtk_drop_down_set_selected(self, position) bind(c)
gtk;gtk_drop_target_async_get_actions;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptargetasync.h;"GdkDragAction gtk_drop_target_async_get_actions (GtkDropTargetAsync *self);";function gtk_drop_target_async_get_actions(self) bind(c)
gtk;gtk_drop_target_async_get_formats;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptargetasync.h;"GdkContentFormats * gtk_drop_target_async_get_formats (GtkDropTargetAsync *self);";function gtk_drop_target_async_get_formats(self) bind(c)
gtk;gtk_drop_target_async_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptargetasync.h;"GType gtk_drop_target_async_get_type (void) G_GNUC_CONST;";function gtk_drop_target_async_get_type() bind(c)
gtk;gtk_drop_target_async_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptargetasync.h;"GtkDropTargetAsync * gtk_drop_target_async_new (GdkContentFormats *formats, GdkDragAction actions);";function gtk_drop_target_async_new(formats, actions) bind(c)
gtk;gtk_drop_target_async_reject_drop;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptargetasync.h;"void gtk_drop_target_async_reject_drop (GtkDropTargetAsync *self, GdkDrop *drop);";subroutine gtk_drop_target_async_reject_drop(self, drop) bind(c)
gtk;gtk_drop_target_async_set_actions;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptargetasync.h;"void gtk_drop_target_async_set_actions (GtkDropTargetAsync *self, GdkDragAction actions);";subroutine gtk_drop_target_async_set_actions(self, actions) bind(c)
gtk;gtk_drop_target_async_set_formats;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptargetasync.h;"void gtk_drop_target_async_set_formats (GtkDropTargetAsync *self, GdkContentFormats *formats);";subroutine gtk_drop_target_async_set_formats(self, formats) bind(c)
gtk;gtk_drop_target_get_actions;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptarget.h;"GdkDragAction gtk_drop_target_get_actions (GtkDropTarget *self);";function gtk_drop_target_get_actions(self) bind(c)
gtk;gtk_drop_target_get_drop;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptarget.h;"GdkDrop * gtk_drop_target_get_drop (GtkDropTarget *self);";function gtk_drop_target_get_drop(self) bind(c)
gtk;gtk_drop_target_get_formats;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptarget.h;"GdkContentFormats * gtk_drop_target_get_formats (GtkDropTarget *self);";function gtk_drop_target_get_formats(self) bind(c)
gtk;gtk_drop_target_get_gtypes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptarget.h;"const GType * gtk_drop_target_get_gtypes (GtkDropTarget *self, gsize *n_types);";function gtk_drop_target_get_gtypes(self, n_types) bind(c)
gtk;gtk_drop_target_get_preload;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptarget.h;"gboolean gtk_drop_target_get_preload (GtkDropTarget *self);";function gtk_drop_target_get_preload(self) bind(c)
gtk;gtk_drop_target_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptarget.h;"GType gtk_drop_target_get_type (void) G_GNUC_CONST;";function gtk_drop_target_get_type() bind(c)
gtk;gtk_drop_target_get_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptarget.h;"const GValue * gtk_drop_target_get_value (GtkDropTarget *self);";function gtk_drop_target_get_value(self) bind(c)
gtk;gtk_drop_target_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptarget.h;"GtkDropTarget * gtk_drop_target_new (GType type, GdkDragAction actions);";function gtk_drop_target_new(type, actions) bind(c)
gtk;gtk_drop_target_reject;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptarget.h;"void gtk_drop_target_reject (GtkDropTarget *self);";subroutine gtk_drop_target_reject(self) bind(c)
gtk;gtk_drop_target_set_actions;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptarget.h;"void gtk_drop_target_set_actions (GtkDropTarget *self, GdkDragAction actions);";subroutine gtk_drop_target_set_actions(self, actions) bind(c)
gtk;gtk_drop_target_set_gtypes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptarget.h;"void gtk_drop_target_set_gtypes (GtkDropTarget *self, GType *types, gsize n_types);";subroutine gtk_drop_target_set_gtypes(self, types, n_types) bind(c)
gtk;gtk_drop_target_set_preload;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdroptarget.h;"void gtk_drop_target_set_preload (GtkDropTarget *self, gboolean preload);";subroutine gtk_drop_target_set_preload(self, preload) bind(c)
gtk;gtk_editable_delegate_get_property;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"gboolean gtk_editable_delegate_get_property (GObject *object, guint prop_id, GValue *value, GParamSpec *pspec);";function gtk_editable_delegate_get_property(object, prop_id, value, pspec) bind(c)
gtk;gtk_editable_delegate_set_property;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"gboolean gtk_editable_delegate_set_property (GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec);";function gtk_editable_delegate_set_property(object, prop_id, value, pspec) bind(c)
gtk;gtk_editable_delete_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_delete_selection (GtkEditable *editable);";subroutine gtk_editable_delete_selection(editable) bind(c)
gtk;gtk_editable_delete_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_delete_text (GtkEditable *editable, int start_pos, int end_pos);";subroutine gtk_editable_delete_text(editable, start_pos, end_pos) bind(c)
gtk;gtk_editable_finish_delegate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_finish_delegate (GtkEditable *editable);";subroutine gtk_editable_finish_delegate(editable) bind(c)
gtk;gtk_editable_get_alignment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"float gtk_editable_get_alignment (GtkEditable *editable);";function gtk_editable_get_alignment(editable) bind(c)
gtk;gtk_editable_get_chars;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"char * gtk_editable_get_chars (GtkEditable *editable, int start_pos, int end_pos);";function gtk_editable_get_chars(editable, start_pos, end_pos) bind(c)
gtk;gtk_editable_get_delegate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"GtkEditable *gtk_editable_get_delegate (GtkEditable *editable);";function gtk_editable_get_delegate(editable) bind(c)
gtk;gtk_editable_get_editable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"gboolean gtk_editable_get_editable (GtkEditable *editable);";function gtk_editable_get_editable(editable) bind(c)
gtk;gtk_editable_get_enable_undo;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"gboolean gtk_editable_get_enable_undo (GtkEditable *editable);";function gtk_editable_get_enable_undo(editable) bind(c)
gtk;gtk_editable_get_max_width_chars;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"int gtk_editable_get_max_width_chars (GtkEditable *editable);";function gtk_editable_get_max_width_chars(editable) bind(c)
gtk;gtk_editable_get_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"int gtk_editable_get_position (GtkEditable *editable);";function gtk_editable_get_position(editable) bind(c)
gtk;gtk_editable_get_selection_bounds;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"gboolean gtk_editable_get_selection_bounds (GtkEditable *editable, int *start_pos, int *end_pos);";function gtk_editable_get_selection_bounds(editable, start_pos, end_pos) bind(c)
gtk;gtk_editable_get_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"const char * gtk_editable_get_text (GtkEditable *editable);";function gtk_editable_get_text(editable) bind(c)
gtk;gtk_editable_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"GType gtk_editable_get_type (void) G_GNUC_CONST;";function gtk_editable_get_type() bind(c)
gtk;gtk_editable_get_width_chars;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"int gtk_editable_get_width_chars (GtkEditable *editable);";function gtk_editable_get_width_chars(editable) bind(c)
gtk;gtk_editable_init_delegate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_init_delegate (GtkEditable *editable);";subroutine gtk_editable_init_delegate(editable) bind(c)
gtk;gtk_editable_insert_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_insert_text (GtkEditable *editable, const char *text, int length, int *position);";subroutine gtk_editable_insert_text(editable, text, length, position) bind(c)
gtk;gtk_editable_install_properties;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"guint gtk_editable_install_properties (GObjectClass *object_class, guint first_prop);";function gtk_editable_install_properties(object_class, first_prop) bind(c)
gtk;gtk_editable_label_get_editing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditablelabel.h;"gboolean gtk_editable_label_get_editing (GtkEditableLabel *self);";function gtk_editable_label_get_editing(self) bind(c)
gtk;gtk_editable_label_start_editing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditablelabel.h;"void gtk_editable_label_start_editing (GtkEditableLabel *self);";subroutine gtk_editable_label_start_editing(self) bind(c)
gtk;gtk_editable_label_stop_editing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditablelabel.h;"void gtk_editable_label_stop_editing (GtkEditableLabel *self, gboolean commit);";subroutine gtk_editable_label_stop_editing(self, commit) bind(c)
gtk;gtk_editable_select_region;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_select_region (GtkEditable *editable, int start_pos, int end_pos);";subroutine gtk_editable_select_region(editable, start_pos, end_pos) bind(c)
gtk;gtk_editable_set_alignment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_set_alignment (GtkEditable *editable, float xalign);";subroutine gtk_editable_set_alignment(editable, xalign) bind(c)
gtk;gtk_editable_set_editable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_set_editable (GtkEditable *editable, gboolean is_editable);";subroutine gtk_editable_set_editable(editable, is_editable) bind(c)
gtk;gtk_editable_set_enable_undo;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_set_enable_undo (GtkEditable *editable, gboolean enable_undo);";subroutine gtk_editable_set_enable_undo(editable, enable_undo) bind(c)
gtk;gtk_editable_set_max_width_chars;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_set_max_width_chars (GtkEditable *editable, int n_chars);";subroutine gtk_editable_set_max_width_chars(editable, n_chars) bind(c)
gtk;gtk_editable_set_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_set_position (GtkEditable *editable, int position);";subroutine gtk_editable_set_position(editable, position) bind(c)
gtk;gtk_editable_set_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_set_text (GtkEditable *editable, const char *text);";subroutine gtk_editable_set_text(editable, text) bind(c)
gtk;gtk_editable_set_width_chars;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeditable.h;"void gtk_editable_set_width_chars (GtkEditable *editable, int n_chars);";subroutine gtk_editable_set_width_chars(editable, n_chars) bind(c)
gtk;gtk_emoji_chooser_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkemojichooser.h;"GType gtk_emoji_chooser_get_type (void) G_GNUC_CONST;";function gtk_emoji_chooser_get_type() bind(c)
gtk;gtk_emoji_chooser_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkemojichooser.h;"GtkWidget *gtk_emoji_chooser_new (void);";function gtk_emoji_chooser_new() bind(c)
gtk;gtk_entry_buffer_delete_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrybuffer.h;"guint gtk_entry_buffer_delete_text (GtkEntryBuffer *buffer, guint position, int n_chars);";function gtk_entry_buffer_delete_text(buffer, position, n_chars) bind(c)
gtk;gtk_entry_buffer_emit_deleted_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrybuffer.h;"void gtk_entry_buffer_emit_deleted_text (GtkEntryBuffer *buffer, guint position, guint n_chars);";subroutine gtk_entry_buffer_emit_deleted_text(buffer, position, n_chars) bind(c)
gtk;gtk_entry_buffer_emit_inserted_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrybuffer.h;"void gtk_entry_buffer_emit_inserted_text (GtkEntryBuffer *buffer, guint position, const char *chars, guint n_chars);";subroutine gtk_entry_buffer_emit_inserted_text(buffer, position, chars, n_chars) bind(c)
gtk;gtk_entry_buffer_get_bytes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrybuffer.h;"gsize gtk_entry_buffer_get_bytes (GtkEntryBuffer *buffer);";function gtk_entry_buffer_get_bytes(buffer) bind(c)
gtk;gtk_entry_buffer_get_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrybuffer.h;"guint gtk_entry_buffer_get_length (GtkEntryBuffer *buffer);";function gtk_entry_buffer_get_length(buffer) bind(c)
gtk;gtk_entry_buffer_get_max_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrybuffer.h;"int gtk_entry_buffer_get_max_length (GtkEntryBuffer *buffer);";function gtk_entry_buffer_get_max_length(buffer) bind(c)
gtk;gtk_entry_buffer_get_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrybuffer.h;"const char * gtk_entry_buffer_get_text (GtkEntryBuffer *buffer);";function gtk_entry_buffer_get_text(buffer) bind(c)
gtk;gtk_entry_buffer_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrybuffer.h;"GType gtk_entry_buffer_get_type (void) G_GNUC_CONST;";function gtk_entry_buffer_get_type() bind(c)
gtk;gtk_entry_buffer_insert_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrybuffer.h;"guint gtk_entry_buffer_insert_text (GtkEntryBuffer *buffer, guint position, const char *chars, int n_chars);";function gtk_entry_buffer_insert_text(buffer, position, chars, n_chars) bind(c)
gtk;gtk_entry_buffer_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrybuffer.h;"GtkEntryBuffer* gtk_entry_buffer_new (const char *initial_chars, int n_initial_chars);";function gtk_entry_buffer_new(initial_chars, n_initial_chars) bind(c)
gtk;gtk_entry_buffer_set_max_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrybuffer.h;"void gtk_entry_buffer_set_max_length (GtkEntryBuffer *buffer, int max_length);";subroutine gtk_entry_buffer_set_max_length(buffer, max_length) bind(c)
gtk;gtk_entry_buffer_set_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrybuffer.h;"void gtk_entry_buffer_set_text (GtkEntryBuffer *buffer, const char *chars, int n_chars);";subroutine gtk_entry_buffer_set_text(buffer, chars, n_chars) bind(c)
gtk;gtk_entry_completion_complete;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"void gtk_entry_completion_complete (GtkEntryCompletion *completion);";subroutine gtk_entry_completion_complete(completion) bind(c)
gtk;gtk_entry_completion_compute_prefix;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"char * gtk_entry_completion_compute_prefix (GtkEntryCompletion *completion, const char *key);";function gtk_entry_completion_compute_prefix(completion, key) bind(c)
gtk;gtk_entry_completion_get_completion_prefix;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"const char *gtk_entry_completion_get_completion_prefix (GtkEntryCompletion *completion);";function gtk_entry_completion_get_completion_prefix(completion) bind(c)
gtk;gtk_entry_completion_get_entry;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"GtkWidget *gtk_entry_completion_get_entry (GtkEntryCompletion *completion);";function gtk_entry_completion_get_entry(completion) bind(c)
gtk;gtk_entry_completion_get_inline_completion;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"gboolean gtk_entry_completion_get_inline_completion (GtkEntryCompletion *completion);";function gtk_entry_completion_get_inline_completion(completion) bind(c)
gtk;gtk_entry_completion_get_inline_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"gboolean gtk_entry_completion_get_inline_selection (GtkEntryCompletion *completion);";function gtk_entry_completion_get_inline_selection(completion) bind(c)
gtk;gtk_entry_completion_get_minimum_key_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"int gtk_entry_completion_get_minimum_key_length (GtkEntryCompletion *completion);";function gtk_entry_completion_get_minimum_key_length(completion) bind(c)
gtk;gtk_entry_completion_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"GtkTreeModel *gtk_entry_completion_get_model (GtkEntryCompletion *completion);";function gtk_entry_completion_get_model(completion) bind(c)
gtk;gtk_entry_completion_get_popup_completion;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"gboolean gtk_entry_completion_get_popup_completion (GtkEntryCompletion *completion);";function gtk_entry_completion_get_popup_completion(completion) bind(c)
gtk;gtk_entry_completion_get_popup_set_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"gboolean gtk_entry_completion_get_popup_set_width (GtkEntryCompletion *completion);";function gtk_entry_completion_get_popup_set_width(completion) bind(c)
gtk;gtk_entry_completion_get_popup_single_match;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"gboolean gtk_entry_completion_get_popup_single_match (GtkEntryCompletion *completion);";function gtk_entry_completion_get_popup_single_match(completion) bind(c)
gtk;gtk_entry_completion_get_text_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"int gtk_entry_completion_get_text_column (GtkEntryCompletion *completion);";function gtk_entry_completion_get_text_column(completion) bind(c)
gtk;gtk_entry_completion_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"GType gtk_entry_completion_get_type (void) G_GNUC_CONST;";function gtk_entry_completion_get_type() bind(c)
gtk;gtk_entry_completion_insert_prefix;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"void gtk_entry_completion_insert_prefix (GtkEntryCompletion *completion);";subroutine gtk_entry_completion_insert_prefix(completion) bind(c)
gtk;gtk_entry_completion_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"GtkEntryCompletion *gtk_entry_completion_new (void);";function gtk_entry_completion_new() bind(c)
gtk;gtk_entry_completion_new_with_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"GtkEntryCompletion *gtk_entry_completion_new_with_area (GtkCellArea *area);";function gtk_entry_completion_new_with_area(area) bind(c)
gtk;gtk_entry_completion_set_inline_completion;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"void gtk_entry_completion_set_inline_completion (GtkEntryCompletion *completion, gboolean inline_completion);";subroutine gtk_entry_completion_set_inline_completion(completion, inline_completion) bind(c)
gtk;gtk_entry_completion_set_inline_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"void gtk_entry_completion_set_inline_selection (GtkEntryCompletion *completion, gboolean inline_selection);";subroutine gtk_entry_completion_set_inline_selection(completion, inline_selection) bind(c)
gtk;gtk_entry_completion_set_match_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"void gtk_entry_completion_set_match_func (GtkEntryCompletion *completion, GtkEntryCompletionMatchFunc func, gpointer func_data, GDestroyNotify func_notify);";subroutine gtk_entry_completion_set_match_func(completion, func, func_data, func_notify) bind(c)
gtk;gtk_entry_completion_set_minimum_key_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"void gtk_entry_completion_set_minimum_key_length (GtkEntryCompletion *completion, int length);";subroutine gtk_entry_completion_set_minimum_key_length(completion, length) bind(c)
gtk;gtk_entry_completion_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"void gtk_entry_completion_set_model (GtkEntryCompletion *completion, GtkTreeModel *model);";subroutine gtk_entry_completion_set_model(completion, model) bind(c)
gtk;gtk_entry_completion_set_popup_completion;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"void gtk_entry_completion_set_popup_completion (GtkEntryCompletion *completion, gboolean popup_completion);";subroutine gtk_entry_completion_set_popup_completion(completion, popup_completion) bind(c)
gtk;gtk_entry_completion_set_popup_set_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"void gtk_entry_completion_set_popup_set_width (GtkEntryCompletion *completion, gboolean popup_set_width);";subroutine gtk_entry_completion_set_popup_set_width(completion, popup_set_width) bind(c)
gtk;gtk_entry_completion_set_popup_single_match;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"void gtk_entry_completion_set_popup_single_match (GtkEntryCompletion *completion, gboolean popup_single_match);";subroutine gtk_entry_completion_set_popup_single_match(completion, popup_single_match) bind(c)
gtk;gtk_entry_completion_set_text_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentrycompletion.h;"void gtk_entry_completion_set_text_column (GtkEntryCompletion *completion, int column);";subroutine gtk_entry_completion_set_text_column(completion, column) bind(c)
gtk;gtk_entry_get_activates_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"gboolean gtk_entry_get_activates_default (GtkEntry *entry);";function gtk_entry_get_activates_default(entry) bind(c)
gtk;gtk_entry_get_alignment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"float gtk_entry_get_alignment (GtkEntry *entry);";function gtk_entry_get_alignment(entry) bind(c)
gtk;gtk_entry_get_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"PangoAttrList *gtk_entry_get_attributes (GtkEntry *entry);";function gtk_entry_get_attributes(entry) bind(c)
gtk;gtk_entry_get_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"GtkEntryBuffer* gtk_entry_get_buffer (GtkEntry *entry);";function gtk_entry_get_buffer(entry) bind(c)
gtk;gtk_entry_get_completion;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"GtkEntryCompletion *gtk_entry_get_completion (GtkEntry *entry);";function gtk_entry_get_completion(entry) bind(c)
gtk;gtk_entry_get_current_icon_drag_source;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"int gtk_entry_get_current_icon_drag_source (GtkEntry *entry);";function gtk_entry_get_current_icon_drag_source(entry) bind(c)
gtk;gtk_entry_get_extra_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"GMenuModel * gtk_entry_get_extra_menu (GtkEntry *entry);";function gtk_entry_get_extra_menu(entry) bind(c)
gtk;gtk_entry_get_has_frame;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"gboolean gtk_entry_get_has_frame (GtkEntry *entry);";function gtk_entry_get_has_frame(entry) bind(c)
gtk;gtk_entry_get_icon_activatable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"gboolean gtk_entry_get_icon_activatable (GtkEntry *entry, GtkEntryIconPosition icon_pos);";function gtk_entry_get_icon_activatable(entry, icon_pos) bind(c)
gtk;gtk_entry_get_icon_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_get_icon_area (GtkEntry *entry, GtkEntryIconPosition icon_pos, GdkRectangle *icon_area);";subroutine gtk_entry_get_icon_area(entry, icon_pos, icon_area) bind(c)
gtk;gtk_entry_get_icon_at_pos;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"int gtk_entry_get_icon_at_pos (GtkEntry *entry, int x, int y);";function gtk_entry_get_icon_at_pos(entry, x, y) bind(c)
gtk;gtk_entry_get_icon_gicon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"GIcon* gtk_entry_get_icon_gicon (GtkEntry *entry, GtkEntryIconPosition icon_pos);";function gtk_entry_get_icon_gicon(entry, icon_pos) bind(c)
gtk;gtk_entry_get_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"const char * gtk_entry_get_icon_name (GtkEntry *entry, GtkEntryIconPosition icon_pos);";function gtk_entry_get_icon_name(entry, icon_pos) bind(c)
gtk;gtk_entry_get_icon_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"GdkPaintable * gtk_entry_get_icon_paintable (GtkEntry *entry, GtkEntryIconPosition icon_pos);";function gtk_entry_get_icon_paintable(entry, icon_pos) bind(c)
gtk;gtk_entry_get_icon_sensitive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"gboolean gtk_entry_get_icon_sensitive (GtkEntry *entry, GtkEntryIconPosition icon_pos);";function gtk_entry_get_icon_sensitive(entry, icon_pos) bind(c)
gtk;gtk_entry_get_icon_storage_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"GtkImageType gtk_entry_get_icon_storage_type (GtkEntry *entry, GtkEntryIconPosition icon_pos);";function gtk_entry_get_icon_storage_type(entry, icon_pos) bind(c)
gtk;gtk_entry_get_icon_tooltip_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"char * gtk_entry_get_icon_tooltip_markup (GtkEntry *entry, GtkEntryIconPosition icon_pos);";function gtk_entry_get_icon_tooltip_markup(entry, icon_pos) bind(c)
gtk;gtk_entry_get_icon_tooltip_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"char * gtk_entry_get_icon_tooltip_text (GtkEntry *entry, GtkEntryIconPosition icon_pos);";function gtk_entry_get_icon_tooltip_text(entry, icon_pos) bind(c)
gtk;gtk_entry_get_input_hints;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"GtkInputHints gtk_entry_get_input_hints (GtkEntry *entry);";function gtk_entry_get_input_hints(entry) bind(c)
gtk;gtk_entry_get_input_purpose;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"GtkInputPurpose gtk_entry_get_input_purpose (GtkEntry *entry);";function gtk_entry_get_input_purpose(entry) bind(c)
gtk;gtk_entry_get_invisible_char;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"gunichar gtk_entry_get_invisible_char (GtkEntry *entry);";function gtk_entry_get_invisible_char(entry) bind(c)
gtk;gtk_entry_get_max_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"int gtk_entry_get_max_length (GtkEntry *entry);";function gtk_entry_get_max_length(entry) bind(c)
gtk;gtk_entry_get_overwrite_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"gboolean gtk_entry_get_overwrite_mode (GtkEntry *entry);";function gtk_entry_get_overwrite_mode(entry) bind(c)
gtk;gtk_entry_get_placeholder_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"const char * gtk_entry_get_placeholder_text (GtkEntry *entry);";function gtk_entry_get_placeholder_text(entry) bind(c)
gtk;gtk_entry_get_progress_fraction;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"double gtk_entry_get_progress_fraction (GtkEntry *entry);";function gtk_entry_get_progress_fraction(entry) bind(c)
gtk;gtk_entry_get_progress_pulse_step;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"double gtk_entry_get_progress_pulse_step (GtkEntry *entry);";function gtk_entry_get_progress_pulse_step(entry) bind(c)
gtk;gtk_entry_get_tabs;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"PangoTabArray *gtk_entry_get_tabs (GtkEntry *entry);";function gtk_entry_get_tabs(entry) bind(c)
gtk;gtk_entry_get_text_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"guint16 gtk_entry_get_text_length (GtkEntry *entry);";function gtk_entry_get_text_length(entry) bind(c)
gtk;gtk_entry_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"GType gtk_entry_get_type (void) G_GNUC_CONST;";function gtk_entry_get_type() bind(c)
gtk;gtk_entry_get_visibility;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"gboolean gtk_entry_get_visibility (GtkEntry *entry);";function gtk_entry_get_visibility(entry) bind(c)
gtk;gtk_entry_grab_focus_without_selecting;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"gboolean gtk_entry_grab_focus_without_selecting (GtkEntry *entry);";function gtk_entry_grab_focus_without_selecting(entry) bind(c)
gtk;gtk_entry_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"GtkWidget* gtk_entry_new (void);";function gtk_entry_new() bind(c)
gtk;gtk_entry_new_with_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"GtkWidget* gtk_entry_new_with_buffer (GtkEntryBuffer *buffer);";function gtk_entry_new_with_buffer(buffer) bind(c)
gtk;gtk_entry_progress_pulse;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_progress_pulse (GtkEntry *entry);";subroutine gtk_entry_progress_pulse(entry) bind(c)
gtk;gtk_entry_reset_im_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_reset_im_context (GtkEntry *entry);";subroutine gtk_entry_reset_im_context(entry) bind(c)
gtk;gtk_entry_set_activates_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_activates_default (GtkEntry *entry, gboolean setting);";subroutine gtk_entry_set_activates_default(entry, setting) bind(c)
gtk;gtk_entry_set_alignment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_alignment (GtkEntry *entry, float xalign);";subroutine gtk_entry_set_alignment(entry, xalign) bind(c)
gtk;gtk_entry_set_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_attributes (GtkEntry *entry, PangoAttrList *attrs);";subroutine gtk_entry_set_attributes(entry, attrs) bind(c)
gtk;gtk_entry_set_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_buffer (GtkEntry *entry, GtkEntryBuffer *buffer);";subroutine gtk_entry_set_buffer(entry, buffer) bind(c)
gtk;gtk_entry_set_completion;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_completion (GtkEntry *entry, GtkEntryCompletion *completion);";subroutine gtk_entry_set_completion(entry, completion) bind(c)
gtk;gtk_entry_set_extra_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_extra_menu (GtkEntry *entry, GMenuModel *model);";subroutine gtk_entry_set_extra_menu(entry, model) bind(c)
gtk;gtk_entry_set_has_frame;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_has_frame (GtkEntry *entry, gboolean setting);";subroutine gtk_entry_set_has_frame(entry, setting) bind(c)
gtk;gtk_entry_set_icon_activatable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_icon_activatable (GtkEntry *entry, GtkEntryIconPosition icon_pos, gboolean activatable);";subroutine gtk_entry_set_icon_activatable(entry, icon_pos, activatable) bind(c)
gtk;gtk_entry_set_icon_drag_source;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_icon_drag_source (GtkEntry *entry, GtkEntryIconPosition icon_pos, GdkContentProvider *provider, GdkDragAction actions);";subroutine gtk_entry_set_icon_drag_source(entry, icon_pos, provider, actions) bind(c)
gtk;gtk_entry_set_icon_from_gicon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_icon_from_gicon (GtkEntry *entry, GtkEntryIconPosition icon_pos, GIcon *icon);";subroutine gtk_entry_set_icon_from_gicon(entry, icon_pos, icon) bind(c)
gtk;gtk_entry_set_icon_from_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_icon_from_icon_name (GtkEntry *entry, GtkEntryIconPosition icon_pos, const char *icon_name);";subroutine gtk_entry_set_icon_from_icon_name(entry, icon_pos, icon_name) bind(c)
gtk;gtk_entry_set_icon_from_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_icon_from_paintable (GtkEntry *entry, GtkEntryIconPosition icon_pos, GdkPaintable *paintable);";subroutine gtk_entry_set_icon_from_paintable(entry, icon_pos, paintable) bind(c)
gtk;gtk_entry_set_icon_sensitive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_icon_sensitive (GtkEntry *entry, GtkEntryIconPosition icon_pos, gboolean sensitive);";subroutine gtk_entry_set_icon_sensitive(entry, icon_pos, sensitive) bind(c)
gtk;gtk_entry_set_icon_tooltip_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_icon_tooltip_markup (GtkEntry *entry, GtkEntryIconPosition icon_pos, const char *tooltip);";subroutine gtk_entry_set_icon_tooltip_markup(entry, icon_pos, tooltip) bind(c)
gtk;gtk_entry_set_icon_tooltip_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_icon_tooltip_text (GtkEntry *entry, GtkEntryIconPosition icon_pos, const char *tooltip);";subroutine gtk_entry_set_icon_tooltip_text(entry, icon_pos, tooltip) bind(c)
gtk;gtk_entry_set_input_hints;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_input_hints (GtkEntry *entry, GtkInputHints hints);";subroutine gtk_entry_set_input_hints(entry, hints) bind(c)
gtk;gtk_entry_set_input_purpose;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_input_purpose (GtkEntry *entry, GtkInputPurpose purpose);";subroutine gtk_entry_set_input_purpose(entry, purpose) bind(c)
gtk;gtk_entry_set_invisible_char;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_invisible_char (GtkEntry *entry, gunichar ch);";subroutine gtk_entry_set_invisible_char(entry, ch) bind(c)
gtk;gtk_entry_set_max_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_max_length (GtkEntry *entry, int max);";subroutine gtk_entry_set_max_length(entry, max) bind(c)
gtk;gtk_entry_set_overwrite_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_overwrite_mode (GtkEntry *entry, gboolean overwrite);";subroutine gtk_entry_set_overwrite_mode(entry, overwrite) bind(c)
gtk;gtk_entry_set_placeholder_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_placeholder_text (GtkEntry *entry, const char *text);";subroutine gtk_entry_set_placeholder_text(entry, text) bind(c)
gtk;gtk_entry_set_progress_fraction;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_progress_fraction (GtkEntry *entry, double fraction);";subroutine gtk_entry_set_progress_fraction(entry, fraction) bind(c)
gtk;gtk_entry_set_progress_pulse_step;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_progress_pulse_step (GtkEntry *entry, double fraction);";subroutine gtk_entry_set_progress_pulse_step(entry, fraction) bind(c)
gtk;gtk_entry_set_tabs;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_tabs (GtkEntry *entry, PangoTabArray *tabs);";subroutine gtk_entry_set_tabs(entry, tabs) bind(c)
gtk;gtk_entry_set_visibility;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_set_visibility (GtkEntry *entry, gboolean visible);";subroutine gtk_entry_set_visibility(entry, visible) bind(c)
gtk;gtk_entry_unset_invisible_char;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkentry.h;"void gtk_entry_unset_invisible_char (GtkEntry *entry);";subroutine gtk_entry_unset_invisible_char(entry) bind(c)
gtk;gtk_event_controller_focus_contains_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerfocus.h;"gboolean gtk_event_controller_focus_contains_focus (GtkEventControllerFocus *self);";function gtk_event_controller_focus_contains_focus(self) bind(c)
gtk;gtk_event_controller_focus_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerfocus.h;"GType gtk_event_controller_focus_get_type (void) G_GNUC_CONST;";function gtk_event_controller_focus_get_type() bind(c)
gtk;gtk_event_controller_focus_is_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerfocus.h;"gboolean gtk_event_controller_focus_is_focus (GtkEventControllerFocus *self);";function gtk_event_controller_focus_is_focus(self) bind(c)
gtk;gtk_event_controller_focus_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerfocus.h;"GtkEventController *gtk_event_controller_focus_new (void);";function gtk_event_controller_focus_new() bind(c)
gtk;gtk_event_controller_get_current_event;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"GdkEvent * gtk_event_controller_get_current_event (GtkEventController *controller);";function gtk_event_controller_get_current_event(controller) bind(c)
gtk;gtk_event_controller_get_current_event_device;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"GdkDevice * gtk_event_controller_get_current_event_device (GtkEventController *controller);";function gtk_event_controller_get_current_event_device(controller) bind(c)
gtk;gtk_event_controller_get_current_event_state;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"GdkModifierType gtk_event_controller_get_current_event_state (GtkEventController *controller);";function gtk_event_controller_get_current_event_state(controller) bind(c)
gtk;gtk_event_controller_get_current_event_time;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"guint32 gtk_event_controller_get_current_event_time (GtkEventController *controller);";function gtk_event_controller_get_current_event_time(controller) bind(c)
gtk;gtk_event_controller_get_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"const char * gtk_event_controller_get_name (GtkEventController *controller);";function gtk_event_controller_get_name(controller) bind(c)
gtk;gtk_event_controller_get_propagation_limit;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"GtkPropagationLimit gtk_event_controller_get_propagation_limit (GtkEventController *controller);";function gtk_event_controller_get_propagation_limit(controller) bind(c)
gtk;gtk_event_controller_get_propagation_phase;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"GtkPropagationPhase gtk_event_controller_get_propagation_phase (GtkEventController *controller);";function gtk_event_controller_get_propagation_phase(controller) bind(c)
gtk;gtk_event_controller_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"GType gtk_event_controller_get_type (void) G_GNUC_CONST;";function gtk_event_controller_get_type() bind(c)
gtk;gtk_event_controller_get_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"GtkWidget * gtk_event_controller_get_widget (GtkEventController *controller);";function gtk_event_controller_get_widget(controller) bind(c)
gtk;gtk_event_controller_key_forward;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerkey.h;"gboolean gtk_event_controller_key_forward (GtkEventControllerKey *controller, GtkWidget *widget);";function gtk_event_controller_key_forward(controller, widget) bind(c)
gtk;gtk_event_controller_key_get_group;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerkey.h;"guint gtk_event_controller_key_get_group (GtkEventControllerKey *controller);";function gtk_event_controller_key_get_group(controller) bind(c)
gtk;gtk_event_controller_key_get_im_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerkey.h;"GtkIMContext * gtk_event_controller_key_get_im_context (GtkEventControllerKey *controller);";function gtk_event_controller_key_get_im_context(controller) bind(c)
gtk;gtk_event_controller_key_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerkey.h;"GType gtk_event_controller_key_get_type (void) G_GNUC_CONST;";function gtk_event_controller_key_get_type() bind(c)
gtk;gtk_event_controller_key_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerkey.h;"GtkEventController *gtk_event_controller_key_new (void);";function gtk_event_controller_key_new() bind(c)
gtk;gtk_event_controller_key_set_im_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerkey.h;"void gtk_event_controller_key_set_im_context (GtkEventControllerKey *controller, GtkIMContext *im_context);";subroutine gtk_event_controller_key_set_im_context(controller, im_context) bind(c)
gtk;gtk_event_controller_legacy_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerlegacy.h;"GType gtk_event_controller_legacy_get_type (void) G_GNUC_CONST;";function gtk_event_controller_legacy_get_type() bind(c)
gtk;gtk_event_controller_legacy_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerlegacy.h;"GtkEventController *gtk_event_controller_legacy_new (void);";function gtk_event_controller_legacy_new() bind(c)
gtk;gtk_event_controller_motion_contains_pointer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollermotion.h;"gboolean gtk_event_controller_motion_contains_pointer (GtkEventControllerMotion *self);";function gtk_event_controller_motion_contains_pointer(self) bind(c)
gtk;gtk_event_controller_motion_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollermotion.h;"GType gtk_event_controller_motion_get_type (void) G_GNUC_CONST;";function gtk_event_controller_motion_get_type() bind(c)
gtk;gtk_event_controller_motion_is_pointer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollermotion.h;"gboolean gtk_event_controller_motion_is_pointer (GtkEventControllerMotion *self);";function gtk_event_controller_motion_is_pointer(self) bind(c)
gtk;gtk_event_controller_motion_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollermotion.h;"GtkEventController *gtk_event_controller_motion_new (void);";function gtk_event_controller_motion_new() bind(c)
gtk;gtk_event_controller_reset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"void gtk_event_controller_reset (GtkEventController *controller);";subroutine gtk_event_controller_reset(controller) bind(c)
gtk;gtk_event_controller_scroll_get_flags;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerscroll.h;"GtkEventControllerScrollFlags gtk_event_controller_scroll_get_flags (GtkEventControllerScroll *scroll);";function gtk_event_controller_scroll_get_flags(scroll) bind(c)
gtk;gtk_event_controller_scroll_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerscroll.h;"GType gtk_event_controller_scroll_get_type (void) G_GNUC_CONST;";function gtk_event_controller_scroll_get_type() bind(c)
gtk;gtk_event_controller_scroll_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerscroll.h;"GtkEventController *gtk_event_controller_scroll_new (GtkEventControllerScrollFlags flags);";function gtk_event_controller_scroll_new(flags) bind(c)
gtk;gtk_event_controller_scroll_set_flags;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontrollerscroll.h;"void gtk_event_controller_scroll_set_flags (GtkEventControllerScroll *scroll, GtkEventControllerScrollFlags flags);";subroutine gtk_event_controller_scroll_set_flags(scroll, flags) bind(c)
gtk;gtk_event_controller_set_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"void gtk_event_controller_set_name (GtkEventController *controller, const char *name);";subroutine gtk_event_controller_set_name(controller, name) bind(c)
gtk;gtk_event_controller_set_propagation_limit;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"void gtk_event_controller_set_propagation_limit (GtkEventController *controller, GtkPropagationLimit limit);";subroutine gtk_event_controller_set_propagation_limit(controller, limit) bind(c)
gtk;gtk_event_controller_set_propagation_phase;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkeventcontroller.h;"void gtk_event_controller_set_propagation_phase (GtkEventController *controller, GtkPropagationPhase phase);";subroutine gtk_event_controller_set_propagation_phase(controller, phase) bind(c)
gtk;gtk_expander_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"GtkWidget * gtk_expander_get_child (GtkExpander *expander);";function gtk_expander_get_child(expander) bind(c)
gtk;gtk_expander_get_expanded;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"gboolean gtk_expander_get_expanded (GtkExpander *expander);";function gtk_expander_get_expanded(expander) bind(c)
gtk;gtk_expander_get_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"const char * gtk_expander_get_label (GtkExpander *expander);";function gtk_expander_get_label(expander) bind(c)
gtk;gtk_expander_get_label_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"GtkWidget *gtk_expander_get_label_widget (GtkExpander *expander);";function gtk_expander_get_label_widget(expander) bind(c)
gtk;gtk_expander_get_resize_toplevel;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"gboolean gtk_expander_get_resize_toplevel (GtkExpander *expander);";function gtk_expander_get_resize_toplevel(expander) bind(c)
gtk;gtk_expander_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"GType gtk_expander_get_type (void) G_GNUC_CONST;";function gtk_expander_get_type() bind(c)
gtk;gtk_expander_get_use_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"gboolean gtk_expander_get_use_markup (GtkExpander *expander);";function gtk_expander_get_use_markup(expander) bind(c)
gtk;gtk_expander_get_use_underline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"gboolean gtk_expander_get_use_underline (GtkExpander *expander);";function gtk_expander_get_use_underline(expander) bind(c)
gtk;gtk_expander_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"GtkWidget *gtk_expander_new (const char *label);";function gtk_expander_new(label) bind(c)
gtk;gtk_expander_new_with_mnemonic;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"GtkWidget *gtk_expander_new_with_mnemonic (const char *label);";function gtk_expander_new_with_mnemonic(label) bind(c)
gtk;gtk_expander_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"void gtk_expander_set_child (GtkExpander *expander, GtkWidget *child);";subroutine gtk_expander_set_child(expander, child) bind(c)
gtk;gtk_expander_set_expanded;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"void gtk_expander_set_expanded (GtkExpander *expander, gboolean expanded);";subroutine gtk_expander_set_expanded(expander, expanded) bind(c)
gtk;gtk_expander_set_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"void gtk_expander_set_label (GtkExpander *expander, const char *label);";subroutine gtk_expander_set_label(expander, label) bind(c)
gtk;gtk_expander_set_label_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"void gtk_expander_set_label_widget (GtkExpander *expander, GtkWidget *label_widget);";subroutine gtk_expander_set_label_widget(expander, label_widget) bind(c)
gtk;gtk_expander_set_resize_toplevel;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"void gtk_expander_set_resize_toplevel (GtkExpander *expander, gboolean resize_toplevel);";subroutine gtk_expander_set_resize_toplevel(expander, resize_toplevel) bind(c)
gtk;gtk_expander_set_use_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"void gtk_expander_set_use_markup (GtkExpander *expander, gboolean use_markup);";subroutine gtk_expander_set_use_markup(expander, use_markup) bind(c)
gtk;gtk_expander_set_use_underline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpander.h;"void gtk_expander_set_use_underline (GtkExpander *expander, gboolean use_underline);";subroutine gtk_expander_set_use_underline(expander, use_underline) bind(c)
gtk;gtk_expression_bind;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpressionWatch * gtk_expression_bind (GtkExpression *self, gpointer target, const char * property, gpointer this_);";function gtk_expression_bind(self, target, property, this_) bind(c)
gtk;gtk_expression_evaluate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"gboolean gtk_expression_evaluate (GtkExpression *self, gpointer this_, GValue *value);";function gtk_expression_evaluate(self, this_, value) bind(c)
gtk;gtk_expression_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GType gtk_expression_get_type (void) G_GNUC_CONST;";function gtk_expression_get_type() bind(c)
gtk;gtk_expression_get_value_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GType gtk_expression_get_value_type (GtkExpression *self);";function gtk_expression_get_value_type(self) bind(c)
gtk;gtk_expression_is_static;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"gboolean gtk_expression_is_static (GtkExpression *self);";function gtk_expression_is_static(self) bind(c)
gtk;gtk_expression_ref;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpression * gtk_expression_ref (GtkExpression *self);";function gtk_expression_ref(self) bind(c)
gtk;gtk_expression_unref;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"void gtk_expression_unref (GtkExpression *self);";subroutine gtk_expression_unref(self) bind(c)
gtk;gtk_expression_watch;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpressionWatch * gtk_expression_watch (GtkExpression *self, gpointer this_, GtkExpressionNotify notify, gpointer user_data, GDestroyNotify user_destroy);";function gtk_expression_watch(self, this_, notify, user_data, user_destroy) bind(c)
gtk;gtk_expression_watch_evaluate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"gboolean gtk_expression_watch_evaluate (GtkExpressionWatch *watch, GValue *value);";function gtk_expression_watch_evaluate(watch, value) bind(c)
gtk;gtk_expression_watch_ref;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpressionWatch * gtk_expression_watch_ref (GtkExpressionWatch *watch);";function gtk_expression_watch_ref(watch) bind(c)
gtk;gtk_expression_watch_unref;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"void gtk_expression_watch_unref (GtkExpressionWatch *watch);";subroutine gtk_expression_watch_unref(watch) bind(c)
gtk;gtk_expression_watch_unwatch;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"void gtk_expression_watch_unwatch (GtkExpressionWatch *watch);";subroutine gtk_expression_watch_unwatch(watch) bind(c)
gtk;gtk_file_chooser_add_choice;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"void gtk_file_chooser_add_choice (GtkFileChooser *chooser, const char *id, const char *label, const char **options, const char **option_labels);";subroutine gtk_file_chooser_add_choice(chooser, id, label, options, option_labels) bind(c)
gtk;gtk_file_chooser_add_filter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"void gtk_file_chooser_add_filter (GtkFileChooser *chooser, GtkFileFilter *filter);";subroutine gtk_file_chooser_add_filter(chooser, filter) bind(c)
gtk;gtk_file_chooser_add_shortcut_folder;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"gboolean gtk_file_chooser_add_shortcut_folder (GtkFileChooser *chooser, GFile *folder, GError **error);";function gtk_file_chooser_add_shortcut_folder(chooser, folder, error) bind(c)
gtk;gtk_file_chooser_dialog_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooserdialog.h;"GType gtk_file_chooser_dialog_get_type (void) G_GNUC_CONST;";function gtk_file_chooser_dialog_get_type() bind(c)
gtk;gtk_file_chooser_error_quark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"GQuark gtk_file_chooser_error_quark (void);";function gtk_file_chooser_error_quark() bind(c)
gtk;gtk_file_chooser_get_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"GtkFileChooserAction gtk_file_chooser_get_action (GtkFileChooser *chooser);";function gtk_file_chooser_get_action(chooser) bind(c)
gtk;gtk_file_chooser_get_choice;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"const char * gtk_file_chooser_get_choice (GtkFileChooser *chooser, const char *id);";function gtk_file_chooser_get_choice(chooser, id) bind(c)
gtk;gtk_file_chooser_get_create_folders;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"gboolean gtk_file_chooser_get_create_folders (GtkFileChooser *chooser);";function gtk_file_chooser_get_create_folders(chooser) bind(c)
gtk;gtk_file_chooser_get_current_folder;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"GFile * gtk_file_chooser_get_current_folder (GtkFileChooser *chooser);";function gtk_file_chooser_get_current_folder(chooser) bind(c)
gtk;gtk_file_chooser_get_current_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"char * gtk_file_chooser_get_current_name (GtkFileChooser *chooser);";function gtk_file_chooser_get_current_name(chooser) bind(c)
gtk;gtk_file_chooser_get_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"GFile * gtk_file_chooser_get_file (GtkFileChooser *chooser);";function gtk_file_chooser_get_file(chooser) bind(c)
gtk;gtk_file_chooser_get_files;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"GListModel * gtk_file_chooser_get_files (GtkFileChooser *chooser);";function gtk_file_chooser_get_files(chooser) bind(c)
gtk;gtk_file_chooser_get_filter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"GtkFileFilter * gtk_file_chooser_get_filter (GtkFileChooser *chooser);";function gtk_file_chooser_get_filter(chooser) bind(c)
gtk;gtk_file_chooser_get_filters;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"GListModel * gtk_file_chooser_get_filters (GtkFileChooser *chooser);";function gtk_file_chooser_get_filters(chooser) bind(c)
gtk;gtk_file_chooser_get_select_multiple;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"gboolean gtk_file_chooser_get_select_multiple (GtkFileChooser *chooser);";function gtk_file_chooser_get_select_multiple(chooser) bind(c)
gtk;gtk_file_chooser_get_shortcut_folders;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"GListModel * gtk_file_chooser_get_shortcut_folders (GtkFileChooser *chooser);";function gtk_file_chooser_get_shortcut_folders(chooser) bind(c)
gtk;gtk_file_chooser_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"GType gtk_file_chooser_get_type (void) G_GNUC_CONST;";function gtk_file_chooser_get_type() bind(c)
gtk;gtk_file_chooser_native_get_accept_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechoosernative.h;"const char *gtk_file_chooser_native_get_accept_label (GtkFileChooserNative *self);";function gtk_file_chooser_native_get_accept_label(self) bind(c)
gtk;gtk_file_chooser_native_get_cancel_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechoosernative.h;"const char *gtk_file_chooser_native_get_cancel_label (GtkFileChooserNative *self);";function gtk_file_chooser_native_get_cancel_label(self) bind(c)
gtk;gtk_file_chooser_native_set_accept_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechoosernative.h;"void gtk_file_chooser_native_set_accept_label (GtkFileChooserNative *self, const char *accept_label);";subroutine gtk_file_chooser_native_set_accept_label(self, accept_label) bind(c)
gtk;gtk_file_chooser_native_set_cancel_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechoosernative.h;"void gtk_file_chooser_native_set_cancel_label (GtkFileChooserNative *self, const char *cancel_label);";subroutine gtk_file_chooser_native_set_cancel_label(self, cancel_label) bind(c)
gtk;gtk_file_chooser_remove_choice;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"void gtk_file_chooser_remove_choice (GtkFileChooser *chooser, const char *id);";subroutine gtk_file_chooser_remove_choice(chooser, id) bind(c)
gtk;gtk_file_chooser_remove_filter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"void gtk_file_chooser_remove_filter (GtkFileChooser *chooser, GtkFileFilter *filter);";subroutine gtk_file_chooser_remove_filter(chooser, filter) bind(c)
gtk;gtk_file_chooser_remove_shortcut_folder;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"gboolean gtk_file_chooser_remove_shortcut_folder (GtkFileChooser *chooser, GFile *folder, GError **error);";function gtk_file_chooser_remove_shortcut_folder(chooser, folder, error) bind(c)
gtk;gtk_file_chooser_set_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"void gtk_file_chooser_set_action (GtkFileChooser *chooser, GtkFileChooserAction action);";subroutine gtk_file_chooser_set_action(chooser, action) bind(c)
gtk;gtk_file_chooser_set_choice;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"void gtk_file_chooser_set_choice (GtkFileChooser *chooser, const char *id, const char *option);";subroutine gtk_file_chooser_set_choice(chooser, id, option) bind(c)
gtk;gtk_file_chooser_set_create_folders;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"void gtk_file_chooser_set_create_folders (GtkFileChooser *chooser, gboolean create_folders);";subroutine gtk_file_chooser_set_create_folders(chooser, create_folders) bind(c)
gtk;gtk_file_chooser_set_current_folder;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"gboolean gtk_file_chooser_set_current_folder (GtkFileChooser *chooser, GFile *file, GError **error);";function gtk_file_chooser_set_current_folder(chooser, file, error) bind(c)
gtk;gtk_file_chooser_set_current_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"void gtk_file_chooser_set_current_name (GtkFileChooser *chooser, const char *name);";subroutine gtk_file_chooser_set_current_name(chooser, name) bind(c)
gtk;gtk_file_chooser_set_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"gboolean gtk_file_chooser_set_file (GtkFileChooser *chooser, GFile *file, GError **error);";function gtk_file_chooser_set_file(chooser, file, error) bind(c)
gtk;gtk_file_chooser_set_filter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"void gtk_file_chooser_set_filter (GtkFileChooser *chooser, GtkFileFilter *filter);";subroutine gtk_file_chooser_set_filter(chooser, filter) bind(c)
gtk;gtk_file_chooser_set_select_multiple;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooser.h;"void gtk_file_chooser_set_select_multiple (GtkFileChooser *chooser, gboolean select_multiple);";subroutine gtk_file_chooser_set_select_multiple(chooser, select_multiple) bind(c)
gtk;gtk_file_chooser_widget_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooserwidget.h;"GType gtk_file_chooser_widget_get_type (void) G_GNUC_CONST;";function gtk_file_chooser_widget_get_type() bind(c)
gtk;gtk_file_chooser_widget_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilechooserwidget.h;"GtkWidget *gtk_file_chooser_widget_new (GtkFileChooserAction action);";function gtk_file_chooser_widget_new(action) bind(c)
gtk;gtk_file_filter_add_mime_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilefilter.h;"void gtk_file_filter_add_mime_type (GtkFileFilter *filter, const char *mime_type);";subroutine gtk_file_filter_add_mime_type(filter, mime_type) bind(c)
gtk;gtk_file_filter_add_pattern;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilefilter.h;"void gtk_file_filter_add_pattern (GtkFileFilter *filter, const char *pattern);";subroutine gtk_file_filter_add_pattern(filter, pattern) bind(c)
gtk;gtk_file_filter_add_pixbuf_formats;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilefilter.h;"void gtk_file_filter_add_pixbuf_formats (GtkFileFilter *filter);";subroutine gtk_file_filter_add_pixbuf_formats(filter) bind(c)
gtk;gtk_file_filter_get_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilefilter.h;"const char ** gtk_file_filter_get_attributes (GtkFileFilter *filter);";function gtk_file_filter_get_attributes(filter) bind(c)
gtk;gtk_file_filter_get_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilefilter.h;"const char * gtk_file_filter_get_name (GtkFileFilter *filter);";function gtk_file_filter_get_name(filter) bind(c)
gtk;gtk_file_filter_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilefilter.h;"GType gtk_file_filter_get_type (void) G_GNUC_CONST;";function gtk_file_filter_get_type() bind(c)
gtk;gtk_file_filter_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilefilter.h;"GtkFileFilter * gtk_file_filter_new (void);";function gtk_file_filter_new() bind(c)
gtk;gtk_file_filter_new_from_gvariant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilefilter.h;"GtkFileFilter * gtk_file_filter_new_from_gvariant (GVariant *variant);";function gtk_file_filter_new_from_gvariant(variant) bind(c)
gtk;gtk_file_filter_set_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilefilter.h;"void gtk_file_filter_set_name (GtkFileFilter *filter, const char *name);";subroutine gtk_file_filter_set_name(filter, name) bind(c)
gtk;gtk_file_filter_to_gvariant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilefilter.h;"GVariant * gtk_file_filter_to_gvariant (GtkFileFilter *filter);";function gtk_file_filter_to_gvariant(filter) bind(c)
gtk;gtk_filter_changed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilter.h;"void gtk_filter_changed (GtkFilter *self, GtkFilterChange change);";subroutine gtk_filter_changed(self, change) bind(c)
gtk;gtk_filter_get_strictness;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilter.h;"GtkFilterMatch gtk_filter_get_strictness (GtkFilter *self);";function gtk_filter_get_strictness(self) bind(c)
gtk;gtk_filter_list_model_get_filter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilterlistmodel.h;"GtkFilter * gtk_filter_list_model_get_filter (GtkFilterListModel *self);";function gtk_filter_list_model_get_filter(self) bind(c)
gtk;gtk_filter_list_model_get_incremental;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilterlistmodel.h;"gboolean gtk_filter_list_model_get_incremental (GtkFilterListModel *self);";function gtk_filter_list_model_get_incremental(self) bind(c)
gtk;gtk_filter_list_model_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilterlistmodel.h;"GListModel * gtk_filter_list_model_get_model (GtkFilterListModel *self);";function gtk_filter_list_model_get_model(self) bind(c)
gtk;gtk_filter_list_model_get_pending;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilterlistmodel.h;"guint gtk_filter_list_model_get_pending (GtkFilterListModel *self);";function gtk_filter_list_model_get_pending(self) bind(c)
gtk;gtk_filter_list_model_set_filter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilterlistmodel.h;"void gtk_filter_list_model_set_filter (GtkFilterListModel *self, GtkFilter *filter);";subroutine gtk_filter_list_model_set_filter(self, filter) bind(c)
gtk;gtk_filter_list_model_set_incremental;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilterlistmodel.h;"void gtk_filter_list_model_set_incremental (GtkFilterListModel *self, gboolean incremental);";subroutine gtk_filter_list_model_set_incremental(self, incremental) bind(c)
gtk;gtk_filter_list_model_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfilterlistmodel.h;"void gtk_filter_list_model_set_model (GtkFilterListModel *self, GListModel *model);";subroutine gtk_filter_list_model_set_model(self, model) bind(c)
gtk;gtk_fixed_get_child_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfixed.h;"void gtk_fixed_get_child_position (GtkFixed *fixed, GtkWidget *widget, double *x, double *y);";subroutine gtk_fixed_get_child_position(fixed, widget, x, y) bind(c)
gtk;gtk_fixed_get_child_transform;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfixed.h;"GskTransform * gtk_fixed_get_child_transform (GtkFixed *fixed, GtkWidget *widget);";function gtk_fixed_get_child_transform(fixed, widget) bind(c)
gtk;gtk_fixed_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfixed.h;"GType gtk_fixed_get_type (void) G_GNUC_CONST;";function gtk_fixed_get_type() bind(c)
gtk;gtk_fixed_layout_child_get_transform;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfixedlayout.h;"GskTransform * gtk_fixed_layout_child_get_transform (GtkFixedLayoutChild *child);";function gtk_fixed_layout_child_get_transform(child) bind(c)
gtk;gtk_fixed_move;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfixed.h;"void gtk_fixed_move (GtkFixed *fixed, GtkWidget *widget, double x, double y);";subroutine gtk_fixed_move(fixed, widget, x, y) bind(c)
gtk;gtk_fixed_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfixed.h;"GtkWidget * gtk_fixed_new (void);";function gtk_fixed_new() bind(c)
gtk;gtk_fixed_put;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfixed.h;"void gtk_fixed_put (GtkFixed *fixed, GtkWidget *widget, double x, double y);";subroutine gtk_fixed_put(fixed, widget, x, y) bind(c)
gtk;gtk_fixed_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfixed.h;"void gtk_fixed_remove (GtkFixed *fixed, GtkWidget *widget);";subroutine gtk_fixed_remove(fixed, widget) bind(c)
gtk;gtk_fixed_set_child_transform;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfixed.h;"void gtk_fixed_set_child_transform (GtkFixed *fixed, GtkWidget *widget, GskTransform *transform);";subroutine gtk_fixed_set_child_transform(fixed, widget, transform) bind(c)
gtk;gtk_flatten_list_model_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflattenlistmodel.h;"GListModel * gtk_flatten_list_model_get_model (GtkFlattenListModel *self);";function gtk_flatten_list_model_get_model(self) bind(c)
gtk;gtk_flatten_list_model_get_model_for_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflattenlistmodel.h;"GListModel * gtk_flatten_list_model_get_model_for_item (GtkFlattenListModel *self, guint position);";function gtk_flatten_list_model_get_model_for_item(self, position) bind(c)
gtk;gtk_flatten_list_model_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflattenlistmodel.h;"void gtk_flatten_list_model_set_model (GtkFlattenListModel *self, GListModel *model);";subroutine gtk_flatten_list_model_set_model(self, model) bind(c)
gtk;gtk_flow_box_bind_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_bind_model (GtkFlowBox *box, GListModel *model, GtkFlowBoxCreateWidgetFunc create_widget_func, gpointer user_data, GDestroyNotify user_data_free_func);";subroutine gtk_flow_box_bind_model(box, model, create_widget_func, user_data, user_data_free_func) bind(c)
gtk;gtk_flow_box_child_changed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_child_changed (GtkFlowBoxChild *child);";subroutine gtk_flow_box_child_changed(child) bind(c)
gtk;gtk_flow_box_child_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"GtkWidget * gtk_flow_box_child_get_child (GtkFlowBoxChild *self);";function gtk_flow_box_child_get_child(self) bind(c)
gtk;gtk_flow_box_child_get_index;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"int gtk_flow_box_child_get_index (GtkFlowBoxChild *child);";function gtk_flow_box_child_get_index(child) bind(c)
gtk;gtk_flow_box_child_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"GType gtk_flow_box_child_get_type (void) G_GNUC_CONST;";function gtk_flow_box_child_get_type() bind(c)
gtk;gtk_flow_box_child_is_selected;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"gboolean gtk_flow_box_child_is_selected (GtkFlowBoxChild *child);";function gtk_flow_box_child_is_selected(child) bind(c)
gtk;gtk_flow_box_child_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"GtkWidget* gtk_flow_box_child_new (void);";function gtk_flow_box_child_new() bind(c)
gtk;gtk_flow_box_child_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_child_set_child (GtkFlowBoxChild *self, GtkWidget *child);";subroutine gtk_flow_box_child_set_child(self, child) bind(c)
gtk;gtk_flow_box_get_activate_on_single_click;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"gboolean gtk_flow_box_get_activate_on_single_click (GtkFlowBox *box);";function gtk_flow_box_get_activate_on_single_click(box) bind(c)
gtk;gtk_flow_box_get_child_at_index;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"GtkFlowBoxChild *gtk_flow_box_get_child_at_index (GtkFlowBox *box, int idx);";function gtk_flow_box_get_child_at_index(box, idx) bind(c)
gtk;gtk_flow_box_get_child_at_pos;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"GtkFlowBoxChild *gtk_flow_box_get_child_at_pos (GtkFlowBox *box, int x, int y);";function gtk_flow_box_get_child_at_pos(box, x, y) bind(c)
gtk;gtk_flow_box_get_column_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"guint gtk_flow_box_get_column_spacing (GtkFlowBox *box);";function gtk_flow_box_get_column_spacing(box) bind(c)
gtk;gtk_flow_box_get_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"gboolean gtk_flow_box_get_homogeneous (GtkFlowBox *box);";function gtk_flow_box_get_homogeneous(box) bind(c)
gtk;gtk_flow_box_get_max_children_per_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"guint gtk_flow_box_get_max_children_per_line (GtkFlowBox *box);";function gtk_flow_box_get_max_children_per_line(box) bind(c)
gtk;gtk_flow_box_get_min_children_per_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"guint gtk_flow_box_get_min_children_per_line (GtkFlowBox *box);";function gtk_flow_box_get_min_children_per_line(box) bind(c)
gtk;gtk_flow_box_get_row_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"guint gtk_flow_box_get_row_spacing (GtkFlowBox *box);";function gtk_flow_box_get_row_spacing(box) bind(c)
gtk;gtk_flow_box_get_selected_children;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"GList *gtk_flow_box_get_selected_children (GtkFlowBox *box);";function gtk_flow_box_get_selected_children(box) bind(c)
gtk;gtk_flow_box_get_selection_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"GtkSelectionMode gtk_flow_box_get_selection_mode (GtkFlowBox *box);";function gtk_flow_box_get_selection_mode(box) bind(c)
gtk;gtk_flow_box_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"GType gtk_flow_box_get_type (void) G_GNUC_CONST;";function gtk_flow_box_get_type() bind(c)
gtk;gtk_flow_box_insert;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_insert (GtkFlowBox *box, GtkWidget *widget, int position);";subroutine gtk_flow_box_insert(box, widget, position) bind(c)
gtk;gtk_flow_box_invalidate_filter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_invalidate_filter (GtkFlowBox *box);";subroutine gtk_flow_box_invalidate_filter(box) bind(c)
gtk;gtk_flow_box_invalidate_sort;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_invalidate_sort (GtkFlowBox *box);";subroutine gtk_flow_box_invalidate_sort(box) bind(c)
gtk;gtk_flow_box_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"GtkWidget *gtk_flow_box_new (void);";function gtk_flow_box_new() bind(c)
gtk;gtk_flow_box_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_remove (GtkFlowBox *box, GtkWidget *widget);";subroutine gtk_flow_box_remove(box, widget) bind(c)
gtk;gtk_flow_box_select_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_select_all (GtkFlowBox *box);";subroutine gtk_flow_box_select_all(box) bind(c)
gtk;gtk_flow_box_select_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_select_child (GtkFlowBox *box, GtkFlowBoxChild *child);";subroutine gtk_flow_box_select_child(box, child) bind(c)
gtk;gtk_flow_box_selected_foreach;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_selected_foreach (GtkFlowBox *box, GtkFlowBoxForeachFunc func, gpointer data);";subroutine gtk_flow_box_selected_foreach(box, func, data) bind(c)
gtk;gtk_flow_box_set_activate_on_single_click;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_set_activate_on_single_click (GtkFlowBox *box, gboolean single);";subroutine gtk_flow_box_set_activate_on_single_click(box, single) bind(c)
gtk;gtk_flow_box_set_column_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_set_column_spacing (GtkFlowBox *box, guint spacing);";subroutine gtk_flow_box_set_column_spacing(box, spacing) bind(c)
gtk;gtk_flow_box_set_filter_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_set_filter_func (GtkFlowBox *box, GtkFlowBoxFilterFunc filter_func, gpointer user_data, GDestroyNotify destroy);";subroutine gtk_flow_box_set_filter_func(box, filter_func, user_data, destroy) bind(c)
gtk;gtk_flow_box_set_hadjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_set_hadjustment (GtkFlowBox *box, GtkAdjustment *adjustment);";subroutine gtk_flow_box_set_hadjustment(box, adjustment) bind(c)
gtk;gtk_flow_box_set_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_set_homogeneous (GtkFlowBox *box, gboolean homogeneous);";subroutine gtk_flow_box_set_homogeneous(box, homogeneous) bind(c)
gtk;gtk_flow_box_set_max_children_per_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_set_max_children_per_line (GtkFlowBox *box, guint n_children);";subroutine gtk_flow_box_set_max_children_per_line(box, n_children) bind(c)
gtk;gtk_flow_box_set_min_children_per_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_set_min_children_per_line (GtkFlowBox *box, guint n_children);";subroutine gtk_flow_box_set_min_children_per_line(box, n_children) bind(c)
gtk;gtk_flow_box_set_row_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_set_row_spacing (GtkFlowBox *box, guint spacing);";subroutine gtk_flow_box_set_row_spacing(box, spacing) bind(c)
gtk;gtk_flow_box_set_selection_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_set_selection_mode (GtkFlowBox *box, GtkSelectionMode mode);";subroutine gtk_flow_box_set_selection_mode(box, mode) bind(c)
gtk;gtk_flow_box_set_sort_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_set_sort_func (GtkFlowBox *box, GtkFlowBoxSortFunc sort_func, gpointer user_data, GDestroyNotify destroy);";subroutine gtk_flow_box_set_sort_func(box, sort_func, user_data, destroy) bind(c)
gtk;gtk_flow_box_set_vadjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_set_vadjustment (GtkFlowBox *box, GtkAdjustment *adjustment);";subroutine gtk_flow_box_set_vadjustment(box, adjustment) bind(c)
gtk;gtk_flow_box_unselect_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_unselect_all (GtkFlowBox *box);";subroutine gtk_flow_box_unselect_all(box) bind(c)
gtk;gtk_flow_box_unselect_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkflowbox.h;"void gtk_flow_box_unselect_child (GtkFlowBox *box, GtkFlowBoxChild *child);";subroutine gtk_flow_box_unselect_child(box, child) bind(c)
gtk;gtk_font_button_get_modal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontbutton.h;"gboolean gtk_font_button_get_modal (GtkFontButton *font_button);";function gtk_font_button_get_modal(font_button) bind(c)
gtk;gtk_font_button_get_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontbutton.h;"const char * gtk_font_button_get_title (GtkFontButton *font_button);";function gtk_font_button_get_title(font_button) bind(c)
gtk;gtk_font_button_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontbutton.h;"GType gtk_font_button_get_type (void) G_GNUC_CONST;";function gtk_font_button_get_type() bind(c)
gtk;gtk_font_button_get_use_font;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontbutton.h;"gboolean gtk_font_button_get_use_font (GtkFontButton *font_button);";function gtk_font_button_get_use_font(font_button) bind(c)
gtk;gtk_font_button_get_use_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontbutton.h;"gboolean gtk_font_button_get_use_size (GtkFontButton *font_button);";function gtk_font_button_get_use_size(font_button) bind(c)
gtk;gtk_font_button_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontbutton.h;"GtkWidget *gtk_font_button_new (void);";function gtk_font_button_new() bind(c)
gtk;gtk_font_button_new_with_font;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontbutton.h;"GtkWidget *gtk_font_button_new_with_font (const char *fontname);";function gtk_font_button_new_with_font(fontname) bind(c)
gtk;gtk_font_button_set_modal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontbutton.h;"void gtk_font_button_set_modal (GtkFontButton *font_button, gboolean modal);";subroutine gtk_font_button_set_modal(font_button, modal) bind(c)
gtk;gtk_font_button_set_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontbutton.h;"void gtk_font_button_set_title (GtkFontButton *font_button, const char *title);";subroutine gtk_font_button_set_title(font_button, title) bind(c)
gtk;gtk_font_button_set_use_font;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontbutton.h;"void gtk_font_button_set_use_font (GtkFontButton *font_button, gboolean use_font);";subroutine gtk_font_button_set_use_font(font_button, use_font) bind(c)
gtk;gtk_font_button_set_use_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontbutton.h;"void gtk_font_button_set_use_size (GtkFontButton *font_button, gboolean use_size);";subroutine gtk_font_button_set_use_size(font_button, use_size) bind(c)
gtk;gtk_font_chooser_dialog_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooserdialog.h;"GType gtk_font_chooser_dialog_get_type (void) G_GNUC_CONST;";function gtk_font_chooser_dialog_get_type() bind(c)
gtk;gtk_font_chooser_dialog_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooserdialog.h;"GtkWidget* gtk_font_chooser_dialog_new (const char *title, GtkWindow *parent);";function gtk_font_chooser_dialog_new(title, parent) bind(c)
gtk;gtk_font_chooser_get_font;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"char * gtk_font_chooser_get_font (GtkFontChooser *fontchooser);";function gtk_font_chooser_get_font(fontchooser) bind(c)
gtk;gtk_font_chooser_get_font_desc;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"PangoFontDescription * gtk_font_chooser_get_font_desc (GtkFontChooser *fontchooser);";function gtk_font_chooser_get_font_desc(fontchooser) bind(c)
gtk;gtk_font_chooser_get_font_face;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"PangoFontFace *gtk_font_chooser_get_font_face (GtkFontChooser *fontchooser);";function gtk_font_chooser_get_font_face(fontchooser) bind(c)
gtk;gtk_font_chooser_get_font_family;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"PangoFontFamily *gtk_font_chooser_get_font_family (GtkFontChooser *fontchooser);";function gtk_font_chooser_get_font_family(fontchooser) bind(c)
gtk;gtk_font_chooser_get_font_features;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"char * gtk_font_chooser_get_font_features (GtkFontChooser *fontchooser);";function gtk_font_chooser_get_font_features(fontchooser) bind(c)
gtk;gtk_font_chooser_get_font_map;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"PangoFontMap * gtk_font_chooser_get_font_map (GtkFontChooser *fontchooser);";function gtk_font_chooser_get_font_map(fontchooser) bind(c)
gtk;gtk_font_chooser_get_font_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"int gtk_font_chooser_get_font_size (GtkFontChooser *fontchooser);";function gtk_font_chooser_get_font_size(fontchooser) bind(c)
gtk;gtk_font_chooser_get_language;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"char * gtk_font_chooser_get_language (GtkFontChooser *fontchooser);";function gtk_font_chooser_get_language(fontchooser) bind(c)
gtk;gtk_font_chooser_get_level;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"GtkFontChooserLevel gtk_font_chooser_get_level (GtkFontChooser *fontchooser);";function gtk_font_chooser_get_level(fontchooser) bind(c)
gtk;gtk_font_chooser_get_preview_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"char * gtk_font_chooser_get_preview_text (GtkFontChooser *fontchooser);";function gtk_font_chooser_get_preview_text(fontchooser) bind(c)
gtk;gtk_font_chooser_get_show_preview_entry;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"gboolean gtk_font_chooser_get_show_preview_entry (GtkFontChooser *fontchooser);";function gtk_font_chooser_get_show_preview_entry(fontchooser) bind(c)
gtk;gtk_font_chooser_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"GType gtk_font_chooser_get_type (void) G_GNUC_CONST;";function gtk_font_chooser_get_type() bind(c)
gtk;gtk_font_chooser_set_filter_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"void gtk_font_chooser_set_filter_func (GtkFontChooser *fontchooser, GtkFontFilterFunc filter, gpointer user_data, GDestroyNotify destroy);";subroutine gtk_font_chooser_set_filter_func(fontchooser, filter, user_data, destroy) bind(c)
gtk;gtk_font_chooser_set_font;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"void gtk_font_chooser_set_font (GtkFontChooser *fontchooser, const char *fontname);";subroutine gtk_font_chooser_set_font(fontchooser, fontname) bind(c)
gtk;gtk_font_chooser_set_font_desc;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"void gtk_font_chooser_set_font_desc (GtkFontChooser *fontchooser, const PangoFontDescription *font_desc);";subroutine gtk_font_chooser_set_font_desc(fontchooser, font_desc) bind(c)
gtk;gtk_font_chooser_set_font_map;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"void gtk_font_chooser_set_font_map (GtkFontChooser *fontchooser, PangoFontMap *fontmap);";subroutine gtk_font_chooser_set_font_map(fontchooser, fontmap) bind(c)
gtk;gtk_font_chooser_set_language;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"void gtk_font_chooser_set_language (GtkFontChooser *fontchooser, const char *language);";subroutine gtk_font_chooser_set_language(fontchooser, language) bind(c)
gtk;gtk_font_chooser_set_level;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"void gtk_font_chooser_set_level (GtkFontChooser *fontchooser, GtkFontChooserLevel level);";subroutine gtk_font_chooser_set_level(fontchooser, level) bind(c)
gtk;gtk_font_chooser_set_preview_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"void gtk_font_chooser_set_preview_text (GtkFontChooser *fontchooser, const char *text);";subroutine gtk_font_chooser_set_preview_text(fontchooser, text) bind(c)
gtk;gtk_font_chooser_set_show_preview_entry;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooser.h;"void gtk_font_chooser_set_show_preview_entry (GtkFontChooser *fontchooser, gboolean show_preview_entry);";subroutine gtk_font_chooser_set_show_preview_entry(fontchooser, show_preview_entry) bind(c)
gtk;gtk_font_chooser_widget_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooserwidget.h;"GType gtk_font_chooser_widget_get_type (void) G_GNUC_CONST;";function gtk_font_chooser_widget_get_type() bind(c)
gtk;gtk_font_chooser_widget_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkfontchooserwidget.h;"GtkWidget* gtk_font_chooser_widget_new (void);";function gtk_font_chooser_widget_new() bind(c)
gtk;gtk_frame_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkframe.h;"GtkWidget *gtk_frame_get_child (GtkFrame *frame);";function gtk_frame_get_child(frame) bind(c)
gtk;gtk_frame_get_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkframe.h;"const char * gtk_frame_get_label (GtkFrame *frame);";function gtk_frame_get_label(frame) bind(c)
gtk;gtk_frame_get_label_align;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkframe.h;"float gtk_frame_get_label_align (GtkFrame *frame);";function gtk_frame_get_label_align(frame) bind(c)
gtk;gtk_frame_get_label_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkframe.h;"GtkWidget *gtk_frame_get_label_widget (GtkFrame *frame);";function gtk_frame_get_label_widget(frame) bind(c)
gtk;gtk_frame_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkframe.h;"GType gtk_frame_get_type (void) G_GNUC_CONST;";function gtk_frame_get_type() bind(c)
gtk;gtk_frame_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkframe.h;"GtkWidget* gtk_frame_new (const char *label);";function gtk_frame_new(label) bind(c)
gtk;gtk_frame_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkframe.h;"void gtk_frame_set_child (GtkFrame *frame, GtkWidget *child);";subroutine gtk_frame_set_child(frame, child) bind(c)
gtk;gtk_frame_set_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkframe.h;"void gtk_frame_set_label (GtkFrame *frame, const char *label);";subroutine gtk_frame_set_label(frame, label) bind(c)
gtk;gtk_frame_set_label_align;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkframe.h;"void gtk_frame_set_label_align (GtkFrame *frame, float xalign);";subroutine gtk_frame_set_label_align(frame, xalign) bind(c)
gtk;gtk_frame_set_label_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkframe.h;"void gtk_frame_set_label_widget (GtkFrame *frame, GtkWidget *label_widget);";subroutine gtk_frame_set_label_widget(frame, label_widget) bind(c)
gtk;gtk_gesture_click_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgestureclick.h;"GType gtk_gesture_click_get_type (void) G_GNUC_CONST;";function gtk_gesture_click_get_type() bind(c)
gtk;gtk_gesture_click_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgestureclick.h;"GtkGesture * gtk_gesture_click_new (void);";function gtk_gesture_click_new() bind(c)
gtk;gtk_gesture_drag_get_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturedrag.h;"gboolean gtk_gesture_drag_get_offset (GtkGestureDrag *gesture, double *x, double *y);";function gtk_gesture_drag_get_offset(gesture, x, y) bind(c)
gtk;gtk_gesture_drag_get_start_point;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturedrag.h;"gboolean gtk_gesture_drag_get_start_point (GtkGestureDrag *gesture, double *x, double *y);";function gtk_gesture_drag_get_start_point(gesture, x, y) bind(c)
gtk;gtk_gesture_drag_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturedrag.h;"GType gtk_gesture_drag_get_type (void) G_GNUC_CONST;";function gtk_gesture_drag_get_type() bind(c)
gtk;gtk_gesture_drag_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturedrag.h;"GtkGesture * gtk_gesture_drag_new (void);";function gtk_gesture_drag_new() bind(c)
gtk;gtk_gesture_get_bounding_box;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"gboolean gtk_gesture_get_bounding_box (GtkGesture *gesture, GdkRectangle *rect);";function gtk_gesture_get_bounding_box(gesture, rect) bind(c)
gtk;gtk_gesture_get_bounding_box_center;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"gboolean gtk_gesture_get_bounding_box_center (GtkGesture *gesture, double *x, double *y);";function gtk_gesture_get_bounding_box_center(gesture, x, y) bind(c)
gtk;gtk_gesture_get_device;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"GdkDevice * gtk_gesture_get_device (GtkGesture *gesture);";function gtk_gesture_get_device(gesture) bind(c)
gtk;gtk_gesture_get_group;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"GList * gtk_gesture_get_group (GtkGesture *gesture);";function gtk_gesture_get_group(gesture) bind(c)
gtk;gtk_gesture_get_last_event;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"GdkEvent * gtk_gesture_get_last_event (GtkGesture *gesture, GdkEventSequence *sequence);";function gtk_gesture_get_last_event(gesture, sequence) bind(c)
gtk;gtk_gesture_get_last_updated_sequence;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"GdkEventSequence * gtk_gesture_get_last_updated_sequence (GtkGesture *gesture);";function gtk_gesture_get_last_updated_sequence(gesture) bind(c)
gtk;gtk_gesture_get_point;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"gboolean gtk_gesture_get_point (GtkGesture *gesture, GdkEventSequence *sequence, double *x, double *y);";function gtk_gesture_get_point(gesture, sequence, x, y) bind(c)
gtk;gtk_gesture_get_sequence_state;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"GtkEventSequenceState gtk_gesture_get_sequence_state (GtkGesture *gesture, GdkEventSequence *sequence);";function gtk_gesture_get_sequence_state(gesture, sequence) bind(c)
gtk;gtk_gesture_get_sequences;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"GList * gtk_gesture_get_sequences (GtkGesture *gesture);";function gtk_gesture_get_sequences(gesture) bind(c)
gtk;gtk_gesture_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"GType gtk_gesture_get_type (void) G_GNUC_CONST;";function gtk_gesture_get_type() bind(c)
gtk;gtk_gesture_group;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"void gtk_gesture_group (GtkGesture *group_gesture, GtkGesture *gesture);";subroutine gtk_gesture_group(group_gesture, gesture) bind(c)
gtk;gtk_gesture_handles_sequence;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"gboolean gtk_gesture_handles_sequence (GtkGesture *gesture, GdkEventSequence *sequence);";function gtk_gesture_handles_sequence(gesture, sequence) bind(c)
gtk;gtk_gesture_is_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"gboolean gtk_gesture_is_active (GtkGesture *gesture);";function gtk_gesture_is_active(gesture) bind(c)
gtk;gtk_gesture_is_grouped_with;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"gboolean gtk_gesture_is_grouped_with (GtkGesture *gesture, GtkGesture *other);";function gtk_gesture_is_grouped_with(gesture, other) bind(c)
gtk;gtk_gesture_is_recognized;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"gboolean gtk_gesture_is_recognized (GtkGesture *gesture);";function gtk_gesture_is_recognized(gesture) bind(c)
gtk;gtk_gesture_long_press_get_delay_factor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturelongpress.h;"double gtk_gesture_long_press_get_delay_factor (GtkGestureLongPress *gesture);";function gtk_gesture_long_press_get_delay_factor(gesture) bind(c)
gtk;gtk_gesture_long_press_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturelongpress.h;"GType gtk_gesture_long_press_get_type (void) G_GNUC_CONST;";function gtk_gesture_long_press_get_type() bind(c)
gtk;gtk_gesture_long_press_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturelongpress.h;"GtkGesture * gtk_gesture_long_press_new (void);";function gtk_gesture_long_press_new() bind(c)
gtk;gtk_gesture_long_press_set_delay_factor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturelongpress.h;"void gtk_gesture_long_press_set_delay_factor (GtkGestureLongPress *gesture, double delay_factor);";subroutine gtk_gesture_long_press_set_delay_factor(gesture, delay_factor) bind(c)
gtk;gtk_gesture_pan_get_orientation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturepan.h;"GtkOrientation gtk_gesture_pan_get_orientation (GtkGesturePan *gesture);";function gtk_gesture_pan_get_orientation(gesture) bind(c)
gtk;gtk_gesture_pan_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturepan.h;"GType gtk_gesture_pan_get_type (void) G_GNUC_CONST;";function gtk_gesture_pan_get_type() bind(c)
gtk;gtk_gesture_pan_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturepan.h;"GtkGesture * gtk_gesture_pan_new (GtkOrientation orientation);";function gtk_gesture_pan_new(orientation) bind(c)
gtk;gtk_gesture_pan_set_orientation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturepan.h;"void gtk_gesture_pan_set_orientation (GtkGesturePan *gesture, GtkOrientation orientation);";subroutine gtk_gesture_pan_set_orientation(gesture, orientation) bind(c)
gtk;gtk_gesture_rotate_get_angle_delta;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturerotate.h;"double gtk_gesture_rotate_get_angle_delta (GtkGestureRotate *gesture);";function gtk_gesture_rotate_get_angle_delta(gesture) bind(c)
gtk;gtk_gesture_rotate_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturerotate.h;"GType gtk_gesture_rotate_get_type (void) G_GNUC_CONST;";function gtk_gesture_rotate_get_type() bind(c)
gtk;gtk_gesture_rotate_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturerotate.h;"GtkGesture * gtk_gesture_rotate_new (void);";function gtk_gesture_rotate_new() bind(c)
gtk;gtk_gesture_set_sequence_state;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"gboolean gtk_gesture_set_sequence_state (GtkGesture *gesture, GdkEventSequence *sequence, GtkEventSequenceState state);";function gtk_gesture_set_sequence_state(gesture, sequence, state) bind(c)
gtk;gtk_gesture_set_state;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"gboolean gtk_gesture_set_state (GtkGesture *gesture, GtkEventSequenceState state);";function gtk_gesture_set_state(gesture, state) bind(c)
gtk;gtk_gesture_single_get_button;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturesingle.h;"guint gtk_gesture_single_get_button (GtkGestureSingle *gesture);";function gtk_gesture_single_get_button(gesture) bind(c)
gtk;gtk_gesture_single_get_current_button;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturesingle.h;"guint gtk_gesture_single_get_current_button (GtkGestureSingle *gesture);";function gtk_gesture_single_get_current_button(gesture) bind(c)
gtk;gtk_gesture_single_get_current_sequence;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturesingle.h;"GdkEventSequence * gtk_gesture_single_get_current_sequence (GtkGestureSingle *gesture);";function gtk_gesture_single_get_current_sequence(gesture) bind(c)
gtk;gtk_gesture_single_get_exclusive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturesingle.h;"gboolean gtk_gesture_single_get_exclusive (GtkGestureSingle *gesture);";function gtk_gesture_single_get_exclusive(gesture) bind(c)
gtk;gtk_gesture_single_get_touch_only;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturesingle.h;"gboolean gtk_gesture_single_get_touch_only (GtkGestureSingle *gesture);";function gtk_gesture_single_get_touch_only(gesture) bind(c)
gtk;gtk_gesture_single_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturesingle.h;"GType gtk_gesture_single_get_type (void) G_GNUC_CONST;";function gtk_gesture_single_get_type() bind(c)
gtk;gtk_gesture_single_set_button;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturesingle.h;"void gtk_gesture_single_set_button (GtkGestureSingle *gesture, guint button);";subroutine gtk_gesture_single_set_button(gesture, button) bind(c)
gtk;gtk_gesture_single_set_exclusive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturesingle.h;"void gtk_gesture_single_set_exclusive (GtkGestureSingle *gesture, gboolean exclusive);";subroutine gtk_gesture_single_set_exclusive(gesture, exclusive) bind(c)
gtk;gtk_gesture_single_set_touch_only;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturesingle.h;"void gtk_gesture_single_set_touch_only (GtkGestureSingle *gesture, gboolean touch_only);";subroutine gtk_gesture_single_set_touch_only(gesture, touch_only) bind(c)
gtk;gtk_gesture_stylus_get_axes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturestylus.h;"gboolean gtk_gesture_stylus_get_axes (GtkGestureStylus *gesture, GdkAxisUse axes[], double **values);";function gtk_gesture_stylus_get_axes(gesture, axes, values) bind(c)
gtk;gtk_gesture_stylus_get_axis;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturestylus.h;"gboolean gtk_gesture_stylus_get_axis (GtkGestureStylus *gesture, GdkAxisUse axis, double *value);";function gtk_gesture_stylus_get_axis(gesture, axis, value) bind(c)
gtk;gtk_gesture_stylus_get_backlog;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturestylus.h;"gboolean gtk_gesture_stylus_get_backlog (GtkGestureStylus *gesture, GdkTimeCoord **backlog, guint *n_elems);";function gtk_gesture_stylus_get_backlog(gesture, backlog, n_elems) bind(c)
gtk;gtk_gesture_stylus_get_device_tool;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturestylus.h;"GdkDeviceTool * gtk_gesture_stylus_get_device_tool (GtkGestureStylus *gesture);";function gtk_gesture_stylus_get_device_tool(gesture) bind(c)
gtk;gtk_gesture_stylus_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturestylus.h;"GType gtk_gesture_stylus_get_type (void) G_GNUC_CONST;";function gtk_gesture_stylus_get_type() bind(c)
gtk;gtk_gesture_stylus_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturestylus.h;"GtkGesture * gtk_gesture_stylus_new (void);";function gtk_gesture_stylus_new() bind(c)
gtk;gtk_gesture_swipe_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgestureswipe.h;"GType gtk_gesture_swipe_get_type (void) G_GNUC_CONST;";function gtk_gesture_swipe_get_type() bind(c)
gtk;gtk_gesture_swipe_get_velocity;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgestureswipe.h;"gboolean gtk_gesture_swipe_get_velocity (GtkGestureSwipe *gesture, double *velocity_x, double *velocity_y);";function gtk_gesture_swipe_get_velocity(gesture, velocity_x, velocity_y) bind(c)
gtk;gtk_gesture_swipe_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgestureswipe.h;"GtkGesture * gtk_gesture_swipe_new (void);";function gtk_gesture_swipe_new() bind(c)
gtk;gtk_gesture_ungroup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesture.h;"void gtk_gesture_ungroup (GtkGesture *gesture);";subroutine gtk_gesture_ungroup(gesture) bind(c)
gtk;gtk_gesture_zoom_get_scale_delta;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturezoom.h;"double gtk_gesture_zoom_get_scale_delta (GtkGestureZoom *gesture);";function gtk_gesture_zoom_get_scale_delta(gesture) bind(c)
gtk;gtk_gesture_zoom_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturezoom.h;"GType gtk_gesture_zoom_get_type (void) G_GNUC_CONST;";function gtk_gesture_zoom_get_type() bind(c)
gtk;gtk_gesture_zoom_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgesturezoom.h;"GtkGesture * gtk_gesture_zoom_new (void);";function gtk_gesture_zoom_new() bind(c)
gtk;gtk_get_binary_age;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkversion.h;"guint gtk_get_binary_age (void) G_GNUC_CONST;";function gtk_get_binary_age() bind(c)
gtk;gtk_get_debug_flags;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdebug.h;"GtkDebugFlags gtk_get_debug_flags (void);";function gtk_get_debug_flags() bind(c)
gtk;gtk_get_default_language;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmain.h;"PangoLanguage * gtk_get_default_language (void);";function gtk_get_default_language() bind(c)
gtk;gtk_get_interface_age;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkversion.h;"guint gtk_get_interface_age (void) G_GNUC_CONST;";function gtk_get_interface_age() bind(c)
gtk;gtk_get_locale_direction;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmain.h;"GtkTextDirection gtk_get_locale_direction (void);";function gtk_get_locale_direction() bind(c)
gtk;gtk_get_major_version;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkversion.h;"guint gtk_get_major_version (void) G_GNUC_CONST;";function gtk_get_major_version() bind(c)
gtk;gtk_get_micro_version;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkversion.h;"guint gtk_get_micro_version (void) G_GNUC_CONST;";function gtk_get_micro_version() bind(c)
gtk;gtk_get_minor_version;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkversion.h;"guint gtk_get_minor_version (void) G_GNUC_CONST;";function gtk_get_minor_version() bind(c)
gtk;gtk_gl_area_attach_buffers;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"void gtk_gl_area_attach_buffers (GtkGLArea *area);";subroutine gtk_gl_area_attach_buffers(area) bind(c)
gtk;gtk_gl_area_get_auto_render;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"gboolean gtk_gl_area_get_auto_render (GtkGLArea *area);";function gtk_gl_area_get_auto_render(area) bind(c)
gtk;gtk_gl_area_get_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"GdkGLContext * gtk_gl_area_get_context (GtkGLArea *area);";function gtk_gl_area_get_context(area) bind(c)
gtk;gtk_gl_area_get_error;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"GError * gtk_gl_area_get_error (GtkGLArea *area);";function gtk_gl_area_get_error(area) bind(c)
gtk;gtk_gl_area_get_has_depth_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"gboolean gtk_gl_area_get_has_depth_buffer (GtkGLArea *area);";function gtk_gl_area_get_has_depth_buffer(area) bind(c)
gtk;gtk_gl_area_get_has_stencil_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"gboolean gtk_gl_area_get_has_stencil_buffer (GtkGLArea *area);";function gtk_gl_area_get_has_stencil_buffer(area) bind(c)
gtk;gtk_gl_area_get_required_version;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"void gtk_gl_area_get_required_version (GtkGLArea *area, int *major, int *minor);";subroutine gtk_gl_area_get_required_version(area, major, minor) bind(c)
gtk;gtk_gl_area_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"GType gtk_gl_area_get_type (void) G_GNUC_CONST;";function gtk_gl_area_get_type() bind(c)
gtk;gtk_gl_area_get_use_es;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"gboolean gtk_gl_area_get_use_es (GtkGLArea *area);";function gtk_gl_area_get_use_es(area) bind(c)
gtk;gtk_gl_area_make_current;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"void gtk_gl_area_make_current (GtkGLArea *area);";subroutine gtk_gl_area_make_current(area) bind(c)
gtk;gtk_gl_area_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"GtkWidget * gtk_gl_area_new (void);";function gtk_gl_area_new() bind(c)
gtk;gtk_gl_area_queue_render;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"void gtk_gl_area_queue_render (GtkGLArea *area);";subroutine gtk_gl_area_queue_render(area) bind(c)
gtk;gtk_gl_area_set_auto_render;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"void gtk_gl_area_set_auto_render (GtkGLArea *area, gboolean auto_render);";subroutine gtk_gl_area_set_auto_render(area, auto_render) bind(c)
gtk;gtk_gl_area_set_error;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"void gtk_gl_area_set_error (GtkGLArea *area, const GError *error);";subroutine gtk_gl_area_set_error(area, error) bind(c)
gtk;gtk_gl_area_set_has_depth_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"void gtk_gl_area_set_has_depth_buffer (GtkGLArea *area, gboolean has_depth_buffer);";subroutine gtk_gl_area_set_has_depth_buffer(area, has_depth_buffer) bind(c)
gtk;gtk_gl_area_set_has_stencil_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"void gtk_gl_area_set_has_stencil_buffer (GtkGLArea *area, gboolean has_stencil_buffer);";subroutine gtk_gl_area_set_has_stencil_buffer(area, has_stencil_buffer) bind(c)
gtk;gtk_gl_area_set_required_version;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"void gtk_gl_area_set_required_version (GtkGLArea *area, int major, int minor);";subroutine gtk_gl_area_set_required_version(area, major, minor) bind(c)
gtk;gtk_gl_area_set_use_es;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkglarea.h;"void gtk_gl_area_set_use_es (GtkGLArea *area, gboolean use_es);";subroutine gtk_gl_area_set_use_es(area, use_es) bind(c)
gtk;gtk_grid_attach;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_attach (GtkGrid *grid, GtkWidget *child, int column, int row, int width, int height);";subroutine gtk_grid_attach(grid, child, column, row, width, height) bind(c)
gtk;gtk_grid_attach_next_to;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_attach_next_to (GtkGrid *grid, GtkWidget *child, GtkWidget *sibling, GtkPositionType side, int width, int height);";subroutine gtk_grid_attach_next_to(grid, child, sibling, side, width, height) bind(c)
gtk;gtk_grid_get_baseline_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"int gtk_grid_get_baseline_row (GtkGrid *grid);";function gtk_grid_get_baseline_row(grid) bind(c)
gtk;gtk_grid_get_child_at;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"GtkWidget *gtk_grid_get_child_at (GtkGrid *grid, int column, int row);";function gtk_grid_get_child_at(grid, column, row) bind(c)
gtk;gtk_grid_get_column_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"gboolean gtk_grid_get_column_homogeneous (GtkGrid *grid);";function gtk_grid_get_column_homogeneous(grid) bind(c)
gtk;gtk_grid_get_column_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"guint gtk_grid_get_column_spacing (GtkGrid *grid);";function gtk_grid_get_column_spacing(grid) bind(c)
gtk;gtk_grid_get_row_baseline_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"GtkBaselinePosition gtk_grid_get_row_baseline_position (GtkGrid *grid, int row);";function gtk_grid_get_row_baseline_position(grid, row) bind(c)
gtk;gtk_grid_get_row_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"gboolean gtk_grid_get_row_homogeneous (GtkGrid *grid);";function gtk_grid_get_row_homogeneous(grid) bind(c)
gtk;gtk_grid_get_row_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"guint gtk_grid_get_row_spacing (GtkGrid *grid);";function gtk_grid_get_row_spacing(grid) bind(c)
gtk;gtk_grid_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"GType gtk_grid_get_type (void) G_GNUC_CONST;";function gtk_grid_get_type() bind(c)
gtk;gtk_grid_insert_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_insert_column (GtkGrid *grid, int position);";subroutine gtk_grid_insert_column(grid, position) bind(c)
gtk;gtk_grid_insert_next_to;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_insert_next_to (GtkGrid *grid, GtkWidget *sibling, GtkPositionType side);";subroutine gtk_grid_insert_next_to(grid, sibling, side) bind(c)
gtk;gtk_grid_insert_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_insert_row (GtkGrid *grid, int position);";subroutine gtk_grid_insert_row(grid, position) bind(c)
gtk;gtk_grid_layout_child_get_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"int gtk_grid_layout_child_get_column (GtkGridLayoutChild *child);";function gtk_grid_layout_child_get_column(child) bind(c)
gtk;gtk_grid_layout_child_get_column_span;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"int gtk_grid_layout_child_get_column_span (GtkGridLayoutChild *child);";function gtk_grid_layout_child_get_column_span(child) bind(c)
gtk;gtk_grid_layout_child_get_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"int gtk_grid_layout_child_get_row (GtkGridLayoutChild *child);";function gtk_grid_layout_child_get_row(child) bind(c)
gtk;gtk_grid_layout_child_get_row_span;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"int gtk_grid_layout_child_get_row_span (GtkGridLayoutChild *child);";function gtk_grid_layout_child_get_row_span(child) bind(c)
gtk;gtk_grid_layout_child_set_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"void gtk_grid_layout_child_set_column (GtkGridLayoutChild *child, int column);";subroutine gtk_grid_layout_child_set_column(child, column) bind(c)
gtk;gtk_grid_layout_child_set_column_span;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"void gtk_grid_layout_child_set_column_span (GtkGridLayoutChild *child, int span);";subroutine gtk_grid_layout_child_set_column_span(child, span) bind(c)
gtk;gtk_grid_layout_child_set_row_span;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"void gtk_grid_layout_child_set_row_span (GtkGridLayoutChild *child, int span);";subroutine gtk_grid_layout_child_set_row_span(child, span) bind(c)
gtk;gtk_grid_layout_get_baseline_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"int gtk_grid_layout_get_baseline_row (GtkGridLayout *grid);";function gtk_grid_layout_get_baseline_row(grid) bind(c)
gtk;gtk_grid_layout_get_column_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"gboolean gtk_grid_layout_get_column_homogeneous (GtkGridLayout *grid);";function gtk_grid_layout_get_column_homogeneous(grid) bind(c)
gtk;gtk_grid_layout_get_column_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"guint gtk_grid_layout_get_column_spacing (GtkGridLayout *grid);";function gtk_grid_layout_get_column_spacing(grid) bind(c)
gtk;gtk_grid_layout_get_row_baseline_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"GtkBaselinePosition gtk_grid_layout_get_row_baseline_position (GtkGridLayout *grid, int row);";function gtk_grid_layout_get_row_baseline_position(grid, row) bind(c)
gtk;gtk_grid_layout_get_row_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"gboolean gtk_grid_layout_get_row_homogeneous (GtkGridLayout *grid);";function gtk_grid_layout_get_row_homogeneous(grid) bind(c)
gtk;gtk_grid_layout_get_row_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"guint gtk_grid_layout_get_row_spacing (GtkGridLayout *grid);";function gtk_grid_layout_get_row_spacing(grid) bind(c)
gtk;gtk_grid_layout_set_baseline_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"void gtk_grid_layout_set_baseline_row (GtkGridLayout *grid, int row);";subroutine gtk_grid_layout_set_baseline_row(grid, row) bind(c)
gtk;gtk_grid_layout_set_column_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"void gtk_grid_layout_set_column_homogeneous (GtkGridLayout *grid, gboolean homogeneous);";subroutine gtk_grid_layout_set_column_homogeneous(grid, homogeneous) bind(c)
gtk;gtk_grid_layout_set_column_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"void gtk_grid_layout_set_column_spacing (GtkGridLayout *grid, guint spacing);";subroutine gtk_grid_layout_set_column_spacing(grid, spacing) bind(c)
gtk;gtk_grid_layout_set_row_baseline_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"void gtk_grid_layout_set_row_baseline_position (GtkGridLayout *grid, int row, GtkBaselinePosition pos);";subroutine gtk_grid_layout_set_row_baseline_position(grid, row, pos) bind(c)
gtk;gtk_grid_layout_set_row_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"void gtk_grid_layout_set_row_homogeneous (GtkGridLayout *grid, gboolean homogeneous);";subroutine gtk_grid_layout_set_row_homogeneous(grid, homogeneous) bind(c)
gtk;gtk_grid_layout_set_row_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridlayout.h;"void gtk_grid_layout_set_row_spacing (GtkGridLayout *grid, guint spacing);";subroutine gtk_grid_layout_set_row_spacing(grid, spacing) bind(c)
gtk;gtk_grid_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"GtkWidget* gtk_grid_new (void);";function gtk_grid_new() bind(c)
gtk;gtk_grid_query_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_query_child (GtkGrid *grid, GtkWidget *child, int *column, int *row, int *width, int *height);";subroutine gtk_grid_query_child(grid, child, column, row, width, height) bind(c)
gtk;gtk_grid_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_remove (GtkGrid *grid, GtkWidget *child);";subroutine gtk_grid_remove(grid, child) bind(c)
gtk;gtk_grid_remove_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_remove_column (GtkGrid *grid, int position);";subroutine gtk_grid_remove_column(grid, position) bind(c)
gtk;gtk_grid_remove_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_remove_row (GtkGrid *grid, int position);";subroutine gtk_grid_remove_row(grid, position) bind(c)
gtk;gtk_grid_set_baseline_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_set_baseline_row (GtkGrid *grid, int row);";subroutine gtk_grid_set_baseline_row(grid, row) bind(c)
gtk;gtk_grid_set_column_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_set_column_homogeneous (GtkGrid *grid, gboolean homogeneous);";subroutine gtk_grid_set_column_homogeneous(grid, homogeneous) bind(c)
gtk;gtk_grid_set_column_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_set_column_spacing (GtkGrid *grid, guint spacing);";subroutine gtk_grid_set_column_spacing(grid, spacing) bind(c)
gtk;gtk_grid_set_row_baseline_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_set_row_baseline_position (GtkGrid *grid, int row, GtkBaselinePosition pos);";subroutine gtk_grid_set_row_baseline_position(grid, row, pos) bind(c)
gtk;gtk_grid_set_row_homogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_set_row_homogeneous (GtkGrid *grid, gboolean homogeneous);";subroutine gtk_grid_set_row_homogeneous(grid, homogeneous) bind(c)
gtk;gtk_grid_set_row_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgrid.h;"void gtk_grid_set_row_spacing (GtkGrid *grid, guint spacing);";subroutine gtk_grid_set_row_spacing(grid, spacing) bind(c)
gtk;gtk_grid_view_get_enable_rubberband;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"gboolean gtk_grid_view_get_enable_rubberband (GtkGridView *self);";function gtk_grid_view_get_enable_rubberband(self) bind(c)
gtk;gtk_grid_view_get_factory;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"GtkListItemFactory * gtk_grid_view_get_factory (GtkGridView *self);";function gtk_grid_view_get_factory(self) bind(c)
gtk;gtk_grid_view_get_max_columns;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"guint gtk_grid_view_get_max_columns (GtkGridView *self);";function gtk_grid_view_get_max_columns(self) bind(c)
gtk;gtk_grid_view_get_min_columns;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"guint gtk_grid_view_get_min_columns (GtkGridView *self);";function gtk_grid_view_get_min_columns(self) bind(c)
gtk;gtk_grid_view_get_model;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"GtkSelectionModel * gtk_grid_view_get_model (GtkGridView *self);";function gtk_grid_view_get_model(self) bind(c)
gtk;gtk_grid_view_get_single_click_activate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"gboolean gtk_grid_view_get_single_click_activate (GtkGridView *self);";function gtk_grid_view_get_single_click_activate(self) bind(c)
gtk;gtk_grid_view_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"GType gtk_grid_view_get_type (void) G_GNUC_CONST;";function gtk_grid_view_get_type() bind(c)
gtk;gtk_grid_view_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"GtkWidget * gtk_grid_view_new (GtkSelectionModel *model, GtkListItemFactory *factory);";function gtk_grid_view_new(model, factory) bind(c)
gtk;gtk_grid_view_set_enable_rubberband;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"void gtk_grid_view_set_enable_rubberband (GtkGridView *self, gboolean enable_rubberband);";subroutine gtk_grid_view_set_enable_rubberband(self, enable_rubberband) bind(c)
gtk;gtk_grid_view_set_factory;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"void gtk_grid_view_set_factory (GtkGridView *self, GtkListItemFactory *factory);";subroutine gtk_grid_view_set_factory(self, factory) bind(c)
gtk;gtk_grid_view_set_max_columns;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"void gtk_grid_view_set_max_columns (GtkGridView *self, guint max_columns);";subroutine gtk_grid_view_set_max_columns(self, max_columns) bind(c)
gtk;gtk_grid_view_set_min_columns;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"void gtk_grid_view_set_min_columns (GtkGridView *self, guint min_columns);";subroutine gtk_grid_view_set_min_columns(self, min_columns) bind(c)
gtk;gtk_grid_view_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"void gtk_grid_view_set_model (GtkGridView *self, GtkSelectionModel *model);";subroutine gtk_grid_view_set_model(self, model) bind(c)
gtk;gtk_grid_view_set_single_click_activate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkgridview.h;"void gtk_grid_view_set_single_click_activate (GtkGridView *self, gboolean single_click_activate);";subroutine gtk_grid_view_set_single_click_activate(self, single_click_activate) bind(c)
gtk;gtk_header_bar_get_decoration_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkheaderbar.h;"const char *gtk_header_bar_get_decoration_layout (GtkHeaderBar *bar);";function gtk_header_bar_get_decoration_layout(bar) bind(c)
gtk;gtk_header_bar_get_show_title_buttons;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkheaderbar.h;"gboolean gtk_header_bar_get_show_title_buttons (GtkHeaderBar *bar);";function gtk_header_bar_get_show_title_buttons(bar) bind(c)
gtk;gtk_header_bar_get_title_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkheaderbar.h;"GtkWidget *gtk_header_bar_get_title_widget (GtkHeaderBar *bar);";function gtk_header_bar_get_title_widget(bar) bind(c)
gtk;gtk_header_bar_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkheaderbar.h;"GType gtk_header_bar_get_type (void) G_GNUC_CONST;";function gtk_header_bar_get_type() bind(c)
gtk;gtk_header_bar_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkheaderbar.h;"GtkWidget *gtk_header_bar_new (void);";function gtk_header_bar_new() bind(c)
gtk;gtk_header_bar_pack_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkheaderbar.h;"void gtk_header_bar_pack_end (GtkHeaderBar *bar, GtkWidget *child);";subroutine gtk_header_bar_pack_end(bar, child) bind(c)
gtk;gtk_header_bar_pack_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkheaderbar.h;"void gtk_header_bar_pack_start (GtkHeaderBar *bar, GtkWidget *child);";subroutine gtk_header_bar_pack_start(bar, child) bind(c)
gtk;gtk_header_bar_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkheaderbar.h;"void gtk_header_bar_remove (GtkHeaderBar *bar, GtkWidget *child);";subroutine gtk_header_bar_remove(bar, child) bind(c)
gtk;gtk_header_bar_set_decoration_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkheaderbar.h;"void gtk_header_bar_set_decoration_layout (GtkHeaderBar *bar, const char *layout);";subroutine gtk_header_bar_set_decoration_layout(bar, layout) bind(c)
gtk;gtk_header_bar_set_show_title_buttons;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkheaderbar.h;"void gtk_header_bar_set_show_title_buttons (GtkHeaderBar *bar, gboolean setting);";subroutine gtk_header_bar_set_show_title_buttons(bar, setting) bind(c)
gtk;gtk_header_bar_set_title_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkheaderbar.h;"void gtk_header_bar_set_title_widget (GtkHeaderBar *bar, GtkWidget *title_widget);";subroutine gtk_header_bar_set_title_widget(bar, title_widget) bind(c)
gtk;gtk_hsv_to_rgb;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorutils.h;"void gtk_hsv_to_rgb (float h, float s, float v, float *r, float *g, float *b);";subroutine gtk_hsv_to_rgb(h, s, v, r, g, b) bind(c)
gtk;gtk_icon_paintable_get_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"GFile * gtk_icon_paintable_get_file (GtkIconPaintable *self);";function gtk_icon_paintable_get_file(self) bind(c)
gtk;gtk_icon_paintable_get_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"const char * gtk_icon_paintable_get_icon_name (GtkIconPaintable *self);";function gtk_icon_paintable_get_icon_name(self) bind(c)
gtk;gtk_icon_paintable_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"GType gtk_icon_paintable_get_type (void) G_GNUC_CONST;";function gtk_icon_paintable_get_type() bind(c)
gtk;gtk_icon_paintable_is_symbolic;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"gboolean gtk_icon_paintable_is_symbolic (GtkIconPaintable *self);";function gtk_icon_paintable_is_symbolic(self) bind(c)
gtk;gtk_icon_paintable_new_for_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"GtkIconPaintable *gtk_icon_paintable_new_for_file (GFile *file, int size, int scale);";function gtk_icon_paintable_new_for_file(file, size, scale) bind(c)
gtk;gtk_icon_theme_add_resource_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"void gtk_icon_theme_add_resource_path (GtkIconTheme *self, const char *path);";subroutine gtk_icon_theme_add_resource_path(self, path) bind(c)
gtk;gtk_icon_theme_add_search_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"void gtk_icon_theme_add_search_path (GtkIconTheme *self, const char *path);";subroutine gtk_icon_theme_add_search_path(self, path) bind(c)
gtk;gtk_icon_theme_error_quark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"GQuark gtk_icon_theme_error_quark (void);";function gtk_icon_theme_error_quark() bind(c)
gtk;gtk_icon_theme_get_display;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"GdkDisplay * gtk_icon_theme_get_display (GtkIconTheme *self);";function gtk_icon_theme_get_display(self) bind(c)
gtk;gtk_icon_theme_get_for_display;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"GtkIconTheme *gtk_icon_theme_get_for_display (GdkDisplay *display);";function gtk_icon_theme_get_for_display(display) bind(c)
gtk;gtk_icon_theme_get_icon_names;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"char ** gtk_icon_theme_get_icon_names (GtkIconTheme *self);";function gtk_icon_theme_get_icon_names(self) bind(c)
gtk;gtk_icon_theme_get_icon_sizes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"int *gtk_icon_theme_get_icon_sizes (GtkIconTheme *self, const char *icon_name);";function gtk_icon_theme_get_icon_sizes(self, icon_name) bind(c)
gtk;gtk_icon_theme_get_resource_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"char ** gtk_icon_theme_get_resource_path (GtkIconTheme *self);";function gtk_icon_theme_get_resource_path(self) bind(c)
gtk;gtk_icon_theme_get_search_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"char ** gtk_icon_theme_get_search_path (GtkIconTheme *self);";function gtk_icon_theme_get_search_path(self) bind(c)
gtk;gtk_icon_theme_get_theme_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"char * gtk_icon_theme_get_theme_name (GtkIconTheme *self);";function gtk_icon_theme_get_theme_name(self) bind(c)
gtk;gtk_icon_theme_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"GType gtk_icon_theme_get_type (void) G_GNUC_CONST;";function gtk_icon_theme_get_type() bind(c)
gtk;gtk_icon_theme_has_icon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"gboolean gtk_icon_theme_has_icon (GtkIconTheme *self, const char *icon_name);";function gtk_icon_theme_has_icon(self, icon_name) bind(c)
gtk;gtk_icon_theme_lookup_by_gicon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"GtkIconPaintable *gtk_icon_theme_lookup_by_gicon (GtkIconTheme *self, GIcon *icon, int size, int scale, GtkTextDirection direction, GtkIconLookupFlags flags);";function gtk_icon_theme_lookup_by_gicon(self, icon, size, scale, direction, flags) bind(c)
gtk;gtk_icon_theme_lookup_icon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"GtkIconPaintable *gtk_icon_theme_lookup_icon (GtkIconTheme *self, const char *icon_name, const char *fallbacks[], int size, int scale, GtkTextDirection direction, GtkIconLookupFlags flags);";function gtk_icon_theme_lookup_icon(self, icon_name, fallbacks, size, scale, direction, flags) bind(c)
gtk;gtk_icon_theme_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"GtkIconTheme *gtk_icon_theme_new (void);";function gtk_icon_theme_new() bind(c)
gtk;gtk_icon_theme_set_resource_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"void gtk_icon_theme_set_resource_path (GtkIconTheme *self, const char * const *path);";subroutine gtk_icon_theme_set_resource_path(self, path) bind(c)
gtk;gtk_icon_theme_set_search_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"void gtk_icon_theme_set_search_path (GtkIconTheme *self, const char * const *path);";subroutine gtk_icon_theme_set_search_path(self, path) bind(c)
gtk;gtk_icon_theme_set_theme_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkicontheme.h;"void gtk_icon_theme_set_theme_name (GtkIconTheme *self, const char *theme_name);";subroutine gtk_icon_theme_set_theme_name(self, theme_name) bind(c)
gtk;gtk_icon_view_create_drag_icon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"GdkPaintable *gtk_icon_view_create_drag_icon (GtkIconView *icon_view, GtkTreePath *path);";function gtk_icon_view_create_drag_icon(icon_view, path) bind(c)
gtk;gtk_icon_view_enable_model_drag_dest;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_enable_model_drag_dest (GtkIconView *icon_view, GdkContentFormats *formats, GdkDragAction actions);";subroutine gtk_icon_view_enable_model_drag_dest(icon_view, formats, actions) bind(c)
gtk;gtk_icon_view_enable_model_drag_source;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_enable_model_drag_source (GtkIconView *icon_view, GdkModifierType start_button_mask, GdkContentFormats *formats, GdkDragAction actions);";subroutine gtk_icon_view_enable_model_drag_source(icon_view, start_button_mask, formats, actions) bind(c)
gtk;gtk_icon_view_get_activate_on_single_click;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"gboolean gtk_icon_view_get_activate_on_single_click (GtkIconView *icon_view);";function gtk_icon_view_get_activate_on_single_click(icon_view) bind(c)
gtk;gtk_icon_view_get_cell_rect;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"gboolean gtk_icon_view_get_cell_rect (GtkIconView *icon_view, GtkTreePath *path, GtkCellRenderer *cell, GdkRectangle *rect);";function gtk_icon_view_get_cell_rect(icon_view, path, cell, rect) bind(c)
gtk;gtk_icon_view_get_column_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_column_spacing (GtkIconView *icon_view);";function gtk_icon_view_get_column_spacing(icon_view) bind(c)
gtk;gtk_icon_view_get_columns;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_columns (GtkIconView *icon_view);";function gtk_icon_view_get_columns(icon_view) bind(c)
gtk;gtk_icon_view_get_cursor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"gboolean gtk_icon_view_get_cursor (GtkIconView *icon_view, GtkTreePath **path, GtkCellRenderer **cell);";function gtk_icon_view_get_cursor(icon_view, path, cell) bind(c)
gtk;gtk_icon_view_get_dest_item_at_pos;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"gboolean gtk_icon_view_get_dest_item_at_pos (GtkIconView *icon_view, int drag_x, int drag_y, GtkTreePath **path, GtkIconViewDropPosition *pos);";function gtk_icon_view_get_dest_item_at_pos(icon_view, drag_x, drag_y, path, pos) bind(c)
gtk;gtk_icon_view_get_drag_dest_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_get_drag_dest_item (GtkIconView *icon_view, GtkTreePath **path, GtkIconViewDropPosition *pos);";subroutine gtk_icon_view_get_drag_dest_item(icon_view, path, pos) bind(c)
gtk;gtk_icon_view_get_item_at_pos;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"gboolean gtk_icon_view_get_item_at_pos (GtkIconView *icon_view, int x, int y, GtkTreePath **path, GtkCellRenderer **cell);";function gtk_icon_view_get_item_at_pos(icon_view, x, y, path, cell) bind(c)
gtk;gtk_icon_view_get_item_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_item_column (GtkIconView *icon_view, GtkTreePath *path);";function gtk_icon_view_get_item_column(icon_view, path) bind(c)
gtk;gtk_icon_view_get_item_orientation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"GtkOrientation gtk_icon_view_get_item_orientation (GtkIconView *icon_view);";function gtk_icon_view_get_item_orientation(icon_view) bind(c)
gtk;gtk_icon_view_get_item_padding;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_item_padding (GtkIconView *icon_view);";function gtk_icon_view_get_item_padding(icon_view) bind(c)
gtk;gtk_icon_view_get_item_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_item_row (GtkIconView *icon_view, GtkTreePath *path);";function gtk_icon_view_get_item_row(icon_view, path) bind(c)
gtk;gtk_icon_view_get_item_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_item_width (GtkIconView *icon_view);";function gtk_icon_view_get_item_width(icon_view) bind(c)
gtk;gtk_icon_view_get_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_margin (GtkIconView *icon_view);";function gtk_icon_view_get_margin(icon_view) bind(c)
gtk;gtk_icon_view_get_markup_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_markup_column (GtkIconView *icon_view);";function gtk_icon_view_get_markup_column(icon_view) bind(c)
gtk;gtk_icon_view_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"GtkTreeModel * gtk_icon_view_get_model (GtkIconView *icon_view);";function gtk_icon_view_get_model(icon_view) bind(c)
gtk;gtk_icon_view_get_path_at_pos;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"GtkTreePath * gtk_icon_view_get_path_at_pos (GtkIconView *icon_view, int x, int y);";function gtk_icon_view_get_path_at_pos(icon_view, x, y) bind(c)
gtk;gtk_icon_view_get_pixbuf_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_pixbuf_column (GtkIconView *icon_view);";function gtk_icon_view_get_pixbuf_column(icon_view) bind(c)
gtk;gtk_icon_view_get_reorderable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"gboolean gtk_icon_view_get_reorderable (GtkIconView *icon_view);";function gtk_icon_view_get_reorderable(icon_view) bind(c)
gtk;gtk_icon_view_get_row_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_row_spacing (GtkIconView *icon_view);";function gtk_icon_view_get_row_spacing(icon_view) bind(c)
gtk;gtk_icon_view_get_selected_items;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"GList *gtk_icon_view_get_selected_items (GtkIconView *icon_view);";function gtk_icon_view_get_selected_items(icon_view) bind(c)
gtk;gtk_icon_view_get_selection_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"GtkSelectionMode gtk_icon_view_get_selection_mode (GtkIconView *icon_view);";function gtk_icon_view_get_selection_mode(icon_view) bind(c)
gtk;gtk_icon_view_get_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_spacing (GtkIconView *icon_view);";function gtk_icon_view_get_spacing(icon_view) bind(c)
gtk;gtk_icon_view_get_text_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_text_column (GtkIconView *icon_view);";function gtk_icon_view_get_text_column(icon_view) bind(c)
gtk;gtk_icon_view_get_tooltip_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"int gtk_icon_view_get_tooltip_column (GtkIconView *icon_view);";function gtk_icon_view_get_tooltip_column(icon_view) bind(c)
gtk;gtk_icon_view_get_tooltip_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"gboolean gtk_icon_view_get_tooltip_context (GtkIconView *icon_view, int x, int y, gboolean keyboard_tip, GtkTreeModel **model, GtkTreePath **path, GtkTreeIter *iter);";function gtk_icon_view_get_tooltip_context(icon_view, x, y, keyboard_tip, model, path, iter) bind(c)
gtk;gtk_icon_view_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"GType gtk_icon_view_get_type (void) G_GNUC_CONST;";function gtk_icon_view_get_type() bind(c)
gtk;gtk_icon_view_get_visible_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"gboolean gtk_icon_view_get_visible_range (GtkIconView *icon_view, GtkTreePath **start_path, GtkTreePath **end_path);";function gtk_icon_view_get_visible_range(icon_view, start_path, end_path) bind(c)
gtk;gtk_icon_view_item_activated;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_item_activated (GtkIconView *icon_view, GtkTreePath *path);";subroutine gtk_icon_view_item_activated(icon_view, path) bind(c)
gtk;gtk_icon_view_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"GtkWidget * gtk_icon_view_new (void);";function gtk_icon_view_new() bind(c)
gtk;gtk_icon_view_new_with_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"GtkWidget * gtk_icon_view_new_with_area (GtkCellArea *area);";function gtk_icon_view_new_with_area(area) bind(c)
gtk;gtk_icon_view_new_with_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"GtkWidget * gtk_icon_view_new_with_model (GtkTreeModel *model);";function gtk_icon_view_new_with_model(model) bind(c)
gtk;gtk_icon_view_path_is_selected;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"gboolean gtk_icon_view_path_is_selected (GtkIconView *icon_view, GtkTreePath *path);";function gtk_icon_view_path_is_selected(icon_view, path) bind(c)
gtk;gtk_icon_view_scroll_to_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_scroll_to_path (GtkIconView *icon_view, GtkTreePath *path, gboolean use_align, float row_align, float col_align);";subroutine gtk_icon_view_scroll_to_path(icon_view, path, use_align, row_align, col_align) bind(c)
gtk;gtk_icon_view_select_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_select_all (GtkIconView *icon_view);";subroutine gtk_icon_view_select_all(icon_view) bind(c)
gtk;gtk_icon_view_select_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_select_path (GtkIconView *icon_view, GtkTreePath *path);";subroutine gtk_icon_view_select_path(icon_view, path) bind(c)
gtk;gtk_icon_view_selected_foreach;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_selected_foreach (GtkIconView *icon_view, GtkIconViewForeachFunc func, gpointer data);";subroutine gtk_icon_view_selected_foreach(icon_view, func, data) bind(c)
gtk;gtk_icon_view_set_activate_on_single_click;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_activate_on_single_click (GtkIconView *icon_view, gboolean single);";subroutine gtk_icon_view_set_activate_on_single_click(icon_view, single) bind(c)
gtk;gtk_icon_view_set_column_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_column_spacing (GtkIconView *icon_view, int column_spacing);";subroutine gtk_icon_view_set_column_spacing(icon_view, column_spacing) bind(c)
gtk;gtk_icon_view_set_columns;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_columns (GtkIconView *icon_view, int columns);";subroutine gtk_icon_view_set_columns(icon_view, columns) bind(c)
gtk;gtk_icon_view_set_cursor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_cursor (GtkIconView *icon_view, GtkTreePath *path, GtkCellRenderer *cell, gboolean start_editing);";subroutine gtk_icon_view_set_cursor(icon_view, path, cell, start_editing) bind(c)
gtk;gtk_icon_view_set_drag_dest_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_drag_dest_item (GtkIconView *icon_view, GtkTreePath *path, GtkIconViewDropPosition pos);";subroutine gtk_icon_view_set_drag_dest_item(icon_view, path, pos) bind(c)
gtk;gtk_icon_view_set_item_orientation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_item_orientation (GtkIconView *icon_view, GtkOrientation orientation);";subroutine gtk_icon_view_set_item_orientation(icon_view, orientation) bind(c)
gtk;gtk_icon_view_set_item_padding;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_item_padding (GtkIconView *icon_view, int item_padding);";subroutine gtk_icon_view_set_item_padding(icon_view, item_padding) bind(c)
gtk;gtk_icon_view_set_item_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_item_width (GtkIconView *icon_view, int item_width);";subroutine gtk_icon_view_set_item_width(icon_view, item_width) bind(c)
gtk;gtk_icon_view_set_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_margin (GtkIconView *icon_view, int margin);";subroutine gtk_icon_view_set_margin(icon_view, margin) bind(c)
gtk;gtk_icon_view_set_markup_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_markup_column (GtkIconView *icon_view, int column);";subroutine gtk_icon_view_set_markup_column(icon_view, column) bind(c)
gtk;gtk_icon_view_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_model (GtkIconView *icon_view, GtkTreeModel *model);";subroutine gtk_icon_view_set_model(icon_view, model) bind(c)
gtk;gtk_icon_view_set_pixbuf_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_pixbuf_column (GtkIconView *icon_view, int column);";subroutine gtk_icon_view_set_pixbuf_column(icon_view, column) bind(c)
gtk;gtk_icon_view_set_reorderable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_reorderable (GtkIconView *icon_view, gboolean reorderable);";subroutine gtk_icon_view_set_reorderable(icon_view, reorderable) bind(c)
gtk;gtk_icon_view_set_row_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_row_spacing (GtkIconView *icon_view, int row_spacing);";subroutine gtk_icon_view_set_row_spacing(icon_view, row_spacing) bind(c)
gtk;gtk_icon_view_set_selection_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_selection_mode (GtkIconView *icon_view, GtkSelectionMode mode);";subroutine gtk_icon_view_set_selection_mode(icon_view, mode) bind(c)
gtk;gtk_icon_view_set_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_spacing (GtkIconView *icon_view, int spacing);";subroutine gtk_icon_view_set_spacing(icon_view, spacing) bind(c)
gtk;gtk_icon_view_set_text_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_text_column (GtkIconView *icon_view, int column);";subroutine gtk_icon_view_set_text_column(icon_view, column) bind(c)
gtk;gtk_icon_view_set_tooltip_cell;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_tooltip_cell (GtkIconView *icon_view, GtkTooltip *tooltip, GtkTreePath *path, GtkCellRenderer *cell);";subroutine gtk_icon_view_set_tooltip_cell(icon_view, tooltip, path, cell) bind(c)
gtk;gtk_icon_view_set_tooltip_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_tooltip_column (GtkIconView *icon_view, int column);";subroutine gtk_icon_view_set_tooltip_column(icon_view, column) bind(c)
gtk;gtk_icon_view_set_tooltip_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_set_tooltip_item (GtkIconView *icon_view, GtkTooltip *tooltip, GtkTreePath *path);";subroutine gtk_icon_view_set_tooltip_item(icon_view, tooltip, path) bind(c)
gtk;gtk_icon_view_unselect_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_unselect_all (GtkIconView *icon_view);";subroutine gtk_icon_view_unselect_all(icon_view) bind(c)
gtk;gtk_icon_view_unselect_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_unselect_path (GtkIconView *icon_view, GtkTreePath *path);";subroutine gtk_icon_view_unselect_path(icon_view, path) bind(c)
gtk;gtk_icon_view_unset_model_drag_dest;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_unset_model_drag_dest (GtkIconView *icon_view);";subroutine gtk_icon_view_unset_model_drag_dest(icon_view) bind(c)
gtk;gtk_icon_view_unset_model_drag_source;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkiconview.h;"void gtk_icon_view_unset_model_drag_source (GtkIconView *icon_view);";subroutine gtk_icon_view_unset_model_drag_source(icon_view) bind(c)
gtk;gtk_im_context_delete_surrounding;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"gboolean gtk_im_context_delete_surrounding (GtkIMContext *context, int offset, int n_chars);";function gtk_im_context_delete_surrounding(context, offset, n_chars) bind(c)
gtk;gtk_im_context_filter_key;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"gboolean gtk_im_context_filter_key (GtkIMContext *context, gboolean press, GdkSurface *surface, GdkDevice *device, guint32 time, guint keycode, GdkModifierType state, int group);";function gtk_im_context_filter_key(context, press, surface, device, time, keycode, state, group) bind(c)
gtk;gtk_im_context_filter_keypress;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"gboolean gtk_im_context_filter_keypress (GtkIMContext *context, GdkEvent *event);";function gtk_im_context_filter_keypress(context, event) bind(c)
gtk;gtk_im_context_focus_in;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"void gtk_im_context_focus_in (GtkIMContext *context);";subroutine gtk_im_context_focus_in(context) bind(c)
gtk;gtk_im_context_focus_out;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"void gtk_im_context_focus_out (GtkIMContext *context);";subroutine gtk_im_context_focus_out(context) bind(c)
gtk;gtk_im_context_get_preedit_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"void gtk_im_context_get_preedit_string (GtkIMContext *context, char **str, PangoAttrList **attrs, int *cursor_pos);";subroutine gtk_im_context_get_preedit_string(context, str, attrs, cursor_pos) bind(c)
gtk;gtk_im_context_get_surrounding;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"gboolean gtk_im_context_get_surrounding (GtkIMContext *context, char **text, int *cursor_index);";function gtk_im_context_get_surrounding(context, text, cursor_index) bind(c)
gtk;gtk_im_context_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"GType gtk_im_context_get_type (void) G_GNUC_CONST;";function gtk_im_context_get_type() bind(c)
gtk;gtk_im_context_reset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"void gtk_im_context_reset (GtkIMContext *context);";subroutine gtk_im_context_reset(context) bind(c)
gtk;gtk_im_context_set_client_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"void gtk_im_context_set_client_widget (GtkIMContext *context, GtkWidget *widget);";subroutine gtk_im_context_set_client_widget(context, widget) bind(c)
gtk;gtk_im_context_set_cursor_location;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"void gtk_im_context_set_cursor_location (GtkIMContext *context, const GdkRectangle *area);";subroutine gtk_im_context_set_cursor_location(context, area) bind(c)
gtk;gtk_im_context_set_surrounding;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"void gtk_im_context_set_surrounding (GtkIMContext *context, const char *text, int len, int cursor_index);";subroutine gtk_im_context_set_surrounding(context, text, len, cursor_index) bind(c)
gtk;gtk_im_context_set_use_preedit;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontext.h;"void gtk_im_context_set_use_preedit (GtkIMContext *context, gboolean use_preedit);";subroutine gtk_im_context_set_use_preedit(context, use_preedit) bind(c)
gtk;gtk_im_context_simple_add_compose_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontextsimple.h;"void gtk_im_context_simple_add_compose_file (GtkIMContextSimple *context_simple, const char *compose_file);";subroutine gtk_im_context_simple_add_compose_file(context_simple, compose_file) bind(c)
gtk;gtk_im_context_simple_add_table;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontextsimple.h;"void gtk_im_context_simple_add_table (GtkIMContextSimple *context_simple, guint16 *data, int max_seq_len, int n_seqs);";subroutine gtk_im_context_simple_add_table(context_simple, data, max_seq_len, n_seqs) bind(c)
gtk;gtk_im_context_simple_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontextsimple.h;"GType gtk_im_context_simple_get_type (void) G_GNUC_CONST;";function gtk_im_context_simple_get_type() bind(c)
gtk;gtk_im_context_simple_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimcontextsimple.h;"GtkIMContext *gtk_im_context_simple_new (void);";function gtk_im_context_simple_new() bind(c)
gtk;gtk_im_modules_init;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimmodule.h;"void gtk_im_modules_init (void);";subroutine gtk_im_modules_init() bind(c)
gtk;gtk_im_multicontext_get_context_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimmulticontext.h;"const char * gtk_im_multicontext_get_context_id (GtkIMMulticontext *context);";function gtk_im_multicontext_get_context_id(context) bind(c)
gtk;gtk_im_multicontext_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimmulticontext.h;"GType gtk_im_multicontext_get_type (void) G_GNUC_CONST;";function gtk_im_multicontext_get_type() bind(c)
gtk;gtk_im_multicontext_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimmulticontext.h;"GtkIMContext *gtk_im_multicontext_new (void);";function gtk_im_multicontext_new() bind(c)
gtk;gtk_im_multicontext_set_context_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimmulticontext.h;"void gtk_im_multicontext_set_context_id (GtkIMMulticontext *context, const char *context_id);";subroutine gtk_im_multicontext_set_context_id(context, context_id) bind(c)
gtk;gtk_image_clear;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"void gtk_image_clear (GtkImage *image);";subroutine gtk_image_clear(image) bind(c)
gtk;gtk_image_get_gicon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"GIcon * gtk_image_get_gicon (GtkImage *image);";function gtk_image_get_gicon(image) bind(c)
gtk;gtk_image_get_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"const char *gtk_image_get_icon_name (GtkImage *image);";function gtk_image_get_icon_name(image) bind(c)
gtk;gtk_image_get_icon_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"GtkIconSize gtk_image_get_icon_size (GtkImage *image);";function gtk_image_get_icon_size(image) bind(c)
gtk;gtk_image_get_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"GdkPaintable *gtk_image_get_paintable (GtkImage *image);";function gtk_image_get_paintable(image) bind(c)
gtk;gtk_image_get_pixel_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"int gtk_image_get_pixel_size (GtkImage *image);";function gtk_image_get_pixel_size(image) bind(c)
gtk;gtk_image_get_storage_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"GtkImageType gtk_image_get_storage_type (GtkImage *image);";function gtk_image_get_storage_type(image) bind(c)
gtk;gtk_image_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"GType gtk_image_get_type (void) G_GNUC_CONST;";function gtk_image_get_type() bind(c)
gtk;gtk_image_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"GtkWidget* gtk_image_new (void);";function gtk_image_new() bind(c)
gtk;gtk_image_new_from_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"GtkWidget* gtk_image_new_from_file (const char *filename);";function gtk_image_new_from_file(filename) bind(c)
gtk;gtk_image_new_from_gicon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"GtkWidget* gtk_image_new_from_gicon (GIcon *icon);";function gtk_image_new_from_gicon(icon) bind(c)
gtk;gtk_image_new_from_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"GtkWidget* gtk_image_new_from_icon_name (const char *icon_name);";function gtk_image_new_from_icon_name(icon_name) bind(c)
gtk;gtk_image_new_from_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"GtkWidget* gtk_image_new_from_paintable (GdkPaintable *paintable);";function gtk_image_new_from_paintable(paintable) bind(c)
gtk;gtk_image_new_from_pixbuf;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"GtkWidget* gtk_image_new_from_pixbuf (GdkPixbuf *pixbuf);";function gtk_image_new_from_pixbuf(pixbuf) bind(c)
gtk;gtk_image_new_from_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"GtkWidget* gtk_image_new_from_resource (const char *resource_path);";function gtk_image_new_from_resource(resource_path) bind(c)
gtk;gtk_image_set_from_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"void gtk_image_set_from_file (GtkImage *image, const char *filename);";subroutine gtk_image_set_from_file(image, filename) bind(c)
gtk;gtk_image_set_from_gicon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"void gtk_image_set_from_gicon (GtkImage *image, GIcon *icon);";subroutine gtk_image_set_from_gicon(image, icon) bind(c)
gtk;gtk_image_set_from_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"void gtk_image_set_from_icon_name (GtkImage *image, const char *icon_name);";subroutine gtk_image_set_from_icon_name(image, icon_name) bind(c)
gtk;gtk_image_set_from_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"void gtk_image_set_from_paintable (GtkImage *image, GdkPaintable *paintable);";subroutine gtk_image_set_from_paintable(image, paintable) bind(c)
gtk;gtk_image_set_from_pixbuf;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"void gtk_image_set_from_pixbuf (GtkImage *image, GdkPixbuf *pixbuf);";subroutine gtk_image_set_from_pixbuf(image, pixbuf) bind(c)
gtk;gtk_image_set_from_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"void gtk_image_set_from_resource (GtkImage *image, const char *resource_path);";subroutine gtk_image_set_from_resource(image, resource_path) bind(c)
gtk;gtk_image_set_icon_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"void gtk_image_set_icon_size (GtkImage *image, GtkIconSize icon_size);";subroutine gtk_image_set_icon_size(image, icon_size) bind(c)
gtk;gtk_image_set_pixel_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkimage.h;"void gtk_image_set_pixel_size (GtkImage *image, int pixel_size);";subroutine gtk_image_set_pixel_size(image, pixel_size) bind(c)
gtk;gtk_info_bar_add_action_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"void gtk_info_bar_add_action_widget (GtkInfoBar *info_bar, GtkWidget *child, int response_id);";subroutine gtk_info_bar_add_action_widget(info_bar, child, response_id) bind(c)
gtk;gtk_info_bar_add_button;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"GtkWidget *gtk_info_bar_add_button (GtkInfoBar *info_bar, const char *button_text, int response_id);";function gtk_info_bar_add_button(info_bar, button_text, response_id) bind(c)
gtk;gtk_info_bar_add_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"void gtk_info_bar_add_child (GtkInfoBar *info_bar, GtkWidget *widget);";subroutine gtk_info_bar_add_child(info_bar, widget) bind(c)
gtk;gtk_info_bar_get_message_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"GtkMessageType gtk_info_bar_get_message_type (GtkInfoBar *info_bar);";function gtk_info_bar_get_message_type(info_bar) bind(c)
gtk;gtk_info_bar_get_revealed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"gboolean gtk_info_bar_get_revealed (GtkInfoBar *info_bar);";function gtk_info_bar_get_revealed(info_bar) bind(c)
gtk;gtk_info_bar_get_show_close_button;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"gboolean gtk_info_bar_get_show_close_button (GtkInfoBar *info_bar);";function gtk_info_bar_get_show_close_button(info_bar) bind(c)
gtk;gtk_info_bar_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"GType gtk_info_bar_get_type (void) G_GNUC_CONST;";function gtk_info_bar_get_type() bind(c)
gtk;gtk_info_bar_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"GtkWidget *gtk_info_bar_new (void);";function gtk_info_bar_new() bind(c)
gtk;gtk_info_bar_remove_action_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"void gtk_info_bar_remove_action_widget (GtkInfoBar *info_bar, GtkWidget *widget);";subroutine gtk_info_bar_remove_action_widget(info_bar, widget) bind(c)
gtk;gtk_info_bar_remove_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"void gtk_info_bar_remove_child (GtkInfoBar *info_bar, GtkWidget *widget);";subroutine gtk_info_bar_remove_child(info_bar, widget) bind(c)
gtk;gtk_info_bar_response;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"void gtk_info_bar_response (GtkInfoBar *info_bar, int response_id);";subroutine gtk_info_bar_response(info_bar, response_id) bind(c)
gtk;gtk_info_bar_set_default_response;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"void gtk_info_bar_set_default_response (GtkInfoBar *info_bar, int response_id);";subroutine gtk_info_bar_set_default_response(info_bar, response_id) bind(c)
gtk;gtk_info_bar_set_message_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"void gtk_info_bar_set_message_type (GtkInfoBar *info_bar, GtkMessageType message_type);";subroutine gtk_info_bar_set_message_type(info_bar, message_type) bind(c)
gtk;gtk_info_bar_set_response_sensitive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"void gtk_info_bar_set_response_sensitive (GtkInfoBar *info_bar, int response_id, gboolean setting);";subroutine gtk_info_bar_set_response_sensitive(info_bar, response_id, setting) bind(c)
gtk;gtk_info_bar_set_revealed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"void gtk_info_bar_set_revealed (GtkInfoBar *info_bar, gboolean revealed);";subroutine gtk_info_bar_set_revealed(info_bar, revealed) bind(c)
gtk;gtk_info_bar_set_show_close_button;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkinfobar.h;"void gtk_info_bar_set_show_close_button (GtkInfoBar *info_bar, gboolean setting);";subroutine gtk_info_bar_set_show_close_button(info_bar, setting) bind(c)
gtk;gtk_init_abi_check;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmain.h;"void gtk_init_abi_check (int num_checks, size_t sizeof_GtkWindow, size_t sizeof_GtkBox);";subroutine gtk_init_abi_check(num_checks, sizeof_GtkWindow, sizeof_GtkBox) bind(c)
gtk;gtk_init_check;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmain.h;"gboolean gtk_init_check (void);";function gtk_init_check() bind(c)
gtk;gtk_init_check_abi_check;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmain.h;"gboolean gtk_init_check_abi_check (int num_checks, size_t sizeof_GtkWindow, size_t sizeof_GtkBox);";function gtk_init_check_abi_check(num_checks, sizeof_GtkWindow, sizeof_GtkBox) bind(c)
gtk;gtk_is_initialized;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmain.h;"gboolean gtk_is_initialized (void);";function gtk_is_initialized() bind(c)
gtk;gtk_keyval_trigger_get_keyval;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"guint gtk_keyval_trigger_get_keyval (GtkKeyvalTrigger *self);";function gtk_keyval_trigger_get_keyval(self) bind(c)
gtk;gtk_keyval_trigger_get_modifiers;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"GdkModifierType gtk_keyval_trigger_get_modifiers (GtkKeyvalTrigger *self);";function gtk_keyval_trigger_get_modifiers(self) bind(c)
gtk;gtk_label_get_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"PangoAttrList *gtk_label_get_attributes (GtkLabel *self);";function gtk_label_get_attributes(self) bind(c)
gtk;gtk_label_get_current_uri;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"const char *gtk_label_get_current_uri (GtkLabel *self);";function gtk_label_get_current_uri(self) bind(c)
gtk;gtk_label_get_ellipsize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"PangoEllipsizeMode gtk_label_get_ellipsize (GtkLabel *self);";function gtk_label_get_ellipsize(self) bind(c)
gtk;gtk_label_get_extra_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"GMenuModel * gtk_label_get_extra_menu (GtkLabel *self);";function gtk_label_get_extra_menu(self) bind(c)
gtk;gtk_label_get_justify;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"GtkJustification gtk_label_get_justify (GtkLabel *self);";function gtk_label_get_justify(self) bind(c)
gtk;gtk_label_get_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"const char * gtk_label_get_label (GtkLabel *self);";function gtk_label_get_label(self) bind(c)
gtk;gtk_label_get_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"PangoLayout *gtk_label_get_layout (GtkLabel *self);";function gtk_label_get_layout(self) bind(c)
gtk;gtk_label_get_layout_offsets;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_get_layout_offsets (GtkLabel *self, int *x, int *y);";subroutine gtk_label_get_layout_offsets(self, x, y) bind(c)
gtk;gtk_label_get_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"int gtk_label_get_lines (GtkLabel *self);";function gtk_label_get_lines(self) bind(c)
gtk;gtk_label_get_max_width_chars;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"int gtk_label_get_max_width_chars (GtkLabel *self);";function gtk_label_get_max_width_chars(self) bind(c)
gtk;gtk_label_get_mnemonic_keyval;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"guint gtk_label_get_mnemonic_keyval (GtkLabel *self);";function gtk_label_get_mnemonic_keyval(self) bind(c)
gtk;gtk_label_get_mnemonic_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"GtkWidget *gtk_label_get_mnemonic_widget (GtkLabel *self);";function gtk_label_get_mnemonic_widget(self) bind(c)
gtk;gtk_label_get_selectable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"gboolean gtk_label_get_selectable (GtkLabel *self);";function gtk_label_get_selectable(self) bind(c)
gtk;gtk_label_get_selection_bounds;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"gboolean gtk_label_get_selection_bounds (GtkLabel *self, int *start, int *end);";function gtk_label_get_selection_bounds(self, start, end) bind(c)
gtk;gtk_label_get_single_line_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"gboolean gtk_label_get_single_line_mode (GtkLabel *self);";function gtk_label_get_single_line_mode(self) bind(c)
gtk;gtk_label_get_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"const char * gtk_label_get_text (GtkLabel *self);";function gtk_label_get_text(self) bind(c)
gtk;gtk_label_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"GType gtk_label_get_type (void) G_GNUC_CONST;";function gtk_label_get_type() bind(c)
gtk;gtk_label_get_use_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"gboolean gtk_label_get_use_markup (GtkLabel *self);";function gtk_label_get_use_markup(self) bind(c)
gtk;gtk_label_get_use_underline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"gboolean gtk_label_get_use_underline (GtkLabel *self);";function gtk_label_get_use_underline(self) bind(c)
gtk;gtk_label_get_width_chars;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"int gtk_label_get_width_chars (GtkLabel *self);";function gtk_label_get_width_chars(self) bind(c)
gtk;gtk_label_get_wrap;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"gboolean gtk_label_get_wrap (GtkLabel *self);";function gtk_label_get_wrap(self) bind(c)
gtk;gtk_label_get_wrap_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"PangoWrapMode gtk_label_get_wrap_mode (GtkLabel *self);";function gtk_label_get_wrap_mode(self) bind(c)
gtk;gtk_label_get_xalign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"float gtk_label_get_xalign (GtkLabel *self);";function gtk_label_get_xalign(self) bind(c)
gtk;gtk_label_get_yalign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"float gtk_label_get_yalign (GtkLabel *self);";function gtk_label_get_yalign(self) bind(c)
gtk;gtk_label_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"GtkWidget* gtk_label_new (const char *str);";function gtk_label_new(str) bind(c)
gtk;gtk_label_new_with_mnemonic;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"GtkWidget* gtk_label_new_with_mnemonic (const char *str);";function gtk_label_new_with_mnemonic(str) bind(c)
gtk;gtk_label_select_region;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_select_region (GtkLabel *self, int start_offset, int end_offset);";subroutine gtk_label_select_region(self, start_offset, end_offset) bind(c)
gtk;gtk_label_set_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_attributes (GtkLabel *self, PangoAttrList *attrs);";subroutine gtk_label_set_attributes(self, attrs) bind(c)
gtk;gtk_label_set_ellipsize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_ellipsize (GtkLabel *self, PangoEllipsizeMode mode);";subroutine gtk_label_set_ellipsize(self, mode) bind(c)
gtk;gtk_label_set_extra_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_extra_menu (GtkLabel *self, GMenuModel *model);";subroutine gtk_label_set_extra_menu(self, model) bind(c)
gtk;gtk_label_set_justify;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_justify (GtkLabel *self, GtkJustification jtype);";subroutine gtk_label_set_justify(self, jtype) bind(c)
gtk;gtk_label_set_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_label (GtkLabel *self, const char *str);";subroutine gtk_label_set_label(self, str) bind(c)
gtk;gtk_label_set_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_lines (GtkLabel *self, int lines);";subroutine gtk_label_set_lines(self, lines) bind(c)
gtk;gtk_label_set_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_markup (GtkLabel *self, const char *str);";subroutine gtk_label_set_markup(self, str) bind(c)
gtk;gtk_label_set_markup_with_mnemonic;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_markup_with_mnemonic (GtkLabel *self, const char *str);";subroutine gtk_label_set_markup_with_mnemonic(self, str) bind(c)
gtk;gtk_label_set_max_width_chars;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_max_width_chars (GtkLabel *self, int n_chars);";subroutine gtk_label_set_max_width_chars(self, n_chars) bind(c)
gtk;gtk_label_set_mnemonic_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_mnemonic_widget (GtkLabel *self, GtkWidget *widget);";subroutine gtk_label_set_mnemonic_widget(self, widget) bind(c)
gtk;gtk_label_set_selectable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_selectable (GtkLabel *self, gboolean setting);";subroutine gtk_label_set_selectable(self, setting) bind(c)
gtk;gtk_label_set_single_line_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_single_line_mode (GtkLabel *self, gboolean single_line_mode);";subroutine gtk_label_set_single_line_mode(self, single_line_mode) bind(c)
gtk;gtk_label_set_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_text (GtkLabel *self, const char *str);";subroutine gtk_label_set_text(self, str) bind(c)
gtk;gtk_label_set_text_with_mnemonic;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_text_with_mnemonic (GtkLabel *self, const char *str);";subroutine gtk_label_set_text_with_mnemonic(self, str) bind(c)
gtk;gtk_label_set_use_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_use_markup (GtkLabel *self, gboolean setting);";subroutine gtk_label_set_use_markup(self, setting) bind(c)
gtk;gtk_label_set_use_underline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_use_underline (GtkLabel *self, gboolean setting);";subroutine gtk_label_set_use_underline(self, setting) bind(c)
gtk;gtk_label_set_width_chars;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_width_chars (GtkLabel *self, int n_chars);";subroutine gtk_label_set_width_chars(self, n_chars) bind(c)
gtk;gtk_label_set_wrap;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_wrap (GtkLabel *self, gboolean wrap);";subroutine gtk_label_set_wrap(self, wrap) bind(c)
gtk;gtk_label_set_wrap_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_wrap_mode (GtkLabel *self, PangoWrapMode wrap_mode);";subroutine gtk_label_set_wrap_mode(self, wrap_mode) bind(c)
gtk;gtk_label_set_xalign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_xalign (GtkLabel *self, float xalign);";subroutine gtk_label_set_xalign(self, xalign) bind(c)
gtk;gtk_label_set_yalign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklabel.h;"void gtk_label_set_yalign (GtkLabel *self, float yalign);";subroutine gtk_label_set_yalign(self, yalign) bind(c)
gtk;gtk_layout_child_get_child_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklayoutchild.h;"GtkWidget * gtk_layout_child_get_child_widget (GtkLayoutChild *layout_child);";function gtk_layout_child_get_child_widget(layout_child) bind(c)
gtk;gtk_layout_manager_allocate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklayoutmanager.h;"void gtk_layout_manager_allocate (GtkLayoutManager *manager, GtkWidget *widget, int width, int height, int baseline);";subroutine gtk_layout_manager_allocate(manager, widget, width, height, baseline) bind(c)
gtk;gtk_layout_manager_get_layout_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklayoutmanager.h;"GtkLayoutChild * gtk_layout_manager_get_layout_child (GtkLayoutManager *manager, GtkWidget *child);";function gtk_layout_manager_get_layout_child(manager, child) bind(c)
gtk;gtk_layout_manager_get_request_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklayoutmanager.h;"GtkSizeRequestMode gtk_layout_manager_get_request_mode (GtkLayoutManager *manager);";function gtk_layout_manager_get_request_mode(manager) bind(c)
gtk;gtk_layout_manager_get_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklayoutmanager.h;"GtkWidget * gtk_layout_manager_get_widget (GtkLayoutManager *manager);";function gtk_layout_manager_get_widget(manager) bind(c)
gtk;gtk_layout_manager_layout_changed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklayoutmanager.h;"void gtk_layout_manager_layout_changed (GtkLayoutManager *manager);";subroutine gtk_layout_manager_layout_changed(manager) bind(c)
gtk;gtk_level_bar_add_offset_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"void gtk_level_bar_add_offset_value (GtkLevelBar *self, const char *name, double value);";subroutine gtk_level_bar_add_offset_value(self, name, value) bind(c)
gtk;gtk_level_bar_get_inverted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"gboolean gtk_level_bar_get_inverted (GtkLevelBar *self);";function gtk_level_bar_get_inverted(self) bind(c)
gtk;gtk_level_bar_get_max_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"double gtk_level_bar_get_max_value (GtkLevelBar *self);";function gtk_level_bar_get_max_value(self) bind(c)
gtk;gtk_level_bar_get_min_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"double gtk_level_bar_get_min_value (GtkLevelBar *self);";function gtk_level_bar_get_min_value(self) bind(c)
gtk;gtk_level_bar_get_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"GtkLevelBarMode gtk_level_bar_get_mode (GtkLevelBar *self);";function gtk_level_bar_get_mode(self) bind(c)
gtk;gtk_level_bar_get_offset_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"gboolean gtk_level_bar_get_offset_value (GtkLevelBar *self, const char *name, double *value);";function gtk_level_bar_get_offset_value(self, name, value) bind(c)
gtk;gtk_level_bar_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"GType gtk_level_bar_get_type (void) G_GNUC_CONST;";function gtk_level_bar_get_type() bind(c)
gtk;gtk_level_bar_get_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"double gtk_level_bar_get_value (GtkLevelBar *self);";function gtk_level_bar_get_value(self) bind(c)
gtk;gtk_level_bar_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"GtkWidget *gtk_level_bar_new (void);";function gtk_level_bar_new() bind(c)
gtk;gtk_level_bar_new_for_interval;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"GtkWidget *gtk_level_bar_new_for_interval (double min_value, double max_value);";function gtk_level_bar_new_for_interval(min_value, max_value) bind(c)
gtk;gtk_level_bar_remove_offset_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"void gtk_level_bar_remove_offset_value (GtkLevelBar *self, const char *name);";subroutine gtk_level_bar_remove_offset_value(self, name) bind(c)
gtk;gtk_level_bar_set_inverted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"void gtk_level_bar_set_inverted (GtkLevelBar *self, gboolean inverted);";subroutine gtk_level_bar_set_inverted(self, inverted) bind(c)
gtk;gtk_level_bar_set_max_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"void gtk_level_bar_set_max_value (GtkLevelBar *self, double value);";subroutine gtk_level_bar_set_max_value(self, value) bind(c)
gtk;gtk_level_bar_set_min_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"void gtk_level_bar_set_min_value (GtkLevelBar *self, double value);";subroutine gtk_level_bar_set_min_value(self, value) bind(c)
gtk;gtk_level_bar_set_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"void gtk_level_bar_set_mode (GtkLevelBar *self, GtkLevelBarMode mode);";subroutine gtk_level_bar_set_mode(self, mode) bind(c)
gtk;gtk_level_bar_set_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklevelbar.h;"void gtk_level_bar_set_value (GtkLevelBar *self, double value);";subroutine gtk_level_bar_set_value(self, value) bind(c)
gtk;gtk_link_button_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklinkbutton.h;"GType gtk_link_button_get_type (void) G_GNUC_CONST;";function gtk_link_button_get_type() bind(c)
gtk;gtk_link_button_get_uri;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklinkbutton.h;"const char * gtk_link_button_get_uri (GtkLinkButton *link_button);";function gtk_link_button_get_uri(link_button) bind(c)
gtk;gtk_link_button_get_visited;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklinkbutton.h;"gboolean gtk_link_button_get_visited (GtkLinkButton *link_button);";function gtk_link_button_get_visited(link_button) bind(c)
gtk;gtk_link_button_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklinkbutton.h;"GtkWidget * gtk_link_button_new (const char *uri);";function gtk_link_button_new(uri) bind(c)
gtk;gtk_link_button_new_with_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklinkbutton.h;"GtkWidget * gtk_link_button_new_with_label (const char *uri, const char *label);";function gtk_link_button_new_with_label(uri, label) bind(c)
gtk;gtk_link_button_set_uri;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklinkbutton.h;"void gtk_link_button_set_uri (GtkLinkButton *link_button, const char *uri);";subroutine gtk_link_button_set_uri(link_button, uri) bind(c)
gtk;gtk_link_button_set_visited;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklinkbutton.h;"void gtk_link_button_set_visited (GtkLinkButton *link_button, gboolean visited);";subroutine gtk_link_button_set_visited(link_button, visited) bind(c)
gtk;gtk_list_base_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbase.h;"GType gtk_list_base_get_type (void) G_GNUC_CONST;";function gtk_list_base_get_type() bind(c)
gtk;gtk_list_box_append;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_append (GtkListBox *box, GtkWidget *child);";subroutine gtk_list_box_append(box, child) bind(c)
gtk;gtk_list_box_bind_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_bind_model (GtkListBox *box, GListModel *model, GtkListBoxCreateWidgetFunc create_widget_func, gpointer user_data, GDestroyNotify user_data_free_func);";subroutine gtk_list_box_bind_model(box, model, create_widget_func, user_data, user_data_free_func) bind(c)
gtk;gtk_list_box_drag_highlight_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_drag_highlight_row (GtkListBox *box, GtkListBoxRow *row);";subroutine gtk_list_box_drag_highlight_row(box, row) bind(c)
gtk;gtk_list_box_drag_unhighlight_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_drag_unhighlight_row (GtkListBox *box);";subroutine gtk_list_box_drag_unhighlight_row(box) bind(c)
gtk;gtk_list_box_get_activate_on_single_click;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"gboolean gtk_list_box_get_activate_on_single_click (GtkListBox *box);";function gtk_list_box_get_activate_on_single_click(box) bind(c)
gtk;gtk_list_box_get_adjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"GtkAdjustment *gtk_list_box_get_adjustment (GtkListBox *box);";function gtk_list_box_get_adjustment(box) bind(c)
gtk;gtk_list_box_get_row_at_index;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"GtkListBoxRow* gtk_list_box_get_row_at_index (GtkListBox *box, int index_);";function gtk_list_box_get_row_at_index(box, index_) bind(c)
gtk;gtk_list_box_get_row_at_y;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"GtkListBoxRow* gtk_list_box_get_row_at_y (GtkListBox *box, int y);";function gtk_list_box_get_row_at_y(box, y) bind(c)
gtk;gtk_list_box_get_selected_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"GtkListBoxRow* gtk_list_box_get_selected_row (GtkListBox *box);";function gtk_list_box_get_selected_row(box) bind(c)
gtk;gtk_list_box_get_selected_rows;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"GList *gtk_list_box_get_selected_rows (GtkListBox *box);";function gtk_list_box_get_selected_rows(box) bind(c)
gtk;gtk_list_box_get_selection_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"GtkSelectionMode gtk_list_box_get_selection_mode (GtkListBox *box);";function gtk_list_box_get_selection_mode(box) bind(c)
gtk;gtk_list_box_get_show_separators;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"gboolean gtk_list_box_get_show_separators (GtkListBox *box);";function gtk_list_box_get_show_separators(box) bind(c)
gtk;gtk_list_box_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"GType gtk_list_box_get_type (void) G_GNUC_CONST;";function gtk_list_box_get_type() bind(c)
gtk;gtk_list_box_insert;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_insert (GtkListBox *box, GtkWidget *child, int position);";subroutine gtk_list_box_insert(box, child, position) bind(c)
gtk;gtk_list_box_invalidate_filter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_invalidate_filter (GtkListBox *box);";subroutine gtk_list_box_invalidate_filter(box) bind(c)
gtk;gtk_list_box_invalidate_headers;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_invalidate_headers (GtkListBox *box);";subroutine gtk_list_box_invalidate_headers(box) bind(c)
gtk;gtk_list_box_invalidate_sort;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_invalidate_sort (GtkListBox *box);";subroutine gtk_list_box_invalidate_sort(box) bind(c)
gtk;gtk_list_box_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"GtkWidget* gtk_list_box_new (void);";function gtk_list_box_new() bind(c)
gtk;gtk_list_box_prepend;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_prepend (GtkListBox *box, GtkWidget *child);";subroutine gtk_list_box_prepend(box, child) bind(c)
gtk;gtk_list_box_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_remove (GtkListBox *box, GtkWidget *child);";subroutine gtk_list_box_remove(box, child) bind(c)
gtk;gtk_list_box_row_changed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_row_changed (GtkListBoxRow *row);";subroutine gtk_list_box_row_changed(row) bind(c)
gtk;gtk_list_box_row_get_activatable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"gboolean gtk_list_box_row_get_activatable (GtkListBoxRow *row);";function gtk_list_box_row_get_activatable(row) bind(c)
gtk;gtk_list_box_row_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"GtkWidget *gtk_list_box_row_get_child (GtkListBoxRow *row);";function gtk_list_box_row_get_child(row) bind(c)
gtk;gtk_list_box_row_get_header;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"GtkWidget* gtk_list_box_row_get_header (GtkListBoxRow *row);";function gtk_list_box_row_get_header(row) bind(c)
gtk;gtk_list_box_row_get_index;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"int gtk_list_box_row_get_index (GtkListBoxRow *row);";function gtk_list_box_row_get_index(row) bind(c)
gtk;gtk_list_box_row_get_selectable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"gboolean gtk_list_box_row_get_selectable (GtkListBoxRow *row);";function gtk_list_box_row_get_selectable(row) bind(c)
gtk;gtk_list_box_row_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"GType gtk_list_box_row_get_type (void) G_GNUC_CONST;";function gtk_list_box_row_get_type() bind(c)
gtk;gtk_list_box_row_is_selected;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"gboolean gtk_list_box_row_is_selected (GtkListBoxRow *row);";function gtk_list_box_row_is_selected(row) bind(c)
gtk;gtk_list_box_row_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"GtkWidget* gtk_list_box_row_new (void);";function gtk_list_box_row_new() bind(c)
gtk;gtk_list_box_row_set_activatable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_row_set_activatable (GtkListBoxRow *row, gboolean activatable);";subroutine gtk_list_box_row_set_activatable(row, activatable) bind(c)
gtk;gtk_list_box_row_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_row_set_child (GtkListBoxRow *row, GtkWidget *child);";subroutine gtk_list_box_row_set_child(row, child) bind(c)
gtk;gtk_list_box_row_set_header;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_row_set_header (GtkListBoxRow *row, GtkWidget *header);";subroutine gtk_list_box_row_set_header(row, header) bind(c)
gtk;gtk_list_box_row_set_selectable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_row_set_selectable (GtkListBoxRow *row, gboolean selectable);";subroutine gtk_list_box_row_set_selectable(row, selectable) bind(c)
gtk;gtk_list_box_select_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_select_all (GtkListBox *box);";subroutine gtk_list_box_select_all(box) bind(c)
gtk;gtk_list_box_select_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_select_row (GtkListBox *box, GtkListBoxRow *row);";subroutine gtk_list_box_select_row(box, row) bind(c)
gtk;gtk_list_box_selected_foreach;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_selected_foreach (GtkListBox *box, GtkListBoxForeachFunc func, gpointer data);";subroutine gtk_list_box_selected_foreach(box, func, data) bind(c)
gtk;gtk_list_box_set_activate_on_single_click;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_set_activate_on_single_click (GtkListBox *box, gboolean single);";subroutine gtk_list_box_set_activate_on_single_click(box, single) bind(c)
gtk;gtk_list_box_set_adjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_set_adjustment (GtkListBox *box, GtkAdjustment *adjustment);";subroutine gtk_list_box_set_adjustment(box, adjustment) bind(c)
gtk;gtk_list_box_set_filter_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_set_filter_func (GtkListBox *box, GtkListBoxFilterFunc filter_func, gpointer user_data, GDestroyNotify destroy);";subroutine gtk_list_box_set_filter_func(box, filter_func, user_data, destroy) bind(c)
gtk;gtk_list_box_set_header_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_set_header_func (GtkListBox *box, GtkListBoxUpdateHeaderFunc update_header, gpointer user_data, GDestroyNotify destroy);";subroutine gtk_list_box_set_header_func(box, update_header, user_data, destroy) bind(c)
gtk;gtk_list_box_set_placeholder;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_set_placeholder (GtkListBox *box, GtkWidget *placeholder);";subroutine gtk_list_box_set_placeholder(box, placeholder) bind(c)
gtk;gtk_list_box_set_selection_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_set_selection_mode (GtkListBox *box, GtkSelectionMode mode);";subroutine gtk_list_box_set_selection_mode(box, mode) bind(c)
gtk;gtk_list_box_set_show_separators;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_set_show_separators (GtkListBox *box, gboolean show_separators);";subroutine gtk_list_box_set_show_separators(box, show_separators) bind(c)
gtk;gtk_list_box_set_sort_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_set_sort_func (GtkListBox *box, GtkListBoxSortFunc sort_func, gpointer user_data, GDestroyNotify destroy);";subroutine gtk_list_box_set_sort_func(box, sort_func, user_data, destroy) bind(c)
gtk;gtk_list_box_unselect_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_unselect_all (GtkListBox *box);";subroutine gtk_list_box_unselect_all(box) bind(c)
gtk;gtk_list_box_unselect_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistbox.h;"void gtk_list_box_unselect_row (GtkListBox *box, GtkListBoxRow *row);";subroutine gtk_list_box_unselect_row(box, row) bind(c)
gtk;gtk_list_item_factory_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistitemfactory.h;"GType gtk_list_item_factory_get_type (void) G_GNUC_CONST;";function gtk_list_item_factory_get_type() bind(c)
gtk;gtk_list_item_get_activatable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistitem.h;"gboolean gtk_list_item_get_activatable (GtkListItem *self) G_GNUC_PURE;";function gtk_list_item_get_activatable(self) bind(c)
gtk;gtk_list_item_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistitem.h;"GtkWidget * gtk_list_item_get_child (GtkListItem *self);";function gtk_list_item_get_child(self) bind(c)
gtk;gtk_list_item_get_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistitem.h;"gpointer gtk_list_item_get_item (GtkListItem *self);";function gtk_list_item_get_item(self) bind(c)
gtk;gtk_list_item_get_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistitem.h;"guint gtk_list_item_get_position (GtkListItem *self) G_GNUC_PURE;";function gtk_list_item_get_position(self) bind(c)
gtk;gtk_list_item_get_selectable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistitem.h;"gboolean gtk_list_item_get_selectable (GtkListItem *self) G_GNUC_PURE;";function gtk_list_item_get_selectable(self) bind(c)
gtk;gtk_list_item_get_selected;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistitem.h;"gboolean gtk_list_item_get_selected (GtkListItem *self) G_GNUC_PURE;";function gtk_list_item_get_selected(self) bind(c)
gtk;gtk_list_item_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistitem.h;"GType gtk_list_item_get_type (void) G_GNUC_CONST;";function gtk_list_item_get_type() bind(c)
gtk;gtk_list_item_set_activatable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistitem.h;"void gtk_list_item_set_activatable (GtkListItem *self, gboolean activatable);";subroutine gtk_list_item_set_activatable(self, activatable) bind(c)
gtk;gtk_list_item_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistitem.h;"void gtk_list_item_set_child (GtkListItem *self, GtkWidget *child);";subroutine gtk_list_item_set_child(self, child) bind(c)
gtk;gtk_list_item_set_selectable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistitem.h;"void gtk_list_item_set_selectable (GtkListItem *self, gboolean selectable);";subroutine gtk_list_item_set_selectable(self, selectable) bind(c)
gtk;gtk_list_store_append;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_append (GtkListStore *list_store, GtkTreeIter *iter);";subroutine gtk_list_store_append(list_store, iter) bind(c)
gtk;gtk_list_store_clear;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_clear (GtkListStore *list_store);";subroutine gtk_list_store_clear(list_store) bind(c)
gtk;gtk_list_store_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"GType gtk_list_store_get_type (void) G_GNUC_CONST;";function gtk_list_store_get_type() bind(c)
gtk;gtk_list_store_insert;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_insert (GtkListStore *list_store, GtkTreeIter *iter, int position);";subroutine gtk_list_store_insert(list_store, iter, position) bind(c)
gtk;gtk_list_store_insert_after;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_insert_after (GtkListStore *list_store, GtkTreeIter *iter, GtkTreeIter *sibling);";subroutine gtk_list_store_insert_after(list_store, iter, sibling) bind(c)
gtk;gtk_list_store_insert_before;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_insert_before (GtkListStore *list_store, GtkTreeIter *iter, GtkTreeIter *sibling);";subroutine gtk_list_store_insert_before(list_store, iter, sibling) bind(c)
gtk;gtk_list_store_insert_with_valuesv;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_insert_with_valuesv (GtkListStore *list_store, GtkTreeIter *iter, int position, int *columns, GValue *values, int n_values);";subroutine gtk_list_store_insert_with_valuesv(list_store, iter, position, columns, values, n_values) bind(c)
gtk;gtk_list_store_iter_is_valid;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"gboolean gtk_list_store_iter_is_valid (GtkListStore *list_store, GtkTreeIter *iter);";function gtk_list_store_iter_is_valid(list_store, iter) bind(c)
gtk;gtk_list_store_move_after;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_move_after (GtkListStore *store, GtkTreeIter *iter, GtkTreeIter *position);";subroutine gtk_list_store_move_after(store, iter, position) bind(c)
gtk;gtk_list_store_move_before;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_move_before (GtkListStore *store, GtkTreeIter *iter, GtkTreeIter *position);";subroutine gtk_list_store_move_before(store, iter, position) bind(c)
gtk;gtk_list_store_newv;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"GtkListStore *gtk_list_store_newv (int n_columns, GType *types);";function gtk_list_store_newv(n_columns, types) bind(c)
gtk;gtk_list_store_prepend;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_prepend (GtkListStore *list_store, GtkTreeIter *iter);";subroutine gtk_list_store_prepend(list_store, iter) bind(c)
gtk;gtk_list_store_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"gboolean gtk_list_store_remove (GtkListStore *list_store, GtkTreeIter *iter);";function gtk_list_store_remove(list_store, iter) bind(c)
gtk;gtk_list_store_reorder;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_reorder (GtkListStore *store, int *new_order);";subroutine gtk_list_store_reorder(store, new_order) bind(c)
gtk;gtk_list_store_set_column_types;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_set_column_types (GtkListStore *list_store, int n_columns, GType *types);";subroutine gtk_list_store_set_column_types(list_store, n_columns, types) bind(c)
gtk;gtk_list_store_set_valist;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_set_valist (GtkListStore *list_store, GtkTreeIter *iter, va_list var_args);";subroutine gtk_list_store_set_valist(list_store, iter, var_args) bind(c)
gtk;gtk_list_store_set_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_set_value (GtkListStore *list_store, GtkTreeIter *iter, int column, GValue *value);";subroutine gtk_list_store_set_value(list_store, iter, column, value) bind(c)
gtk;gtk_list_store_set_valuesv;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_set_valuesv (GtkListStore *list_store, GtkTreeIter *iter, int *columns, GValue *values, int n_values);";subroutine gtk_list_store_set_valuesv(list_store, iter, columns, values, n_values) bind(c)
gtk;gtk_list_store_swap;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkliststore.h;"void gtk_list_store_swap (GtkListStore *store, GtkTreeIter *a, GtkTreeIter *b);";subroutine gtk_list_store_swap(store, a, b) bind(c)
gtk;gtk_list_view_get_enable_rubberband;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistview.h;"gboolean gtk_list_view_get_enable_rubberband (GtkListView *self);";function gtk_list_view_get_enable_rubberband(self) bind(c)
gtk;gtk_list_view_get_factory;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistview.h;"GtkListItemFactory * gtk_list_view_get_factory (GtkListView *self);";function gtk_list_view_get_factory(self) bind(c)
gtk;gtk_list_view_get_model;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistview.h;"GtkSelectionModel * gtk_list_view_get_model (GtkListView *self);";function gtk_list_view_get_model(self) bind(c)
gtk;gtk_list_view_get_show_separators;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistview.h;"gboolean gtk_list_view_get_show_separators (GtkListView *self);";function gtk_list_view_get_show_separators(self) bind(c)
gtk;gtk_list_view_get_single_click_activate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistview.h;"gboolean gtk_list_view_get_single_click_activate (GtkListView *self);";function gtk_list_view_get_single_click_activate(self) bind(c)
gtk;gtk_list_view_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistview.h;"GType gtk_list_view_get_type (void) G_GNUC_CONST;";function gtk_list_view_get_type() bind(c)
gtk;gtk_list_view_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistview.h;"GtkWidget * gtk_list_view_new (GtkSelectionModel *model, GtkListItemFactory *factory);";function gtk_list_view_new(model, factory) bind(c)
gtk;gtk_list_view_set_enable_rubberband;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistview.h;"void gtk_list_view_set_enable_rubberband (GtkListView *self, gboolean enable_rubberband);";subroutine gtk_list_view_set_enable_rubberband(self, enable_rubberband) bind(c)
gtk;gtk_list_view_set_factory;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistview.h;"void gtk_list_view_set_factory (GtkListView *self, GtkListItemFactory *factory);";subroutine gtk_list_view_set_factory(self, factory) bind(c)
gtk;gtk_list_view_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistview.h;"void gtk_list_view_set_model (GtkListView *self, GtkSelectionModel *model);";subroutine gtk_list_view_set_model(self, model) bind(c)
gtk;gtk_list_view_set_show_separators;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistview.h;"void gtk_list_view_set_show_separators (GtkListView *self, gboolean show_separators);";subroutine gtk_list_view_set_show_separators(self, show_separators) bind(c)
gtk;gtk_list_view_set_single_click_activate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklistview.h;"void gtk_list_view_set_single_click_activate (GtkListView *self, gboolean single_click_activate);";subroutine gtk_list_view_set_single_click_activate(self, single_click_activate) bind(c)
gtk;gtk_lock_button_get_permission;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklockbutton.h;"GPermission *gtk_lock_button_get_permission (GtkLockButton *button);";function gtk_lock_button_get_permission(button) bind(c)
gtk;gtk_lock_button_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklockbutton.h;"GType gtk_lock_button_get_type (void) G_GNUC_CONST;";function gtk_lock_button_get_type() bind(c)
gtk;gtk_lock_button_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklockbutton.h;"GtkWidget *gtk_lock_button_new (GPermission *permission);";function gtk_lock_button_new(permission) bind(c)
gtk;gtk_lock_button_set_permission;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtklockbutton.h;"void gtk_lock_button_set_permission (GtkLockButton *button, GPermission *permission);";subroutine gtk_lock_button_set_permission(button, permission) bind(c)
gtk;gtk_map_list_model_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmaplistmodel.h;"GListModel * gtk_map_list_model_get_model (GtkMapListModel *self);";function gtk_map_list_model_get_model(self) bind(c)
gtk;gtk_map_list_model_has_map;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmaplistmodel.h;"gboolean gtk_map_list_model_has_map (GtkMapListModel *self);";function gtk_map_list_model_has_map(self) bind(c)
gtk;gtk_map_list_model_set_map_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmaplistmodel.h;"void gtk_map_list_model_set_map_func (GtkMapListModel *self, GtkMapListModelMapFunc map_func, gpointer user_data, GDestroyNotify user_destroy);";subroutine gtk_map_list_model_set_map_func(self, map_func, user_data, user_destroy) bind(c)
gtk;gtk_map_list_model_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmaplistmodel.h;"void gtk_map_list_model_set_model (GtkMapListModel *self, GListModel *model);";subroutine gtk_map_list_model_set_model(self, model) bind(c)
gtk;gtk_media_controls_get_media_stream;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediacontrols.h;"GtkMediaStream *gtk_media_controls_get_media_stream (GtkMediaControls *controls);";function gtk_media_controls_get_media_stream(controls) bind(c)
gtk;gtk_media_controls_set_media_stream;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediacontrols.h;"void gtk_media_controls_set_media_stream (GtkMediaControls *controls, GtkMediaStream *stream);";subroutine gtk_media_controls_set_media_stream(controls, stream) bind(c)
gtk;gtk_media_file_clear;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediafile.h;"void gtk_media_file_clear (GtkMediaFile *self);";subroutine gtk_media_file_clear(self) bind(c)
gtk;gtk_media_file_get_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediafile.h;"GFile * gtk_media_file_get_file (GtkMediaFile *self);";function gtk_media_file_get_file(self) bind(c)
gtk;gtk_media_file_get_input_stream;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediafile.h;"GInputStream * gtk_media_file_get_input_stream (GtkMediaFile *self);";function gtk_media_file_get_input_stream(self) bind(c)
gtk;gtk_media_file_new_for_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediafile.h;"GtkMediaStream * gtk_media_file_new_for_file (GFile *file);";function gtk_media_file_new_for_file(file) bind(c)
gtk;gtk_media_file_new_for_filename;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediafile.h;"GtkMediaStream * gtk_media_file_new_for_filename (const char *filename);";function gtk_media_file_new_for_filename(filename) bind(c)
gtk;gtk_media_file_new_for_input_stream;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediafile.h;"GtkMediaStream * gtk_media_file_new_for_input_stream (GInputStream *stream);";function gtk_media_file_new_for_input_stream(stream) bind(c)
gtk;gtk_media_file_new_for_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediafile.h;"GtkMediaStream * gtk_media_file_new_for_resource (const char *resource_path);";function gtk_media_file_new_for_resource(resource_path) bind(c)
gtk;gtk_media_file_set_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediafile.h;"void gtk_media_file_set_file (GtkMediaFile *self, GFile *file);";subroutine gtk_media_file_set_file(self, file) bind(c)
gtk;gtk_media_file_set_filename;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediafile.h;"void gtk_media_file_set_filename (GtkMediaFile *self, const char *filename);";subroutine gtk_media_file_set_filename(self, filename) bind(c)
gtk;gtk_media_file_set_input_stream;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediafile.h;"void gtk_media_file_set_input_stream (GtkMediaFile *self, GInputStream *stream);";subroutine gtk_media_file_set_input_stream(self, stream) bind(c)
gtk;gtk_media_file_set_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediafile.h;"void gtk_media_file_set_resource (GtkMediaFile *self, const char *resource_path);";subroutine gtk_media_file_set_resource(self, resource_path) bind(c)
gtk;gtk_media_stream_ended;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_ended (GtkMediaStream *self);";subroutine gtk_media_stream_ended(self) bind(c)
gtk;gtk_media_stream_error_valist;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_error_valist (GtkMediaStream *self, GQuark domain, int code, const char *format, va_list args) G_GNUC_PRINTF (4, 0);";subroutine gtk_media_stream_error_valist(self, domain, code, format, args) bind(c)
gtk;gtk_media_stream_gerror;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_gerror (GtkMediaStream *self, GError *error);";subroutine gtk_media_stream_gerror(self, error) bind(c)
gtk;gtk_media_stream_get_duration;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"gint64 gtk_media_stream_get_duration (GtkMediaStream *self);";function gtk_media_stream_get_duration(self) bind(c)
gtk;gtk_media_stream_get_ended;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"gboolean gtk_media_stream_get_ended (GtkMediaStream *self);";function gtk_media_stream_get_ended(self) bind(c)
gtk;gtk_media_stream_get_error;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"const GError * gtk_media_stream_get_error (GtkMediaStream *self);";function gtk_media_stream_get_error(self) bind(c)
gtk;gtk_media_stream_get_loop;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"gboolean gtk_media_stream_get_loop (GtkMediaStream *self);";function gtk_media_stream_get_loop(self) bind(c)
gtk;gtk_media_stream_get_muted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"gboolean gtk_media_stream_get_muted (GtkMediaStream *self);";function gtk_media_stream_get_muted(self) bind(c)
gtk;gtk_media_stream_get_playing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"gboolean gtk_media_stream_get_playing (GtkMediaStream *self);";function gtk_media_stream_get_playing(self) bind(c)
gtk;gtk_media_stream_get_timestamp;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"gint64 gtk_media_stream_get_timestamp (GtkMediaStream *self);";function gtk_media_stream_get_timestamp(self) bind(c)
gtk;gtk_media_stream_get_volume;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"double gtk_media_stream_get_volume (GtkMediaStream *self);";function gtk_media_stream_get_volume(self) bind(c)
gtk;gtk_media_stream_has_audio;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"gboolean gtk_media_stream_has_audio (GtkMediaStream *self);";function gtk_media_stream_has_audio(self) bind(c)
gtk;gtk_media_stream_has_video;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"gboolean gtk_media_stream_has_video (GtkMediaStream *self);";function gtk_media_stream_has_video(self) bind(c)
gtk;gtk_media_stream_is_seekable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"gboolean gtk_media_stream_is_seekable (GtkMediaStream *self);";function gtk_media_stream_is_seekable(self) bind(c)
gtk;gtk_media_stream_is_seeking;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"gboolean gtk_media_stream_is_seeking (GtkMediaStream *self);";function gtk_media_stream_is_seeking(self) bind(c)
gtk;gtk_media_stream_pause;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_pause (GtkMediaStream *self);";subroutine gtk_media_stream_pause(self) bind(c)
gtk;gtk_media_stream_play;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_play (GtkMediaStream *self);";subroutine gtk_media_stream_play(self) bind(c)
gtk;gtk_media_stream_prepared;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_prepared (GtkMediaStream *self, gboolean has_audio, gboolean has_video, gboolean seekable, gint64 duration);";subroutine gtk_media_stream_prepared(self, has_audio, has_video, seekable, duration) bind(c)
gtk;gtk_media_stream_realize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_realize (GtkMediaStream *self, GdkSurface *surface);";subroutine gtk_media_stream_realize(self, surface) bind(c)
gtk;gtk_media_stream_seek;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_seek (GtkMediaStream *self, gint64 timestamp);";subroutine gtk_media_stream_seek(self, timestamp) bind(c)
gtk;gtk_media_stream_seek_failed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_seek_failed (GtkMediaStream *self);";subroutine gtk_media_stream_seek_failed(self) bind(c)
gtk;gtk_media_stream_seek_success;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_seek_success (GtkMediaStream *self);";subroutine gtk_media_stream_seek_success(self) bind(c)
gtk;gtk_media_stream_set_loop;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_set_loop (GtkMediaStream *self, gboolean loop);";subroutine gtk_media_stream_set_loop(self, loop) bind(c)
gtk;gtk_media_stream_set_muted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_set_muted (GtkMediaStream *self, gboolean muted);";subroutine gtk_media_stream_set_muted(self, muted) bind(c)
gtk;gtk_media_stream_set_playing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_set_playing (GtkMediaStream *self, gboolean playing);";subroutine gtk_media_stream_set_playing(self, playing) bind(c)
gtk;gtk_media_stream_set_volume;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_set_volume (GtkMediaStream *self, double volume);";subroutine gtk_media_stream_set_volume(self, volume) bind(c)
gtk;gtk_media_stream_unprepared;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_unprepared (GtkMediaStream *self);";subroutine gtk_media_stream_unprepared(self) bind(c)
gtk;gtk_media_stream_unrealize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_unrealize (GtkMediaStream *self, GdkSurface *surface);";subroutine gtk_media_stream_unrealize(self, surface) bind(c)
gtk;gtk_media_stream_update;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmediastream.h;"void gtk_media_stream_update (GtkMediaStream *self, gint64 timestamp);";subroutine gtk_media_stream_update(self, timestamp) bind(c)
gtk;gtk_menu_button_get_direction;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"GtkArrowType gtk_menu_button_get_direction (GtkMenuButton *menu_button);";function gtk_menu_button_get_direction(menu_button) bind(c)
gtk;gtk_menu_button_get_has_frame;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"gboolean gtk_menu_button_get_has_frame (GtkMenuButton *menu_button);";function gtk_menu_button_get_has_frame(menu_button) bind(c)
gtk;gtk_menu_button_get_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"const char * gtk_menu_button_get_icon_name (GtkMenuButton *menu_button);";function gtk_menu_button_get_icon_name(menu_button) bind(c)
gtk;gtk_menu_button_get_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"const char * gtk_menu_button_get_label (GtkMenuButton *menu_button);";function gtk_menu_button_get_label(menu_button) bind(c)
gtk;gtk_menu_button_get_menu_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"GMenuModel *gtk_menu_button_get_menu_model (GtkMenuButton *menu_button);";function gtk_menu_button_get_menu_model(menu_button) bind(c)
gtk;gtk_menu_button_get_popover;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"GtkPopover *gtk_menu_button_get_popover (GtkMenuButton *menu_button);";function gtk_menu_button_get_popover(menu_button) bind(c)
gtk;gtk_menu_button_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"GType gtk_menu_button_get_type (void) G_GNUC_CONST;";function gtk_menu_button_get_type() bind(c)
gtk;gtk_menu_button_get_use_underline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"gboolean gtk_menu_button_get_use_underline (GtkMenuButton *menu_button);";function gtk_menu_button_get_use_underline(menu_button) bind(c)
gtk;gtk_menu_button_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"GtkWidget *gtk_menu_button_new (void);";function gtk_menu_button_new() bind(c)
gtk;gtk_menu_button_popdown;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"void gtk_menu_button_popdown (GtkMenuButton *menu_button);";subroutine gtk_menu_button_popdown(menu_button) bind(c)
gtk;gtk_menu_button_popup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"void gtk_menu_button_popup (GtkMenuButton *menu_button);";subroutine gtk_menu_button_popup(menu_button) bind(c)
gtk;gtk_menu_button_set_create_popup_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"void gtk_menu_button_set_create_popup_func (GtkMenuButton *menu_button, GtkMenuButtonCreatePopupFunc func, gpointer user_data, GDestroyNotify destroy_notify);";subroutine gtk_menu_button_set_create_popup_func(menu_button, func, user_data, destroy_notify) bind(c)
gtk;gtk_menu_button_set_direction;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"void gtk_menu_button_set_direction (GtkMenuButton *menu_button, GtkArrowType direction);";subroutine gtk_menu_button_set_direction(menu_button, direction) bind(c)
gtk;gtk_menu_button_set_has_frame;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"void gtk_menu_button_set_has_frame (GtkMenuButton *menu_button, gboolean has_frame);";subroutine gtk_menu_button_set_has_frame(menu_button, has_frame) bind(c)
gtk;gtk_menu_button_set_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"void gtk_menu_button_set_icon_name (GtkMenuButton *menu_button, const char *icon_name);";subroutine gtk_menu_button_set_icon_name(menu_button, icon_name) bind(c)
gtk;gtk_menu_button_set_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"void gtk_menu_button_set_label (GtkMenuButton *menu_button, const char *label);";subroutine gtk_menu_button_set_label(menu_button, label) bind(c)
gtk;gtk_menu_button_set_menu_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"void gtk_menu_button_set_menu_model (GtkMenuButton *menu_button, GMenuModel *menu_model);";subroutine gtk_menu_button_set_menu_model(menu_button, menu_model) bind(c)
gtk;gtk_menu_button_set_popover;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"void gtk_menu_button_set_popover (GtkMenuButton *menu_button, GtkWidget *popover);";subroutine gtk_menu_button_set_popover(menu_button, popover) bind(c)
gtk;gtk_menu_button_set_use_underline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmenubutton.h;"void gtk_menu_button_set_use_underline (GtkMenuButton *menu_button, gboolean use_underline);";subroutine gtk_menu_button_set_use_underline(menu_button, use_underline) bind(c)
gtk;gtk_message_dialog_get_message_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmessagedialog.h;"GtkWidget *gtk_message_dialog_get_message_area (GtkMessageDialog *message_dialog);";function gtk_message_dialog_get_message_area(message_dialog) bind(c)
gtk;gtk_message_dialog_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmessagedialog.h;"GType gtk_message_dialog_get_type (void) G_GNUC_CONST;";function gtk_message_dialog_get_type() bind(c)
gtk;gtk_message_dialog_set_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmessagedialog.h;"void gtk_message_dialog_set_markup (GtkMessageDialog *message_dialog, const char *str);";subroutine gtk_message_dialog_set_markup(message_dialog, str) bind(c)
gtk;gtk_mnemonic_trigger_get_keyval;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"guint gtk_mnemonic_trigger_get_keyval (GtkMnemonicTrigger *self);";function gtk_mnemonic_trigger_get_keyval(self) bind(c)
gtk;gtk_mount_operation_get_display;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmountoperation.h;"GdkDisplay * gtk_mount_operation_get_display(GtkMountOperation *op);";function gtk_mount_operation_get_display(op) bind(c)
gtk;gtk_mount_operation_get_parent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmountoperation.h;"GtkWindow * gtk_mount_operation_get_parent (GtkMountOperation *op);";function gtk_mount_operation_get_parent(op) bind(c)
gtk;gtk_mount_operation_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmountoperation.h;"GType gtk_mount_operation_get_type (void);";function gtk_mount_operation_get_type() bind(c)
gtk;gtk_mount_operation_is_showing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmountoperation.h;"gboolean gtk_mount_operation_is_showing (GtkMountOperation *op);";function gtk_mount_operation_is_showing(op) bind(c)
gtk;gtk_mount_operation_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmountoperation.h;"GMountOperation *gtk_mount_operation_new (GtkWindow *parent);";function gtk_mount_operation_new(parent) bind(c)
gtk;gtk_mount_operation_set_display;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmountoperation.h;"void gtk_mount_operation_set_display(GtkMountOperation *op, GdkDisplay *display);";subroutine gtk_mount_operation_set_display(op, display) bind(c)
gtk;gtk_mount_operation_set_parent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmountoperation.h;"void gtk_mount_operation_set_parent (GtkMountOperation *op, GtkWindow *parent);";subroutine gtk_mount_operation_set_parent(op, parent) bind(c)
gtk;gtk_multi_filter_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmultifilter.h;"void gtk_multi_filter_remove (GtkMultiFilter *self, guint position);";subroutine gtk_multi_filter_remove(self, position) bind(c)
gtk;gtk_multi_selection_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmultiselection.h;"GListModel * gtk_multi_selection_get_model (GtkMultiSelection *self);";function gtk_multi_selection_get_model(self) bind(c)
gtk;gtk_multi_selection_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmultiselection.h;"void gtk_multi_selection_set_model (GtkMultiSelection *self, GListModel *model);";subroutine gtk_multi_selection_set_model(self, model) bind(c)
gtk;gtk_multi_sorter_append;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmultisorter.h;"void gtk_multi_sorter_append (GtkMultiSorter *self, GtkSorter *sorter);";subroutine gtk_multi_sorter_append(self, sorter) bind(c)
gtk;gtk_multi_sorter_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkmultisorter.h;"void gtk_multi_sorter_remove (GtkMultiSorter *self, guint position);";subroutine gtk_multi_sorter_remove(self, position) bind(c)
gtk;gtk_named_action_get_action_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutaction.h;"const char * gtk_named_action_get_action_name (GtkNamedAction *self);";function gtk_named_action_get_action_name(self) bind(c)
gtk;gtk_native_dialog_destroy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknativedialog.h;"void gtk_native_dialog_destroy (GtkNativeDialog *self);";subroutine gtk_native_dialog_destroy(self) bind(c)
gtk;gtk_native_dialog_get_modal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknativedialog.h;"gboolean gtk_native_dialog_get_modal (GtkNativeDialog *self);";function gtk_native_dialog_get_modal(self) bind(c)
gtk;gtk_native_dialog_get_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknativedialog.h;"const char * gtk_native_dialog_get_title (GtkNativeDialog *self);";function gtk_native_dialog_get_title(self) bind(c)
gtk;gtk_native_dialog_get_transient_for;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknativedialog.h;"GtkWindow * gtk_native_dialog_get_transient_for (GtkNativeDialog *self);";function gtk_native_dialog_get_transient_for(self) bind(c)
gtk;gtk_native_dialog_get_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknativedialog.h;"gboolean gtk_native_dialog_get_visible (GtkNativeDialog *self);";function gtk_native_dialog_get_visible(self) bind(c)
gtk;gtk_native_dialog_hide;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknativedialog.h;"void gtk_native_dialog_hide (GtkNativeDialog *self);";subroutine gtk_native_dialog_hide(self) bind(c)
gtk;gtk_native_dialog_set_modal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknativedialog.h;"void gtk_native_dialog_set_modal (GtkNativeDialog *self, gboolean modal);";subroutine gtk_native_dialog_set_modal(self, modal) bind(c)
gtk;gtk_native_dialog_set_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknativedialog.h;"void gtk_native_dialog_set_title (GtkNativeDialog *self, const char *title);";subroutine gtk_native_dialog_set_title(self, title) bind(c)
gtk;gtk_native_dialog_set_transient_for;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknativedialog.h;"void gtk_native_dialog_set_transient_for (GtkNativeDialog *self, GtkWindow *parent);";subroutine gtk_native_dialog_set_transient_for(self, parent) bind(c)
gtk;gtk_native_get_for_surface;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknative.h;"GtkNative * gtk_native_get_for_surface (GdkSurface *surface);";function gtk_native_get_for_surface(surface) bind(c)
gtk;gtk_native_get_renderer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknative.h;"GskRenderer *gtk_native_get_renderer (GtkNative *self);";function gtk_native_get_renderer(self) bind(c)
gtk;gtk_native_get_surface;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknative.h;"GdkSurface *gtk_native_get_surface (GtkNative *self);";function gtk_native_get_surface(self) bind(c)
gtk;gtk_native_get_surface_transform;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknative.h;"void gtk_native_get_surface_transform (GtkNative *self, double *x, double *y);";subroutine gtk_native_get_surface_transform(self, x, y) bind(c)
gtk;gtk_native_unrealize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknative.h;"void gtk_native_unrealize (GtkNative *self);";subroutine gtk_native_unrealize(self) bind(c)
gtk;gtk_no_selection_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknoselection.h;"GListModel * gtk_no_selection_get_model (GtkNoSelection *self);";function gtk_no_selection_get_model(self) bind(c)
gtk;gtk_no_selection_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknoselection.h;"void gtk_no_selection_set_model (GtkNoSelection *self, GListModel *model);";subroutine gtk_no_selection_set_model(self, model) bind(c)
gtk;gtk_notebook_append_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"int gtk_notebook_append_page (GtkNotebook *notebook, GtkWidget *child, GtkWidget *tab_label);";function gtk_notebook_append_page(notebook, child, tab_label) bind(c)
gtk;gtk_notebook_append_page_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"int gtk_notebook_append_page_menu (GtkNotebook *notebook, GtkWidget *child, GtkWidget *tab_label, GtkWidget *menu_label);";function gtk_notebook_append_page_menu(notebook, child, tab_label, menu_label) bind(c)
gtk;gtk_notebook_detach_tab;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_detach_tab (GtkNotebook *notebook, GtkWidget *child);";subroutine gtk_notebook_detach_tab(notebook, child) bind(c)
gtk;gtk_notebook_get_action_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"GtkWidget* gtk_notebook_get_action_widget (GtkNotebook *notebook, GtkPackType pack_type);";function gtk_notebook_get_action_widget(notebook, pack_type) bind(c)
gtk;gtk_notebook_get_current_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"int gtk_notebook_get_current_page (GtkNotebook *notebook);";function gtk_notebook_get_current_page(notebook) bind(c)
gtk;gtk_notebook_get_group_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"const char *gtk_notebook_get_group_name (GtkNotebook *notebook);";function gtk_notebook_get_group_name(notebook) bind(c)
gtk;gtk_notebook_get_menu_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"GtkWidget * gtk_notebook_get_menu_label (GtkNotebook *notebook, GtkWidget *child);";function gtk_notebook_get_menu_label(notebook, child) bind(c)
gtk;gtk_notebook_get_menu_label_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"const char * gtk_notebook_get_menu_label_text (GtkNotebook *notebook, GtkWidget *child);";function gtk_notebook_get_menu_label_text(notebook, child) bind(c)
gtk;gtk_notebook_get_n_pages;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"int gtk_notebook_get_n_pages (GtkNotebook *notebook);";function gtk_notebook_get_n_pages(notebook) bind(c)
gtk;gtk_notebook_get_nth_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"GtkWidget* gtk_notebook_get_nth_page (GtkNotebook *notebook, int page_num);";function gtk_notebook_get_nth_page(notebook, page_num) bind(c)
gtk;gtk_notebook_get_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"GtkNotebookPage *gtk_notebook_get_page (GtkNotebook *notebook, GtkWidget *child);";function gtk_notebook_get_page(notebook, child) bind(c)
gtk;gtk_notebook_get_pages;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"GListModel *gtk_notebook_get_pages (GtkNotebook *notebook);";function gtk_notebook_get_pages(notebook) bind(c)
gtk;gtk_notebook_get_scrollable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"gboolean gtk_notebook_get_scrollable (GtkNotebook *notebook);";function gtk_notebook_get_scrollable(notebook) bind(c)
gtk;gtk_notebook_get_show_border;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"gboolean gtk_notebook_get_show_border (GtkNotebook *notebook);";function gtk_notebook_get_show_border(notebook) bind(c)
gtk;gtk_notebook_get_show_tabs;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"gboolean gtk_notebook_get_show_tabs (GtkNotebook *notebook);";function gtk_notebook_get_show_tabs(notebook) bind(c)
gtk;gtk_notebook_get_tab_detachable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"gboolean gtk_notebook_get_tab_detachable (GtkNotebook *notebook, GtkWidget *child);";function gtk_notebook_get_tab_detachable(notebook, child) bind(c)
gtk;gtk_notebook_get_tab_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"GtkWidget * gtk_notebook_get_tab_label (GtkNotebook *notebook, GtkWidget *child);";function gtk_notebook_get_tab_label(notebook, child) bind(c)
gtk;gtk_notebook_get_tab_label_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"const char * gtk_notebook_get_tab_label_text (GtkNotebook *notebook, GtkWidget *child);";function gtk_notebook_get_tab_label_text(notebook, child) bind(c)
gtk;gtk_notebook_get_tab_pos;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"GtkPositionType gtk_notebook_get_tab_pos (GtkNotebook *notebook);";function gtk_notebook_get_tab_pos(notebook) bind(c)
gtk;gtk_notebook_get_tab_reorderable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"gboolean gtk_notebook_get_tab_reorderable (GtkNotebook *notebook, GtkWidget *child);";function gtk_notebook_get_tab_reorderable(notebook, child) bind(c)
gtk;gtk_notebook_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"GType gtk_notebook_get_type (void) G_GNUC_CONST;";function gtk_notebook_get_type() bind(c)
gtk;gtk_notebook_insert_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"int gtk_notebook_insert_page (GtkNotebook *notebook, GtkWidget *child, GtkWidget *tab_label, int position);";function gtk_notebook_insert_page(notebook, child, tab_label, position) bind(c)
gtk;gtk_notebook_insert_page_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"int gtk_notebook_insert_page_menu (GtkNotebook *notebook, GtkWidget *child, GtkWidget *tab_label, GtkWidget *menu_label, int position);";function gtk_notebook_insert_page_menu(notebook, child, tab_label, menu_label, position) bind(c)
gtk;gtk_notebook_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"GtkWidget * gtk_notebook_new (void);";function gtk_notebook_new() bind(c)
gtk;gtk_notebook_next_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_next_page (GtkNotebook *notebook);";subroutine gtk_notebook_next_page(notebook) bind(c)
gtk;gtk_notebook_page_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"GtkWidget *gtk_notebook_page_get_child (GtkNotebookPage *page);";function gtk_notebook_page_get_child(page) bind(c)
gtk;gtk_notebook_page_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"GType gtk_notebook_page_get_type (void) G_GNUC_CONST;";function gtk_notebook_page_get_type() bind(c)
gtk;gtk_notebook_page_num;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"int gtk_notebook_page_num (GtkNotebook *notebook, GtkWidget *child);";function gtk_notebook_page_num(notebook, child) bind(c)
gtk;gtk_notebook_popup_disable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_popup_disable (GtkNotebook *notebook);";subroutine gtk_notebook_popup_disable(notebook) bind(c)
gtk;gtk_notebook_popup_enable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_popup_enable (GtkNotebook *notebook);";subroutine gtk_notebook_popup_enable(notebook) bind(c)
gtk;gtk_notebook_prepend_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"int gtk_notebook_prepend_page (GtkNotebook *notebook, GtkWidget *child, GtkWidget *tab_label);";function gtk_notebook_prepend_page(notebook, child, tab_label) bind(c)
gtk;gtk_notebook_prepend_page_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"int gtk_notebook_prepend_page_menu (GtkNotebook *notebook, GtkWidget *child, GtkWidget *tab_label, GtkWidget *menu_label);";function gtk_notebook_prepend_page_menu(notebook, child, tab_label, menu_label) bind(c)
gtk;gtk_notebook_prev_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_prev_page (GtkNotebook *notebook);";subroutine gtk_notebook_prev_page(notebook) bind(c)
gtk;gtk_notebook_remove_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_remove_page (GtkNotebook *notebook, int page_num);";subroutine gtk_notebook_remove_page(notebook, page_num) bind(c)
gtk;gtk_notebook_reorder_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_reorder_child (GtkNotebook *notebook, GtkWidget *child, int position);";subroutine gtk_notebook_reorder_child(notebook, child, position) bind(c)
gtk;gtk_notebook_set_action_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_action_widget (GtkNotebook *notebook, GtkWidget *widget, GtkPackType pack_type);";subroutine gtk_notebook_set_action_widget(notebook, widget, pack_type) bind(c)
gtk;gtk_notebook_set_current_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_current_page (GtkNotebook *notebook, int page_num);";subroutine gtk_notebook_set_current_page(notebook, page_num) bind(c)
gtk;gtk_notebook_set_group_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_group_name (GtkNotebook *notebook, const char *group_name);";subroutine gtk_notebook_set_group_name(notebook, group_name) bind(c)
gtk;gtk_notebook_set_menu_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_menu_label (GtkNotebook *notebook, GtkWidget *child, GtkWidget *menu_label);";subroutine gtk_notebook_set_menu_label(notebook, child, menu_label) bind(c)
gtk;gtk_notebook_set_menu_label_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_menu_label_text (GtkNotebook *notebook, GtkWidget *child, const char *menu_text);";subroutine gtk_notebook_set_menu_label_text(notebook, child, menu_text) bind(c)
gtk;gtk_notebook_set_scrollable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_scrollable (GtkNotebook *notebook, gboolean scrollable);";subroutine gtk_notebook_set_scrollable(notebook, scrollable) bind(c)
gtk;gtk_notebook_set_show_border;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_show_border (GtkNotebook *notebook, gboolean show_border);";subroutine gtk_notebook_set_show_border(notebook, show_border) bind(c)
gtk;gtk_notebook_set_show_tabs;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_show_tabs (GtkNotebook *notebook, gboolean show_tabs);";subroutine gtk_notebook_set_show_tabs(notebook, show_tabs) bind(c)
gtk;gtk_notebook_set_tab_detachable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_tab_detachable (GtkNotebook *notebook, GtkWidget *child, gboolean detachable);";subroutine gtk_notebook_set_tab_detachable(notebook, child, detachable) bind(c)
gtk;gtk_notebook_set_tab_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_tab_label (GtkNotebook *notebook, GtkWidget *child, GtkWidget *tab_label);";subroutine gtk_notebook_set_tab_label(notebook, child, tab_label) bind(c)
gtk;gtk_notebook_set_tab_label_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_tab_label_text (GtkNotebook *notebook, GtkWidget *child, const char *tab_text);";subroutine gtk_notebook_set_tab_label_text(notebook, child, tab_text) bind(c)
gtk;gtk_notebook_set_tab_pos;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_tab_pos (GtkNotebook *notebook, GtkPositionType pos);";subroutine gtk_notebook_set_tab_pos(notebook, pos) bind(c)
gtk;gtk_notebook_set_tab_reorderable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknotebook.h;"void gtk_notebook_set_tab_reorderable (GtkNotebook *notebook, GtkWidget *child, gboolean reorderable);";subroutine gtk_notebook_set_tab_reorderable(notebook, child, reorderable) bind(c)
gtk;gtk_numeric_sorter_get_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknumericsorter.h;"GtkExpression * gtk_numeric_sorter_get_expression (GtkNumericSorter *self);";function gtk_numeric_sorter_get_expression(self) bind(c)
gtk;gtk_numeric_sorter_get_sort_order;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknumericsorter.h;"GtkSortType gtk_numeric_sorter_get_sort_order (GtkNumericSorter *self);";function gtk_numeric_sorter_get_sort_order(self) bind(c)
gtk;gtk_numeric_sorter_set_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknumericsorter.h;"void gtk_numeric_sorter_set_expression (GtkNumericSorter *self, GtkExpression *expression);";subroutine gtk_numeric_sorter_set_expression(self, expression) bind(c)
gtk;gtk_numeric_sorter_set_sort_order;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtknumericsorter.h;"void gtk_numeric_sorter_set_sort_order (GtkNumericSorter *self, GtkSortType sort_order);";subroutine gtk_numeric_sorter_set_sort_order(self, sort_order) bind(c)
gtk;gtk_object_expression_get_object;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GObject * gtk_object_expression_get_object (GtkExpression *expression);";function gtk_object_expression_get_object(expression) bind(c)
gtk;gtk_object_expression_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GType gtk_object_expression_get_type (void) G_GNUC_CONST;";function gtk_object_expression_get_type() bind(c)
gtk;gtk_object_expression_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpression * gtk_object_expression_new (GObject *object);";function gtk_object_expression_new(object) bind(c)
gtk;gtk_orientable_get_orientation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkorientable.h;"GtkOrientation gtk_orientable_get_orientation (GtkOrientable *orientable);";function gtk_orientable_get_orientation(orientable) bind(c)
gtk;gtk_orientable_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkorientable.h;"GType gtk_orientable_get_type (void) G_GNUC_CONST;";function gtk_orientable_get_type() bind(c)
gtk;gtk_orientable_set_orientation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkorientable.h;"void gtk_orientable_set_orientation (GtkOrientable *orientable, GtkOrientation orientation);";subroutine gtk_orientable_set_orientation(orientable, orientation) bind(c)
gtk;gtk_overlay_add_overlay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlay.h;"void gtk_overlay_add_overlay (GtkOverlay *overlay, GtkWidget *widget);";subroutine gtk_overlay_add_overlay(overlay, widget) bind(c)
gtk;gtk_overlay_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlay.h;"GtkWidget * gtk_overlay_get_child (GtkOverlay *overlay);";function gtk_overlay_get_child(overlay) bind(c)
gtk;gtk_overlay_get_clip_overlay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlay.h;"gboolean gtk_overlay_get_clip_overlay (GtkOverlay *overlay, GtkWidget *widget);";function gtk_overlay_get_clip_overlay(overlay, widget) bind(c)
gtk;gtk_overlay_get_measure_overlay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlay.h;"gboolean gtk_overlay_get_measure_overlay (GtkOverlay *overlay, GtkWidget *widget);";function gtk_overlay_get_measure_overlay(overlay, widget) bind(c)
gtk;gtk_overlay_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlay.h;"GType gtk_overlay_get_type (void) G_GNUC_CONST;";function gtk_overlay_get_type() bind(c)
gtk;gtk_overlay_layout_child_get_clip_overlay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlaylayout.h;"gboolean gtk_overlay_layout_child_get_clip_overlay (GtkOverlayLayoutChild *child);";function gtk_overlay_layout_child_get_clip_overlay(child) bind(c)
gtk;gtk_overlay_layout_child_get_measure;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlaylayout.h;"gboolean gtk_overlay_layout_child_get_measure (GtkOverlayLayoutChild *child);";function gtk_overlay_layout_child_get_measure(child) bind(c)
gtk;gtk_overlay_layout_child_set_clip_overlay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlaylayout.h;"void gtk_overlay_layout_child_set_clip_overlay (GtkOverlayLayoutChild *child, gboolean clip_overlay);";subroutine gtk_overlay_layout_child_set_clip_overlay(child, clip_overlay) bind(c)
gtk;gtk_overlay_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlay.h;"GtkWidget *gtk_overlay_new (void);";function gtk_overlay_new() bind(c)
gtk;gtk_overlay_remove_overlay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlay.h;"void gtk_overlay_remove_overlay (GtkOverlay *overlay, GtkWidget *widget);";subroutine gtk_overlay_remove_overlay(overlay, widget) bind(c)
gtk;gtk_overlay_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlay.h;"void gtk_overlay_set_child (GtkOverlay *overlay, GtkWidget *child);";subroutine gtk_overlay_set_child(overlay, child) bind(c)
gtk;gtk_overlay_set_clip_overlay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlay.h;"void gtk_overlay_set_clip_overlay (GtkOverlay *overlay, GtkWidget *widget, gboolean clip_overlay);";subroutine gtk_overlay_set_clip_overlay(overlay, widget, clip_overlay) bind(c)
gtk;gtk_overlay_set_measure_overlay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkoverlay.h;"void gtk_overlay_set_measure_overlay (GtkOverlay *overlay, GtkWidget *widget, gboolean measure);";subroutine gtk_overlay_set_measure_overlay(overlay, widget, measure) bind(c)
gtk;gtk_pad_controller_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpadcontroller.h;"GType gtk_pad_controller_get_type (void) G_GNUC_CONST;";function gtk_pad_controller_get_type() bind(c)
gtk;gtk_pad_controller_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpadcontroller.h;"GtkPadController *gtk_pad_controller_new (GActionGroup *group, GdkDevice *pad);";function gtk_pad_controller_new(group, pad) bind(c)
gtk;gtk_pad_controller_set_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpadcontroller.h;"void gtk_pad_controller_set_action (GtkPadController *controller, GtkPadActionType type, int index, int mode, const char *label, const char *action_name);";subroutine gtk_pad_controller_set_action(controller, type, index, mode, label, action_name) bind(c)
gtk;gtk_pad_controller_set_action_entries;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpadcontroller.h;"void gtk_pad_controller_set_action_entries (GtkPadController *controller, const GtkPadActionEntry *entries, int n_entries);";subroutine gtk_pad_controller_set_action_entries(controller, entries, n_entries) bind(c)
gtk;gtk_page_setup_copy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"GtkPageSetup * gtk_page_setup_copy (GtkPageSetup *other);";function gtk_page_setup_copy(other) bind(c)
gtk;gtk_page_setup_get_bottom_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"double gtk_page_setup_get_bottom_margin (GtkPageSetup *setup, GtkUnit unit);";function gtk_page_setup_get_bottom_margin(setup, unit) bind(c)
gtk;gtk_page_setup_get_left_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"double gtk_page_setup_get_left_margin (GtkPageSetup *setup, GtkUnit unit);";function gtk_page_setup_get_left_margin(setup, unit) bind(c)
gtk;gtk_page_setup_get_orientation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"GtkPageOrientation gtk_page_setup_get_orientation (GtkPageSetup *setup);";function gtk_page_setup_get_orientation(setup) bind(c)
gtk;gtk_page_setup_get_page_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"double gtk_page_setup_get_page_height (GtkPageSetup *setup, GtkUnit unit);";function gtk_page_setup_get_page_height(setup, unit) bind(c)
gtk;gtk_page_setup_get_page_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"double gtk_page_setup_get_page_width (GtkPageSetup *setup, GtkUnit unit);";function gtk_page_setup_get_page_width(setup, unit) bind(c)
gtk;gtk_page_setup_get_paper_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"double gtk_page_setup_get_paper_height (GtkPageSetup *setup, GtkUnit unit);";function gtk_page_setup_get_paper_height(setup, unit) bind(c)
gtk;gtk_page_setup_get_paper_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"GtkPaperSize * gtk_page_setup_get_paper_size (GtkPageSetup *setup);";function gtk_page_setup_get_paper_size(setup) bind(c)
gtk;gtk_page_setup_get_paper_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"double gtk_page_setup_get_paper_width (GtkPageSetup *setup, GtkUnit unit);";function gtk_page_setup_get_paper_width(setup, unit) bind(c)
gtk;gtk_page_setup_get_right_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"double gtk_page_setup_get_right_margin (GtkPageSetup *setup, GtkUnit unit);";function gtk_page_setup_get_right_margin(setup, unit) bind(c)
gtk;gtk_page_setup_get_top_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"double gtk_page_setup_get_top_margin (GtkPageSetup *setup, GtkUnit unit);";function gtk_page_setup_get_top_margin(setup, unit) bind(c)
gtk;gtk_page_setup_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"GType gtk_page_setup_get_type (void) G_GNUC_CONST;";function gtk_page_setup_get_type() bind(c)
gtk;gtk_page_setup_load_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"gboolean gtk_page_setup_load_file (GtkPageSetup *setup, const char *file_name, GError **error);";function gtk_page_setup_load_file(setup, file_name, error) bind(c)
gtk;gtk_page_setup_load_key_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"gboolean gtk_page_setup_load_key_file (GtkPageSetup *setup, GKeyFile *key_file, const char *group_name, GError **error);";function gtk_page_setup_load_key_file(setup, key_file, group_name, error) bind(c)
gtk;gtk_page_setup_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"GtkPageSetup * gtk_page_setup_new (void);";function gtk_page_setup_new() bind(c)
gtk;gtk_page_setup_new_from_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"GtkPageSetup *gtk_page_setup_new_from_file (const char *file_name, GError **error);";function gtk_page_setup_new_from_file(file_name, error) bind(c)
gtk;gtk_page_setup_new_from_gvariant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"GtkPageSetup *gtk_page_setup_new_from_gvariant (GVariant *variant);";function gtk_page_setup_new_from_gvariant(variant) bind(c)
gtk;gtk_page_setup_new_from_key_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"GtkPageSetup *gtk_page_setup_new_from_key_file (GKeyFile *key_file, const char *group_name, GError **error);";function gtk_page_setup_new_from_key_file(key_file, group_name, error) bind(c)
gtk;gtk_page_setup_set_bottom_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"void gtk_page_setup_set_bottom_margin (GtkPageSetup *setup, double margin, GtkUnit unit);";subroutine gtk_page_setup_set_bottom_margin(setup, margin, unit) bind(c)
gtk;gtk_page_setup_set_left_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"void gtk_page_setup_set_left_margin (GtkPageSetup *setup, double margin, GtkUnit unit);";subroutine gtk_page_setup_set_left_margin(setup, margin, unit) bind(c)
gtk;gtk_page_setup_set_orientation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"void gtk_page_setup_set_orientation (GtkPageSetup *setup, GtkPageOrientation orientation);";subroutine gtk_page_setup_set_orientation(setup, orientation) bind(c)
gtk;gtk_page_setup_set_paper_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"void gtk_page_setup_set_paper_size (GtkPageSetup *setup, GtkPaperSize *size);";subroutine gtk_page_setup_set_paper_size(setup, size) bind(c)
gtk;gtk_page_setup_set_paper_size_and_default_margins;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"void gtk_page_setup_set_paper_size_and_default_margins (GtkPageSetup *setup, GtkPaperSize *size);";subroutine gtk_page_setup_set_paper_size_and_default_margins(setup, size) bind(c)
gtk;gtk_page_setup_set_right_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"void gtk_page_setup_set_right_margin (GtkPageSetup *setup, double margin, GtkUnit unit);";subroutine gtk_page_setup_set_right_margin(setup, margin, unit) bind(c)
gtk;gtk_page_setup_set_top_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"void gtk_page_setup_set_top_margin (GtkPageSetup *setup, double margin, GtkUnit unit);";subroutine gtk_page_setup_set_top_margin(setup, margin, unit) bind(c)
gtk;gtk_page_setup_to_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"gboolean gtk_page_setup_to_file (GtkPageSetup *setup, const char *file_name, GError **error);";function gtk_page_setup_to_file(setup, file_name, error) bind(c)
gtk;gtk_page_setup_to_gvariant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"GVariant *gtk_page_setup_to_gvariant (GtkPageSetup *setup);";function gtk_page_setup_to_gvariant(setup) bind(c)
gtk;gtk_page_setup_to_key_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpagesetup.h;"void gtk_page_setup_to_key_file (GtkPageSetup *setup, GKeyFile *key_file, const char *group_name);";subroutine gtk_page_setup_to_key_file(setup, key_file, group_name) bind(c)
gtk;gtk_paned_get_end_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"GtkWidget * gtk_paned_get_end_child (GtkPaned *paned);";function gtk_paned_get_end_child(paned) bind(c)
gtk;gtk_paned_get_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"int gtk_paned_get_position (GtkPaned *paned);";function gtk_paned_get_position(paned) bind(c)
gtk;gtk_paned_get_resize_end_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"gboolean gtk_paned_get_resize_end_child (GtkPaned *paned);";function gtk_paned_get_resize_end_child(paned) bind(c)
gtk;gtk_paned_get_resize_start_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"gboolean gtk_paned_get_resize_start_child (GtkPaned *paned);";function gtk_paned_get_resize_start_child(paned) bind(c)
gtk;gtk_paned_get_shrink_end_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"gboolean gtk_paned_get_shrink_end_child (GtkPaned *paned);";function gtk_paned_get_shrink_end_child(paned) bind(c)
gtk;gtk_paned_get_shrink_start_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"gboolean gtk_paned_get_shrink_start_child (GtkPaned *paned);";function gtk_paned_get_shrink_start_child(paned) bind(c)
gtk;gtk_paned_get_start_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"GtkWidget * gtk_paned_get_start_child (GtkPaned *paned);";function gtk_paned_get_start_child(paned) bind(c)
gtk;gtk_paned_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"GType gtk_paned_get_type (void) G_GNUC_CONST;";function gtk_paned_get_type() bind(c)
gtk;gtk_paned_get_wide_handle;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"gboolean gtk_paned_get_wide_handle (GtkPaned *paned);";function gtk_paned_get_wide_handle(paned) bind(c)
gtk;gtk_paned_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"GtkWidget * gtk_paned_new (GtkOrientation orientation);";function gtk_paned_new(orientation) bind(c)
gtk;gtk_paned_set_end_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"void gtk_paned_set_end_child (GtkPaned *paned, GtkWidget *child);";subroutine gtk_paned_set_end_child(paned, child) bind(c)
gtk;gtk_paned_set_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"void gtk_paned_set_position (GtkPaned *paned, int position);";subroutine gtk_paned_set_position(paned, position) bind(c)
gtk;gtk_paned_set_resize_end_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"void gtk_paned_set_resize_end_child (GtkPaned *paned, gboolean resize);";subroutine gtk_paned_set_resize_end_child(paned, resize) bind(c)
gtk;gtk_paned_set_resize_start_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"void gtk_paned_set_resize_start_child (GtkPaned *paned, gboolean resize);";subroutine gtk_paned_set_resize_start_child(paned, resize) bind(c)
gtk;gtk_paned_set_shrink_end_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"void gtk_paned_set_shrink_end_child (GtkPaned *paned, gboolean resize);";subroutine gtk_paned_set_shrink_end_child(paned, resize) bind(c)
gtk;gtk_paned_set_shrink_start_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"void gtk_paned_set_shrink_start_child (GtkPaned *paned, gboolean resize);";subroutine gtk_paned_set_shrink_start_child(paned, resize) bind(c)
gtk;gtk_paned_set_start_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"void gtk_paned_set_start_child (GtkPaned *paned, GtkWidget *child);";subroutine gtk_paned_set_start_child(paned, child) bind(c)
gtk;gtk_paned_set_wide_handle;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpaned.h;"void gtk_paned_set_wide_handle (GtkPaned *paned, gboolean wide);";subroutine gtk_paned_set_wide_handle(paned, wide) bind(c)
gtk;gtk_paper_size_copy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"GtkPaperSize *gtk_paper_size_copy (GtkPaperSize *other);";function gtk_paper_size_copy(other) bind(c)
gtk;gtk_paper_size_free;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"void gtk_paper_size_free (GtkPaperSize *size);";subroutine gtk_paper_size_free(size) bind(c)
gtk;gtk_paper_size_get_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"const char *gtk_paper_size_get_default (void);";function gtk_paper_size_get_default() bind(c)
gtk;gtk_paper_size_get_default_bottom_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"double gtk_paper_size_get_default_bottom_margin (GtkPaperSize *size, GtkUnit unit);";function gtk_paper_size_get_default_bottom_margin(size, unit) bind(c)
gtk;gtk_paper_size_get_default_left_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"double gtk_paper_size_get_default_left_margin (GtkPaperSize *size, GtkUnit unit);";function gtk_paper_size_get_default_left_margin(size, unit) bind(c)
gtk;gtk_paper_size_get_default_right_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"double gtk_paper_size_get_default_right_margin (GtkPaperSize *size, GtkUnit unit);";function gtk_paper_size_get_default_right_margin(size, unit) bind(c)
gtk;gtk_paper_size_get_default_top_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"double gtk_paper_size_get_default_top_margin (GtkPaperSize *size, GtkUnit unit);";function gtk_paper_size_get_default_top_margin(size, unit) bind(c)
gtk;gtk_paper_size_get_display_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"const char *gtk_paper_size_get_display_name (GtkPaperSize *size);";function gtk_paper_size_get_display_name(size) bind(c)
gtk;gtk_paper_size_get_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"double gtk_paper_size_get_height (GtkPaperSize *size, GtkUnit unit);";function gtk_paper_size_get_height(size, unit) bind(c)
gtk;gtk_paper_size_get_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"const char *gtk_paper_size_get_name (GtkPaperSize *size);";function gtk_paper_size_get_name(size) bind(c)
gtk;gtk_paper_size_get_paper_sizes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"GList *gtk_paper_size_get_paper_sizes (gboolean include_custom);";function gtk_paper_size_get_paper_sizes(include_custom) bind(c)
gtk;gtk_paper_size_get_ppd_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"const char *gtk_paper_size_get_ppd_name (GtkPaperSize *size);";function gtk_paper_size_get_ppd_name(size) bind(c)
gtk;gtk_paper_size_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"GType gtk_paper_size_get_type (void) G_GNUC_CONST;";function gtk_paper_size_get_type() bind(c)
gtk;gtk_paper_size_get_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"double gtk_paper_size_get_width (GtkPaperSize *size, GtkUnit unit);";function gtk_paper_size_get_width(size, unit) bind(c)
gtk;gtk_paper_size_is_custom;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"gboolean gtk_paper_size_is_custom (GtkPaperSize *size);";function gtk_paper_size_is_custom(size) bind(c)
gtk;gtk_paper_size_is_equal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"gboolean gtk_paper_size_is_equal (GtkPaperSize *size1, GtkPaperSize *size2);";function gtk_paper_size_is_equal(size1, size2) bind(c)
gtk;gtk_paper_size_is_ipp;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"gboolean gtk_paper_size_is_ipp (GtkPaperSize *size);";function gtk_paper_size_is_ipp(size) bind(c)
gtk;gtk_paper_size_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"GtkPaperSize *gtk_paper_size_new (const char *name);";function gtk_paper_size_new(name) bind(c)
gtk;gtk_paper_size_new_custom;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"GtkPaperSize *gtk_paper_size_new_custom (const char *name, const char *display_name, double width, double height, GtkUnit unit);";function gtk_paper_size_new_custom(name, display_name, width, height, unit) bind(c)
gtk;gtk_paper_size_new_from_gvariant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"GtkPaperSize *gtk_paper_size_new_from_gvariant (GVariant *variant);";function gtk_paper_size_new_from_gvariant(variant) bind(c)
gtk;gtk_paper_size_new_from_ipp;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"GtkPaperSize *gtk_paper_size_new_from_ipp (const char *ipp_name, double width, double height);";function gtk_paper_size_new_from_ipp(ipp_name, width, height) bind(c)
gtk;gtk_paper_size_new_from_key_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"GtkPaperSize *gtk_paper_size_new_from_key_file (GKeyFile *key_file, const char *group_name, GError **error);";function gtk_paper_size_new_from_key_file(key_file, group_name, error) bind(c)
gtk;gtk_paper_size_new_from_ppd;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"GtkPaperSize *gtk_paper_size_new_from_ppd (const char *ppd_name, const char *ppd_display_name, double width, double height);";function gtk_paper_size_new_from_ppd(ppd_name, ppd_display_name, width, height) bind(c)
gtk;gtk_paper_size_set_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"void gtk_paper_size_set_size (GtkPaperSize *size, double width, double height, GtkUnit unit);";subroutine gtk_paper_size_set_size(size, width, height, unit) bind(c)
gtk;gtk_paper_size_to_gvariant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"GVariant *gtk_paper_size_to_gvariant (GtkPaperSize *paper_size);";function gtk_paper_size_to_gvariant(paper_size) bind(c)
gtk;gtk_paper_size_to_key_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpapersize.h;"void gtk_paper_size_to_key_file (GtkPaperSize *size, GKeyFile *key_file, const char *group_name);";subroutine gtk_paper_size_to_key_file(size, key_file, group_name) bind(c)
gtk;gtk_param_expression_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GType gtk_param_expression_get_type (void) G_GNUC_CONST;";function gtk_param_expression_get_type() bind(c)
gtk;gtk_param_spec_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GParamSpec * gtk_param_spec_expression (const char *name, const char *nick, const char *blurb, GParamFlags flags);";function gtk_param_spec_expression(name, nick, blurb, flags) bind(c)
gtk;gtk_password_entry_get_extra_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpasswordentry.h;"GMenuModel * gtk_password_entry_get_extra_menu (GtkPasswordEntry *entry);";function gtk_password_entry_get_extra_menu(entry) bind(c)
gtk;gtk_password_entry_get_show_peek_icon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpasswordentry.h;"gboolean gtk_password_entry_get_show_peek_icon (GtkPasswordEntry *entry);";function gtk_password_entry_get_show_peek_icon(entry) bind(c)
gtk;gtk_password_entry_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpasswordentry.h;"GType gtk_password_entry_get_type (void) G_GNUC_CONST;";function gtk_password_entry_get_type() bind(c)
gtk;gtk_password_entry_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpasswordentry.h;"GtkWidget * gtk_password_entry_new (void);";function gtk_password_entry_new() bind(c)
gtk;gtk_password_entry_set_extra_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpasswordentry.h;"void gtk_password_entry_set_extra_menu (GtkPasswordEntry *entry, GMenuModel *model);";subroutine gtk_password_entry_set_extra_menu(entry, model) bind(c)
gtk;gtk_password_entry_set_show_peek_icon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpasswordentry.h;"void gtk_password_entry_set_show_peek_icon (GtkPasswordEntry *entry, gboolean show_peek_icon);";subroutine gtk_password_entry_set_show_peek_icon(entry, show_peek_icon) bind(c)
gtk;gtk_picture_get_alternative_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"const char * gtk_picture_get_alternative_text (GtkPicture *self);";function gtk_picture_get_alternative_text(self) bind(c)
gtk;gtk_picture_get_can_shrink;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"gboolean gtk_picture_get_can_shrink (GtkPicture *self);";function gtk_picture_get_can_shrink(self) bind(c)
gtk;gtk_picture_get_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"GFile * gtk_picture_get_file (GtkPicture *self);";function gtk_picture_get_file(self) bind(c)
gtk;gtk_picture_get_keep_aspect_ratio;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"gboolean gtk_picture_get_keep_aspect_ratio (GtkPicture *self);";function gtk_picture_get_keep_aspect_ratio(self) bind(c)
gtk;gtk_picture_get_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"GdkPaintable * gtk_picture_get_paintable (GtkPicture *self);";function gtk_picture_get_paintable(self) bind(c)
gtk;gtk_picture_new_for_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"GtkWidget* gtk_picture_new_for_file (GFile *file);";function gtk_picture_new_for_file(file) bind(c)
gtk;gtk_picture_new_for_filename;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"GtkWidget* gtk_picture_new_for_filename (const char *filename);";function gtk_picture_new_for_filename(filename) bind(c)
gtk;gtk_picture_new_for_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"GtkWidget* gtk_picture_new_for_paintable (GdkPaintable *paintable);";function gtk_picture_new_for_paintable(paintable) bind(c)
gtk;gtk_picture_new_for_pixbuf;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"GtkWidget* gtk_picture_new_for_pixbuf (GdkPixbuf *pixbuf);";function gtk_picture_new_for_pixbuf(pixbuf) bind(c)
gtk;gtk_picture_new_for_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"GtkWidget* gtk_picture_new_for_resource (const char *resource_path);";function gtk_picture_new_for_resource(resource_path) bind(c)
gtk;gtk_picture_set_alternative_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"void gtk_picture_set_alternative_text (GtkPicture *self, const char *alternative_text);";subroutine gtk_picture_set_alternative_text(self, alternative_text) bind(c)
gtk;gtk_picture_set_can_shrink;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"void gtk_picture_set_can_shrink (GtkPicture *self, gboolean can_shrink);";subroutine gtk_picture_set_can_shrink(self, can_shrink) bind(c)
gtk;gtk_picture_set_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"void gtk_picture_set_file (GtkPicture *self, GFile *file);";subroutine gtk_picture_set_file(self, file) bind(c)
gtk;gtk_picture_set_filename;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"void gtk_picture_set_filename (GtkPicture *self, const char *filename);";subroutine gtk_picture_set_filename(self, filename) bind(c)
gtk;gtk_picture_set_keep_aspect_ratio;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"void gtk_picture_set_keep_aspect_ratio (GtkPicture *self, gboolean keep_aspect_ratio);";subroutine gtk_picture_set_keep_aspect_ratio(self, keep_aspect_ratio) bind(c)
gtk;gtk_picture_set_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"void gtk_picture_set_paintable (GtkPicture *self, GdkPaintable *paintable);";subroutine gtk_picture_set_paintable(self, paintable) bind(c)
gtk;gtk_picture_set_pixbuf;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"void gtk_picture_set_pixbuf (GtkPicture *self, GdkPixbuf *pixbuf);";subroutine gtk_picture_set_pixbuf(self, pixbuf) bind(c)
gtk;gtk_picture_set_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpicture.h;"void gtk_picture_set_resource (GtkPicture *self, const char *resource_path);";subroutine gtk_picture_set_resource(self, resource_path) bind(c)
gtk;gtk_popover_get_autohide;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"gboolean gtk_popover_get_autohide (GtkPopover *popover);";function gtk_popover_get_autohide(popover) bind(c)
gtk;gtk_popover_get_cascade_popdown;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"gboolean gtk_popover_get_cascade_popdown (GtkPopover *popover);";function gtk_popover_get_cascade_popdown(popover) bind(c)
gtk;gtk_popover_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"GtkWidget * gtk_popover_get_child (GtkPopover *popover);";function gtk_popover_get_child(popover) bind(c)
gtk;gtk_popover_get_has_arrow;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"gboolean gtk_popover_get_has_arrow (GtkPopover *popover);";function gtk_popover_get_has_arrow(popover) bind(c)
gtk;gtk_popover_get_mnemonics_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"gboolean gtk_popover_get_mnemonics_visible (GtkPopover *popover);";function gtk_popover_get_mnemonics_visible(popover) bind(c)
gtk;gtk_popover_get_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_get_offset (GtkPopover *popover, int *x_offset, int *y_offset);";subroutine gtk_popover_get_offset(popover, x_offset, y_offset) bind(c)
gtk;gtk_popover_get_pointing_to;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"gboolean gtk_popover_get_pointing_to (GtkPopover *popover, GdkRectangle *rect);";function gtk_popover_get_pointing_to(popover, rect) bind(c)
gtk;gtk_popover_get_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"GtkPositionType gtk_popover_get_position (GtkPopover *popover);";function gtk_popover_get_position(popover) bind(c)
gtk;gtk_popover_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"GType gtk_popover_get_type (void) G_GNUC_CONST;";function gtk_popover_get_type() bind(c)
gtk;gtk_popover_menu_add_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenu.h;"gboolean gtk_popover_menu_add_child (GtkPopoverMenu *popover, GtkWidget *child, const char *id);";function gtk_popover_menu_add_child(popover, child, id) bind(c)
gtk;gtk_popover_menu_bar_add_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenubar.h;"gboolean gtk_popover_menu_bar_add_child (GtkPopoverMenuBar *bar, GtkWidget *child, const char *id);";function gtk_popover_menu_bar_add_child(bar, child, id) bind(c)
gtk;gtk_popover_menu_bar_get_menu_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenubar.h;"GMenuModel * gtk_popover_menu_bar_get_menu_model (GtkPopoverMenuBar *bar);";function gtk_popover_menu_bar_get_menu_model(bar) bind(c)
gtk;gtk_popover_menu_bar_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenubar.h;"GType gtk_popover_menu_bar_get_type (void) G_GNUC_CONST;";function gtk_popover_menu_bar_get_type() bind(c)
gtk;gtk_popover_menu_bar_new_from_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenubar.h;"GtkWidget * gtk_popover_menu_bar_new_from_model (GMenuModel *model);";function gtk_popover_menu_bar_new_from_model(model) bind(c)
gtk;gtk_popover_menu_bar_remove_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenubar.h;"gboolean gtk_popover_menu_bar_remove_child (GtkPopoverMenuBar *bar, GtkWidget *child);";function gtk_popover_menu_bar_remove_child(bar, child) bind(c)
gtk;gtk_popover_menu_bar_set_menu_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenubar.h;"void gtk_popover_menu_bar_set_menu_model (GtkPopoverMenuBar *bar, GMenuModel *model);";subroutine gtk_popover_menu_bar_set_menu_model(bar, model) bind(c)
gtk;gtk_popover_menu_get_menu_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenu.h;"GMenuModel *gtk_popover_menu_get_menu_model (GtkPopoverMenu *popover);";function gtk_popover_menu_get_menu_model(popover) bind(c)
gtk;gtk_popover_menu_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenu.h;"GType gtk_popover_menu_get_type (void) G_GNUC_CONST;";function gtk_popover_menu_get_type() bind(c)
gtk;gtk_popover_menu_new_from_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenu.h;"GtkWidget * gtk_popover_menu_new_from_model (GMenuModel *model);";function gtk_popover_menu_new_from_model(model) bind(c)
gtk;gtk_popover_menu_new_from_model_full;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenu.h;"GtkWidget * gtk_popover_menu_new_from_model_full (GMenuModel *model, GtkPopoverMenuFlags flags);";function gtk_popover_menu_new_from_model_full(model, flags) bind(c)
gtk;gtk_popover_menu_remove_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenu.h;"gboolean gtk_popover_menu_remove_child (GtkPopoverMenu *popover, GtkWidget *child);";function gtk_popover_menu_remove_child(popover, child) bind(c)
gtk;gtk_popover_menu_set_menu_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopovermenu.h;"void gtk_popover_menu_set_menu_model (GtkPopoverMenu *popover, GMenuModel *model);";subroutine gtk_popover_menu_set_menu_model(popover, model) bind(c)
gtk;gtk_popover_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"GtkWidget * gtk_popover_new (void);";function gtk_popover_new() bind(c)
gtk;gtk_popover_popdown;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_popdown (GtkPopover *popover);";subroutine gtk_popover_popdown(popover) bind(c)
gtk;gtk_popover_popup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_popup (GtkPopover *popover);";subroutine gtk_popover_popup(popover) bind(c)
gtk;gtk_popover_present;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_present (GtkPopover *popover);";subroutine gtk_popover_present(popover) bind(c)
gtk;gtk_popover_set_autohide;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_set_autohide (GtkPopover *popover, gboolean autohide);";subroutine gtk_popover_set_autohide(popover, autohide) bind(c)
gtk;gtk_popover_set_cascade_popdown;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_set_cascade_popdown (GtkPopover *popover, gboolean cascade_popdown);";subroutine gtk_popover_set_cascade_popdown(popover, cascade_popdown) bind(c)
gtk;gtk_popover_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_set_child (GtkPopover *popover, GtkWidget *child);";subroutine gtk_popover_set_child(popover, child) bind(c)
gtk;gtk_popover_set_default_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_set_default_widget (GtkPopover *popover, GtkWidget *widget);";subroutine gtk_popover_set_default_widget(popover, widget) bind(c)
gtk;gtk_popover_set_has_arrow;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_set_has_arrow (GtkPopover *popover, gboolean has_arrow);";subroutine gtk_popover_set_has_arrow(popover, has_arrow) bind(c)
gtk;gtk_popover_set_mnemonics_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_set_mnemonics_visible (GtkPopover *popover, gboolean mnemonics_visible);";subroutine gtk_popover_set_mnemonics_visible(popover, mnemonics_visible) bind(c)
gtk;gtk_popover_set_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_set_offset (GtkPopover *popover, int x_offset, int y_offset);";subroutine gtk_popover_set_offset(popover, x_offset, y_offset) bind(c)
gtk;gtk_popover_set_pointing_to;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_set_pointing_to (GtkPopover *popover, const GdkRectangle *rect);";subroutine gtk_popover_set_pointing_to(popover, rect) bind(c)
gtk;gtk_popover_set_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkpopover.h;"void gtk_popover_set_position (GtkPopover *popover, GtkPositionType position);";subroutine gtk_popover_set_position(popover, position) bind(c)
gtk;gtk_print_context_create_pango_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintcontext.h;"PangoContext *gtk_print_context_create_pango_context (GtkPrintContext *context);";function gtk_print_context_create_pango_context(context) bind(c)
gtk;gtk_print_context_create_pango_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintcontext.h;"PangoLayout *gtk_print_context_create_pango_layout (GtkPrintContext *context);";function gtk_print_context_create_pango_layout(context) bind(c)
gtk;gtk_print_context_get_cairo_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintcontext.h;"cairo_t *gtk_print_context_get_cairo_context (GtkPrintContext *context);";function gtk_print_context_get_cairo_context(context) bind(c)
gtk;gtk_print_context_get_dpi_x;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintcontext.h;"double gtk_print_context_get_dpi_x (GtkPrintContext *context);";function gtk_print_context_get_dpi_x(context) bind(c)
gtk;gtk_print_context_get_dpi_y;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintcontext.h;"double gtk_print_context_get_dpi_y (GtkPrintContext *context);";function gtk_print_context_get_dpi_y(context) bind(c)
gtk;gtk_print_context_get_hard_margins;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintcontext.h;"gboolean gtk_print_context_get_hard_margins (GtkPrintContext *context, double *top, double *bottom, double *left, double *right);";function gtk_print_context_get_hard_margins(context, top, bottom, left, right) bind(c)
gtk;gtk_print_context_get_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintcontext.h;"double gtk_print_context_get_height (GtkPrintContext *context);";function gtk_print_context_get_height(context) bind(c)
gtk;gtk_print_context_get_page_setup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintcontext.h;"GtkPageSetup *gtk_print_context_get_page_setup (GtkPrintContext *context);";function gtk_print_context_get_page_setup(context) bind(c)
gtk;gtk_print_context_get_pango_fontmap;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintcontext.h;"PangoFontMap *gtk_print_context_get_pango_fontmap (GtkPrintContext *context);";function gtk_print_context_get_pango_fontmap(context) bind(c)
gtk;gtk_print_context_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintcontext.h;"GType gtk_print_context_get_type (void) G_GNUC_CONST;";function gtk_print_context_get_type() bind(c)
gtk;gtk_print_context_get_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintcontext.h;"double gtk_print_context_get_width (GtkPrintContext *context);";function gtk_print_context_get_width(context) bind(c)
gtk;gtk_print_context_set_cairo_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintcontext.h;"void gtk_print_context_set_cairo_context (GtkPrintContext *context, cairo_t *cr, double dpi_x, double dpi_y);";subroutine gtk_print_context_set_cairo_context(context, cr, dpi_x, dpi_y) bind(c)
gtk;gtk_print_error_quark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"GQuark gtk_print_error_quark (void);";function gtk_print_error_quark() bind(c)
gtk;gtk_print_operation_cancel;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_cancel (GtkPrintOperation *op);";subroutine gtk_print_operation_cancel(op) bind(c)
gtk;gtk_print_operation_draw_page_finish;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_draw_page_finish (GtkPrintOperation *op);";subroutine gtk_print_operation_draw_page_finish(op) bind(c)
gtk;gtk_print_operation_get_default_page_setup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"GtkPageSetup * gtk_print_operation_get_default_page_setup (GtkPrintOperation *op);";function gtk_print_operation_get_default_page_setup(op) bind(c)
gtk;gtk_print_operation_get_embed_page_setup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"gboolean gtk_print_operation_get_embed_page_setup (GtkPrintOperation *op);";function gtk_print_operation_get_embed_page_setup(op) bind(c)
gtk;gtk_print_operation_get_error;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_get_error (GtkPrintOperation *op, GError **error);";subroutine gtk_print_operation_get_error(op, error) bind(c)
gtk;gtk_print_operation_get_has_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"gboolean gtk_print_operation_get_has_selection (GtkPrintOperation *op);";function gtk_print_operation_get_has_selection(op) bind(c)
gtk;gtk_print_operation_get_n_pages_to_print;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"int gtk_print_operation_get_n_pages_to_print (GtkPrintOperation *op);";function gtk_print_operation_get_n_pages_to_print(op) bind(c)
gtk;gtk_print_operation_get_print_settings;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"GtkPrintSettings * gtk_print_operation_get_print_settings (GtkPrintOperation *op);";function gtk_print_operation_get_print_settings(op) bind(c)
gtk;gtk_print_operation_get_status;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"GtkPrintStatus gtk_print_operation_get_status (GtkPrintOperation *op);";function gtk_print_operation_get_status(op) bind(c)
gtk;gtk_print_operation_get_status_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"const char * gtk_print_operation_get_status_string (GtkPrintOperation *op);";function gtk_print_operation_get_status_string(op) bind(c)
gtk;gtk_print_operation_get_support_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"gboolean gtk_print_operation_get_support_selection (GtkPrintOperation *op);";function gtk_print_operation_get_support_selection(op) bind(c)
gtk;gtk_print_operation_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"GType gtk_print_operation_get_type (void) G_GNUC_CONST;";function gtk_print_operation_get_type() bind(c)
gtk;gtk_print_operation_is_finished;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"gboolean gtk_print_operation_is_finished (GtkPrintOperation *op);";function gtk_print_operation_is_finished(op) bind(c)
gtk;gtk_print_operation_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"GtkPrintOperation * gtk_print_operation_new (void);";function gtk_print_operation_new() bind(c)
gtk;gtk_print_operation_preview_end_preview;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperationpreview.h;"void gtk_print_operation_preview_end_preview (GtkPrintOperationPreview *preview);";subroutine gtk_print_operation_preview_end_preview(preview) bind(c)
gtk;gtk_print_operation_preview_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperationpreview.h;"GType gtk_print_operation_preview_get_type (void) G_GNUC_CONST;";function gtk_print_operation_preview_get_type() bind(c)
gtk;gtk_print_operation_preview_is_selected;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperationpreview.h;"gboolean gtk_print_operation_preview_is_selected (GtkPrintOperationPreview *preview, int page_nr);";function gtk_print_operation_preview_is_selected(preview, page_nr) bind(c)
gtk;gtk_print_operation_preview_render_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperationpreview.h;"void gtk_print_operation_preview_render_page (GtkPrintOperationPreview *preview, int page_nr);";subroutine gtk_print_operation_preview_render_page(preview, page_nr) bind(c)
gtk;gtk_print_operation_run;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"GtkPrintOperationResult gtk_print_operation_run (GtkPrintOperation *op, GtkPrintOperationAction action, GtkWindow *parent, GError **error);";function gtk_print_operation_run(op, action, parent, error) bind(c)
gtk;gtk_print_operation_set_allow_async;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_allow_async (GtkPrintOperation *op, gboolean allow_async);";subroutine gtk_print_operation_set_allow_async(op, allow_async) bind(c)
gtk;gtk_print_operation_set_current_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_current_page (GtkPrintOperation *op, int current_page);";subroutine gtk_print_operation_set_current_page(op, current_page) bind(c)
gtk;gtk_print_operation_set_custom_tab_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_custom_tab_label (GtkPrintOperation *op, const char *label);";subroutine gtk_print_operation_set_custom_tab_label(op, label) bind(c)
gtk;gtk_print_operation_set_default_page_setup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_default_page_setup (GtkPrintOperation *op, GtkPageSetup *default_page_setup);";subroutine gtk_print_operation_set_default_page_setup(op, default_page_setup) bind(c)
gtk;gtk_print_operation_set_defer_drawing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_defer_drawing (GtkPrintOperation *op);";subroutine gtk_print_operation_set_defer_drawing(op) bind(c)
gtk;gtk_print_operation_set_embed_page_setup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_embed_page_setup (GtkPrintOperation *op, gboolean embed);";subroutine gtk_print_operation_set_embed_page_setup(op, embed) bind(c)
gtk;gtk_print_operation_set_export_filename;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_export_filename (GtkPrintOperation *op, const char *filename);";subroutine gtk_print_operation_set_export_filename(op, filename) bind(c)
gtk;gtk_print_operation_set_has_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_has_selection (GtkPrintOperation *op, gboolean has_selection);";subroutine gtk_print_operation_set_has_selection(op, has_selection) bind(c)
gtk;gtk_print_operation_set_job_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_job_name (GtkPrintOperation *op, const char *job_name);";subroutine gtk_print_operation_set_job_name(op, job_name) bind(c)
gtk;gtk_print_operation_set_n_pages;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_n_pages (GtkPrintOperation *op, int n_pages);";subroutine gtk_print_operation_set_n_pages(op, n_pages) bind(c)
gtk;gtk_print_operation_set_print_settings;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_print_settings (GtkPrintOperation *op, GtkPrintSettings *print_settings);";subroutine gtk_print_operation_set_print_settings(op, print_settings) bind(c)
gtk;gtk_print_operation_set_show_progress;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_show_progress (GtkPrintOperation *op, gboolean show_progress);";subroutine gtk_print_operation_set_show_progress(op, show_progress) bind(c)
gtk;gtk_print_operation_set_support_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_support_selection (GtkPrintOperation *op, gboolean support_selection);";subroutine gtk_print_operation_set_support_selection(op, support_selection) bind(c)
gtk;gtk_print_operation_set_track_print_status;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_track_print_status (GtkPrintOperation *op, gboolean track_status);";subroutine gtk_print_operation_set_track_print_status(op, track_status) bind(c)
gtk;gtk_print_operation_set_unit;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_unit (GtkPrintOperation *op, GtkUnit unit);";subroutine gtk_print_operation_set_unit(op, unit) bind(c)
gtk;gtk_print_operation_set_use_full_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_operation_set_use_full_page (GtkPrintOperation *op, gboolean full_page);";subroutine gtk_print_operation_set_use_full_page(op, full_page) bind(c)
gtk;gtk_print_run_page_setup_dialog;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"GtkPageSetup *gtk_print_run_page_setup_dialog (GtkWindow *parent, GtkPageSetup *page_setup, GtkPrintSettings *settings);";function gtk_print_run_page_setup_dialog(parent, page_setup, settings) bind(c)
gtk;gtk_print_run_page_setup_dialog_async;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintoperation.h;"void gtk_print_run_page_setup_dialog_async (GtkWindow *parent, GtkPageSetup *page_setup, GtkPrintSettings *settings, GtkPageSetupDoneFunc done_cb, gpointer data);";subroutine gtk_print_run_page_setup_dialog_async(parent, page_setup, settings, done_cb, data) bind(c)
gtk;gtk_print_settings_copy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkPrintSettings *gtk_print_settings_copy (GtkPrintSettings *other);";function gtk_print_settings_copy(other) bind(c)
gtk;gtk_print_settings_foreach;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_foreach (GtkPrintSettings *settings, GtkPrintSettingsFunc func, gpointer user_data);";subroutine gtk_print_settings_foreach(settings, func, user_data) bind(c)
gtk;gtk_print_settings_get;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"const char * gtk_print_settings_get (GtkPrintSettings *settings, const char *key);";function gtk_print_settings_get(settings, key) bind(c)
gtk;gtk_print_settings_get_bool;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"gboolean gtk_print_settings_get_bool (GtkPrintSettings *settings, const char *key);";function gtk_print_settings_get_bool(settings, key) bind(c)
gtk;gtk_print_settings_get_collate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"gboolean gtk_print_settings_get_collate (GtkPrintSettings *settings);";function gtk_print_settings_get_collate(settings) bind(c)
gtk;gtk_print_settings_get_default_source;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"const char * gtk_print_settings_get_default_source (GtkPrintSettings *settings);";function gtk_print_settings_get_default_source(settings) bind(c)
gtk;gtk_print_settings_get_dither;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"const char * gtk_print_settings_get_dither (GtkPrintSettings *settings);";function gtk_print_settings_get_dither(settings) bind(c)
gtk;gtk_print_settings_get_double;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"double gtk_print_settings_get_double (GtkPrintSettings *settings, const char *key);";function gtk_print_settings_get_double(settings, key) bind(c)
gtk;gtk_print_settings_get_double_with_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"double gtk_print_settings_get_double_with_default (GtkPrintSettings *settings, const char *key, double def);";function gtk_print_settings_get_double_with_default(settings, key, def) bind(c)
gtk;gtk_print_settings_get_duplex;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkPrintDuplex gtk_print_settings_get_duplex (GtkPrintSettings *settings);";function gtk_print_settings_get_duplex(settings) bind(c)
gtk;gtk_print_settings_get_finishings;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"const char * gtk_print_settings_get_finishings (GtkPrintSettings *settings);";function gtk_print_settings_get_finishings(settings) bind(c)
gtk;gtk_print_settings_get_int;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"int gtk_print_settings_get_int (GtkPrintSettings *settings, const char *key);";function gtk_print_settings_get_int(settings, key) bind(c)
gtk;gtk_print_settings_get_int_with_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"int gtk_print_settings_get_int_with_default (GtkPrintSettings *settings, const char *key, int def);";function gtk_print_settings_get_int_with_default(settings, key, def) bind(c)
gtk;gtk_print_settings_get_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"double gtk_print_settings_get_length (GtkPrintSettings *settings, const char *key, GtkUnit unit);";function gtk_print_settings_get_length(settings, key, unit) bind(c)
gtk;gtk_print_settings_get_media_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"const char * gtk_print_settings_get_media_type (GtkPrintSettings *settings);";function gtk_print_settings_get_media_type(settings) bind(c)
gtk;gtk_print_settings_get_n_copies;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"int gtk_print_settings_get_n_copies (GtkPrintSettings *settings);";function gtk_print_settings_get_n_copies(settings) bind(c)
gtk;gtk_print_settings_get_number_up;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"int gtk_print_settings_get_number_up (GtkPrintSettings *settings);";function gtk_print_settings_get_number_up(settings) bind(c)
gtk;gtk_print_settings_get_number_up_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkNumberUpLayout gtk_print_settings_get_number_up_layout (GtkPrintSettings *settings);";function gtk_print_settings_get_number_up_layout(settings) bind(c)
gtk;gtk_print_settings_get_orientation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkPageOrientation gtk_print_settings_get_orientation (GtkPrintSettings *settings);";function gtk_print_settings_get_orientation(settings) bind(c)
gtk;gtk_print_settings_get_output_bin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"const char * gtk_print_settings_get_output_bin (GtkPrintSettings *settings);";function gtk_print_settings_get_output_bin(settings) bind(c)
gtk;gtk_print_settings_get_page_ranges;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkPageRange * gtk_print_settings_get_page_ranges (GtkPrintSettings *settings, int *num_ranges);";function gtk_print_settings_get_page_ranges(settings, num_ranges) bind(c)
gtk;gtk_print_settings_get_page_set;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkPageSet gtk_print_settings_get_page_set (GtkPrintSettings *settings);";function gtk_print_settings_get_page_set(settings) bind(c)
gtk;gtk_print_settings_get_paper_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"double gtk_print_settings_get_paper_height (GtkPrintSettings *settings, GtkUnit unit);";function gtk_print_settings_get_paper_height(settings, unit) bind(c)
gtk;gtk_print_settings_get_paper_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkPaperSize * gtk_print_settings_get_paper_size (GtkPrintSettings *settings);";function gtk_print_settings_get_paper_size(settings) bind(c)
gtk;gtk_print_settings_get_paper_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"double gtk_print_settings_get_paper_width (GtkPrintSettings *settings, GtkUnit unit);";function gtk_print_settings_get_paper_width(settings, unit) bind(c)
gtk;gtk_print_settings_get_print_pages;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkPrintPages gtk_print_settings_get_print_pages (GtkPrintSettings *settings);";function gtk_print_settings_get_print_pages(settings) bind(c)
gtk;gtk_print_settings_get_printer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"const char * gtk_print_settings_get_printer (GtkPrintSettings *settings);";function gtk_print_settings_get_printer(settings) bind(c)
gtk;gtk_print_settings_get_printer_lpi;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"double gtk_print_settings_get_printer_lpi (GtkPrintSettings *settings);";function gtk_print_settings_get_printer_lpi(settings) bind(c)
gtk;gtk_print_settings_get_quality;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkPrintQuality gtk_print_settings_get_quality (GtkPrintSettings *settings);";function gtk_print_settings_get_quality(settings) bind(c)
gtk;gtk_print_settings_get_resolution;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"int gtk_print_settings_get_resolution (GtkPrintSettings *settings);";function gtk_print_settings_get_resolution(settings) bind(c)
gtk;gtk_print_settings_get_resolution_x;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"int gtk_print_settings_get_resolution_x (GtkPrintSettings *settings);";function gtk_print_settings_get_resolution_x(settings) bind(c)
gtk;gtk_print_settings_get_resolution_y;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"int gtk_print_settings_get_resolution_y (GtkPrintSettings *settings);";function gtk_print_settings_get_resolution_y(settings) bind(c)
gtk;gtk_print_settings_get_reverse;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"gboolean gtk_print_settings_get_reverse (GtkPrintSettings *settings);";function gtk_print_settings_get_reverse(settings) bind(c)
gtk;gtk_print_settings_get_scale;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"double gtk_print_settings_get_scale (GtkPrintSettings *settings);";function gtk_print_settings_get_scale(settings) bind(c)
gtk;gtk_print_settings_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GType gtk_print_settings_get_type (void) G_GNUC_CONST;";function gtk_print_settings_get_type() bind(c)
gtk;gtk_print_settings_get_use_color;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"gboolean gtk_print_settings_get_use_color (GtkPrintSettings *settings);";function gtk_print_settings_get_use_color(settings) bind(c)
gtk;gtk_print_settings_has_key;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"gboolean gtk_print_settings_has_key (GtkPrintSettings *settings, const char *key);";function gtk_print_settings_has_key(settings, key) bind(c)
gtk;gtk_print_settings_load_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"gboolean gtk_print_settings_load_file (GtkPrintSettings *settings, const char *file_name, GError **error);";function gtk_print_settings_load_file(settings, file_name, error) bind(c)
gtk;gtk_print_settings_load_key_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"gboolean gtk_print_settings_load_key_file (GtkPrintSettings *settings, GKeyFile *key_file, const char *group_name, GError **error);";function gtk_print_settings_load_key_file(settings, key_file, group_name, error) bind(c)
gtk;gtk_print_settings_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkPrintSettings *gtk_print_settings_new (void);";function gtk_print_settings_new() bind(c)
gtk;gtk_print_settings_new_from_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkPrintSettings *gtk_print_settings_new_from_file (const char *file_name, GError **error);";function gtk_print_settings_new_from_file(file_name, error) bind(c)
gtk;gtk_print_settings_new_from_gvariant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkPrintSettings *gtk_print_settings_new_from_gvariant (GVariant *variant);";function gtk_print_settings_new_from_gvariant(variant) bind(c)
gtk;gtk_print_settings_new_from_key_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GtkPrintSettings *gtk_print_settings_new_from_key_file (GKeyFile *key_file, const char *group_name, GError **error);";function gtk_print_settings_new_from_key_file(key_file, group_name, error) bind(c)
gtk;gtk_print_settings_set;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set (GtkPrintSettings *settings, const char *key, const char *value);";subroutine gtk_print_settings_set(settings, key, value) bind(c)
gtk;gtk_print_settings_set_bool;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_bool (GtkPrintSettings *settings, const char *key, gboolean value);";subroutine gtk_print_settings_set_bool(settings, key, value) bind(c)
gtk;gtk_print_settings_set_collate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_collate (GtkPrintSettings *settings, gboolean collate);";subroutine gtk_print_settings_set_collate(settings, collate) bind(c)
gtk;gtk_print_settings_set_default_source;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_default_source (GtkPrintSettings *settings, const char *default_source);";subroutine gtk_print_settings_set_default_source(settings, default_source) bind(c)
gtk;gtk_print_settings_set_dither;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_dither (GtkPrintSettings *settings, const char *dither);";subroutine gtk_print_settings_set_dither(settings, dither) bind(c)
gtk;gtk_print_settings_set_double;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_double (GtkPrintSettings *settings, const char *key, double value);";subroutine gtk_print_settings_set_double(settings, key, value) bind(c)
gtk;gtk_print_settings_set_duplex;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_duplex (GtkPrintSettings *settings, GtkPrintDuplex duplex);";subroutine gtk_print_settings_set_duplex(settings, duplex) bind(c)
gtk;gtk_print_settings_set_finishings;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_finishings (GtkPrintSettings *settings, const char *finishings);";subroutine gtk_print_settings_set_finishings(settings, finishings) bind(c)
gtk;gtk_print_settings_set_int;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_int (GtkPrintSettings *settings, const char *key, int value);";subroutine gtk_print_settings_set_int(settings, key, value) bind(c)
gtk;gtk_print_settings_set_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_length (GtkPrintSettings *settings, const char *key, double value, GtkUnit unit);";subroutine gtk_print_settings_set_length(settings, key, value, unit) bind(c)
gtk;gtk_print_settings_set_media_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_media_type (GtkPrintSettings *settings, const char *media_type);";subroutine gtk_print_settings_set_media_type(settings, media_type) bind(c)
gtk;gtk_print_settings_set_n_copies;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_n_copies (GtkPrintSettings *settings, int num_copies);";subroutine gtk_print_settings_set_n_copies(settings, num_copies) bind(c)
gtk;gtk_print_settings_set_number_up;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_number_up (GtkPrintSettings *settings, int number_up);";subroutine gtk_print_settings_set_number_up(settings, number_up) bind(c)
gtk;gtk_print_settings_set_number_up_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_number_up_layout (GtkPrintSettings *settings, GtkNumberUpLayout number_up_layout);";subroutine gtk_print_settings_set_number_up_layout(settings, number_up_layout) bind(c)
gtk;gtk_print_settings_set_orientation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_orientation (GtkPrintSettings *settings, GtkPageOrientation orientation);";subroutine gtk_print_settings_set_orientation(settings, orientation) bind(c)
gtk;gtk_print_settings_set_output_bin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_output_bin (GtkPrintSettings *settings, const char *output_bin);";subroutine gtk_print_settings_set_output_bin(settings, output_bin) bind(c)
gtk;gtk_print_settings_set_page_ranges;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_page_ranges (GtkPrintSettings *settings, GtkPageRange *page_ranges, int num_ranges);";subroutine gtk_print_settings_set_page_ranges(settings, page_ranges, num_ranges) bind(c)
gtk;gtk_print_settings_set_page_set;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_page_set (GtkPrintSettings *settings, GtkPageSet page_set);";subroutine gtk_print_settings_set_page_set(settings, page_set) bind(c)
gtk;gtk_print_settings_set_paper_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_paper_height (GtkPrintSettings *settings, double height, GtkUnit unit);";subroutine gtk_print_settings_set_paper_height(settings, height, unit) bind(c)
gtk;gtk_print_settings_set_paper_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_paper_size (GtkPrintSettings *settings, GtkPaperSize *paper_size);";subroutine gtk_print_settings_set_paper_size(settings, paper_size) bind(c)
gtk;gtk_print_settings_set_paper_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_paper_width (GtkPrintSettings *settings, double width, GtkUnit unit);";subroutine gtk_print_settings_set_paper_width(settings, width, unit) bind(c)
gtk;gtk_print_settings_set_print_pages;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_print_pages (GtkPrintSettings *settings, GtkPrintPages pages);";subroutine gtk_print_settings_set_print_pages(settings, pages) bind(c)
gtk;gtk_print_settings_set_printer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_printer (GtkPrintSettings *settings, const char *printer);";subroutine gtk_print_settings_set_printer(settings, printer) bind(c)
gtk;gtk_print_settings_set_printer_lpi;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_printer_lpi (GtkPrintSettings *settings, double lpi);";subroutine gtk_print_settings_set_printer_lpi(settings, lpi) bind(c)
gtk;gtk_print_settings_set_quality;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_quality (GtkPrintSettings *settings, GtkPrintQuality quality);";subroutine gtk_print_settings_set_quality(settings, quality) bind(c)
gtk;gtk_print_settings_set_resolution;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_resolution (GtkPrintSettings *settings, int resolution);";subroutine gtk_print_settings_set_resolution(settings, resolution) bind(c)
gtk;gtk_print_settings_set_resolution_xy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_resolution_xy (GtkPrintSettings *settings, int resolution_x, int resolution_y);";subroutine gtk_print_settings_set_resolution_xy(settings, resolution_x, resolution_y) bind(c)
gtk;gtk_print_settings_set_reverse;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_reverse (GtkPrintSettings *settings, gboolean reverse);";subroutine gtk_print_settings_set_reverse(settings, reverse) bind(c)
gtk;gtk_print_settings_set_scale;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_scale (GtkPrintSettings *settings, double scale);";subroutine gtk_print_settings_set_scale(settings, scale) bind(c)
gtk;gtk_print_settings_set_use_color;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_set_use_color (GtkPrintSettings *settings, gboolean use_color);";subroutine gtk_print_settings_set_use_color(settings, use_color) bind(c)
gtk;gtk_print_settings_to_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"gboolean gtk_print_settings_to_file (GtkPrintSettings *settings, const char *file_name, GError **error);";function gtk_print_settings_to_file(settings, file_name, error) bind(c)
gtk;gtk_print_settings_to_gvariant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"GVariant *gtk_print_settings_to_gvariant (GtkPrintSettings *settings);";function gtk_print_settings_to_gvariant(settings) bind(c)
gtk;gtk_print_settings_to_key_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_to_key_file (GtkPrintSettings *settings, GKeyFile *key_file, const char *group_name);";subroutine gtk_print_settings_to_key_file(settings, key_file, group_name) bind(c)
gtk;gtk_print_settings_unset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprintsettings.h;"void gtk_print_settings_unset (GtkPrintSettings *settings, const char *key);";subroutine gtk_print_settings_unset(settings, key) bind(c)
gtk;gtk_progress_bar_get_ellipsize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"PangoEllipsizeMode gtk_progress_bar_get_ellipsize (GtkProgressBar *pbar);";function gtk_progress_bar_get_ellipsize(pbar) bind(c)
gtk;gtk_progress_bar_get_fraction;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"double gtk_progress_bar_get_fraction (GtkProgressBar *pbar);";function gtk_progress_bar_get_fraction(pbar) bind(c)
gtk;gtk_progress_bar_get_inverted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"gboolean gtk_progress_bar_get_inverted (GtkProgressBar *pbar);";function gtk_progress_bar_get_inverted(pbar) bind(c)
gtk;gtk_progress_bar_get_pulse_step;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"double gtk_progress_bar_get_pulse_step (GtkProgressBar *pbar);";function gtk_progress_bar_get_pulse_step(pbar) bind(c)
gtk;gtk_progress_bar_get_show_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"gboolean gtk_progress_bar_get_show_text (GtkProgressBar *pbar);";function gtk_progress_bar_get_show_text(pbar) bind(c)
gtk;gtk_progress_bar_get_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"const char * gtk_progress_bar_get_text (GtkProgressBar *pbar);";function gtk_progress_bar_get_text(pbar) bind(c)
gtk;gtk_progress_bar_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"GType gtk_progress_bar_get_type (void) G_GNUC_CONST;";function gtk_progress_bar_get_type() bind(c)
gtk;gtk_progress_bar_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"GtkWidget* gtk_progress_bar_new (void);";function gtk_progress_bar_new() bind(c)
gtk;gtk_progress_bar_pulse;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"void gtk_progress_bar_pulse (GtkProgressBar *pbar);";subroutine gtk_progress_bar_pulse(pbar) bind(c)
gtk;gtk_progress_bar_set_ellipsize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"void gtk_progress_bar_set_ellipsize (GtkProgressBar *pbar, PangoEllipsizeMode mode);";subroutine gtk_progress_bar_set_ellipsize(pbar, mode) bind(c)
gtk;gtk_progress_bar_set_fraction;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"void gtk_progress_bar_set_fraction (GtkProgressBar *pbar, double fraction);";subroutine gtk_progress_bar_set_fraction(pbar, fraction) bind(c)
gtk;gtk_progress_bar_set_inverted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"void gtk_progress_bar_set_inverted (GtkProgressBar *pbar, gboolean inverted);";subroutine gtk_progress_bar_set_inverted(pbar, inverted) bind(c)
gtk;gtk_progress_bar_set_pulse_step;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"void gtk_progress_bar_set_pulse_step (GtkProgressBar *pbar, double fraction);";subroutine gtk_progress_bar_set_pulse_step(pbar, fraction) bind(c)
gtk;gtk_progress_bar_set_show_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"void gtk_progress_bar_set_show_text (GtkProgressBar *pbar, gboolean show_text);";subroutine gtk_progress_bar_set_show_text(pbar, show_text) bind(c)
gtk;gtk_progress_bar_set_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkprogressbar.h;"void gtk_progress_bar_set_text (GtkProgressBar *pbar, const char *text);";subroutine gtk_progress_bar_set_text(pbar, text) bind(c)
gtk;gtk_property_expression_get_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpression * gtk_property_expression_get_expression (GtkExpression *expression);";function gtk_property_expression_get_expression(expression) bind(c)
gtk;gtk_property_expression_get_pspec;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GParamSpec * gtk_property_expression_get_pspec (GtkExpression *expression);";function gtk_property_expression_get_pspec(expression) bind(c)
gtk;gtk_property_expression_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GType gtk_property_expression_get_type (void) G_GNUC_CONST;";function gtk_property_expression_get_type() bind(c)
gtk;gtk_property_expression_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpression * gtk_property_expression_new (GType this_type, GtkExpression *expression, const char *property_name);";function gtk_property_expression_new(this_type, expression, property_name) bind(c)
gtk;gtk_property_expression_new_for_pspec;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpression * gtk_property_expression_new_for_pspec (GtkExpression *expression, GParamSpec *pspec);";function gtk_property_expression_new_for_pspec(expression, pspec) bind(c)
gtk;gtk_range_get_adjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"GtkAdjustment* gtk_range_get_adjustment (GtkRange *range);";function gtk_range_get_adjustment(range) bind(c)
gtk;gtk_range_get_fill_level;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"double gtk_range_get_fill_level (GtkRange *range);";function gtk_range_get_fill_level(range) bind(c)
gtk;gtk_range_get_flippable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"gboolean gtk_range_get_flippable (GtkRange *range);";function gtk_range_get_flippable(range) bind(c)
gtk;gtk_range_get_inverted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"gboolean gtk_range_get_inverted (GtkRange *range);";function gtk_range_get_inverted(range) bind(c)
gtk;gtk_range_get_range_rect;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_get_range_rect (GtkRange *range, GdkRectangle *range_rect);";subroutine gtk_range_get_range_rect(range, range_rect) bind(c)
gtk;gtk_range_get_restrict_to_fill_level;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"gboolean gtk_range_get_restrict_to_fill_level (GtkRange *range);";function gtk_range_get_restrict_to_fill_level(range) bind(c)
gtk;gtk_range_get_round_digits;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"int gtk_range_get_round_digits (GtkRange *range);";function gtk_range_get_round_digits(range) bind(c)
gtk;gtk_range_get_show_fill_level;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"gboolean gtk_range_get_show_fill_level (GtkRange *range);";function gtk_range_get_show_fill_level(range) bind(c)
gtk;gtk_range_get_slider_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_get_slider_range (GtkRange *range, int *slider_start, int *slider_end);";subroutine gtk_range_get_slider_range(range, slider_start, slider_end) bind(c)
gtk;gtk_range_get_slider_size_fixed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"gboolean gtk_range_get_slider_size_fixed (GtkRange *range);";function gtk_range_get_slider_size_fixed(range) bind(c)
gtk;gtk_range_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"GType gtk_range_get_type (void) G_GNUC_CONST;";function gtk_range_get_type() bind(c)
gtk;gtk_range_get_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"double gtk_range_get_value (GtkRange *range);";function gtk_range_get_value(range) bind(c)
gtk;gtk_range_set_adjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_set_adjustment (GtkRange *range, GtkAdjustment *adjustment);";subroutine gtk_range_set_adjustment(range, adjustment) bind(c)
gtk;gtk_range_set_fill_level;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_set_fill_level (GtkRange *range, double fill_level);";subroutine gtk_range_set_fill_level(range, fill_level) bind(c)
gtk;gtk_range_set_flippable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_set_flippable (GtkRange *range, gboolean flippable);";subroutine gtk_range_set_flippable(range, flippable) bind(c)
gtk;gtk_range_set_increments;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_set_increments (GtkRange *range, double step, double page);";subroutine gtk_range_set_increments(range, step, page) bind(c)
gtk;gtk_range_set_inverted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_set_inverted (GtkRange *range, gboolean setting);";subroutine gtk_range_set_inverted(range, setting) bind(c)
gtk;gtk_range_set_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_set_range (GtkRange *range, double min, double max);";subroutine gtk_range_set_range(range, min, max) bind(c)
gtk;gtk_range_set_restrict_to_fill_level;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_set_restrict_to_fill_level (GtkRange *range, gboolean restrict_to_fill_level);";subroutine gtk_range_set_restrict_to_fill_level(range, restrict_to_fill_level) bind(c)
gtk;gtk_range_set_round_digits;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_set_round_digits (GtkRange *range, int round_digits);";subroutine gtk_range_set_round_digits(range, round_digits) bind(c)
gtk;gtk_range_set_show_fill_level;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_set_show_fill_level (GtkRange *range, gboolean show_fill_level);";subroutine gtk_range_set_show_fill_level(range, show_fill_level) bind(c)
gtk;gtk_range_set_slider_size_fixed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_set_slider_size_fixed (GtkRange *range, gboolean size_fixed);";subroutine gtk_range_set_slider_size_fixed(range, size_fixed) bind(c)
gtk;gtk_range_set_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrange.h;"void gtk_range_set_value (GtkRange *range, double value);";subroutine gtk_range_set_value(range, value) bind(c)
gtk;gtk_recent_info_create_app_info;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GAppInfo * gtk_recent_info_create_app_info (GtkRecentInfo *info, const char *app_name, GError **error);";function gtk_recent_info_create_app_info(info, app_name, error) bind(c)
gtk;gtk_recent_info_exists;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"gboolean gtk_recent_info_exists (GtkRecentInfo *info);";function gtk_recent_info_exists(info) bind(c)
gtk;gtk_recent_info_get_added;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GDateTime * gtk_recent_info_get_added (GtkRecentInfo *info);";function gtk_recent_info_get_added(info) bind(c)
gtk;gtk_recent_info_get_age;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"int gtk_recent_info_get_age (GtkRecentInfo *info);";function gtk_recent_info_get_age(info) bind(c)
gtk;gtk_recent_info_get_application_info;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"gboolean gtk_recent_info_get_application_info (GtkRecentInfo *info, const char *app_name, const char **app_exec, guint *count, GDateTime **stamp);";function gtk_recent_info_get_application_info(info, app_name, app_exec, count, stamp) bind(c)
gtk;gtk_recent_info_get_applications;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"char ** gtk_recent_info_get_applications (GtkRecentInfo *info, gsize *length) G_GNUC_MALLOC;";function gtk_recent_info_get_applications(info, length) bind(c)
gtk;gtk_recent_info_get_description;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"const char * gtk_recent_info_get_description (GtkRecentInfo *info);";function gtk_recent_info_get_description(info) bind(c)
gtk;gtk_recent_info_get_display_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"const char * gtk_recent_info_get_display_name (GtkRecentInfo *info);";function gtk_recent_info_get_display_name(info) bind(c)
gtk;gtk_recent_info_get_gicon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GIcon * gtk_recent_info_get_gicon (GtkRecentInfo *info);";function gtk_recent_info_get_gicon(info) bind(c)
gtk;gtk_recent_info_get_groups;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"char ** gtk_recent_info_get_groups (GtkRecentInfo *info, gsize *length) G_GNUC_MALLOC;";function gtk_recent_info_get_groups(info, length) bind(c)
gtk;gtk_recent_info_get_mime_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"const char * gtk_recent_info_get_mime_type (GtkRecentInfo *info);";function gtk_recent_info_get_mime_type(info) bind(c)
gtk;gtk_recent_info_get_modified;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GDateTime * gtk_recent_info_get_modified (GtkRecentInfo *info);";function gtk_recent_info_get_modified(info) bind(c)
gtk;gtk_recent_info_get_private_hint;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"gboolean gtk_recent_info_get_private_hint (GtkRecentInfo *info);";function gtk_recent_info_get_private_hint(info) bind(c)
gtk;gtk_recent_info_get_short_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"char * gtk_recent_info_get_short_name (GtkRecentInfo *info) G_GNUC_MALLOC;";function gtk_recent_info_get_short_name(info) bind(c)
gtk;gtk_recent_info_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GType gtk_recent_info_get_type (void) G_GNUC_CONST;";function gtk_recent_info_get_type() bind(c)
gtk;gtk_recent_info_get_uri;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"const char * gtk_recent_info_get_uri (GtkRecentInfo *info);";function gtk_recent_info_get_uri(info) bind(c)
gtk;gtk_recent_info_get_uri_display;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"char * gtk_recent_info_get_uri_display (GtkRecentInfo *info) G_GNUC_MALLOC;";function gtk_recent_info_get_uri_display(info) bind(c)
gtk;gtk_recent_info_get_visited;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GDateTime * gtk_recent_info_get_visited (GtkRecentInfo *info);";function gtk_recent_info_get_visited(info) bind(c)
gtk;gtk_recent_info_has_application;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"gboolean gtk_recent_info_has_application (GtkRecentInfo *info, const char *app_name);";function gtk_recent_info_has_application(info, app_name) bind(c)
gtk;gtk_recent_info_has_group;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"gboolean gtk_recent_info_has_group (GtkRecentInfo *info, const char *group_name);";function gtk_recent_info_has_group(info, group_name) bind(c)
gtk;gtk_recent_info_is_local;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"gboolean gtk_recent_info_is_local (GtkRecentInfo *info);";function gtk_recent_info_is_local(info) bind(c)
gtk;gtk_recent_info_last_application;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"char * gtk_recent_info_last_application (GtkRecentInfo *info) G_GNUC_MALLOC;";function gtk_recent_info_last_application(info) bind(c)
gtk;gtk_recent_info_match;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"gboolean gtk_recent_info_match (GtkRecentInfo *info_a, GtkRecentInfo *info_b);";function gtk_recent_info_match(info_a, info_b) bind(c)
gtk;gtk_recent_info_ref;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GtkRecentInfo * gtk_recent_info_ref (GtkRecentInfo *info);";function gtk_recent_info_ref(info) bind(c)
gtk;gtk_recent_info_unref;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"void gtk_recent_info_unref (GtkRecentInfo *info);";subroutine gtk_recent_info_unref(info) bind(c)
gtk;gtk_recent_manager_add_full;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"gboolean gtk_recent_manager_add_full (GtkRecentManager *manager, const char *uri, const GtkRecentData *recent_data);";function gtk_recent_manager_add_full(manager, uri, recent_data) bind(c)
gtk;gtk_recent_manager_add_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"gboolean gtk_recent_manager_add_item (GtkRecentManager *manager, const char *uri);";function gtk_recent_manager_add_item(manager, uri) bind(c)
gtk;gtk_recent_manager_error_quark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GQuark gtk_recent_manager_error_quark (void);";function gtk_recent_manager_error_quark() bind(c)
gtk;gtk_recent_manager_get_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GtkRecentManager *gtk_recent_manager_get_default (void);";function gtk_recent_manager_get_default() bind(c)
gtk;gtk_recent_manager_get_items;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GList * gtk_recent_manager_get_items (GtkRecentManager *manager);";function gtk_recent_manager_get_items(manager) bind(c)
gtk;gtk_recent_manager_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GType gtk_recent_manager_get_type (void) G_GNUC_CONST;";function gtk_recent_manager_get_type() bind(c)
gtk;gtk_recent_manager_has_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"gboolean gtk_recent_manager_has_item (GtkRecentManager *manager, const char *uri);";function gtk_recent_manager_has_item(manager, uri) bind(c)
gtk;gtk_recent_manager_lookup_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GtkRecentInfo * gtk_recent_manager_lookup_item (GtkRecentManager *manager, const char *uri, GError **error);";function gtk_recent_manager_lookup_item(manager, uri, error) bind(c)
gtk;gtk_recent_manager_move_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"gboolean gtk_recent_manager_move_item (GtkRecentManager *manager, const char *uri, const char *new_uri, GError **error);";function gtk_recent_manager_move_item(manager, uri, new_uri, error) bind(c)
gtk;gtk_recent_manager_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"GtkRecentManager *gtk_recent_manager_new (void);";function gtk_recent_manager_new() bind(c)
gtk;gtk_recent_manager_purge_items;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"int gtk_recent_manager_purge_items (GtkRecentManager *manager, GError **error);";function gtk_recent_manager_purge_items(manager, error) bind(c)
gtk;gtk_recent_manager_remove_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrecentmanager.h;"gboolean gtk_recent_manager_remove_item (GtkRecentManager *manager, const char *uri, GError **error);";function gtk_recent_manager_remove_item(manager, uri, error) bind(c)
gtk;gtk_render_activity;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrender.h;"void gtk_render_activity (GtkStyleContext *context, cairo_t *cr, double x, double y, double width, double height);";subroutine gtk_render_activity(context, cr, x, y, width, height) bind(c)
gtk;gtk_render_arrow;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrender.h;"void gtk_render_arrow (GtkStyleContext *context, cairo_t *cr, double angle, double x, double y, double size);";subroutine gtk_render_arrow(context, cr, angle, x, y, size) bind(c)
gtk;gtk_render_background;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrender.h;"void gtk_render_background (GtkStyleContext *context, cairo_t *cr, double x, double y, double width, double height);";subroutine gtk_render_background(context, cr, x, y, width, height) bind(c)
gtk;gtk_render_check;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrender.h;"void gtk_render_check (GtkStyleContext *context, cairo_t *cr, double x, double y, double width, double height);";subroutine gtk_render_check(context, cr, x, y, width, height) bind(c)
gtk;gtk_render_expander;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrender.h;"void gtk_render_expander (GtkStyleContext *context, cairo_t *cr, double x, double y, double width, double height);";subroutine gtk_render_expander(context, cr, x, y, width, height) bind(c)
gtk;gtk_render_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrender.h;"void gtk_render_focus (GtkStyleContext *context, cairo_t *cr, double x, double y, double width, double height);";subroutine gtk_render_focus(context, cr, x, y, width, height) bind(c)
gtk;gtk_render_frame;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrender.h;"void gtk_render_frame (GtkStyleContext *context, cairo_t *cr, double x, double y, double width, double height);";subroutine gtk_render_frame(context, cr, x, y, width, height) bind(c)
gtk;gtk_render_handle;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrender.h;"void gtk_render_handle (GtkStyleContext *context, cairo_t *cr, double x, double y, double width, double height);";subroutine gtk_render_handle(context, cr, x, y, width, height) bind(c)
gtk;gtk_render_icon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrender.h;"void gtk_render_icon (GtkStyleContext *context, cairo_t *cr, GdkTexture *texture, double x, double y);";subroutine gtk_render_icon(context, cr, texture, x, y) bind(c)
gtk;gtk_render_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrender.h;"void gtk_render_layout (GtkStyleContext *context, cairo_t *cr, double x, double y, PangoLayout *layout);";subroutine gtk_render_layout(context, cr, x, y, layout) bind(c)
gtk;gtk_render_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrender.h;"void gtk_render_line (GtkStyleContext *context, cairo_t *cr, double x0, double y0, double x1, double y1);";subroutine gtk_render_line(context, cr, x0, y0, x1, y1) bind(c)
gtk;gtk_render_option;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrender.h;"void gtk_render_option (GtkStyleContext *context, cairo_t *cr, double x, double y, double width, double height);";subroutine gtk_render_option(context, cr, x, y, width, height) bind(c)
gtk;gtk_requisition_copy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkRequisition *gtk_requisition_copy (const GtkRequisition *requisition);";function gtk_requisition_copy(requisition) bind(c)
gtk;gtk_requisition_free;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_requisition_free (GtkRequisition *requisition);";subroutine gtk_requisition_free(requisition) bind(c)
gtk;gtk_requisition_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GType gtk_requisition_get_type (void) G_GNUC_CONST;";function gtk_requisition_get_type() bind(c)
gtk;gtk_requisition_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkRequisition *gtk_requisition_new (void) G_GNUC_MALLOC;";function gtk_requisition_new() bind(c)
gtk;gtk_revealer_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrevealer.h;"GtkWidget * gtk_revealer_get_child (GtkRevealer *revealer);";function gtk_revealer_get_child(revealer) bind(c)
gtk;gtk_revealer_get_child_revealed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrevealer.h;"gboolean gtk_revealer_get_child_revealed (GtkRevealer *revealer);";function gtk_revealer_get_child_revealed(revealer) bind(c)
gtk;gtk_revealer_get_reveal_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrevealer.h;"gboolean gtk_revealer_get_reveal_child (GtkRevealer *revealer);";function gtk_revealer_get_reveal_child(revealer) bind(c)
gtk;gtk_revealer_get_transition_duration;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrevealer.h;"guint gtk_revealer_get_transition_duration (GtkRevealer *revealer);";function gtk_revealer_get_transition_duration(revealer) bind(c)
gtk;gtk_revealer_get_transition_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrevealer.h;"GtkRevealerTransitionType gtk_revealer_get_transition_type (GtkRevealer *revealer);";function gtk_revealer_get_transition_type(revealer) bind(c)
gtk;gtk_revealer_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrevealer.h;"GType gtk_revealer_get_type (void) G_GNUC_CONST;";function gtk_revealer_get_type() bind(c)
gtk;gtk_revealer_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrevealer.h;"GtkWidget* gtk_revealer_new (void);";function gtk_revealer_new() bind(c)
gtk;gtk_revealer_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrevealer.h;"void gtk_revealer_set_child (GtkRevealer *revealer, GtkWidget *child);";subroutine gtk_revealer_set_child(revealer, child) bind(c)
gtk;gtk_revealer_set_reveal_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrevealer.h;"void gtk_revealer_set_reveal_child (GtkRevealer *revealer, gboolean reveal_child);";subroutine gtk_revealer_set_reveal_child(revealer, reveal_child) bind(c)
gtk;gtk_revealer_set_transition_duration;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrevealer.h;"void gtk_revealer_set_transition_duration (GtkRevealer *revealer, guint duration);";subroutine gtk_revealer_set_transition_duration(revealer, duration) bind(c)
gtk;gtk_revealer_set_transition_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkrevealer.h;"void gtk_revealer_set_transition_type (GtkRevealer *revealer, GtkRevealerTransitionType transition);";subroutine gtk_revealer_set_transition_type(revealer, transition) bind(c)
gtk;gtk_rgb_to_hsv;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkcolorutils.h;"void gtk_rgb_to_hsv (float r, float g, float b, float *h, float *s, float *v);";subroutine gtk_rgb_to_hsv(r, g, b, h, s, v) bind(c)
gtk;gtk_root_get_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkroot.h;"GtkWidget * gtk_root_get_focus (GtkRoot *self);";function gtk_root_get_focus(self) bind(c)
gtk;gtk_root_set_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkroot.h;"void gtk_root_set_focus (GtkRoot *self, GtkWidget *focus);";subroutine gtk_root_set_focus(self, focus) bind(c)
gtk;gtk_scale_add_mark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"void gtk_scale_add_mark (GtkScale *scale, double value, GtkPositionType position, const char *markup);";subroutine gtk_scale_add_mark(scale, value, position, markup) bind(c)
gtk;gtk_scale_button_get_adjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscalebutton.h;"GtkAdjustment * gtk_scale_button_get_adjustment (GtkScaleButton *button);";function gtk_scale_button_get_adjustment(button) bind(c)
gtk;gtk_scale_button_get_minus_button;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscalebutton.h;"GtkWidget * gtk_scale_button_get_minus_button (GtkScaleButton *button);";function gtk_scale_button_get_minus_button(button) bind(c)
gtk;gtk_scale_button_get_plus_button;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscalebutton.h;"GtkWidget * gtk_scale_button_get_plus_button (GtkScaleButton *button);";function gtk_scale_button_get_plus_button(button) bind(c)
gtk;gtk_scale_button_get_popup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscalebutton.h;"GtkWidget * gtk_scale_button_get_popup (GtkScaleButton *button);";function gtk_scale_button_get_popup(button) bind(c)
gtk;gtk_scale_button_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscalebutton.h;"GType gtk_scale_button_get_type (void) G_GNUC_CONST;";function gtk_scale_button_get_type() bind(c)
gtk;gtk_scale_button_get_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscalebutton.h;"double gtk_scale_button_get_value (GtkScaleButton *button);";function gtk_scale_button_get_value(button) bind(c)
gtk;gtk_scale_button_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscalebutton.h;"GtkWidget * gtk_scale_button_new (double min, double max, double step, const char **icons);";function gtk_scale_button_new(min, max, step, icons) bind(c)
gtk;gtk_scale_button_set_adjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscalebutton.h;"void gtk_scale_button_set_adjustment (GtkScaleButton *button, GtkAdjustment *adjustment);";subroutine gtk_scale_button_set_adjustment(button, adjustment) bind(c)
gtk;gtk_scale_button_set_icons;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscalebutton.h;"void gtk_scale_button_set_icons (GtkScaleButton *button, const char **icons);";subroutine gtk_scale_button_set_icons(button, icons) bind(c)
gtk;gtk_scale_button_set_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscalebutton.h;"void gtk_scale_button_set_value (GtkScaleButton *button, double value);";subroutine gtk_scale_button_set_value(button, value) bind(c)
gtk;gtk_scale_clear_marks;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"void gtk_scale_clear_marks (GtkScale *scale);";subroutine gtk_scale_clear_marks(scale) bind(c)
gtk;gtk_scale_get_digits;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"int gtk_scale_get_digits (GtkScale *scale);";function gtk_scale_get_digits(scale) bind(c)
gtk;gtk_scale_get_draw_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"gboolean gtk_scale_get_draw_value (GtkScale *scale);";function gtk_scale_get_draw_value(scale) bind(c)
gtk;gtk_scale_get_has_origin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"gboolean gtk_scale_get_has_origin (GtkScale *scale);";function gtk_scale_get_has_origin(scale) bind(c)
gtk;gtk_scale_get_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"PangoLayout * gtk_scale_get_layout (GtkScale *scale);";function gtk_scale_get_layout(scale) bind(c)
gtk;gtk_scale_get_layout_offsets;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"void gtk_scale_get_layout_offsets (GtkScale *scale, int *x, int *y);";subroutine gtk_scale_get_layout_offsets(scale, x, y) bind(c)
gtk;gtk_scale_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"GType gtk_scale_get_type (void) G_GNUC_CONST;";function gtk_scale_get_type() bind(c)
gtk;gtk_scale_get_value_pos;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"GtkPositionType gtk_scale_get_value_pos (GtkScale *scale);";function gtk_scale_get_value_pos(scale) bind(c)
gtk;gtk_scale_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"GtkWidget * gtk_scale_new (GtkOrientation orientation, GtkAdjustment *adjustment);";function gtk_scale_new(orientation, adjustment) bind(c)
gtk;gtk_scale_new_with_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"GtkWidget * gtk_scale_new_with_range (GtkOrientation orientation, double min, double max, double step);";function gtk_scale_new_with_range(orientation, min, max, step) bind(c)
gtk;gtk_scale_set_digits;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"void gtk_scale_set_digits (GtkScale *scale, int digits);";subroutine gtk_scale_set_digits(scale, digits) bind(c)
gtk;gtk_scale_set_draw_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"void gtk_scale_set_draw_value (GtkScale *scale, gboolean draw_value);";subroutine gtk_scale_set_draw_value(scale, draw_value) bind(c)
gtk;gtk_scale_set_format_value_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"void gtk_scale_set_format_value_func (GtkScale *scale, GtkScaleFormatValueFunc func, gpointer user_data, GDestroyNotify destroy_notify);";subroutine gtk_scale_set_format_value_func(scale, func, user_data, destroy_notify) bind(c)
gtk;gtk_scale_set_has_origin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"void gtk_scale_set_has_origin (GtkScale *scale, gboolean has_origin);";subroutine gtk_scale_set_has_origin(scale, has_origin) bind(c)
gtk;gtk_scale_set_value_pos;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscale.h;"void gtk_scale_set_value_pos (GtkScale *scale, GtkPositionType pos);";subroutine gtk_scale_set_value_pos(scale, pos) bind(c)
gtk;gtk_scrollable_get_border;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollable.h;"gboolean gtk_scrollable_get_border (GtkScrollable *scrollable, GtkBorder *border);";function gtk_scrollable_get_border(scrollable, border) bind(c)
gtk;gtk_scrollable_get_hadjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollable.h;"GtkAdjustment *gtk_scrollable_get_hadjustment (GtkScrollable *scrollable);";function gtk_scrollable_get_hadjustment(scrollable) bind(c)
gtk;gtk_scrollable_get_hscroll_policy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollable.h;"GtkScrollablePolicy gtk_scrollable_get_hscroll_policy (GtkScrollable *scrollable);";function gtk_scrollable_get_hscroll_policy(scrollable) bind(c)
gtk;gtk_scrollable_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollable.h;"GType gtk_scrollable_get_type (void) G_GNUC_CONST;";function gtk_scrollable_get_type() bind(c)
gtk;gtk_scrollable_get_vadjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollable.h;"GtkAdjustment *gtk_scrollable_get_vadjustment (GtkScrollable *scrollable);";function gtk_scrollable_get_vadjustment(scrollable) bind(c)
gtk;gtk_scrollable_get_vscroll_policy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollable.h;"GtkScrollablePolicy gtk_scrollable_get_vscroll_policy (GtkScrollable *scrollable);";function gtk_scrollable_get_vscroll_policy(scrollable) bind(c)
gtk;gtk_scrollable_set_hadjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollable.h;"void gtk_scrollable_set_hadjustment (GtkScrollable *scrollable, GtkAdjustment *hadjustment);";subroutine gtk_scrollable_set_hadjustment(scrollable, hadjustment) bind(c)
gtk;gtk_scrollable_set_hscroll_policy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollable.h;"void gtk_scrollable_set_hscroll_policy (GtkScrollable *scrollable, GtkScrollablePolicy policy);";subroutine gtk_scrollable_set_hscroll_policy(scrollable, policy) bind(c)
gtk;gtk_scrollable_set_vadjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollable.h;"void gtk_scrollable_set_vadjustment (GtkScrollable *scrollable, GtkAdjustment *vadjustment);";subroutine gtk_scrollable_set_vadjustment(scrollable, vadjustment) bind(c)
gtk;gtk_scrollable_set_vscroll_policy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollable.h;"void gtk_scrollable_set_vscroll_policy (GtkScrollable *scrollable, GtkScrollablePolicy policy);";subroutine gtk_scrollable_set_vscroll_policy(scrollable, policy) bind(c)
gtk;gtk_scrollbar_get_adjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollbar.h;"GtkAdjustment *gtk_scrollbar_get_adjustment (GtkScrollbar *self);";function gtk_scrollbar_get_adjustment(self) bind(c)
gtk;gtk_scrollbar_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollbar.h;"GType gtk_scrollbar_get_type (void) G_GNUC_CONST;";function gtk_scrollbar_get_type() bind(c)
gtk;gtk_scrollbar_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollbar.h;"GtkWidget * gtk_scrollbar_new (GtkOrientation orientation, GtkAdjustment *adjustment);";function gtk_scrollbar_new(orientation, adjustment) bind(c)
gtk;gtk_scrollbar_set_adjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrollbar.h;"void gtk_scrollbar_set_adjustment (GtkScrollbar *self, GtkAdjustment *adjustment);";subroutine gtk_scrollbar_set_adjustment(self, adjustment) bind(c)
gtk;gtk_scrolled_window_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"GtkWidget *gtk_scrolled_window_get_child (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_child(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_hadjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"GtkAdjustment* gtk_scrolled_window_get_hadjustment (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_hadjustment(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_has_frame;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"gboolean gtk_scrolled_window_get_has_frame (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_has_frame(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_hscrollbar;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"GtkWidget* gtk_scrolled_window_get_hscrollbar (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_hscrollbar(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_kinetic_scrolling;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"gboolean gtk_scrolled_window_get_kinetic_scrolling (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_kinetic_scrolling(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_max_content_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"int gtk_scrolled_window_get_max_content_height (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_max_content_height(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_max_content_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"int gtk_scrolled_window_get_max_content_width (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_max_content_width(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_min_content_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"int gtk_scrolled_window_get_min_content_height (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_min_content_height(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_min_content_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"int gtk_scrolled_window_get_min_content_width (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_min_content_width(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_overlay_scrolling;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"gboolean gtk_scrolled_window_get_overlay_scrolling (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_overlay_scrolling(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_placement;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"GtkCornerType gtk_scrolled_window_get_placement (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_placement(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_policy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_get_policy (GtkScrolledWindow *scrolled_window, GtkPolicyType *hscrollbar_policy, GtkPolicyType *vscrollbar_policy);";subroutine gtk_scrolled_window_get_policy(scrolled_window, hscrollbar_policy, vscrollbar_policy) bind(c)
gtk;gtk_scrolled_window_get_propagate_natural_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"gboolean gtk_scrolled_window_get_propagate_natural_height (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_propagate_natural_height(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_propagate_natural_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"gboolean gtk_scrolled_window_get_propagate_natural_width (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_propagate_natural_width(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"GType gtk_scrolled_window_get_type (void) G_GNUC_CONST;";function gtk_scrolled_window_get_type() bind(c)
gtk;gtk_scrolled_window_get_vadjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"GtkAdjustment* gtk_scrolled_window_get_vadjustment (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_vadjustment(scrolled_window) bind(c)
gtk;gtk_scrolled_window_get_vscrollbar;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"GtkWidget* gtk_scrolled_window_get_vscrollbar (GtkScrolledWindow *scrolled_window);";function gtk_scrolled_window_get_vscrollbar(scrolled_window) bind(c)
gtk;gtk_scrolled_window_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"GtkWidget* gtk_scrolled_window_new (void);";function gtk_scrolled_window_new() bind(c)
gtk;gtk_scrolled_window_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_child (GtkScrolledWindow *scrolled_window, GtkWidget *child);";subroutine gtk_scrolled_window_set_child(scrolled_window, child) bind(c)
gtk;gtk_scrolled_window_set_hadjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_hadjustment (GtkScrolledWindow *scrolled_window, GtkAdjustment *hadjustment);";subroutine gtk_scrolled_window_set_hadjustment(scrolled_window, hadjustment) bind(c)
gtk;gtk_scrolled_window_set_has_frame;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_has_frame (GtkScrolledWindow *scrolled_window, gboolean has_frame);";subroutine gtk_scrolled_window_set_has_frame(scrolled_window, has_frame) bind(c)
gtk;gtk_scrolled_window_set_kinetic_scrolling;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_kinetic_scrolling (GtkScrolledWindow *scrolled_window, gboolean kinetic_scrolling);";subroutine gtk_scrolled_window_set_kinetic_scrolling(scrolled_window, kinetic_scrolling) bind(c)
gtk;gtk_scrolled_window_set_max_content_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_max_content_height (GtkScrolledWindow *scrolled_window, int height);";subroutine gtk_scrolled_window_set_max_content_height(scrolled_window, height) bind(c)
gtk;gtk_scrolled_window_set_max_content_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_max_content_width (GtkScrolledWindow *scrolled_window, int width);";subroutine gtk_scrolled_window_set_max_content_width(scrolled_window, width) bind(c)
gtk;gtk_scrolled_window_set_min_content_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_min_content_height (GtkScrolledWindow *scrolled_window, int height);";subroutine gtk_scrolled_window_set_min_content_height(scrolled_window, height) bind(c)
gtk;gtk_scrolled_window_set_min_content_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_min_content_width (GtkScrolledWindow *scrolled_window, int width);";subroutine gtk_scrolled_window_set_min_content_width(scrolled_window, width) bind(c)
gtk;gtk_scrolled_window_set_overlay_scrolling;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_overlay_scrolling (GtkScrolledWindow *scrolled_window, gboolean overlay_scrolling);";subroutine gtk_scrolled_window_set_overlay_scrolling(scrolled_window, overlay_scrolling) bind(c)
gtk;gtk_scrolled_window_set_placement;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_placement (GtkScrolledWindow *scrolled_window, GtkCornerType window_placement);";subroutine gtk_scrolled_window_set_placement(scrolled_window, window_placement) bind(c)
gtk;gtk_scrolled_window_set_policy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_policy (GtkScrolledWindow *scrolled_window, GtkPolicyType hscrollbar_policy, GtkPolicyType vscrollbar_policy);";subroutine gtk_scrolled_window_set_policy(scrolled_window, hscrollbar_policy, vscrollbar_policy) bind(c)
gtk;gtk_scrolled_window_set_propagate_natural_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_propagate_natural_height (GtkScrolledWindow *scrolled_window, gboolean propagate);";subroutine gtk_scrolled_window_set_propagate_natural_height(scrolled_window, propagate) bind(c)
gtk;gtk_scrolled_window_set_propagate_natural_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_propagate_natural_width (GtkScrolledWindow *scrolled_window, gboolean propagate);";subroutine gtk_scrolled_window_set_propagate_natural_width(scrolled_window, propagate) bind(c)
gtk;gtk_scrolled_window_set_vadjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_set_vadjustment (GtkScrolledWindow *scrolled_window, GtkAdjustment *vadjustment);";subroutine gtk_scrolled_window_set_vadjustment(scrolled_window, vadjustment) bind(c)
gtk;gtk_scrolled_window_unset_placement;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkscrolledwindow.h;"void gtk_scrolled_window_unset_placement (GtkScrolledWindow *scrolled_window);";subroutine gtk_scrolled_window_unset_placement(scrolled_window) bind(c)
gtk;gtk_search_bar_connect_entry;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchbar.h;"void gtk_search_bar_connect_entry (GtkSearchBar *bar, GtkEditable *entry);";subroutine gtk_search_bar_connect_entry(bar, entry) bind(c)
gtk;gtk_search_bar_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchbar.h;"GtkWidget * gtk_search_bar_get_child (GtkSearchBar *bar);";function gtk_search_bar_get_child(bar) bind(c)
gtk;gtk_search_bar_get_key_capture_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchbar.h;"GtkWidget * gtk_search_bar_get_key_capture_widget (GtkSearchBar *bar);";function gtk_search_bar_get_key_capture_widget(bar) bind(c)
gtk;gtk_search_bar_get_search_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchbar.h;"gboolean gtk_search_bar_get_search_mode (GtkSearchBar *bar);";function gtk_search_bar_get_search_mode(bar) bind(c)
gtk;gtk_search_bar_get_show_close_button;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchbar.h;"gboolean gtk_search_bar_get_show_close_button (GtkSearchBar *bar);";function gtk_search_bar_get_show_close_button(bar) bind(c)
gtk;gtk_search_bar_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchbar.h;"GType gtk_search_bar_get_type (void) G_GNUC_CONST;";function gtk_search_bar_get_type() bind(c)
gtk;gtk_search_bar_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchbar.h;"GtkWidget* gtk_search_bar_new (void);";function gtk_search_bar_new() bind(c)
gtk;gtk_search_bar_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchbar.h;"void gtk_search_bar_set_child (GtkSearchBar *bar, GtkWidget *child);";subroutine gtk_search_bar_set_child(bar, child) bind(c)
gtk;gtk_search_bar_set_key_capture_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchbar.h;"void gtk_search_bar_set_key_capture_widget (GtkSearchBar *bar, GtkWidget *widget);";subroutine gtk_search_bar_set_key_capture_widget(bar, widget) bind(c)
gtk;gtk_search_bar_set_search_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchbar.h;"void gtk_search_bar_set_search_mode (GtkSearchBar *bar, gboolean search_mode);";subroutine gtk_search_bar_set_search_mode(bar, search_mode) bind(c)
gtk;gtk_search_bar_set_show_close_button;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchbar.h;"void gtk_search_bar_set_show_close_button (GtkSearchBar *bar, gboolean visible);";subroutine gtk_search_bar_set_show_close_button(bar, visible) bind(c)
gtk;gtk_search_entry_get_key_capture_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchentry.h;"GtkWidget* gtk_search_entry_get_key_capture_widget (GtkSearchEntry *entry);";function gtk_search_entry_get_key_capture_widget(entry) bind(c)
gtk;gtk_search_entry_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchentry.h;"GType gtk_search_entry_get_type (void) G_GNUC_CONST;";function gtk_search_entry_get_type() bind(c)
gtk;gtk_search_entry_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchentry.h;"GtkWidget* gtk_search_entry_new (void);";function gtk_search_entry_new() bind(c)
gtk;gtk_search_entry_set_key_capture_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksearchentry.h;"void gtk_search_entry_set_key_capture_widget (GtkSearchEntry *entry, GtkWidget *widget);";subroutine gtk_search_entry_set_key_capture_widget(entry, widget) bind(c)
gtk;gtk_selection_filter_model_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkselectionfiltermodel.h;"GtkSelectionModel * gtk_selection_filter_model_get_model (GtkSelectionFilterModel *self);";function gtk_selection_filter_model_get_model(self) bind(c)
gtk;gtk_selection_filter_model_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkselectionfiltermodel.h;"void gtk_selection_filter_model_set_model (GtkSelectionFilterModel *self, GtkSelectionModel *model);";subroutine gtk_selection_filter_model_set_model(self, model) bind(c)
gtk;gtk_selection_model_get_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkselectionmodel.h;"GtkBitset * gtk_selection_model_get_selection (GtkSelectionModel *model);";function gtk_selection_model_get_selection(model) bind(c)
gtk;gtk_selection_model_get_selection_in_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkselectionmodel.h;"GtkBitset * gtk_selection_model_get_selection_in_range (GtkSelectionModel *model, guint position, guint n_items);";function gtk_selection_model_get_selection_in_range(model, position, n_items) bind(c)
gtk;gtk_selection_model_select_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkselectionmodel.h;"gboolean gtk_selection_model_select_all (GtkSelectionModel *model);";function gtk_selection_model_select_all(model) bind(c)
gtk;gtk_selection_model_select_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkselectionmodel.h;"gboolean gtk_selection_model_select_item (GtkSelectionModel *model, guint position, gboolean unselect_rest);";function gtk_selection_model_select_item(model, position, unselect_rest) bind(c)
gtk;gtk_selection_model_select_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkselectionmodel.h;"gboolean gtk_selection_model_select_range (GtkSelectionModel *model, guint position, guint n_items, gboolean unselect_rest);";function gtk_selection_model_select_range(model, position, n_items, unselect_rest) bind(c)
gtk;gtk_selection_model_selection_changed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkselectionmodel.h;"void gtk_selection_model_selection_changed (GtkSelectionModel *model, guint position, guint n_items);";subroutine gtk_selection_model_selection_changed(model, position, n_items) bind(c)
gtk;gtk_selection_model_set_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkselectionmodel.h;"gboolean gtk_selection_model_set_selection (GtkSelectionModel *model, GtkBitset *selected, GtkBitset *mask);";function gtk_selection_model_set_selection(model, selected, mask) bind(c)
gtk;gtk_selection_model_unselect_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkselectionmodel.h;"gboolean gtk_selection_model_unselect_all (GtkSelectionModel *model);";function gtk_selection_model_unselect_all(model) bind(c)
gtk;gtk_selection_model_unselect_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkselectionmodel.h;"gboolean gtk_selection_model_unselect_item (GtkSelectionModel *model, guint position);";function gtk_selection_model_unselect_item(model, position) bind(c)
gtk;gtk_selection_model_unselect_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkselectionmodel.h;"gboolean gtk_selection_model_unselect_range (GtkSelectionModel *model, guint position, guint n_items);";function gtk_selection_model_unselect_range(model, position, n_items) bind(c)
gtk;gtk_separator_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkseparator.h;"GType gtk_separator_get_type (void) G_GNUC_CONST;";function gtk_separator_get_type() bind(c)
gtk;gtk_separator_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkseparator.h;"GtkWidget * gtk_separator_new (GtkOrientation orientation);";function gtk_separator_new(orientation) bind(c)
gtk;gtk_set_debug_flags;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkdebug.h;"void gtk_set_debug_flags (GtkDebugFlags flags);";subroutine gtk_set_debug_flags(flags) bind(c)
gtk;gtk_settings_get_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksettings.h;"GtkSettings* gtk_settings_get_default (void);";function gtk_settings_get_default() bind(c)
gtk;gtk_settings_get_for_display;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksettings.h;"GtkSettings* gtk_settings_get_for_display (GdkDisplay *display);";function gtk_settings_get_for_display(display) bind(c)
gtk;gtk_settings_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksettings.h;"GType gtk_settings_get_type (void) G_GNUC_CONST;";function gtk_settings_get_type() bind(c)
gtk;gtk_settings_reset_property;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksettings.h;"void gtk_settings_reset_property (GtkSettings *settings, const char *name);";subroutine gtk_settings_reset_property(settings, name) bind(c)
gtk;gtk_shortcut_action_activate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutaction.h;"gboolean gtk_shortcut_action_activate (GtkShortcutAction *self, GtkShortcutActionFlags flags, GtkWidget *widget, GVariant *args);";function gtk_shortcut_action_activate(self, flags, widget, args) bind(c)
gtk;gtk_shortcut_action_parse_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutaction.h;"GtkShortcutAction * gtk_shortcut_action_parse_string (const char * string);";function gtk_shortcut_action_parse_string(string) bind(c)
gtk;gtk_shortcut_action_print;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutaction.h;"void gtk_shortcut_action_print (GtkShortcutAction *self, GString *string);";subroutine gtk_shortcut_action_print(self, string) bind(c)
gtk;gtk_shortcut_controller_add_shortcut;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutcontroller.h;"void gtk_shortcut_controller_add_shortcut (GtkShortcutController *self, GtkShortcut *shortcut);";subroutine gtk_shortcut_controller_add_shortcut(self, shortcut) bind(c)
gtk;gtk_shortcut_controller_get_mnemonics_modifiers;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutcontroller.h;"GdkModifierType gtk_shortcut_controller_get_mnemonics_modifiers (GtkShortcutController *self);";function gtk_shortcut_controller_get_mnemonics_modifiers(self) bind(c)
gtk;gtk_shortcut_controller_get_scope;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutcontroller.h;"GtkShortcutScope gtk_shortcut_controller_get_scope (GtkShortcutController *self);";function gtk_shortcut_controller_get_scope(self) bind(c)
gtk;gtk_shortcut_controller_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutcontroller.h;"GType gtk_shortcut_controller_get_type (void) G_GNUC_CONST;";function gtk_shortcut_controller_get_type() bind(c)
gtk;gtk_shortcut_controller_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutcontroller.h;"GtkEventController * gtk_shortcut_controller_new (void);";function gtk_shortcut_controller_new() bind(c)
gtk;gtk_shortcut_controller_new_for_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutcontroller.h;"GtkEventController * gtk_shortcut_controller_new_for_model (GListModel *model);";function gtk_shortcut_controller_new_for_model(model) bind(c)
gtk;gtk_shortcut_controller_remove_shortcut;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutcontroller.h;"void gtk_shortcut_controller_remove_shortcut (GtkShortcutController *self, GtkShortcut *shortcut);";subroutine gtk_shortcut_controller_remove_shortcut(self, shortcut) bind(c)
gtk;gtk_shortcut_controller_set_mnemonics_modifiers;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutcontroller.h;"void gtk_shortcut_controller_set_mnemonics_modifiers (GtkShortcutController *self, GdkModifierType modifiers);";subroutine gtk_shortcut_controller_set_mnemonics_modifiers(self, modifiers) bind(c)
gtk;gtk_shortcut_controller_set_scope;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutcontroller.h;"void gtk_shortcut_controller_set_scope (GtkShortcutController *self, GtkShortcutScope scope);";subroutine gtk_shortcut_controller_set_scope(self, scope) bind(c)
gtk;gtk_shortcut_get_action;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcut.h;"GtkShortcutAction * gtk_shortcut_get_action (GtkShortcut *self);";function gtk_shortcut_get_action(self) bind(c)
gtk;gtk_shortcut_get_arguments;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcut.h;"GVariant * gtk_shortcut_get_arguments (GtkShortcut *self);";function gtk_shortcut_get_arguments(self) bind(c)
gtk;gtk_shortcut_get_trigger;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcut.h;"GtkShortcutTrigger * gtk_shortcut_get_trigger (GtkShortcut *self);";function gtk_shortcut_get_trigger(self) bind(c)
gtk;gtk_shortcut_label_get_accelerator;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutlabel.h;"const char *gtk_shortcut_label_get_accelerator (GtkShortcutLabel *self);";function gtk_shortcut_label_get_accelerator(self) bind(c)
gtk;gtk_shortcut_label_get_disabled_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutlabel.h;"const char *gtk_shortcut_label_get_disabled_text (GtkShortcutLabel *self);";function gtk_shortcut_label_get_disabled_text(self) bind(c)
gtk;gtk_shortcut_label_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutlabel.h;"GType gtk_shortcut_label_get_type (void) G_GNUC_CONST;";function gtk_shortcut_label_get_type() bind(c)
gtk;gtk_shortcut_label_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutlabel.h;"GtkWidget *gtk_shortcut_label_new (const char *accelerator);";function gtk_shortcut_label_new(accelerator) bind(c)
gtk;gtk_shortcut_label_set_accelerator;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutlabel.h;"void gtk_shortcut_label_set_accelerator (GtkShortcutLabel *self, const char *accelerator);";subroutine gtk_shortcut_label_set_accelerator(self, accelerator) bind(c)
gtk;gtk_shortcut_label_set_disabled_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutlabel.h;"void gtk_shortcut_label_set_disabled_text (GtkShortcutLabel *self, const char *disabled_text);";subroutine gtk_shortcut_label_set_disabled_text(self, disabled_text) bind(c)
gtk;gtk_shortcut_set_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcut.h;"void gtk_shortcut_set_action (GtkShortcut *self, GtkShortcutAction *action);";subroutine gtk_shortcut_set_action(self, action) bind(c)
gtk;gtk_shortcut_set_arguments;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcut.h;"void gtk_shortcut_set_arguments (GtkShortcut *self, GVariant *args);";subroutine gtk_shortcut_set_arguments(self, args) bind(c)
gtk;gtk_shortcut_set_trigger;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcut.h;"void gtk_shortcut_set_trigger (GtkShortcut *self, GtkShortcutTrigger *trigger);";subroutine gtk_shortcut_set_trigger(self, trigger) bind(c)
gtk;gtk_shortcut_trigger_compare;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"int gtk_shortcut_trigger_compare (gconstpointer trigger1, gconstpointer trigger2);";function gtk_shortcut_trigger_compare(trigger1, trigger2) bind(c)
gtk;gtk_shortcut_trigger_equal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"gboolean gtk_shortcut_trigger_equal (gconstpointer trigger1, gconstpointer trigger2);";function gtk_shortcut_trigger_equal(trigger1, trigger2) bind(c)
gtk;gtk_shortcut_trigger_hash;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"guint gtk_shortcut_trigger_hash (gconstpointer trigger);";function gtk_shortcut_trigger_hash(trigger) bind(c)
gtk;gtk_shortcut_trigger_print;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"void gtk_shortcut_trigger_print (GtkShortcutTrigger *self, GString *string);";subroutine gtk_shortcut_trigger_print(self, string) bind(c)
gtk;gtk_shortcut_trigger_print_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"gboolean gtk_shortcut_trigger_print_label (GtkShortcutTrigger *self, GdkDisplay *display, GString *string);";function gtk_shortcut_trigger_print_label(self, display, string) bind(c)
gtk;gtk_shortcut_trigger_to_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"char * gtk_shortcut_trigger_to_label (GtkShortcutTrigger *self, GdkDisplay *display);";function gtk_shortcut_trigger_to_label(self, display) bind(c)
gtk;gtk_shortcut_trigger_to_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"char * gtk_shortcut_trigger_to_string (GtkShortcutTrigger *self);";function gtk_shortcut_trigger_to_string(self) bind(c)
gtk;gtk_shortcut_trigger_trigger;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcuttrigger.h;"GdkKeyMatch gtk_shortcut_trigger_trigger (GtkShortcutTrigger *self, GdkEvent *event, gboolean enable_mnemonics);";function gtk_shortcut_trigger_trigger(self, event, enable_mnemonics) bind(c)
gtk;gtk_shortcuts_group_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutsgroup.h;"GType gtk_shortcuts_group_get_type (void) G_GNUC_CONST;";function gtk_shortcuts_group_get_type() bind(c)
gtk;gtk_shortcuts_section_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutssection.h;"GType gtk_shortcuts_section_get_type (void) G_GNUC_CONST;";function gtk_shortcuts_section_get_type() bind(c)
gtk;gtk_shortcuts_shortcut_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutsshortcut.h;"GType gtk_shortcuts_shortcut_get_type (void) G_GNUC_CONST;";function gtk_shortcuts_shortcut_get_type() bind(c)
gtk;gtk_shortcuts_window_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutswindow.h;"GType gtk_shortcuts_window_get_type (void) G_GNUC_CONST;";function gtk_shortcuts_window_get_type() bind(c)
gtk;gtk_show_uri;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshow.h;"void gtk_show_uri (GtkWindow *parent, const char *uri, guint32 timestamp);";subroutine gtk_show_uri(parent, uri, timestamp) bind(c)
gtk;gtk_show_uri_full;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshow.h;"void gtk_show_uri_full (GtkWindow *parent, const char *uri, guint32 timestamp, GCancellable *cancellable, GAsyncReadyCallback callback, gpointer user_data);";subroutine gtk_show_uri_full(parent, uri, timestamp, cancellable, callback, user_data) bind(c)
gtk;gtk_show_uri_full_finish;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshow.h;"gboolean gtk_show_uri_full_finish (GtkWindow *parent, GAsyncResult *result, GError **error);";function gtk_show_uri_full_finish(parent, result, error) bind(c)
gtk;gtk_signal_action_get_signal_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkshortcutaction.h;"const char * gtk_signal_action_get_signal_name (GtkSignalAction *self);";function gtk_signal_action_get_signal_name(self) bind(c)
gtk;gtk_signal_list_item_factory_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksignallistitemfactory.h;"GType gtk_signal_list_item_factory_get_type (void) G_GNUC_CONST;";function gtk_signal_list_item_factory_get_type() bind(c)
gtk;gtk_signal_list_item_factory_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksignallistitemfactory.h;"GtkListItemFactory * gtk_signal_list_item_factory_new (void);";function gtk_signal_list_item_factory_new() bind(c)
gtk;gtk_single_selection_get_autoselect;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksingleselection.h;"gboolean gtk_single_selection_get_autoselect (GtkSingleSelection *self);";function gtk_single_selection_get_autoselect(self) bind(c)
gtk;gtk_single_selection_get_can_unselect;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksingleselection.h;"gboolean gtk_single_selection_get_can_unselect (GtkSingleSelection *self);";function gtk_single_selection_get_can_unselect(self) bind(c)
gtk;gtk_single_selection_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksingleselection.h;"GListModel * gtk_single_selection_get_model (GtkSingleSelection *self);";function gtk_single_selection_get_model(self) bind(c)
gtk;gtk_single_selection_get_selected;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksingleselection.h;"guint gtk_single_selection_get_selected (GtkSingleSelection *self);";function gtk_single_selection_get_selected(self) bind(c)
gtk;gtk_single_selection_get_selected_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksingleselection.h;"gpointer gtk_single_selection_get_selected_item (GtkSingleSelection *self);";function gtk_single_selection_get_selected_item(self) bind(c)
gtk;gtk_single_selection_set_autoselect;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksingleselection.h;"void gtk_single_selection_set_autoselect (GtkSingleSelection *self, gboolean autoselect);";subroutine gtk_single_selection_set_autoselect(self, autoselect) bind(c)
gtk;gtk_single_selection_set_can_unselect;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksingleselection.h;"void gtk_single_selection_set_can_unselect (GtkSingleSelection *self, gboolean can_unselect);";subroutine gtk_single_selection_set_can_unselect(self, can_unselect) bind(c)
gtk;gtk_single_selection_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksingleselection.h;"void gtk_single_selection_set_model (GtkSingleSelection *self, GListModel *model);";subroutine gtk_single_selection_set_model(self, model) bind(c)
gtk;gtk_single_selection_set_selected;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksingleselection.h;"void gtk_single_selection_set_selected (GtkSingleSelection *self, guint position);";subroutine gtk_single_selection_set_selected(self, position) bind(c)
gtk;gtk_size_group_add_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksizegroup.h;"void gtk_size_group_add_widget (GtkSizeGroup *size_group, GtkWidget *widget);";subroutine gtk_size_group_add_widget(size_group, widget) bind(c)
gtk;gtk_size_group_get_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksizegroup.h;"GtkSizeGroupMode gtk_size_group_get_mode (GtkSizeGroup *size_group);";function gtk_size_group_get_mode(size_group) bind(c)
gtk;gtk_size_group_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksizegroup.h;"GType gtk_size_group_get_type (void) G_GNUC_CONST;";function gtk_size_group_get_type() bind(c)
gtk;gtk_size_group_get_widgets;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksizegroup.h;"GSList * gtk_size_group_get_widgets (GtkSizeGroup *size_group);";function gtk_size_group_get_widgets(size_group) bind(c)
gtk;gtk_size_group_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksizegroup.h;"GtkSizeGroup * gtk_size_group_new (GtkSizeGroupMode mode);";function gtk_size_group_new(mode) bind(c)
gtk;gtk_size_group_remove_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksizegroup.h;"void gtk_size_group_remove_widget (GtkSizeGroup *size_group, GtkWidget *widget);";subroutine gtk_size_group_remove_widget(size_group, widget) bind(c)
gtk;gtk_size_group_set_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksizegroup.h;"void gtk_size_group_set_mode (GtkSizeGroup *size_group, GtkSizeGroupMode mode);";subroutine gtk_size_group_set_mode(size_group, mode) bind(c)
gtk;gtk_slice_list_model_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkslicelistmodel.h;"GListModel * gtk_slice_list_model_get_model (GtkSliceListModel *self);";function gtk_slice_list_model_get_model(self) bind(c)
gtk;gtk_slice_list_model_get_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkslicelistmodel.h;"guint gtk_slice_list_model_get_offset (GtkSliceListModel *self);";function gtk_slice_list_model_get_offset(self) bind(c)
gtk;gtk_slice_list_model_get_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkslicelistmodel.h;"guint gtk_slice_list_model_get_size (GtkSliceListModel *self);";function gtk_slice_list_model_get_size(self) bind(c)
gtk;gtk_slice_list_model_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkslicelistmodel.h;"void gtk_slice_list_model_set_model (GtkSliceListModel *self, GListModel *model);";subroutine gtk_slice_list_model_set_model(self, model) bind(c)
gtk;gtk_slice_list_model_set_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkslicelistmodel.h;"void gtk_slice_list_model_set_offset (GtkSliceListModel *self, guint offset);";subroutine gtk_slice_list_model_set_offset(self, offset) bind(c)
gtk;gtk_slice_list_model_set_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkslicelistmodel.h;"void gtk_slice_list_model_set_size (GtkSliceListModel *self, guint size);";subroutine gtk_slice_list_model_set_size(self, size) bind(c)
gtk;gtk_snapshot_append_cairo;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"cairo_t * gtk_snapshot_append_cairo (GtkSnapshot *snapshot, const graphene_rect_t *bounds);";function gtk_snapshot_append_cairo(snapshot, bounds) bind(c)
gtk;gtk_snapshot_append_color;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_append_color (GtkSnapshot *snapshot, const GdkRGBA *color, const graphene_rect_t *bounds);";subroutine gtk_snapshot_append_color(snapshot, color, bounds) bind(c)
gtk;gtk_snapshot_append_conic_gradient;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_append_conic_gradient (GtkSnapshot *snapshot, const graphene_rect_t *bounds, const graphene_point_t *center, float rotation, const GskColorStop *stops, gsize n_stops);";subroutine gtk_snapshot_append_conic_gradient(snapshot, bounds, center, rotation, stops, n_stops) bind(c)
gtk;gtk_snapshot_append_inset_shadow;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_append_inset_shadow (GtkSnapshot *snapshot, const GskRoundedRect *outline, const GdkRGBA *color, float dx, float dy, float spread, float blur_radius);";subroutine gtk_snapshot_append_inset_shadow(snapshot, outline, color, dx, dy, spread, blur_radius) bind(c)
gtk;gtk_snapshot_append_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_append_layout (GtkSnapshot *snapshot, PangoLayout *layout, const GdkRGBA *color);";subroutine gtk_snapshot_append_layout(snapshot, layout, color) bind(c)
gtk;gtk_snapshot_append_linear_gradient;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_append_linear_gradient (GtkSnapshot *snapshot, const graphene_rect_t *bounds, const graphene_point_t *start_point, const graphene_point_t *end_point, const GskColorStop *stops, gsize n_stops);";subroutine gtk_snapshot_append_linear_gradient(snapshot, bounds, start_point, end_point, stops, n_stops) bind(c)
gtk;gtk_snapshot_append_node;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_append_node (GtkSnapshot *snapshot, GskRenderNode *node);";subroutine gtk_snapshot_append_node(snapshot, node) bind(c)
gtk;gtk_snapshot_append_outset_shadow;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_append_outset_shadow (GtkSnapshot *snapshot, const GskRoundedRect *outline, const GdkRGBA *color, float dx, float dy, float spread, float blur_radius);";subroutine gtk_snapshot_append_outset_shadow(snapshot, outline, color, dx, dy, spread, blur_radius) bind(c)
gtk;gtk_snapshot_append_radial_gradient;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_append_radial_gradient (GtkSnapshot *snapshot, const graphene_rect_t *bounds, const graphene_point_t *center, float hradius, float vradius, float start, float end, const GskColorStop *stops, gsize n_stops);";subroutine gtk_snapshot_append_radial_gradient(snapshot, bounds, center, hradius, vradius, start, end, stops, n_stops) bind(c)
gtk;gtk_snapshot_append_repeating_linear_gradient;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_append_repeating_linear_gradient (GtkSnapshot *snapshot, const graphene_rect_t *bounds, const graphene_point_t *start_point, const graphene_point_t *end_point, const GskColorStop *stops, gsize n_stops);";subroutine gtk_snapshot_append_repeating_linear_gradient(snapshot, bounds, start_point, end_point, stops, n_stops) bind(c)
gtk;gtk_snapshot_append_repeating_radial_gradient;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_append_repeating_radial_gradient (GtkSnapshot *snapshot, const graphene_rect_t *bounds, const graphene_point_t *center, float hradius, float vradius, float start, float end, const GskColorStop *stops, gsize n_stops);";subroutine gtk_snapshot_append_repeating_radial_gradient(snapshot, bounds, center, hradius, vradius, start, end, stops, n_stops) bind(c)
gtk;gtk_snapshot_append_texture;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_append_texture (GtkSnapshot *snapshot, GdkTexture *texture, const graphene_rect_t *bounds);";subroutine gtk_snapshot_append_texture(snapshot, texture, bounds) bind(c)
gtk;gtk_snapshot_free_to_node;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"GskRenderNode * gtk_snapshot_free_to_node (GtkSnapshot *snapshot);";function gtk_snapshot_free_to_node(snapshot) bind(c)
gtk;gtk_snapshot_free_to_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"GdkPaintable * gtk_snapshot_free_to_paintable (GtkSnapshot *snapshot, const graphene_size_t *size);";function gtk_snapshot_free_to_paintable(snapshot, size) bind(c)
gtk;gtk_snapshot_gl_shader_pop_texture;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_gl_shader_pop_texture (GtkSnapshot *snapshot);";subroutine gtk_snapshot_gl_shader_pop_texture(snapshot) bind(c)
gtk;gtk_snapshot_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"GtkSnapshot * gtk_snapshot_new (void);";function gtk_snapshot_new() bind(c)
gtk;gtk_snapshot_perspective;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_perspective (GtkSnapshot *snapshot, float depth);";subroutine gtk_snapshot_perspective(snapshot, depth) bind(c)
gtk;gtk_snapshot_pop;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_pop (GtkSnapshot *snapshot);";subroutine gtk_snapshot_pop(snapshot) bind(c)
gtk;gtk_snapshot_push_blend;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_push_blend (GtkSnapshot *snapshot, GskBlendMode blend_mode);";subroutine gtk_snapshot_push_blend(snapshot, blend_mode) bind(c)
gtk;gtk_snapshot_push_blur;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_push_blur (GtkSnapshot *snapshot, double radius);";subroutine gtk_snapshot_push_blur(snapshot, radius) bind(c)
gtk;gtk_snapshot_push_clip;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_push_clip (GtkSnapshot *snapshot, const graphene_rect_t *bounds);";subroutine gtk_snapshot_push_clip(snapshot, bounds) bind(c)
gtk;gtk_snapshot_push_color_matrix;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_push_color_matrix (GtkSnapshot *snapshot, const graphene_matrix_t*color_matrix, const graphene_vec4_t *color_offset);";subroutine gtk_snapshot_push_color_matrix(snapshot, color_matrix, color_offset) bind(c)
gtk;gtk_snapshot_push_cross_fade;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_push_cross_fade (GtkSnapshot *snapshot, double progress);";subroutine gtk_snapshot_push_cross_fade(snapshot, progress) bind(c)
gtk;gtk_snapshot_push_gl_shader;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_push_gl_shader (GtkSnapshot *snapshot, GskGLShader *shader, const graphene_rect_t *bounds, GBytes *take_args);";subroutine gtk_snapshot_push_gl_shader(snapshot, shader, bounds, take_args) bind(c)
gtk;gtk_snapshot_push_opacity;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_push_opacity (GtkSnapshot *snapshot, double opacity);";subroutine gtk_snapshot_push_opacity(snapshot, opacity) bind(c)
gtk;gtk_snapshot_push_repeat;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_push_repeat (GtkSnapshot *snapshot, const graphene_rect_t *bounds, const graphene_rect_t *child_bounds);";subroutine gtk_snapshot_push_repeat(snapshot, bounds, child_bounds) bind(c)
gtk;gtk_snapshot_push_rounded_clip;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_push_rounded_clip (GtkSnapshot *snapshot, const GskRoundedRect *bounds);";subroutine gtk_snapshot_push_rounded_clip(snapshot, bounds) bind(c)
gtk;gtk_snapshot_push_shadow;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_push_shadow (GtkSnapshot *snapshot, const GskShadow *shadow, gsize n_shadows);";subroutine gtk_snapshot_push_shadow(snapshot, shadow, n_shadows) bind(c)
gtk;gtk_snapshot_render_background;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_render_background (GtkSnapshot *snapshot, GtkStyleContext *context, double x, double y, double width, double height);";subroutine gtk_snapshot_render_background(snapshot, context, x, y, width, height) bind(c)
gtk;gtk_snapshot_render_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_render_focus (GtkSnapshot *snapshot, GtkStyleContext *context, double x, double y, double width, double height);";subroutine gtk_snapshot_render_focus(snapshot, context, x, y, width, height) bind(c)
gtk;gtk_snapshot_render_frame;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_render_frame (GtkSnapshot *snapshot, GtkStyleContext *context, double x, double y, double width, double height);";subroutine gtk_snapshot_render_frame(snapshot, context, x, y, width, height) bind(c)
gtk;gtk_snapshot_render_insertion_cursor;GDK_AVAILABLE_IN_ALL /* in gtkstylecontext.c */;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_render_insertion_cursor (GtkSnapshot *snapshot, GtkStyleContext *context, double x, double y, PangoLayout *layout, int index, PangoDirection direction);";subroutine gtk_snapshot_render_insertion_cursor(snapshot, context, x, y, layout, index, direction) bind(c)
gtk;gtk_snapshot_render_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_render_layout (GtkSnapshot *snapshot, GtkStyleContext *context, double x, double y, PangoLayout *layout);";subroutine gtk_snapshot_render_layout(snapshot, context, x, y, layout) bind(c)
gtk;gtk_snapshot_restore;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_restore (GtkSnapshot *snapshot);";subroutine gtk_snapshot_restore(snapshot) bind(c)
gtk;gtk_snapshot_rotate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_rotate (GtkSnapshot *snapshot, float angle);";subroutine gtk_snapshot_rotate(snapshot, angle) bind(c)
gtk;gtk_snapshot_rotate_3d;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_rotate_3d (GtkSnapshot *snapshot, float angle, const graphene_vec3_t *axis);";subroutine gtk_snapshot_rotate_3d(snapshot, angle, axis) bind(c)
gtk;gtk_snapshot_save;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_save (GtkSnapshot *snapshot);";subroutine gtk_snapshot_save(snapshot) bind(c)
gtk;gtk_snapshot_scale;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_scale (GtkSnapshot *snapshot, float factor_x, float factor_y);";subroutine gtk_snapshot_scale(snapshot, factor_x, factor_y) bind(c)
gtk;gtk_snapshot_scale_3d;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_scale_3d (GtkSnapshot *snapshot, float factor_x, float factor_y, float factor_z);";subroutine gtk_snapshot_scale_3d(snapshot, factor_x, factor_y, factor_z) bind(c)
gtk;gtk_snapshot_to_node;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"GskRenderNode * gtk_snapshot_to_node (GtkSnapshot *snapshot);";function gtk_snapshot_to_node(snapshot) bind(c)
gtk;gtk_snapshot_to_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"GdkPaintable * gtk_snapshot_to_paintable (GtkSnapshot *snapshot, const graphene_size_t *size);";function gtk_snapshot_to_paintable(snapshot, size) bind(c)
gtk;gtk_snapshot_transform;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_transform (GtkSnapshot *snapshot, GskTransform *transform);";subroutine gtk_snapshot_transform(snapshot, transform) bind(c)
gtk;gtk_snapshot_transform_matrix;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_transform_matrix (GtkSnapshot *snapshot, const graphene_matrix_t*matrix);";subroutine gtk_snapshot_transform_matrix(snapshot, matrix) bind(c)
gtk;gtk_snapshot_translate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_translate (GtkSnapshot *snapshot, const graphene_point_t *point);";subroutine gtk_snapshot_translate(snapshot, point) bind(c)
gtk;gtk_snapshot_translate_3d;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksnapshot.h;"void gtk_snapshot_translate_3d (GtkSnapshot *snapshot, const graphene_point3d_t*point);";subroutine gtk_snapshot_translate_3d(snapshot, point) bind(c)
gtk;gtk_sort_list_model_get_incremental;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksortlistmodel.h;"gboolean gtk_sort_list_model_get_incremental (GtkSortListModel *self);";function gtk_sort_list_model_get_incremental(self) bind(c)
gtk;gtk_sort_list_model_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksortlistmodel.h;"GListModel * gtk_sort_list_model_get_model (GtkSortListModel *self);";function gtk_sort_list_model_get_model(self) bind(c)
gtk;gtk_sort_list_model_get_pending;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksortlistmodel.h;"guint gtk_sort_list_model_get_pending (GtkSortListModel *self);";function gtk_sort_list_model_get_pending(self) bind(c)
gtk;gtk_sort_list_model_get_sorter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksortlistmodel.h;"GtkSorter * gtk_sort_list_model_get_sorter (GtkSortListModel *self);";function gtk_sort_list_model_get_sorter(self) bind(c)
gtk;gtk_sort_list_model_set_incremental;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksortlistmodel.h;"void gtk_sort_list_model_set_incremental (GtkSortListModel *self, gboolean incremental);";subroutine gtk_sort_list_model_set_incremental(self, incremental) bind(c)
gtk;gtk_sort_list_model_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksortlistmodel.h;"void gtk_sort_list_model_set_model (GtkSortListModel *self, GListModel *model);";subroutine gtk_sort_list_model_set_model(self, model) bind(c)
gtk;gtk_sort_list_model_set_sorter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksortlistmodel.h;"void gtk_sort_list_model_set_sorter (GtkSortListModel *self, GtkSorter *sorter);";subroutine gtk_sort_list_model_set_sorter(self, sorter) bind(c)
gtk;gtk_sorter_changed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksorter.h;"void gtk_sorter_changed (GtkSorter *self, GtkSorterChange change);";subroutine gtk_sorter_changed(self, change) bind(c)
gtk;gtk_sorter_get_order;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtksorter.h;"GtkSorterOrder gtk_sorter_get_order (GtkSorter *self);";function gtk_sorter_get_order(self) bind(c)
gtk;gtk_spin_button_configure;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_configure (GtkSpinButton *spin_button, GtkAdjustment *adjustment, double climb_rate, guint digits);";subroutine gtk_spin_button_configure(spin_button, adjustment, climb_rate, digits) bind(c)
gtk;gtk_spin_button_get_adjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"GtkAdjustment* gtk_spin_button_get_adjustment (GtkSpinButton *spin_button);";function gtk_spin_button_get_adjustment(spin_button) bind(c)
gtk;gtk_spin_button_get_climb_rate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"double gtk_spin_button_get_climb_rate (GtkSpinButton *spin_button);";function gtk_spin_button_get_climb_rate(spin_button) bind(c)
gtk;gtk_spin_button_get_digits;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"guint gtk_spin_button_get_digits (GtkSpinButton *spin_button);";function gtk_spin_button_get_digits(spin_button) bind(c)
gtk;gtk_spin_button_get_increments;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_get_increments (GtkSpinButton *spin_button, double *step, double *page);";subroutine gtk_spin_button_get_increments(spin_button, step, page) bind(c)
gtk;gtk_spin_button_get_numeric;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"gboolean gtk_spin_button_get_numeric (GtkSpinButton *spin_button);";function gtk_spin_button_get_numeric(spin_button) bind(c)
gtk;gtk_spin_button_get_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_get_range (GtkSpinButton *spin_button, double *min, double *max);";subroutine gtk_spin_button_get_range(spin_button, min, max) bind(c)
gtk;gtk_spin_button_get_snap_to_ticks;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"gboolean gtk_spin_button_get_snap_to_ticks (GtkSpinButton *spin_button);";function gtk_spin_button_get_snap_to_ticks(spin_button) bind(c)
gtk;gtk_spin_button_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"GType gtk_spin_button_get_type (void) G_GNUC_CONST;";function gtk_spin_button_get_type() bind(c)
gtk;gtk_spin_button_get_update_policy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"GtkSpinButtonUpdatePolicy gtk_spin_button_get_update_policy (GtkSpinButton *spin_button);";function gtk_spin_button_get_update_policy(spin_button) bind(c)
gtk;gtk_spin_button_get_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"double gtk_spin_button_get_value (GtkSpinButton *spin_button);";function gtk_spin_button_get_value(spin_button) bind(c)
gtk;gtk_spin_button_get_value_as_int;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"int gtk_spin_button_get_value_as_int (GtkSpinButton *spin_button);";function gtk_spin_button_get_value_as_int(spin_button) bind(c)
gtk;gtk_spin_button_get_wrap;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"gboolean gtk_spin_button_get_wrap (GtkSpinButton *spin_button);";function gtk_spin_button_get_wrap(spin_button) bind(c)
gtk;gtk_spin_button_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"GtkWidget* gtk_spin_button_new (GtkAdjustment *adjustment, double climb_rate, guint digits);";function gtk_spin_button_new(adjustment, climb_rate, digits) bind(c)
gtk;gtk_spin_button_new_with_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"GtkWidget* gtk_spin_button_new_with_range (double min, double max, double step);";function gtk_spin_button_new_with_range(min, max, step) bind(c)
gtk;gtk_spin_button_set_adjustment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_set_adjustment (GtkSpinButton *spin_button, GtkAdjustment *adjustment);";subroutine gtk_spin_button_set_adjustment(spin_button, adjustment) bind(c)
gtk;gtk_spin_button_set_climb_rate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_set_climb_rate (GtkSpinButton *spin_button, double climb_rate);";subroutine gtk_spin_button_set_climb_rate(spin_button, climb_rate) bind(c)
gtk;gtk_spin_button_set_digits;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_set_digits (GtkSpinButton *spin_button, guint digits);";subroutine gtk_spin_button_set_digits(spin_button, digits) bind(c)
gtk;gtk_spin_button_set_increments;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_set_increments (GtkSpinButton *spin_button, double step, double page);";subroutine gtk_spin_button_set_increments(spin_button, step, page) bind(c)
gtk;gtk_spin_button_set_numeric;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_set_numeric (GtkSpinButton *spin_button, gboolean numeric);";subroutine gtk_spin_button_set_numeric(spin_button, numeric) bind(c)
gtk;gtk_spin_button_set_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_set_range (GtkSpinButton *spin_button, double min, double max);";subroutine gtk_spin_button_set_range(spin_button, min, max) bind(c)
gtk;gtk_spin_button_set_snap_to_ticks;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_set_snap_to_ticks (GtkSpinButton *spin_button, gboolean snap_to_ticks);";subroutine gtk_spin_button_set_snap_to_ticks(spin_button, snap_to_ticks) bind(c)
gtk;gtk_spin_button_set_update_policy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_set_update_policy (GtkSpinButton *spin_button, GtkSpinButtonUpdatePolicy policy);";subroutine gtk_spin_button_set_update_policy(spin_button, policy) bind(c)
gtk;gtk_spin_button_set_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_set_value (GtkSpinButton *spin_button, double value);";subroutine gtk_spin_button_set_value(spin_button, value) bind(c)
gtk;gtk_spin_button_set_wrap;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_set_wrap (GtkSpinButton *spin_button, gboolean wrap);";subroutine gtk_spin_button_set_wrap(spin_button, wrap) bind(c)
gtk;gtk_spin_button_spin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_spin (GtkSpinButton *spin_button, GtkSpinType direction, double increment);";subroutine gtk_spin_button_spin(spin_button, direction, increment) bind(c)
gtk;gtk_spin_button_update;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinbutton.h;"void gtk_spin_button_update (GtkSpinButton *spin_button);";subroutine gtk_spin_button_update(spin_button) bind(c)
gtk;gtk_spinner_get_spinning;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinner.h;"gboolean gtk_spinner_get_spinning (GtkSpinner *spinner);";function gtk_spinner_get_spinning(spinner) bind(c)
gtk;gtk_spinner_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinner.h;"GType gtk_spinner_get_type (void) G_GNUC_CONST;";function gtk_spinner_get_type() bind(c)
gtk;gtk_spinner_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinner.h;"GtkWidget *gtk_spinner_new (void);";function gtk_spinner_new() bind(c)
gtk;gtk_spinner_set_spinning;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinner.h;"void gtk_spinner_set_spinning (GtkSpinner *spinner, gboolean spinning);";subroutine gtk_spinner_set_spinning(spinner, spinning) bind(c)
gtk;gtk_spinner_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinner.h;"void gtk_spinner_start (GtkSpinner *spinner);";subroutine gtk_spinner_start(spinner) bind(c)
gtk;gtk_spinner_stop;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkspinner.h;"void gtk_spinner_stop (GtkSpinner *spinner);";subroutine gtk_spinner_stop(spinner) bind(c)
gtk;gtk_stack_add_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"GtkStackPage * gtk_stack_add_child (GtkStack *stack, GtkWidget *child);";function gtk_stack_add_child(stack, child) bind(c)
gtk;gtk_stack_add_named;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"GtkStackPage * gtk_stack_add_named (GtkStack *stack, GtkWidget *child, const char *name);";function gtk_stack_add_named(stack, child, name) bind(c)
gtk;gtk_stack_add_titled;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"GtkStackPage * gtk_stack_add_titled (GtkStack *stack, GtkWidget *child, const char *name, const char *title);";function gtk_stack_add_titled(stack, child, name, title) bind(c)
gtk;gtk_stack_get_child_by_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"GtkWidget * gtk_stack_get_child_by_name (GtkStack *stack, const char *name);";function gtk_stack_get_child_by_name(stack, name) bind(c)
gtk;gtk_stack_get_hhomogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"gboolean gtk_stack_get_hhomogeneous (GtkStack *stack);";function gtk_stack_get_hhomogeneous(stack) bind(c)
gtk;gtk_stack_get_interpolate_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"gboolean gtk_stack_get_interpolate_size (GtkStack *stack);";function gtk_stack_get_interpolate_size(stack) bind(c)
gtk;gtk_stack_get_page;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"GtkStackPage * gtk_stack_get_page (GtkStack *stack, GtkWidget *child);";function gtk_stack_get_page(stack, child) bind(c)
gtk;gtk_stack_get_pages;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"GtkSelectionModel * gtk_stack_get_pages (GtkStack *stack);";function gtk_stack_get_pages(stack) bind(c)
gtk;gtk_stack_get_transition_duration;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"guint gtk_stack_get_transition_duration (GtkStack *stack);";function gtk_stack_get_transition_duration(stack) bind(c)
gtk;gtk_stack_get_transition_running;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"gboolean gtk_stack_get_transition_running (GtkStack *stack);";function gtk_stack_get_transition_running(stack) bind(c)
gtk;gtk_stack_get_transition_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"GtkStackTransitionType gtk_stack_get_transition_type (GtkStack *stack);";function gtk_stack_get_transition_type(stack) bind(c)
gtk;gtk_stack_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"GType gtk_stack_get_type (void) G_GNUC_CONST;";function gtk_stack_get_type() bind(c)
gtk;gtk_stack_get_vhomogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"gboolean gtk_stack_get_vhomogeneous (GtkStack *stack);";function gtk_stack_get_vhomogeneous(stack) bind(c)
gtk;gtk_stack_get_visible_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"GtkWidget * gtk_stack_get_visible_child (GtkStack *stack);";function gtk_stack_get_visible_child(stack) bind(c)
gtk;gtk_stack_get_visible_child_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"const char * gtk_stack_get_visible_child_name (GtkStack *stack);";function gtk_stack_get_visible_child_name(stack) bind(c)
gtk;gtk_stack_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"GtkWidget * gtk_stack_new (void);";function gtk_stack_new() bind(c)
gtk;gtk_stack_page_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"GtkWidget * gtk_stack_page_get_child (GtkStackPage *self);";function gtk_stack_page_get_child(self) bind(c)
gtk;gtk_stack_page_get_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"const char * gtk_stack_page_get_icon_name (GtkStackPage *self);";function gtk_stack_page_get_icon_name(self) bind(c)
gtk;gtk_stack_page_get_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"const char * gtk_stack_page_get_name (GtkStackPage *self);";function gtk_stack_page_get_name(self) bind(c)
gtk;gtk_stack_page_get_needs_attention;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"gboolean gtk_stack_page_get_needs_attention (GtkStackPage *self);";function gtk_stack_page_get_needs_attention(self) bind(c)
gtk;gtk_stack_page_get_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"const char * gtk_stack_page_get_title (GtkStackPage *self);";function gtk_stack_page_get_title(self) bind(c)
gtk;gtk_stack_page_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"GType gtk_stack_page_get_type (void) G_GNUC_CONST;";function gtk_stack_page_get_type() bind(c)
gtk;gtk_stack_page_get_use_underline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"gboolean gtk_stack_page_get_use_underline (GtkStackPage *self);";function gtk_stack_page_get_use_underline(self) bind(c)
gtk;gtk_stack_page_get_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"gboolean gtk_stack_page_get_visible (GtkStackPage *self);";function gtk_stack_page_get_visible(self) bind(c)
gtk;gtk_stack_page_set_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_page_set_icon_name (GtkStackPage *self, const char *setting);";subroutine gtk_stack_page_set_icon_name(self, setting) bind(c)
gtk;gtk_stack_page_set_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_page_set_name (GtkStackPage *self, const char *setting);";subroutine gtk_stack_page_set_name(self, setting) bind(c)
gtk;gtk_stack_page_set_needs_attention;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_page_set_needs_attention (GtkStackPage *self, gboolean setting);";subroutine gtk_stack_page_set_needs_attention(self, setting) bind(c)
gtk;gtk_stack_page_set_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_page_set_title (GtkStackPage *self, const char *setting);";subroutine gtk_stack_page_set_title(self, setting) bind(c)
gtk;gtk_stack_page_set_use_underline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_page_set_use_underline (GtkStackPage *self, gboolean setting);";subroutine gtk_stack_page_set_use_underline(self, setting) bind(c)
gtk;gtk_stack_page_set_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_page_set_visible (GtkStackPage *self, gboolean visible);";subroutine gtk_stack_page_set_visible(self, visible) bind(c)
gtk;gtk_stack_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_remove (GtkStack *stack, GtkWidget *child);";subroutine gtk_stack_remove(stack, child) bind(c)
gtk;gtk_stack_set_hhomogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_set_hhomogeneous (GtkStack *stack, gboolean hhomogeneous);";subroutine gtk_stack_set_hhomogeneous(stack, hhomogeneous) bind(c)
gtk;gtk_stack_set_interpolate_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_set_interpolate_size (GtkStack *stack, gboolean interpolate_size);";subroutine gtk_stack_set_interpolate_size(stack, interpolate_size) bind(c)
gtk;gtk_stack_set_transition_duration;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_set_transition_duration (GtkStack *stack, guint duration);";subroutine gtk_stack_set_transition_duration(stack, duration) bind(c)
gtk;gtk_stack_set_transition_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_set_transition_type (GtkStack *stack, GtkStackTransitionType transition);";subroutine gtk_stack_set_transition_type(stack, transition) bind(c)
gtk;gtk_stack_set_vhomogeneous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_set_vhomogeneous (GtkStack *stack, gboolean vhomogeneous);";subroutine gtk_stack_set_vhomogeneous(stack, vhomogeneous) bind(c)
gtk;gtk_stack_set_visible_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_set_visible_child (GtkStack *stack, GtkWidget *child);";subroutine gtk_stack_set_visible_child(stack, child) bind(c)
gtk;gtk_stack_set_visible_child_full;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_set_visible_child_full (GtkStack *stack, const char *name, GtkStackTransitionType transition);";subroutine gtk_stack_set_visible_child_full(stack, name, transition) bind(c)
gtk;gtk_stack_set_visible_child_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstack.h;"void gtk_stack_set_visible_child_name (GtkStack *stack, const char *name);";subroutine gtk_stack_set_visible_child_name(stack, name) bind(c)
gtk;gtk_stack_sidebar_get_stack;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstacksidebar.h;"GtkStack * gtk_stack_sidebar_get_stack (GtkStackSidebar *self);";function gtk_stack_sidebar_get_stack(self) bind(c)
gtk;gtk_stack_sidebar_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstacksidebar.h;"GType gtk_stack_sidebar_get_type (void) G_GNUC_CONST;";function gtk_stack_sidebar_get_type() bind(c)
gtk;gtk_stack_sidebar_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstacksidebar.h;"GtkWidget * gtk_stack_sidebar_new (void);";function gtk_stack_sidebar_new() bind(c)
gtk;gtk_stack_sidebar_set_stack;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstacksidebar.h;"void gtk_stack_sidebar_set_stack (GtkStackSidebar *self, GtkStack *stack);";subroutine gtk_stack_sidebar_set_stack(self, stack) bind(c)
gtk;gtk_stack_switcher_get_stack;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstackswitcher.h;"GtkStack * gtk_stack_switcher_get_stack (GtkStackSwitcher *switcher);";function gtk_stack_switcher_get_stack(switcher) bind(c)
gtk;gtk_stack_switcher_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstackswitcher.h;"GType gtk_stack_switcher_get_type (void) G_GNUC_CONST;";function gtk_stack_switcher_get_type() bind(c)
gtk;gtk_stack_switcher_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstackswitcher.h;"GtkWidget * gtk_stack_switcher_new (void);";function gtk_stack_switcher_new() bind(c)
gtk;gtk_stack_switcher_set_stack;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstackswitcher.h;"void gtk_stack_switcher_set_stack (GtkStackSwitcher *switcher, GtkStack *stack);";subroutine gtk_stack_switcher_set_stack(switcher, stack) bind(c)
gtk;gtk_statusbar_get_context_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstatusbar.h;"guint gtk_statusbar_get_context_id (GtkStatusbar *statusbar, const char *context_description);";function gtk_statusbar_get_context_id(statusbar, context_description) bind(c)
gtk;gtk_statusbar_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstatusbar.h;"GType gtk_statusbar_get_type (void) G_GNUC_CONST;";function gtk_statusbar_get_type() bind(c)
gtk;gtk_statusbar_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstatusbar.h;"GtkWidget* gtk_statusbar_new (void);";function gtk_statusbar_new() bind(c)
gtk;gtk_statusbar_pop;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstatusbar.h;"void gtk_statusbar_pop (GtkStatusbar *statusbar, guint context_id);";subroutine gtk_statusbar_pop(statusbar, context_id) bind(c)
gtk;gtk_statusbar_push;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstatusbar.h;"guint gtk_statusbar_push (GtkStatusbar *statusbar, guint context_id, const char *text);";function gtk_statusbar_push(statusbar, context_id, text) bind(c)
gtk;gtk_statusbar_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstatusbar.h;"void gtk_statusbar_remove (GtkStatusbar *statusbar, guint context_id, guint message_id);";subroutine gtk_statusbar_remove(statusbar, context_id, message_id) bind(c)
gtk;gtk_statusbar_remove_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstatusbar.h;"void gtk_statusbar_remove_all (GtkStatusbar *statusbar, guint context_id);";subroutine gtk_statusbar_remove_all(statusbar, context_id) bind(c)
gtk;gtk_string_filter_get_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringfilter.h;"GtkExpression * gtk_string_filter_get_expression (GtkStringFilter *self);";function gtk_string_filter_get_expression(self) bind(c)
gtk;gtk_string_filter_get_ignore_case;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringfilter.h;"gboolean gtk_string_filter_get_ignore_case (GtkStringFilter *self);";function gtk_string_filter_get_ignore_case(self) bind(c)
gtk;gtk_string_filter_get_match_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringfilter.h;"GtkStringFilterMatchMode gtk_string_filter_get_match_mode (GtkStringFilter *self);";function gtk_string_filter_get_match_mode(self) bind(c)
gtk;gtk_string_filter_get_search;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringfilter.h;"const char * gtk_string_filter_get_search (GtkStringFilter *self);";function gtk_string_filter_get_search(self) bind(c)
gtk;gtk_string_filter_set_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringfilter.h;"void gtk_string_filter_set_expression (GtkStringFilter *self, GtkExpression *expression);";subroutine gtk_string_filter_set_expression(self, expression) bind(c)
gtk;gtk_string_filter_set_ignore_case;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringfilter.h;"void gtk_string_filter_set_ignore_case (GtkStringFilter *self, gboolean ignore_case);";subroutine gtk_string_filter_set_ignore_case(self, ignore_case) bind(c)
gtk;gtk_string_filter_set_match_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringfilter.h;"void gtk_string_filter_set_match_mode (GtkStringFilter *self, GtkStringFilterMatchMode mode);";subroutine gtk_string_filter_set_match_mode(self, mode) bind(c)
gtk;gtk_string_filter_set_search;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringfilter.h;"void gtk_string_filter_set_search (GtkStringFilter *self, const char *search);";subroutine gtk_string_filter_set_search(self, search) bind(c)
gtk;gtk_string_list_append;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringlist.h;"void gtk_string_list_append (GtkStringList *self, const char *string);";subroutine gtk_string_list_append(self, string) bind(c)
gtk;gtk_string_list_get_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringlist.h;"const char * gtk_string_list_get_string (GtkStringList *self, guint position);";function gtk_string_list_get_string(self, position) bind(c)
gtk;gtk_string_list_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringlist.h;"void gtk_string_list_remove (GtkStringList *self, guint position);";subroutine gtk_string_list_remove(self, position) bind(c)
gtk;gtk_string_list_splice;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringlist.h;"void gtk_string_list_splice (GtkStringList *self, guint position, guint n_removals, const char * const *additions);";subroutine gtk_string_list_splice(self, position, n_removals, additions) bind(c)
gtk;gtk_string_list_take;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringlist.h;"void gtk_string_list_take (GtkStringList *self, char *string);";subroutine gtk_string_list_take(self, string) bind(c)
gtk;gtk_string_object_get_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringlist.h;"const char * gtk_string_object_get_string (GtkStringObject *self);";function gtk_string_object_get_string(self) bind(c)
gtk;gtk_string_sorter_get_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringsorter.h;"GtkExpression * gtk_string_sorter_get_expression (GtkStringSorter *self);";function gtk_string_sorter_get_expression(self) bind(c)
gtk;gtk_string_sorter_get_ignore_case;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringsorter.h;"gboolean gtk_string_sorter_get_ignore_case (GtkStringSorter *self);";function gtk_string_sorter_get_ignore_case(self) bind(c)
gtk;gtk_string_sorter_set_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringsorter.h;"void gtk_string_sorter_set_expression (GtkStringSorter *self, GtkExpression *expression);";subroutine gtk_string_sorter_set_expression(self, expression) bind(c)
gtk;gtk_string_sorter_set_ignore_case;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstringsorter.h;"void gtk_string_sorter_set_ignore_case (GtkStringSorter *self, gboolean ignore_case);";subroutine gtk_string_sorter_set_ignore_case(self, ignore_case) bind(c)
gtk;gtk_style_context_add_class;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_add_class (GtkStyleContext *context, const char *class_name);";subroutine gtk_style_context_add_class(context, class_name) bind(c)
gtk;gtk_style_context_add_provider;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_add_provider (GtkStyleContext *context, GtkStyleProvider *provider, guint priority);";subroutine gtk_style_context_add_provider(context, provider, priority) bind(c)
gtk;gtk_style_context_add_provider_for_display;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_add_provider_for_display (GdkDisplay *display, GtkStyleProvider *provider, guint priority);";subroutine gtk_style_context_add_provider_for_display(display, provider, priority) bind(c)
gtk;gtk_style_context_get_border;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_get_border (GtkStyleContext *context, GtkBorder *border);";subroutine gtk_style_context_get_border(context, border) bind(c)
gtk;gtk_style_context_get_color;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_get_color (GtkStyleContext *context, GdkRGBA *color);";subroutine gtk_style_context_get_color(context, color) bind(c)
gtk;gtk_style_context_get_display;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"GdkDisplay *gtk_style_context_get_display (GtkStyleContext *context);";function gtk_style_context_get_display(context) bind(c)
gtk;gtk_style_context_get_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_get_margin (GtkStyleContext *context, GtkBorder *margin);";subroutine gtk_style_context_get_margin(context, margin) bind(c)
gtk;gtk_style_context_get_padding;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_get_padding (GtkStyleContext *context, GtkBorder *padding);";subroutine gtk_style_context_get_padding(context, padding) bind(c)
gtk;gtk_style_context_get_scale;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"int gtk_style_context_get_scale (GtkStyleContext *context);";function gtk_style_context_get_scale(context) bind(c)
gtk;gtk_style_context_get_state;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"GtkStateFlags gtk_style_context_get_state (GtkStyleContext *context);";function gtk_style_context_get_state(context) bind(c)
gtk;gtk_style_context_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"GType gtk_style_context_get_type (void) G_GNUC_CONST;";function gtk_style_context_get_type() bind(c)
gtk;gtk_style_context_has_class;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"gboolean gtk_style_context_has_class (GtkStyleContext *context, const char *class_name);";function gtk_style_context_has_class(context, class_name) bind(c)
gtk;gtk_style_context_lookup_color;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"gboolean gtk_style_context_lookup_color (GtkStyleContext *context, const char *color_name, GdkRGBA *color);";function gtk_style_context_lookup_color(context, color_name, color) bind(c)
gtk;gtk_style_context_remove_class;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_remove_class (GtkStyleContext *context, const char *class_name);";subroutine gtk_style_context_remove_class(context, class_name) bind(c)
gtk;gtk_style_context_remove_provider;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_remove_provider (GtkStyleContext *context, GtkStyleProvider *provider);";subroutine gtk_style_context_remove_provider(context, provider) bind(c)
gtk;gtk_style_context_remove_provider_for_display;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_remove_provider_for_display (GdkDisplay *display, GtkStyleProvider *provider);";subroutine gtk_style_context_remove_provider_for_display(display, provider) bind(c)
gtk;gtk_style_context_restore;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_restore (GtkStyleContext *context);";subroutine gtk_style_context_restore(context) bind(c)
gtk;gtk_style_context_save;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_save (GtkStyleContext *context);";subroutine gtk_style_context_save(context) bind(c)
gtk;gtk_style_context_set_display;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_set_display (GtkStyleContext *context, GdkDisplay *display);";subroutine gtk_style_context_set_display(context, display) bind(c)
gtk;gtk_style_context_set_scale;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_set_scale (GtkStyleContext *context, int scale);";subroutine gtk_style_context_set_scale(context, scale) bind(c)
gtk;gtk_style_context_set_state;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"void gtk_style_context_set_state (GtkStyleContext *context, GtkStateFlags flags);";subroutine gtk_style_context_set_state(context, flags) bind(c)
gtk;gtk_style_context_to_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstylecontext.h;"char * gtk_style_context_to_string (GtkStyleContext *context, GtkStyleContextPrintFlags flags);";function gtk_style_context_to_string(context, flags) bind(c)
gtk;gtk_style_provider_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkstyleprovider.h;"GType gtk_style_provider_get_type (void) G_GNUC_CONST;";function gtk_style_provider_get_type() bind(c)
gtk;gtk_switch_get_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkswitch.h;"gboolean gtk_switch_get_active (GtkSwitch *self);";function gtk_switch_get_active(self) bind(c)
gtk;gtk_switch_get_state;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkswitch.h;"gboolean gtk_switch_get_state (GtkSwitch *self);";function gtk_switch_get_state(self) bind(c)
gtk;gtk_switch_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkswitch.h;"GType gtk_switch_get_type (void) G_GNUC_CONST;";function gtk_switch_get_type() bind(c)
gtk;gtk_switch_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkswitch.h;"GtkWidget * gtk_switch_new (void);";function gtk_switch_new() bind(c)
gtk;gtk_switch_set_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkswitch.h;"void gtk_switch_set_active (GtkSwitch *self, gboolean is_active);";subroutine gtk_switch_set_active(self, is_active) bind(c)
gtk;gtk_switch_set_state;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkswitch.h;"void gtk_switch_set_state (GtkSwitch *self, gboolean state);";subroutine gtk_switch_set_state(self, state) bind(c)
gtk;gtk_test_accessible_assertion_message_role;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktestatcontext.h;"void gtk_test_accessible_assertion_message_role (const char *domain, const char *file, int line, const char *func, const char *expr, GtkAccessible *accessible, GtkAccessibleRole expected_role, GtkAccessibleRole actual_role);";subroutine gtk_test_accessible_assertion_message_role(domain, file, line, func, expr, accessible, expected_role, actual_role) bind(c)
gtk;gtk_test_accessible_has_property;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktestatcontext.h;"gboolean gtk_test_accessible_has_property (GtkAccessible *accessible, GtkAccessibleProperty property);";function gtk_test_accessible_has_property(accessible, property) bind(c)
gtk;gtk_test_accessible_has_relation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktestatcontext.h;"gboolean gtk_test_accessible_has_relation (GtkAccessible *accessible, GtkAccessibleRelation relation);";function gtk_test_accessible_has_relation(accessible, relation) bind(c)
gtk;gtk_test_accessible_has_role;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktestatcontext.h;"gboolean gtk_test_accessible_has_role (GtkAccessible *accessible, GtkAccessibleRole role);";function gtk_test_accessible_has_role(accessible, role) bind(c)
gtk;gtk_test_accessible_has_state;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktestatcontext.h;"gboolean gtk_test_accessible_has_state (GtkAccessible *accessible, GtkAccessibleState state);";function gtk_test_accessible_has_state(accessible, state) bind(c)
gtk;gtk_test_list_all_types;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktestutils.h;"const GType* gtk_test_list_all_types (guint *n_types);";function gtk_test_list_all_types(n_types) bind(c)
gtk;gtk_test_register_all_types;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktestutils.h;"void gtk_test_register_all_types (void);";subroutine gtk_test_register_all_types() bind(c)
gtk;gtk_test_widget_wait_for_draw;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktestutils.h;"void gtk_test_widget_wait_for_draw (GtkWidget *widget);";subroutine gtk_test_widget_wait_for_draw(widget) bind(c)
gtk;gtk_text_buffer_add_mark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_add_mark (GtkTextBuffer *buffer, GtkTextMark *mark, const GtkTextIter *where);";subroutine gtk_text_buffer_add_mark(buffer, mark, where) bind(c)
gtk;gtk_text_buffer_add_selection_clipboard;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_add_selection_clipboard (GtkTextBuffer *buffer, GdkClipboard *clipboard);";subroutine gtk_text_buffer_add_selection_clipboard(buffer, clipboard) bind(c)
gtk;gtk_text_buffer_apply_tag;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_apply_tag (GtkTextBuffer *buffer, GtkTextTag *tag, const GtkTextIter *start, const GtkTextIter *end);";subroutine gtk_text_buffer_apply_tag(buffer, tag, start, end) bind(c)
gtk;gtk_text_buffer_apply_tag_by_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_apply_tag_by_name (GtkTextBuffer *buffer, const char *name, const GtkTextIter *start, const GtkTextIter *end);";subroutine gtk_text_buffer_apply_tag_by_name(buffer, name, start, end) bind(c)
gtk;gtk_text_buffer_backspace;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_backspace (GtkTextBuffer *buffer, GtkTextIter *iter, gboolean interactive, gboolean default_editable);";function gtk_text_buffer_backspace(buffer, iter, interactive, default_editable) bind(c)
gtk;gtk_text_buffer_begin_irreversible_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_begin_irreversible_action (GtkTextBuffer *buffer);";subroutine gtk_text_buffer_begin_irreversible_action(buffer) bind(c)
gtk;gtk_text_buffer_begin_user_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_begin_user_action (GtkTextBuffer *buffer);";subroutine gtk_text_buffer_begin_user_action(buffer) bind(c)
gtk;gtk_text_buffer_copy_clipboard;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_copy_clipboard (GtkTextBuffer *buffer, GdkClipboard *clipboard);";subroutine gtk_text_buffer_copy_clipboard(buffer, clipboard) bind(c)
gtk;gtk_text_buffer_create_child_anchor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"GtkTextChildAnchor *gtk_text_buffer_create_child_anchor (GtkTextBuffer *buffer, GtkTextIter *iter);";function gtk_text_buffer_create_child_anchor(buffer, iter) bind(c)
gtk;gtk_text_buffer_create_mark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"GtkTextMark *gtk_text_buffer_create_mark (GtkTextBuffer *buffer, const char *mark_name, const GtkTextIter *where, gboolean left_gravity);";function gtk_text_buffer_create_mark(buffer, mark_name, where, left_gravity) bind(c)
gtk;gtk_text_buffer_cut_clipboard;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_cut_clipboard (GtkTextBuffer *buffer, GdkClipboard *clipboard, gboolean default_editable);";subroutine gtk_text_buffer_cut_clipboard(buffer, clipboard, default_editable) bind(c)
gtk;gtk_text_buffer_delete;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_delete (GtkTextBuffer *buffer, GtkTextIter *start, GtkTextIter *end);";subroutine gtk_text_buffer_delete(buffer, start, end) bind(c)
gtk;gtk_text_buffer_delete_interactive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_delete_interactive (GtkTextBuffer *buffer, GtkTextIter *start_iter, GtkTextIter *end_iter, gboolean default_editable);";function gtk_text_buffer_delete_interactive(buffer, start_iter, end_iter, default_editable) bind(c)
gtk;gtk_text_buffer_delete_mark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_delete_mark (GtkTextBuffer *buffer, GtkTextMark *mark);";subroutine gtk_text_buffer_delete_mark(buffer, mark) bind(c)
gtk;gtk_text_buffer_delete_mark_by_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_delete_mark_by_name (GtkTextBuffer *buffer, const char *name);";subroutine gtk_text_buffer_delete_mark_by_name(buffer, name) bind(c)
gtk;gtk_text_buffer_delete_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_delete_selection (GtkTextBuffer *buffer, gboolean interactive, gboolean default_editable);";function gtk_text_buffer_delete_selection(buffer, interactive, default_editable) bind(c)
gtk;gtk_text_buffer_end_irreversible_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_end_irreversible_action (GtkTextBuffer *buffer);";subroutine gtk_text_buffer_end_irreversible_action(buffer) bind(c)
gtk;gtk_text_buffer_end_user_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_end_user_action (GtkTextBuffer *buffer);";subroutine gtk_text_buffer_end_user_action(buffer) bind(c)
gtk;gtk_text_buffer_get_bounds;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_get_bounds (GtkTextBuffer *buffer, GtkTextIter *start, GtkTextIter *end);";subroutine gtk_text_buffer_get_bounds(buffer, start, end) bind(c)
gtk;gtk_text_buffer_get_can_redo;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_get_can_redo (GtkTextBuffer *buffer);";function gtk_text_buffer_get_can_redo(buffer) bind(c)
gtk;gtk_text_buffer_get_can_undo;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_get_can_undo (GtkTextBuffer *buffer);";function gtk_text_buffer_get_can_undo(buffer) bind(c)
gtk;gtk_text_buffer_get_char_count;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"int gtk_text_buffer_get_char_count (GtkTextBuffer *buffer);";function gtk_text_buffer_get_char_count(buffer) bind(c)
gtk;gtk_text_buffer_get_enable_undo;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_get_enable_undo (GtkTextBuffer *buffer);";function gtk_text_buffer_get_enable_undo(buffer) bind(c)
gtk;gtk_text_buffer_get_end_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_get_end_iter (GtkTextBuffer *buffer, GtkTextIter *iter);";subroutine gtk_text_buffer_get_end_iter(buffer, iter) bind(c)
gtk;gtk_text_buffer_get_has_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_get_has_selection (GtkTextBuffer *buffer);";function gtk_text_buffer_get_has_selection(buffer) bind(c)
gtk;gtk_text_buffer_get_insert;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"GtkTextMark* gtk_text_buffer_get_insert (GtkTextBuffer *buffer);";function gtk_text_buffer_get_insert(buffer) bind(c)
gtk;gtk_text_buffer_get_iter_at_child_anchor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_get_iter_at_child_anchor (GtkTextBuffer *buffer, GtkTextIter *iter, GtkTextChildAnchor *anchor);";subroutine gtk_text_buffer_get_iter_at_child_anchor(buffer, iter, anchor) bind(c)
gtk;gtk_text_buffer_get_iter_at_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_get_iter_at_line (GtkTextBuffer *buffer, GtkTextIter *iter, int line_number);";function gtk_text_buffer_get_iter_at_line(buffer, iter, line_number) bind(c)
gtk;gtk_text_buffer_get_iter_at_line_index;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_get_iter_at_line_index (GtkTextBuffer *buffer, GtkTextIter *iter, int line_number, int byte_index);";function gtk_text_buffer_get_iter_at_line_index(buffer, iter, line_number, byte_index) bind(c)
gtk;gtk_text_buffer_get_iter_at_line_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_get_iter_at_line_offset (GtkTextBuffer *buffer, GtkTextIter *iter, int line_number, int char_offset);";function gtk_text_buffer_get_iter_at_line_offset(buffer, iter, line_number, char_offset) bind(c)
gtk;gtk_text_buffer_get_iter_at_mark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_get_iter_at_mark (GtkTextBuffer *buffer, GtkTextIter *iter, GtkTextMark *mark);";subroutine gtk_text_buffer_get_iter_at_mark(buffer, iter, mark) bind(c)
gtk;gtk_text_buffer_get_iter_at_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_get_iter_at_offset (GtkTextBuffer *buffer, GtkTextIter *iter, int char_offset);";subroutine gtk_text_buffer_get_iter_at_offset(buffer, iter, char_offset) bind(c)
gtk;gtk_text_buffer_get_line_count;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"int gtk_text_buffer_get_line_count (GtkTextBuffer *buffer);";function gtk_text_buffer_get_line_count(buffer) bind(c)
gtk;gtk_text_buffer_get_mark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"GtkTextMark* gtk_text_buffer_get_mark (GtkTextBuffer *buffer, const char *name);";function gtk_text_buffer_get_mark(buffer, name) bind(c)
gtk;gtk_text_buffer_get_max_undo_levels;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"guint gtk_text_buffer_get_max_undo_levels (GtkTextBuffer *buffer);";function gtk_text_buffer_get_max_undo_levels(buffer) bind(c)
gtk;gtk_text_buffer_get_modified;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_get_modified (GtkTextBuffer *buffer);";function gtk_text_buffer_get_modified(buffer) bind(c)
gtk;gtk_text_buffer_get_selection_bound;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"GtkTextMark* gtk_text_buffer_get_selection_bound (GtkTextBuffer *buffer);";function gtk_text_buffer_get_selection_bound(buffer) bind(c)
gtk;gtk_text_buffer_get_selection_bounds;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_get_selection_bounds (GtkTextBuffer *buffer, GtkTextIter *start, GtkTextIter *end);";function gtk_text_buffer_get_selection_bounds(buffer, start, end) bind(c)
gtk;gtk_text_buffer_get_selection_content;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"GdkContentProvider * gtk_text_buffer_get_selection_content (GtkTextBuffer *buffer);";function gtk_text_buffer_get_selection_content(buffer) bind(c)
gtk;gtk_text_buffer_get_slice;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"char *gtk_text_buffer_get_slice (GtkTextBuffer *buffer, const GtkTextIter *start, const GtkTextIter *end, gboolean include_hidden_chars);";function gtk_text_buffer_get_slice(buffer, start, end, include_hidden_chars) bind(c)
gtk;gtk_text_buffer_get_start_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_get_start_iter (GtkTextBuffer *buffer, GtkTextIter *iter);";subroutine gtk_text_buffer_get_start_iter(buffer, iter) bind(c)
gtk;gtk_text_buffer_get_tag_table;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"GtkTextTagTable* gtk_text_buffer_get_tag_table (GtkTextBuffer *buffer);";function gtk_text_buffer_get_tag_table(buffer) bind(c)
gtk;gtk_text_buffer_get_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"char *gtk_text_buffer_get_text (GtkTextBuffer *buffer, const GtkTextIter *start, const GtkTextIter *end, gboolean include_hidden_chars);";function gtk_text_buffer_get_text(buffer, start, end, include_hidden_chars) bind(c)
gtk;gtk_text_buffer_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"GType gtk_text_buffer_get_type (void) G_GNUC_CONST;";function gtk_text_buffer_get_type() bind(c)
gtk;gtk_text_buffer_insert;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_insert (GtkTextBuffer *buffer, GtkTextIter *iter, const char *text, int len);";subroutine gtk_text_buffer_insert(buffer, iter, text, len) bind(c)
gtk;gtk_text_buffer_insert_at_cursor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_insert_at_cursor (GtkTextBuffer *buffer, const char *text, int len);";subroutine gtk_text_buffer_insert_at_cursor(buffer, text, len) bind(c)
gtk;gtk_text_buffer_insert_child_anchor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_insert_child_anchor (GtkTextBuffer *buffer, GtkTextIter *iter, GtkTextChildAnchor *anchor);";subroutine gtk_text_buffer_insert_child_anchor(buffer, iter, anchor) bind(c)
gtk;gtk_text_buffer_insert_interactive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_insert_interactive (GtkTextBuffer *buffer, GtkTextIter *iter, const char *text, int len, gboolean default_editable);";function gtk_text_buffer_insert_interactive(buffer, iter, text, len, default_editable) bind(c)
gtk;gtk_text_buffer_insert_interactive_at_cursor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_insert_interactive_at_cursor (GtkTextBuffer *buffer, const char *text, int len, gboolean default_editable);";function gtk_text_buffer_insert_interactive_at_cursor(buffer, text, len, default_editable) bind(c)
gtk;gtk_text_buffer_insert_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_insert_markup (GtkTextBuffer *buffer, GtkTextIter *iter, const char *markup, int len);";subroutine gtk_text_buffer_insert_markup(buffer, iter, markup, len) bind(c)
gtk;gtk_text_buffer_insert_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_insert_paintable (GtkTextBuffer *buffer, GtkTextIter *iter, GdkPaintable *paintable);";subroutine gtk_text_buffer_insert_paintable(buffer, iter, paintable) bind(c)
gtk;gtk_text_buffer_insert_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_insert_range (GtkTextBuffer *buffer, GtkTextIter *iter, const GtkTextIter *start, const GtkTextIter *end);";subroutine gtk_text_buffer_insert_range(buffer, iter, start, end) bind(c)
gtk;gtk_text_buffer_insert_range_interactive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"gboolean gtk_text_buffer_insert_range_interactive (GtkTextBuffer *buffer, GtkTextIter *iter, const GtkTextIter *start, const GtkTextIter *end, gboolean default_editable);";function gtk_text_buffer_insert_range_interactive(buffer, iter, start, end, default_editable) bind(c)
gtk;gtk_text_buffer_move_mark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_move_mark (GtkTextBuffer *buffer, GtkTextMark *mark, const GtkTextIter *where);";subroutine gtk_text_buffer_move_mark(buffer, mark, where) bind(c)
gtk;gtk_text_buffer_move_mark_by_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_move_mark_by_name (GtkTextBuffer *buffer, const char *name, const GtkTextIter *where);";subroutine gtk_text_buffer_move_mark_by_name(buffer, name, where) bind(c)
gtk;gtk_text_buffer_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"GtkTextBuffer *gtk_text_buffer_new (GtkTextTagTable *table);";function gtk_text_buffer_new(table) bind(c)
gtk;gtk_text_buffer_paste_clipboard;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_paste_clipboard (GtkTextBuffer *buffer, GdkClipboard *clipboard, GtkTextIter *override_location, gboolean default_editable);";subroutine gtk_text_buffer_paste_clipboard(buffer, clipboard, override_location, default_editable) bind(c)
gtk;gtk_text_buffer_place_cursor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_place_cursor (GtkTextBuffer *buffer, const GtkTextIter *where);";subroutine gtk_text_buffer_place_cursor(buffer, where) bind(c)
gtk;gtk_text_buffer_redo;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_redo (GtkTextBuffer *buffer);";subroutine gtk_text_buffer_redo(buffer) bind(c)
gtk;gtk_text_buffer_remove_all_tags;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_remove_all_tags (GtkTextBuffer *buffer, const GtkTextIter *start, const GtkTextIter *end);";subroutine gtk_text_buffer_remove_all_tags(buffer, start, end) bind(c)
gtk;gtk_text_buffer_remove_selection_clipboard;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_remove_selection_clipboard (GtkTextBuffer *buffer, GdkClipboard *clipboard);";subroutine gtk_text_buffer_remove_selection_clipboard(buffer, clipboard) bind(c)
gtk;gtk_text_buffer_remove_tag;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_remove_tag (GtkTextBuffer *buffer, GtkTextTag *tag, const GtkTextIter *start, const GtkTextIter *end);";subroutine gtk_text_buffer_remove_tag(buffer, tag, start, end) bind(c)
gtk;gtk_text_buffer_remove_tag_by_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_remove_tag_by_name (GtkTextBuffer *buffer, const char *name, const GtkTextIter *start, const GtkTextIter *end);";subroutine gtk_text_buffer_remove_tag_by_name(buffer, name, start, end) bind(c)
gtk;gtk_text_buffer_select_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_select_range (GtkTextBuffer *buffer, const GtkTextIter *ins, const GtkTextIter *bound);";subroutine gtk_text_buffer_select_range(buffer, ins, bound) bind(c)
gtk;gtk_text_buffer_set_enable_undo;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_set_enable_undo (GtkTextBuffer *buffer, gboolean enable_undo);";subroutine gtk_text_buffer_set_enable_undo(buffer, enable_undo) bind(c)
gtk;gtk_text_buffer_set_max_undo_levels;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_set_max_undo_levels (GtkTextBuffer *buffer, guint max_undo_levels);";subroutine gtk_text_buffer_set_max_undo_levels(buffer, max_undo_levels) bind(c)
gtk;gtk_text_buffer_set_modified;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_set_modified (GtkTextBuffer *buffer, gboolean setting);";subroutine gtk_text_buffer_set_modified(buffer, setting) bind(c)
gtk;gtk_text_buffer_set_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_set_text (GtkTextBuffer *buffer, const char *text, int len);";subroutine gtk_text_buffer_set_text(buffer, text, len) bind(c)
gtk;gtk_text_buffer_undo;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextbuffer.h;"void gtk_text_buffer_undo (GtkTextBuffer *buffer);";subroutine gtk_text_buffer_undo(buffer) bind(c)
gtk;gtk_text_child_anchor_get_deleted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextchild.h;"gboolean gtk_text_child_anchor_get_deleted (GtkTextChildAnchor *anchor);";function gtk_text_child_anchor_get_deleted(anchor) bind(c)
gtk;gtk_text_child_anchor_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextchild.h;"GType gtk_text_child_anchor_get_type (void) G_GNUC_CONST;";function gtk_text_child_anchor_get_type() bind(c)
gtk;gtk_text_child_anchor_get_widgets;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextchild.h;"GtkWidget ** gtk_text_child_anchor_get_widgets (GtkTextChildAnchor *anchor, guint *out_len);";function gtk_text_child_anchor_get_widgets(anchor, out_len) bind(c)
gtk;gtk_text_child_anchor_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextchild.h;"GtkTextChildAnchor* gtk_text_child_anchor_new (void);";function gtk_text_child_anchor_new() bind(c)
gtk;gtk_text_get_activates_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"gboolean gtk_text_get_activates_default (GtkText *self);";function gtk_text_get_activates_default(self) bind(c)
gtk;gtk_text_get_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"PangoAttrList * gtk_text_get_attributes (GtkText *self);";function gtk_text_get_attributes(self) bind(c)
gtk;gtk_text_get_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"GtkEntryBuffer *gtk_text_get_buffer (GtkText *self);";function gtk_text_get_buffer(self) bind(c)
gtk;gtk_text_get_enable_emoji_completion;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"gboolean gtk_text_get_enable_emoji_completion (GtkText *self);";function gtk_text_get_enable_emoji_completion(self) bind(c)
gtk;gtk_text_get_extra_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"GMenuModel * gtk_text_get_extra_menu (GtkText *self);";function gtk_text_get_extra_menu(self) bind(c)
gtk;gtk_text_get_input_hints;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"GtkInputHints gtk_text_get_input_hints (GtkText *self);";function gtk_text_get_input_hints(self) bind(c)
gtk;gtk_text_get_input_purpose;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"GtkInputPurpose gtk_text_get_input_purpose (GtkText *self);";function gtk_text_get_input_purpose(self) bind(c)
gtk;gtk_text_get_invisible_char;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"gunichar gtk_text_get_invisible_char (GtkText *self);";function gtk_text_get_invisible_char(self) bind(c)
gtk;gtk_text_get_max_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"int gtk_text_get_max_length (GtkText *self);";function gtk_text_get_max_length(self) bind(c)
gtk;gtk_text_get_overwrite_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"gboolean gtk_text_get_overwrite_mode (GtkText *self);";function gtk_text_get_overwrite_mode(self) bind(c)
gtk;gtk_text_get_placeholder_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"const char * gtk_text_get_placeholder_text (GtkText *self);";function gtk_text_get_placeholder_text(self) bind(c)
gtk;gtk_text_get_propagate_text_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"gboolean gtk_text_get_propagate_text_width (GtkText *self);";function gtk_text_get_propagate_text_width(self) bind(c)
gtk;gtk_text_get_tabs;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"PangoTabArray * gtk_text_get_tabs (GtkText *self);";function gtk_text_get_tabs(self) bind(c)
gtk;gtk_text_get_text_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"guint16 gtk_text_get_text_length (GtkText *self);";function gtk_text_get_text_length(self) bind(c)
gtk;gtk_text_get_truncate_multiline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"gboolean gtk_text_get_truncate_multiline (GtkText *self);";function gtk_text_get_truncate_multiline(self) bind(c)
gtk;gtk_text_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"GType gtk_text_get_type (void) G_GNUC_CONST;";function gtk_text_get_type() bind(c)
gtk;gtk_text_get_visibility;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"gboolean gtk_text_get_visibility (GtkText *self);";function gtk_text_get_visibility(self) bind(c)
gtk;gtk_text_grab_focus_without_selecting;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"gboolean gtk_text_grab_focus_without_selecting (GtkText *self);";function gtk_text_grab_focus_without_selecting(self) bind(c)
gtk;gtk_text_iter_assign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"void gtk_text_iter_assign (GtkTextIter *iter, const GtkTextIter *other);";subroutine gtk_text_iter_assign(iter, other) bind(c)
gtk;gtk_text_iter_backward_char;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_char (GtkTextIter *iter);";function gtk_text_iter_backward_char(iter) bind(c)
gtk;gtk_text_iter_backward_chars;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_chars (GtkTextIter *iter, int count);";function gtk_text_iter_backward_chars(iter, count) bind(c)
gtk;gtk_text_iter_backward_cursor_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_cursor_position (GtkTextIter *iter);";function gtk_text_iter_backward_cursor_position(iter) bind(c)
gtk;gtk_text_iter_backward_cursor_positions;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_cursor_positions (GtkTextIter *iter, int count);";function gtk_text_iter_backward_cursor_positions(iter, count) bind(c)
gtk;gtk_text_iter_backward_find_char;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_find_char (GtkTextIter *iter, GtkTextCharPredicate pred, gpointer user_data, const GtkTextIter *limit);";function gtk_text_iter_backward_find_char(iter, pred, user_data, limit) bind(c)
gtk;gtk_text_iter_backward_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_line (GtkTextIter *iter);";function gtk_text_iter_backward_line(iter) bind(c)
gtk;gtk_text_iter_backward_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_lines (GtkTextIter *iter, int count);";function gtk_text_iter_backward_lines(iter, count) bind(c)
gtk;gtk_text_iter_backward_search;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_search (const GtkTextIter *iter, const char *str, GtkTextSearchFlags flags, GtkTextIter *match_start, GtkTextIter *match_end, const GtkTextIter *limit);";function gtk_text_iter_backward_search(iter, str, flags, match_start, match_end, limit) bind(c)
gtk;gtk_text_iter_backward_sentence_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_sentence_start (GtkTextIter *iter);";function gtk_text_iter_backward_sentence_start(iter) bind(c)
gtk;gtk_text_iter_backward_sentence_starts;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_sentence_starts (GtkTextIter *iter, int count);";function gtk_text_iter_backward_sentence_starts(iter, count) bind(c)
gtk;gtk_text_iter_backward_to_tag_toggle;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_to_tag_toggle (GtkTextIter *iter, GtkTextTag *tag);";function gtk_text_iter_backward_to_tag_toggle(iter, tag) bind(c)
gtk;gtk_text_iter_backward_visible_cursor_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_visible_cursor_position (GtkTextIter *iter);";function gtk_text_iter_backward_visible_cursor_position(iter) bind(c)
gtk;gtk_text_iter_backward_visible_cursor_positions;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_visible_cursor_positions (GtkTextIter *iter, int count);";function gtk_text_iter_backward_visible_cursor_positions(iter, count) bind(c)
gtk;gtk_text_iter_backward_visible_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_visible_line (GtkTextIter *iter);";function gtk_text_iter_backward_visible_line(iter) bind(c)
gtk;gtk_text_iter_backward_visible_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_visible_lines (GtkTextIter *iter, int count);";function gtk_text_iter_backward_visible_lines(iter, count) bind(c)
gtk;gtk_text_iter_backward_visible_word_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_visible_word_start (GtkTextIter *iter);";function gtk_text_iter_backward_visible_word_start(iter) bind(c)
gtk;gtk_text_iter_backward_visible_word_starts;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_visible_word_starts (GtkTextIter *iter, int count);";function gtk_text_iter_backward_visible_word_starts(iter, count) bind(c)
gtk;gtk_text_iter_backward_word_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_word_start (GtkTextIter *iter);";function gtk_text_iter_backward_word_start(iter) bind(c)
gtk;gtk_text_iter_backward_word_starts;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_backward_word_starts (GtkTextIter *iter, int count);";function gtk_text_iter_backward_word_starts(iter, count) bind(c)
gtk;gtk_text_iter_can_insert;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_can_insert (const GtkTextIter *iter, gboolean default_editability);";function gtk_text_iter_can_insert(iter, default_editability) bind(c)
gtk;gtk_text_iter_compare;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"int gtk_text_iter_compare (const GtkTextIter *lhs, const GtkTextIter *rhs);";function gtk_text_iter_compare(lhs, rhs) bind(c)
gtk;gtk_text_iter_copy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"GtkTextIter *gtk_text_iter_copy (const GtkTextIter *iter);";function gtk_text_iter_copy(iter) bind(c)
gtk;gtk_text_iter_editable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_editable (const GtkTextIter *iter, gboolean default_setting);";function gtk_text_iter_editable(iter, default_setting) bind(c)
gtk;gtk_text_iter_ends_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_ends_line (const GtkTextIter *iter);";function gtk_text_iter_ends_line(iter) bind(c)
gtk;gtk_text_iter_ends_sentence;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_ends_sentence (const GtkTextIter *iter);";function gtk_text_iter_ends_sentence(iter) bind(c)
gtk;gtk_text_iter_ends_tag;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_ends_tag (const GtkTextIter *iter, GtkTextTag *tag);";function gtk_text_iter_ends_tag(iter, tag) bind(c)
gtk;gtk_text_iter_ends_word;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_ends_word (const GtkTextIter *iter);";function gtk_text_iter_ends_word(iter) bind(c)
gtk;gtk_text_iter_equal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_equal (const GtkTextIter *lhs, const GtkTextIter *rhs);";function gtk_text_iter_equal(lhs, rhs) bind(c)
gtk;gtk_text_iter_forward_char;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_char (GtkTextIter *iter);";function gtk_text_iter_forward_char(iter) bind(c)
gtk;gtk_text_iter_forward_chars;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_chars (GtkTextIter *iter, int count);";function gtk_text_iter_forward_chars(iter, count) bind(c)
gtk;gtk_text_iter_forward_cursor_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_cursor_position (GtkTextIter *iter);";function gtk_text_iter_forward_cursor_position(iter) bind(c)
gtk;gtk_text_iter_forward_cursor_positions;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_cursor_positions (GtkTextIter *iter, int count);";function gtk_text_iter_forward_cursor_positions(iter, count) bind(c)
gtk;gtk_text_iter_forward_find_char;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_find_char (GtkTextIter *iter, GtkTextCharPredicate pred, gpointer user_data, const GtkTextIter *limit);";function gtk_text_iter_forward_find_char(iter, pred, user_data, limit) bind(c)
gtk;gtk_text_iter_forward_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_line (GtkTextIter *iter);";function gtk_text_iter_forward_line(iter) bind(c)
gtk;gtk_text_iter_forward_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_lines (GtkTextIter *iter, int count);";function gtk_text_iter_forward_lines(iter, count) bind(c)
gtk;gtk_text_iter_forward_search;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_search (const GtkTextIter *iter, const char *str, GtkTextSearchFlags flags, GtkTextIter *match_start, GtkTextIter *match_end, const GtkTextIter *limit);";function gtk_text_iter_forward_search(iter, str, flags, match_start, match_end, limit) bind(c)
gtk;gtk_text_iter_forward_sentence_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_sentence_end (GtkTextIter *iter);";function gtk_text_iter_forward_sentence_end(iter) bind(c)
gtk;gtk_text_iter_forward_sentence_ends;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_sentence_ends (GtkTextIter *iter, int count);";function gtk_text_iter_forward_sentence_ends(iter, count) bind(c)
gtk;gtk_text_iter_forward_to_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"void gtk_text_iter_forward_to_end (GtkTextIter *iter);";subroutine gtk_text_iter_forward_to_end(iter) bind(c)
gtk;gtk_text_iter_forward_to_line_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_to_line_end (GtkTextIter *iter);";function gtk_text_iter_forward_to_line_end(iter) bind(c)
gtk;gtk_text_iter_forward_to_tag_toggle;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_to_tag_toggle (GtkTextIter *iter, GtkTextTag *tag);";function gtk_text_iter_forward_to_tag_toggle(iter, tag) bind(c)
gtk;gtk_text_iter_forward_visible_cursor_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_visible_cursor_position (GtkTextIter *iter);";function gtk_text_iter_forward_visible_cursor_position(iter) bind(c)
gtk;gtk_text_iter_forward_visible_cursor_positions;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_visible_cursor_positions (GtkTextIter *iter, int count);";function gtk_text_iter_forward_visible_cursor_positions(iter, count) bind(c)
gtk;gtk_text_iter_forward_visible_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_visible_line (GtkTextIter *iter);";function gtk_text_iter_forward_visible_line(iter) bind(c)
gtk;gtk_text_iter_forward_visible_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_visible_lines (GtkTextIter *iter, int count);";function gtk_text_iter_forward_visible_lines(iter, count) bind(c)
gtk;gtk_text_iter_forward_visible_word_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_visible_word_end (GtkTextIter *iter);";function gtk_text_iter_forward_visible_word_end(iter) bind(c)
gtk;gtk_text_iter_forward_visible_word_ends;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_visible_word_ends (GtkTextIter *iter, int count);";function gtk_text_iter_forward_visible_word_ends(iter, count) bind(c)
gtk;gtk_text_iter_forward_word_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_word_end (GtkTextIter *iter);";function gtk_text_iter_forward_word_end(iter) bind(c)
gtk;gtk_text_iter_forward_word_ends;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_forward_word_ends (GtkTextIter *iter, int count);";function gtk_text_iter_forward_word_ends(iter, count) bind(c)
gtk;gtk_text_iter_free;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"void gtk_text_iter_free (GtkTextIter *iter);";subroutine gtk_text_iter_free(iter) bind(c)
gtk;gtk_text_iter_get_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"GtkTextBuffer *gtk_text_iter_get_buffer (const GtkTextIter *iter);";function gtk_text_iter_get_buffer(iter) bind(c)
gtk;gtk_text_iter_get_bytes_in_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"int gtk_text_iter_get_bytes_in_line (const GtkTextIter *iter);";function gtk_text_iter_get_bytes_in_line(iter) bind(c)
gtk;gtk_text_iter_get_char;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gunichar gtk_text_iter_get_char (const GtkTextIter *iter);";function gtk_text_iter_get_char(iter) bind(c)
gtk;gtk_text_iter_get_chars_in_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"int gtk_text_iter_get_chars_in_line (const GtkTextIter *iter);";function gtk_text_iter_get_chars_in_line(iter) bind(c)
gtk;gtk_text_iter_get_child_anchor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"GtkTextChildAnchor* gtk_text_iter_get_child_anchor (const GtkTextIter *iter);";function gtk_text_iter_get_child_anchor(iter) bind(c)
gtk;gtk_text_iter_get_language;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"PangoLanguage* gtk_text_iter_get_language (const GtkTextIter *iter);";function gtk_text_iter_get_language(iter) bind(c)
gtk;gtk_text_iter_get_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"int gtk_text_iter_get_line (const GtkTextIter *iter);";function gtk_text_iter_get_line(iter) bind(c)
gtk;gtk_text_iter_get_line_index;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"int gtk_text_iter_get_line_index (const GtkTextIter *iter);";function gtk_text_iter_get_line_index(iter) bind(c)
gtk;gtk_text_iter_get_line_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"int gtk_text_iter_get_line_offset (const GtkTextIter *iter);";function gtk_text_iter_get_line_offset(iter) bind(c)
gtk;gtk_text_iter_get_marks;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"GSList *gtk_text_iter_get_marks (const GtkTextIter *iter);";function gtk_text_iter_get_marks(iter) bind(c)
gtk;gtk_text_iter_get_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"int gtk_text_iter_get_offset (const GtkTextIter *iter);";function gtk_text_iter_get_offset(iter) bind(c)
gtk;gtk_text_iter_get_paintable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"GdkPaintable *gtk_text_iter_get_paintable (const GtkTextIter *iter);";function gtk_text_iter_get_paintable(iter) bind(c)
gtk;gtk_text_iter_get_slice;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"char *gtk_text_iter_get_slice (const GtkTextIter *start, const GtkTextIter *end);";function gtk_text_iter_get_slice(start, end) bind(c)
gtk;gtk_text_iter_get_tags;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"GSList *gtk_text_iter_get_tags (const GtkTextIter *iter);";function gtk_text_iter_get_tags(iter) bind(c)
gtk;gtk_text_iter_get_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"char *gtk_text_iter_get_text (const GtkTextIter *start, const GtkTextIter *end);";function gtk_text_iter_get_text(start, end) bind(c)
gtk;gtk_text_iter_get_toggled_tags;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"GSList *gtk_text_iter_get_toggled_tags (const GtkTextIter *iter, gboolean toggled_on);";function gtk_text_iter_get_toggled_tags(iter, toggled_on) bind(c)
gtk;gtk_text_iter_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"GType gtk_text_iter_get_type (void) G_GNUC_CONST;";function gtk_text_iter_get_type() bind(c)
gtk;gtk_text_iter_get_visible_line_index;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"int gtk_text_iter_get_visible_line_index (const GtkTextIter *iter);";function gtk_text_iter_get_visible_line_index(iter) bind(c)
gtk;gtk_text_iter_get_visible_line_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"int gtk_text_iter_get_visible_line_offset (const GtkTextIter *iter);";function gtk_text_iter_get_visible_line_offset(iter) bind(c)
gtk;gtk_text_iter_get_visible_slice;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"char *gtk_text_iter_get_visible_slice (const GtkTextIter *start, const GtkTextIter *end);";function gtk_text_iter_get_visible_slice(start, end) bind(c)
gtk;gtk_text_iter_get_visible_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"char *gtk_text_iter_get_visible_text (const GtkTextIter *start, const GtkTextIter *end);";function gtk_text_iter_get_visible_text(start, end) bind(c)
gtk;gtk_text_iter_has_tag;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_has_tag (const GtkTextIter *iter, GtkTextTag *tag);";function gtk_text_iter_has_tag(iter, tag) bind(c)
gtk;gtk_text_iter_in_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_in_range (const GtkTextIter *iter, const GtkTextIter *start, const GtkTextIter *end);";function gtk_text_iter_in_range(iter, start, end) bind(c)
gtk;gtk_text_iter_inside_sentence;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_inside_sentence (const GtkTextIter *iter);";function gtk_text_iter_inside_sentence(iter) bind(c)
gtk;gtk_text_iter_inside_word;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_inside_word (const GtkTextIter *iter);";function gtk_text_iter_inside_word(iter) bind(c)
gtk;gtk_text_iter_is_cursor_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_is_cursor_position (const GtkTextIter *iter);";function gtk_text_iter_is_cursor_position(iter) bind(c)
gtk;gtk_text_iter_is_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_is_end (const GtkTextIter *iter);";function gtk_text_iter_is_end(iter) bind(c)
gtk;gtk_text_iter_is_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_is_start (const GtkTextIter *iter);";function gtk_text_iter_is_start(iter) bind(c)
gtk;gtk_text_iter_order;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"void gtk_text_iter_order (GtkTextIter *first, GtkTextIter *second);";subroutine gtk_text_iter_order(first, second) bind(c)
gtk;gtk_text_iter_set_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"void gtk_text_iter_set_line (GtkTextIter *iter, int line_number);";subroutine gtk_text_iter_set_line(iter, line_number) bind(c)
gtk;gtk_text_iter_set_line_index;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"void gtk_text_iter_set_line_index (GtkTextIter *iter, int byte_on_line);";subroutine gtk_text_iter_set_line_index(iter, byte_on_line) bind(c)
gtk;gtk_text_iter_set_line_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"void gtk_text_iter_set_line_offset (GtkTextIter *iter, int char_on_line);";subroutine gtk_text_iter_set_line_offset(iter, char_on_line) bind(c)
gtk;gtk_text_iter_set_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"void gtk_text_iter_set_offset (GtkTextIter *iter, int char_offset);";subroutine gtk_text_iter_set_offset(iter, char_offset) bind(c)
gtk;gtk_text_iter_set_visible_line_index;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"void gtk_text_iter_set_visible_line_index (GtkTextIter *iter, int byte_on_line);";subroutine gtk_text_iter_set_visible_line_index(iter, byte_on_line) bind(c)
gtk;gtk_text_iter_set_visible_line_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"void gtk_text_iter_set_visible_line_offset (GtkTextIter *iter, int char_on_line);";subroutine gtk_text_iter_set_visible_line_offset(iter, char_on_line) bind(c)
gtk;gtk_text_iter_starts_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_starts_line (const GtkTextIter *iter);";function gtk_text_iter_starts_line(iter) bind(c)
gtk;gtk_text_iter_starts_sentence;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_starts_sentence (const GtkTextIter *iter);";function gtk_text_iter_starts_sentence(iter) bind(c)
gtk;gtk_text_iter_starts_tag;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_starts_tag (const GtkTextIter *iter, GtkTextTag *tag);";function gtk_text_iter_starts_tag(iter, tag) bind(c)
gtk;gtk_text_iter_starts_word;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_starts_word (const GtkTextIter *iter);";function gtk_text_iter_starts_word(iter) bind(c)
gtk;gtk_text_iter_toggles_tag;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextiter.h;"gboolean gtk_text_iter_toggles_tag (const GtkTextIter *iter, GtkTextTag *tag);";function gtk_text_iter_toggles_tag(iter, tag) bind(c)
gtk;gtk_text_mark_get_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextmark.h;"GtkTextBuffer* gtk_text_mark_get_buffer (GtkTextMark *mark);";function gtk_text_mark_get_buffer(mark) bind(c)
gtk;gtk_text_mark_get_deleted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextmark.h;"gboolean gtk_text_mark_get_deleted (GtkTextMark *mark);";function gtk_text_mark_get_deleted(mark) bind(c)
gtk;gtk_text_mark_get_left_gravity;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextmark.h;"gboolean gtk_text_mark_get_left_gravity (GtkTextMark *mark);";function gtk_text_mark_get_left_gravity(mark) bind(c)
gtk;gtk_text_mark_get_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextmark.h;"const char * gtk_text_mark_get_name (GtkTextMark *mark);";function gtk_text_mark_get_name(mark) bind(c)
gtk;gtk_text_mark_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextmark.h;"GType gtk_text_mark_get_type (void) G_GNUC_CONST;";function gtk_text_mark_get_type() bind(c)
gtk;gtk_text_mark_get_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextmark.h;"gboolean gtk_text_mark_get_visible (GtkTextMark *mark);";function gtk_text_mark_get_visible(mark) bind(c)
gtk;gtk_text_mark_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextmark.h;"GtkTextMark *gtk_text_mark_new (const char *name, gboolean left_gravity);";function gtk_text_mark_new(name, left_gravity) bind(c)
gtk;gtk_text_mark_set_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextmark.h;"void gtk_text_mark_set_visible (GtkTextMark *mark, gboolean setting);";subroutine gtk_text_mark_set_visible(mark, setting) bind(c)
gtk;gtk_text_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"GtkWidget * gtk_text_new (void);";function gtk_text_new() bind(c)
gtk;gtk_text_new_with_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"GtkWidget * gtk_text_new_with_buffer (GtkEntryBuffer *buffer);";function gtk_text_new_with_buffer(buffer) bind(c)
gtk;gtk_text_set_activates_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_activates_default (GtkText *self, gboolean activates);";subroutine gtk_text_set_activates_default(self, activates) bind(c)
gtk;gtk_text_set_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_attributes (GtkText *self, PangoAttrList *attrs);";subroutine gtk_text_set_attributes(self, attrs) bind(c)
gtk;gtk_text_set_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_buffer (GtkText *self, GtkEntryBuffer *buffer);";subroutine gtk_text_set_buffer(self, buffer) bind(c)
gtk;gtk_text_set_enable_emoji_completion;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_enable_emoji_completion (GtkText *self, gboolean enable_emoji_completion);";subroutine gtk_text_set_enable_emoji_completion(self, enable_emoji_completion) bind(c)
gtk;gtk_text_set_extra_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_extra_menu (GtkText *self, GMenuModel *model);";subroutine gtk_text_set_extra_menu(self, model) bind(c)
gtk;gtk_text_set_input_hints;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_input_hints (GtkText *self, GtkInputHints hints);";subroutine gtk_text_set_input_hints(self, hints) bind(c)
gtk;gtk_text_set_input_purpose;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_input_purpose (GtkText *self, GtkInputPurpose purpose);";subroutine gtk_text_set_input_purpose(self, purpose) bind(c)
gtk;gtk_text_set_invisible_char;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_invisible_char (GtkText *self, gunichar ch);";subroutine gtk_text_set_invisible_char(self, ch) bind(c)
gtk;gtk_text_set_max_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_max_length (GtkText *self, int length);";subroutine gtk_text_set_max_length(self, length) bind(c)
gtk;gtk_text_set_overwrite_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_overwrite_mode (GtkText *self, gboolean overwrite);";subroutine gtk_text_set_overwrite_mode(self, overwrite) bind(c)
gtk;gtk_text_set_placeholder_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_placeholder_text (GtkText *self, const char *text);";subroutine gtk_text_set_placeholder_text(self, text) bind(c)
gtk;gtk_text_set_propagate_text_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_propagate_text_width (GtkText *self, gboolean propagate_text_width);";subroutine gtk_text_set_propagate_text_width(self, propagate_text_width) bind(c)
gtk;gtk_text_set_tabs;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_tabs (GtkText *self, PangoTabArray *tabs);";subroutine gtk_text_set_tabs(self, tabs) bind(c)
gtk;gtk_text_set_truncate_multiline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_truncate_multiline (GtkText *self, gboolean truncate_multiline);";subroutine gtk_text_set_truncate_multiline(self, truncate_multiline) bind(c)
gtk;gtk_text_set_visibility;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_set_visibility (GtkText *self, gboolean visible);";subroutine gtk_text_set_visibility(self, visible) bind(c)
gtk;gtk_text_tag_changed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktexttag.h;"void gtk_text_tag_changed (GtkTextTag *tag, gboolean size_changed);";subroutine gtk_text_tag_changed(tag, size_changed) bind(c)
gtk;gtk_text_tag_get_priority;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktexttag.h;"int gtk_text_tag_get_priority (GtkTextTag *tag);";function gtk_text_tag_get_priority(tag) bind(c)
gtk;gtk_text_tag_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktexttag.h;"GType gtk_text_tag_get_type (void) G_GNUC_CONST;";function gtk_text_tag_get_type() bind(c)
gtk;gtk_text_tag_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktexttag.h;"GtkTextTag *gtk_text_tag_new (const char *name);";function gtk_text_tag_new(name) bind(c)
gtk;gtk_text_tag_set_priority;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktexttag.h;"void gtk_text_tag_set_priority (GtkTextTag *tag, int priority);";subroutine gtk_text_tag_set_priority(tag, priority) bind(c)
gtk;gtk_text_tag_table_add;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktexttagtable.h;"gboolean gtk_text_tag_table_add (GtkTextTagTable *table, GtkTextTag *tag);";function gtk_text_tag_table_add(table, tag) bind(c)
gtk;gtk_text_tag_table_foreach;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktexttagtable.h;"void gtk_text_tag_table_foreach (GtkTextTagTable *table, GtkTextTagTableForeach func, gpointer data);";subroutine gtk_text_tag_table_foreach(table, func, data) bind(c)
gtk;gtk_text_tag_table_get_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktexttagtable.h;"int gtk_text_tag_table_get_size (GtkTextTagTable *table);";function gtk_text_tag_table_get_size(table) bind(c)
gtk;gtk_text_tag_table_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktexttagtable.h;"GType gtk_text_tag_table_get_type (void) G_GNUC_CONST;";function gtk_text_tag_table_get_type() bind(c)
gtk;gtk_text_tag_table_lookup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktexttagtable.h;"GtkTextTag *gtk_text_tag_table_lookup (GtkTextTagTable *table, const char *name);";function gtk_text_tag_table_lookup(table, name) bind(c)
gtk;gtk_text_tag_table_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktexttagtable.h;"GtkTextTagTable *gtk_text_tag_table_new (void);";function gtk_text_tag_table_new() bind(c)
gtk;gtk_text_tag_table_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktexttagtable.h;"void gtk_text_tag_table_remove (GtkTextTagTable *table, GtkTextTag *tag);";subroutine gtk_text_tag_table_remove(table, tag) bind(c)
gtk;gtk_text_unset_invisible_char;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktext.h;"void gtk_text_unset_invisible_char (GtkText *self);";subroutine gtk_text_unset_invisible_char(self) bind(c)
gtk;gtk_text_view_add_child_at_anchor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_add_child_at_anchor (GtkTextView *text_view, GtkWidget *child, GtkTextChildAnchor *anchor);";subroutine gtk_text_view_add_child_at_anchor(text_view, child, anchor) bind(c)
gtk;gtk_text_view_add_overlay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_add_overlay (GtkTextView *text_view, GtkWidget *child, int xpos, int ypos);";subroutine gtk_text_view_add_overlay(text_view, child, xpos, ypos) bind(c)
gtk;gtk_text_view_backward_display_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_backward_display_line (GtkTextView *text_view, GtkTextIter *iter);";function gtk_text_view_backward_display_line(text_view, iter) bind(c)
gtk;gtk_text_view_backward_display_line_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_backward_display_line_start (GtkTextView *text_view, GtkTextIter *iter);";function gtk_text_view_backward_display_line_start(text_view, iter) bind(c)
gtk;gtk_text_view_buffer_to_window_coords;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_buffer_to_window_coords (GtkTextView *text_view, GtkTextWindowType win, int buffer_x, int buffer_y, int *window_x, int *window_y);";subroutine gtk_text_view_buffer_to_window_coords(text_view, win, buffer_x, buffer_y, window_x, window_y) bind(c)
gtk;gtk_text_view_forward_display_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_forward_display_line (GtkTextView *text_view, GtkTextIter *iter);";function gtk_text_view_forward_display_line(text_view, iter) bind(c)
gtk;gtk_text_view_forward_display_line_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_forward_display_line_end (GtkTextView *text_view, GtkTextIter *iter);";function gtk_text_view_forward_display_line_end(text_view, iter) bind(c)
gtk;gtk_text_view_get_accepts_tab;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_get_accepts_tab (GtkTextView *text_view);";function gtk_text_view_get_accepts_tab(text_view) bind(c)
gtk;gtk_text_view_get_bottom_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"int gtk_text_view_get_bottom_margin (GtkTextView *text_view);";function gtk_text_view_get_bottom_margin(text_view) bind(c)
gtk;gtk_text_view_get_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"GtkTextBuffer *gtk_text_view_get_buffer (GtkTextView *text_view);";function gtk_text_view_get_buffer(text_view) bind(c)
gtk;gtk_text_view_get_cursor_locations;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_get_cursor_locations (GtkTextView *text_view, const GtkTextIter *iter, GdkRectangle *strong, GdkRectangle *weak);";subroutine gtk_text_view_get_cursor_locations(text_view, iter, strong, weak) bind(c)
gtk;gtk_text_view_get_cursor_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_get_cursor_visible (GtkTextView *text_view);";function gtk_text_view_get_cursor_visible(text_view) bind(c)
gtk;gtk_text_view_get_editable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_get_editable (GtkTextView *text_view);";function gtk_text_view_get_editable(text_view) bind(c)
gtk;gtk_text_view_get_extra_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"GMenuModel * gtk_text_view_get_extra_menu (GtkTextView *text_view);";function gtk_text_view_get_extra_menu(text_view) bind(c)
gtk;gtk_text_view_get_gutter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"GtkWidget *gtk_text_view_get_gutter (GtkTextView *text_view, GtkTextWindowType win);";function gtk_text_view_get_gutter(text_view, win) bind(c)
gtk;gtk_text_view_get_indent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"int gtk_text_view_get_indent (GtkTextView *text_view);";function gtk_text_view_get_indent(text_view) bind(c)
gtk;gtk_text_view_get_input_hints;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"GtkInputHints gtk_text_view_get_input_hints (GtkTextView *text_view);";function gtk_text_view_get_input_hints(text_view) bind(c)
gtk;gtk_text_view_get_input_purpose;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"GtkInputPurpose gtk_text_view_get_input_purpose (GtkTextView *text_view);";function gtk_text_view_get_input_purpose(text_view) bind(c)
gtk;gtk_text_view_get_iter_at_location;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_get_iter_at_location (GtkTextView *text_view, GtkTextIter *iter, int x, int y);";function gtk_text_view_get_iter_at_location(text_view, iter, x, y) bind(c)
gtk;gtk_text_view_get_iter_at_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_get_iter_at_position (GtkTextView *text_view, GtkTextIter *iter, int *trailing, int x, int y);";function gtk_text_view_get_iter_at_position(text_view, iter, trailing, x, y) bind(c)
gtk;gtk_text_view_get_iter_location;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_get_iter_location (GtkTextView *text_view, const GtkTextIter *iter, GdkRectangle *location);";subroutine gtk_text_view_get_iter_location(text_view, iter, location) bind(c)
gtk;gtk_text_view_get_justification;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"GtkJustification gtk_text_view_get_justification (GtkTextView *text_view);";function gtk_text_view_get_justification(text_view) bind(c)
gtk;gtk_text_view_get_left_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"int gtk_text_view_get_left_margin (GtkTextView *text_view);";function gtk_text_view_get_left_margin(text_view) bind(c)
gtk;gtk_text_view_get_line_at_y;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_get_line_at_y (GtkTextView *text_view, GtkTextIter *target_iter, int y, int *line_top);";subroutine gtk_text_view_get_line_at_y(text_view, target_iter, y, line_top) bind(c)
gtk;gtk_text_view_get_line_yrange;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_get_line_yrange (GtkTextView *text_view, const GtkTextIter *iter, int *y, int *height);";subroutine gtk_text_view_get_line_yrange(text_view, iter, y, height) bind(c)
gtk;gtk_text_view_get_monospace;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_get_monospace (GtkTextView *text_view);";function gtk_text_view_get_monospace(text_view) bind(c)
gtk;gtk_text_view_get_overwrite;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_get_overwrite (GtkTextView *text_view);";function gtk_text_view_get_overwrite(text_view) bind(c)
gtk;gtk_text_view_get_pixels_above_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"int gtk_text_view_get_pixels_above_lines (GtkTextView *text_view);";function gtk_text_view_get_pixels_above_lines(text_view) bind(c)
gtk;gtk_text_view_get_pixels_below_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"int gtk_text_view_get_pixels_below_lines (GtkTextView *text_view);";function gtk_text_view_get_pixels_below_lines(text_view) bind(c)
gtk;gtk_text_view_get_pixels_inside_wrap;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"int gtk_text_view_get_pixels_inside_wrap (GtkTextView *text_view);";function gtk_text_view_get_pixels_inside_wrap(text_view) bind(c)
gtk;gtk_text_view_get_right_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"int gtk_text_view_get_right_margin (GtkTextView *text_view);";function gtk_text_view_get_right_margin(text_view) bind(c)
gtk;gtk_text_view_get_tabs;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"PangoTabArray* gtk_text_view_get_tabs (GtkTextView *text_view);";function gtk_text_view_get_tabs(text_view) bind(c)
gtk;gtk_text_view_get_top_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"int gtk_text_view_get_top_margin (GtkTextView *text_view);";function gtk_text_view_get_top_margin(text_view) bind(c)
gtk;gtk_text_view_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"GType gtk_text_view_get_type (void) G_GNUC_CONST;";function gtk_text_view_get_type() bind(c)
gtk;gtk_text_view_get_visible_rect;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_get_visible_rect (GtkTextView *text_view, GdkRectangle *visible_rect);";subroutine gtk_text_view_get_visible_rect(text_view, visible_rect) bind(c)
gtk;gtk_text_view_get_wrap_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"GtkWrapMode gtk_text_view_get_wrap_mode (GtkTextView *text_view);";function gtk_text_view_get_wrap_mode(text_view) bind(c)
gtk;gtk_text_view_im_context_filter_keypress;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_im_context_filter_keypress (GtkTextView *text_view, GdkEvent *event);";function gtk_text_view_im_context_filter_keypress(text_view, event) bind(c)
gtk;gtk_text_view_move_mark_onscreen;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_move_mark_onscreen (GtkTextView *text_view, GtkTextMark *mark);";function gtk_text_view_move_mark_onscreen(text_view, mark) bind(c)
gtk;gtk_text_view_move_overlay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_move_overlay (GtkTextView *text_view, GtkWidget *child, int xpos, int ypos);";subroutine gtk_text_view_move_overlay(text_view, child, xpos, ypos) bind(c)
gtk;gtk_text_view_move_visually;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_move_visually (GtkTextView *text_view, GtkTextIter *iter, int count);";function gtk_text_view_move_visually(text_view, iter, count) bind(c)
gtk;gtk_text_view_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"GtkWidget * gtk_text_view_new (void);";function gtk_text_view_new() bind(c)
gtk;gtk_text_view_new_with_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"GtkWidget * gtk_text_view_new_with_buffer (GtkTextBuffer *buffer);";function gtk_text_view_new_with_buffer(buffer) bind(c)
gtk;gtk_text_view_place_cursor_onscreen;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_place_cursor_onscreen (GtkTextView *text_view);";function gtk_text_view_place_cursor_onscreen(text_view) bind(c)
gtk;gtk_text_view_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_remove (GtkTextView *text_view, GtkWidget *child);";subroutine gtk_text_view_remove(text_view, child) bind(c)
gtk;gtk_text_view_reset_cursor_blink;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_reset_cursor_blink (GtkTextView *text_view);";subroutine gtk_text_view_reset_cursor_blink(text_view) bind(c)
gtk;gtk_text_view_reset_im_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_reset_im_context (GtkTextView *text_view);";subroutine gtk_text_view_reset_im_context(text_view) bind(c)
gtk;gtk_text_view_scroll_mark_onscreen;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_scroll_mark_onscreen (GtkTextView *text_view, GtkTextMark *mark);";subroutine gtk_text_view_scroll_mark_onscreen(text_view, mark) bind(c)
gtk;gtk_text_view_scroll_to_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_scroll_to_iter (GtkTextView *text_view, GtkTextIter *iter, double within_margin, gboolean use_align, double xalign, double yalign);";function gtk_text_view_scroll_to_iter(text_view, iter, within_margin, use_align, xalign, yalign) bind(c)
gtk;gtk_text_view_scroll_to_mark;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_scroll_to_mark (GtkTextView *text_view, GtkTextMark *mark, double within_margin, gboolean use_align, double xalign, double yalign);";subroutine gtk_text_view_scroll_to_mark(text_view, mark, within_margin, use_align, xalign, yalign) bind(c)
gtk;gtk_text_view_set_accepts_tab;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_accepts_tab (GtkTextView *text_view, gboolean accepts_tab);";subroutine gtk_text_view_set_accepts_tab(text_view, accepts_tab) bind(c)
gtk;gtk_text_view_set_bottom_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_bottom_margin (GtkTextView *text_view, int bottom_margin);";subroutine gtk_text_view_set_bottom_margin(text_view, bottom_margin) bind(c)
gtk;gtk_text_view_set_buffer;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_buffer (GtkTextView *text_view, GtkTextBuffer *buffer);";subroutine gtk_text_view_set_buffer(text_view, buffer) bind(c)
gtk;gtk_text_view_set_cursor_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_cursor_visible (GtkTextView *text_view, gboolean setting);";subroutine gtk_text_view_set_cursor_visible(text_view, setting) bind(c)
gtk;gtk_text_view_set_editable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_editable (GtkTextView *text_view, gboolean setting);";subroutine gtk_text_view_set_editable(text_view, setting) bind(c)
gtk;gtk_text_view_set_extra_menu;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_extra_menu (GtkTextView *text_view, GMenuModel *model);";subroutine gtk_text_view_set_extra_menu(text_view, model) bind(c)
gtk;gtk_text_view_set_gutter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_gutter (GtkTextView *text_view, GtkTextWindowType win, GtkWidget *widget);";subroutine gtk_text_view_set_gutter(text_view, win, widget) bind(c)
gtk;gtk_text_view_set_indent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_indent (GtkTextView *text_view, int indent);";subroutine gtk_text_view_set_indent(text_view, indent) bind(c)
gtk;gtk_text_view_set_input_hints;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_input_hints (GtkTextView *text_view, GtkInputHints hints);";subroutine gtk_text_view_set_input_hints(text_view, hints) bind(c)
gtk;gtk_text_view_set_input_purpose;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_input_purpose (GtkTextView *text_view, GtkInputPurpose purpose);";subroutine gtk_text_view_set_input_purpose(text_view, purpose) bind(c)
gtk;gtk_text_view_set_justification;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_justification (GtkTextView *text_view, GtkJustification justification);";subroutine gtk_text_view_set_justification(text_view, justification) bind(c)
gtk;gtk_text_view_set_left_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_left_margin (GtkTextView *text_view, int left_margin);";subroutine gtk_text_view_set_left_margin(text_view, left_margin) bind(c)
gtk;gtk_text_view_set_monospace;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_monospace (GtkTextView *text_view, gboolean monospace);";subroutine gtk_text_view_set_monospace(text_view, monospace) bind(c)
gtk;gtk_text_view_set_overwrite;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_overwrite (GtkTextView *text_view, gboolean overwrite);";subroutine gtk_text_view_set_overwrite(text_view, overwrite) bind(c)
gtk;gtk_text_view_set_pixels_above_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_pixels_above_lines (GtkTextView *text_view, int pixels_above_lines);";subroutine gtk_text_view_set_pixels_above_lines(text_view, pixels_above_lines) bind(c)
gtk;gtk_text_view_set_pixels_below_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_pixels_below_lines (GtkTextView *text_view, int pixels_below_lines);";subroutine gtk_text_view_set_pixels_below_lines(text_view, pixels_below_lines) bind(c)
gtk;gtk_text_view_set_pixels_inside_wrap;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_pixels_inside_wrap (GtkTextView *text_view, int pixels_inside_wrap);";subroutine gtk_text_view_set_pixels_inside_wrap(text_view, pixels_inside_wrap) bind(c)
gtk;gtk_text_view_set_right_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_right_margin (GtkTextView *text_view, int right_margin);";subroutine gtk_text_view_set_right_margin(text_view, right_margin) bind(c)
gtk;gtk_text_view_set_tabs;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_tabs (GtkTextView *text_view, PangoTabArray *tabs);";subroutine gtk_text_view_set_tabs(text_view, tabs) bind(c)
gtk;gtk_text_view_set_top_margin;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_top_margin (GtkTextView *text_view, int top_margin);";subroutine gtk_text_view_set_top_margin(text_view, top_margin) bind(c)
gtk;gtk_text_view_set_wrap_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_set_wrap_mode (GtkTextView *text_view, GtkWrapMode wrap_mode);";subroutine gtk_text_view_set_wrap_mode(text_view, wrap_mode) bind(c)
gtk;gtk_text_view_starts_display_line;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"gboolean gtk_text_view_starts_display_line (GtkTextView *text_view, const GtkTextIter *iter);";function gtk_text_view_starts_display_line(text_view, iter) bind(c)
gtk;gtk_text_view_window_to_buffer_coords;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktextview.h;"void gtk_text_view_window_to_buffer_coords (GtkTextView *text_view, GtkTextWindowType win, int window_x, int window_y, int *buffer_x, int *buffer_y);";subroutine gtk_text_view_window_to_buffer_coords(text_view, win, window_x, window_y, buffer_x, buffer_y) bind(c)
gtk;gtk_toggle_button_get_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktogglebutton.h;"gboolean gtk_toggle_button_get_active (GtkToggleButton *toggle_button);";function gtk_toggle_button_get_active(toggle_button) bind(c)
gtk;gtk_toggle_button_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktogglebutton.h;"GType gtk_toggle_button_get_type (void) G_GNUC_CONST;";function gtk_toggle_button_get_type() bind(c)
gtk;gtk_toggle_button_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktogglebutton.h;"GtkWidget* gtk_toggle_button_new (void);";function gtk_toggle_button_new() bind(c)
gtk;gtk_toggle_button_new_with_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktogglebutton.h;"GtkWidget* gtk_toggle_button_new_with_label (const char *label);";function gtk_toggle_button_new_with_label(label) bind(c)
gtk;gtk_toggle_button_new_with_mnemonic;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktogglebutton.h;"GtkWidget* gtk_toggle_button_new_with_mnemonic (const char *label);";function gtk_toggle_button_new_with_mnemonic(label) bind(c)
gtk;gtk_toggle_button_set_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktogglebutton.h;"void gtk_toggle_button_set_active (GtkToggleButton *toggle_button, gboolean is_active);";subroutine gtk_toggle_button_set_active(toggle_button, is_active) bind(c)
gtk;gtk_toggle_button_set_group;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktogglebutton.h;"void gtk_toggle_button_set_group (GtkToggleButton *toggle_button, GtkToggleButton *group);";subroutine gtk_toggle_button_set_group(toggle_button, group) bind(c)
gtk;gtk_toggle_button_toggled;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktogglebutton.h;"void gtk_toggle_button_toggled (GtkToggleButton *toggle_button);";subroutine gtk_toggle_button_toggled(toggle_button) bind(c)
gtk;gtk_tooltip_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktooltip.h;"GType gtk_tooltip_get_type (void);";function gtk_tooltip_get_type() bind(c)
gtk;gtk_tooltip_set_custom;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktooltip.h;"void gtk_tooltip_set_custom (GtkTooltip *tooltip, GtkWidget *custom_widget);";subroutine gtk_tooltip_set_custom(tooltip, custom_widget) bind(c)
gtk;gtk_tooltip_set_icon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktooltip.h;"void gtk_tooltip_set_icon (GtkTooltip *tooltip, GdkPaintable *paintable);";subroutine gtk_tooltip_set_icon(tooltip, paintable) bind(c)
gtk;gtk_tooltip_set_icon_from_gicon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktooltip.h;"void gtk_tooltip_set_icon_from_gicon (GtkTooltip *tooltip, GIcon *gicon);";subroutine gtk_tooltip_set_icon_from_gicon(tooltip, gicon) bind(c)
gtk;gtk_tooltip_set_icon_from_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktooltip.h;"void gtk_tooltip_set_icon_from_icon_name (GtkTooltip *tooltip, const char *icon_name);";subroutine gtk_tooltip_set_icon_from_icon_name(tooltip, icon_name) bind(c)
gtk;gtk_tooltip_set_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktooltip.h;"void gtk_tooltip_set_markup (GtkTooltip *tooltip, const char *markup);";subroutine gtk_tooltip_set_markup(tooltip, markup) bind(c)
gtk;gtk_tooltip_set_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktooltip.h;"void gtk_tooltip_set_text (GtkTooltip *tooltip, const char *text);";subroutine gtk_tooltip_set_text(tooltip, text) bind(c)
gtk;gtk_tooltip_set_tip_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktooltip.h;"void gtk_tooltip_set_tip_area (GtkTooltip *tooltip, const GdkRectangle *rect);";subroutine gtk_tooltip_set_tip_area(tooltip, rect) bind(c)
gtk;gtk_tree_create_row_drag_content;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreednd.h;"GdkContentProvider * gtk_tree_create_row_drag_content (GtkTreeModel *tree_model, GtkTreePath *path);";function gtk_tree_create_row_drag_content(tree_model, path) bind(c)
gtk;gtk_tree_drag_dest_drag_data_received;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreednd.h;"gboolean gtk_tree_drag_dest_drag_data_received (GtkTreeDragDest *drag_dest, GtkTreePath *dest, const GValue *value);";function gtk_tree_drag_dest_drag_data_received(drag_dest, dest, value) bind(c)
gtk;gtk_tree_drag_dest_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreednd.h;"GType gtk_tree_drag_dest_get_type (void) G_GNUC_CONST;";function gtk_tree_drag_dest_get_type() bind(c)
gtk;gtk_tree_drag_dest_row_drop_possible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreednd.h;"gboolean gtk_tree_drag_dest_row_drop_possible (GtkTreeDragDest *drag_dest, GtkTreePath *dest_path, const GValue *value);";function gtk_tree_drag_dest_row_drop_possible(drag_dest, dest_path, value) bind(c)
gtk;gtk_tree_drag_source_drag_data_delete;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreednd.h;"gboolean gtk_tree_drag_source_drag_data_delete (GtkTreeDragSource *drag_source, GtkTreePath *path);";function gtk_tree_drag_source_drag_data_delete(drag_source, path) bind(c)
gtk;gtk_tree_drag_source_drag_data_get;;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreednd.h;"GdkContentProvider * gtk_tree_drag_source_drag_data_get (GtkTreeDragSource *drag_source, GtkTreePath *path);";function gtk_tree_drag_source_drag_data_get(drag_source, path) bind(c)
gtk;gtk_tree_drag_source_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreednd.h;"GType gtk_tree_drag_source_get_type (void) G_GNUC_CONST;";function gtk_tree_drag_source_get_type() bind(c)
gtk;gtk_tree_drag_source_row_draggable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreednd.h;"gboolean gtk_tree_drag_source_row_draggable (GtkTreeDragSource *drag_source, GtkTreePath *path);";function gtk_tree_drag_source_row_draggable(drag_source, path) bind(c)
gtk;gtk_tree_expander_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeexpander.h;"GtkWidget * gtk_tree_expander_get_child (GtkTreeExpander *self);";function gtk_tree_expander_get_child(self) bind(c)
gtk;gtk_tree_expander_get_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeexpander.h;"gpointer gtk_tree_expander_get_item (GtkTreeExpander *self);";function gtk_tree_expander_get_item(self) bind(c)
gtk;gtk_tree_expander_get_list_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeexpander.h;"GtkTreeListRow * gtk_tree_expander_get_list_row (GtkTreeExpander *self);";function gtk_tree_expander_get_list_row(self) bind(c)
gtk;gtk_tree_expander_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeexpander.h;"void gtk_tree_expander_set_child (GtkTreeExpander *self, GtkWidget *child);";subroutine gtk_tree_expander_set_child(self, child) bind(c)
gtk;gtk_tree_expander_set_list_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeexpander.h;"void gtk_tree_expander_set_list_row (GtkTreeExpander *self, GtkTreeListRow *list_row);";subroutine gtk_tree_expander_set_list_row(self, list_row) bind(c)
gtk;gtk_tree_get_row_drag_data;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreednd.h;"gboolean gtk_tree_get_row_drag_data (const GValue *value, GtkTreeModel **tree_model, GtkTreePath **path);";function gtk_tree_get_row_drag_data(value, tree_model, path) bind(c)
gtk;gtk_tree_iter_copy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreeIter * gtk_tree_iter_copy (GtkTreeIter *iter);";function gtk_tree_iter_copy(iter) bind(c)
gtk;gtk_tree_iter_free;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_iter_free (GtkTreeIter *iter);";subroutine gtk_tree_iter_free(iter) bind(c)
gtk;gtk_tree_iter_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GType gtk_tree_iter_get_type (void) G_GNUC_CONST;";function gtk_tree_iter_get_type() bind(c)
gtk;gtk_tree_list_model_get_autoexpand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"gboolean gtk_tree_list_model_get_autoexpand (GtkTreeListModel *self);";function gtk_tree_list_model_get_autoexpand(self) bind(c)
gtk;gtk_tree_list_model_get_child_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"GtkTreeListRow * gtk_tree_list_model_get_child_row (GtkTreeListModel *self, guint position);";function gtk_tree_list_model_get_child_row(self, position) bind(c)
gtk;gtk_tree_list_model_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"GListModel * gtk_tree_list_model_get_model (GtkTreeListModel *self);";function gtk_tree_list_model_get_model(self) bind(c)
gtk;gtk_tree_list_model_get_passthrough;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"gboolean gtk_tree_list_model_get_passthrough (GtkTreeListModel *self);";function gtk_tree_list_model_get_passthrough(self) bind(c)
gtk;gtk_tree_list_model_get_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"GtkTreeListRow * gtk_tree_list_model_get_row (GtkTreeListModel *self, guint position);";function gtk_tree_list_model_get_row(self, position) bind(c)
gtk;gtk_tree_list_model_set_autoexpand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"void gtk_tree_list_model_set_autoexpand (GtkTreeListModel *self, gboolean autoexpand);";subroutine gtk_tree_list_model_set_autoexpand(self, autoexpand) bind(c)
gtk;gtk_tree_list_row_get_child_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"GtkTreeListRow * gtk_tree_list_row_get_child_row (GtkTreeListRow *self, guint position);";function gtk_tree_list_row_get_child_row(self, position) bind(c)
gtk;gtk_tree_list_row_get_children;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"GListModel * gtk_tree_list_row_get_children (GtkTreeListRow *self);";function gtk_tree_list_row_get_children(self) bind(c)
gtk;gtk_tree_list_row_get_depth;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"guint gtk_tree_list_row_get_depth (GtkTreeListRow *self);";function gtk_tree_list_row_get_depth(self) bind(c)
gtk;gtk_tree_list_row_get_expanded;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"gboolean gtk_tree_list_row_get_expanded (GtkTreeListRow *self);";function gtk_tree_list_row_get_expanded(self) bind(c)
gtk;gtk_tree_list_row_get_item;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"gpointer gtk_tree_list_row_get_item (GtkTreeListRow *self);";function gtk_tree_list_row_get_item(self) bind(c)
gtk;gtk_tree_list_row_get_parent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"GtkTreeListRow * gtk_tree_list_row_get_parent (GtkTreeListRow *self);";function gtk_tree_list_row_get_parent(self) bind(c)
gtk;gtk_tree_list_row_get_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"guint gtk_tree_list_row_get_position (GtkTreeListRow *self);";function gtk_tree_list_row_get_position(self) bind(c)
gtk;gtk_tree_list_row_is_expandable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"gboolean gtk_tree_list_row_is_expandable (GtkTreeListRow *self);";function gtk_tree_list_row_is_expandable(self) bind(c)
gtk;gtk_tree_list_row_set_expanded;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistmodel.h;"void gtk_tree_list_row_set_expanded (GtkTreeListRow *self, gboolean expanded);";subroutine gtk_tree_list_row_set_expanded(self, expanded) bind(c)
gtk;gtk_tree_list_row_sorter_get_sorter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistrowsorter.h;"GtkSorter * gtk_tree_list_row_sorter_get_sorter (GtkTreeListRowSorter *self);";function gtk_tree_list_row_sorter_get_sorter(self) bind(c)
gtk;gtk_tree_list_row_sorter_set_sorter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreelistrowsorter.h;"void gtk_tree_list_row_sorter_set_sorter (GtkTreeListRowSorter *self, GtkSorter *sorter);";subroutine gtk_tree_list_row_sorter_set_sorter(self, sorter) bind(c)
gtk;gtk_tree_model_filter_clear_cache;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelfilter.h;"void gtk_tree_model_filter_clear_cache (GtkTreeModelFilter *filter);";subroutine gtk_tree_model_filter_clear_cache(filter) bind(c)
gtk;gtk_tree_model_filter_convert_child_iter_to_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelfilter.h;"gboolean gtk_tree_model_filter_convert_child_iter_to_iter (GtkTreeModelFilter *filter, GtkTreeIter *filter_iter, GtkTreeIter *child_iter);";function gtk_tree_model_filter_convert_child_iter_to_iter(filter, filter_iter, child_iter) bind(c)
gtk;gtk_tree_model_filter_convert_child_path_to_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelfilter.h;"GtkTreePath *gtk_tree_model_filter_convert_child_path_to_path (GtkTreeModelFilter *filter, GtkTreePath *child_path);";function gtk_tree_model_filter_convert_child_path_to_path(filter, child_path) bind(c)
gtk;gtk_tree_model_filter_convert_iter_to_child_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelfilter.h;"void gtk_tree_model_filter_convert_iter_to_child_iter (GtkTreeModelFilter *filter, GtkTreeIter *child_iter, GtkTreeIter *filter_iter);";subroutine gtk_tree_model_filter_convert_iter_to_child_iter(filter, child_iter, filter_iter) bind(c)
gtk;gtk_tree_model_filter_convert_path_to_child_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelfilter.h;"GtkTreePath *gtk_tree_model_filter_convert_path_to_child_path (GtkTreeModelFilter *filter, GtkTreePath *filter_path);";function gtk_tree_model_filter_convert_path_to_child_path(filter, filter_path) bind(c)
gtk;gtk_tree_model_filter_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelfilter.h;"GtkTreeModel *gtk_tree_model_filter_get_model (GtkTreeModelFilter *filter);";function gtk_tree_model_filter_get_model(filter) bind(c)
gtk;gtk_tree_model_filter_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelfilter.h;"GType gtk_tree_model_filter_get_type (void) G_GNUC_CONST;";function gtk_tree_model_filter_get_type() bind(c)
gtk;gtk_tree_model_filter_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelfilter.h;"GtkTreeModel *gtk_tree_model_filter_new (GtkTreeModel *child_model, GtkTreePath *root);";function gtk_tree_model_filter_new(child_model, root) bind(c)
gtk;gtk_tree_model_filter_refilter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelfilter.h;"void gtk_tree_model_filter_refilter (GtkTreeModelFilter *filter);";subroutine gtk_tree_model_filter_refilter(filter) bind(c)
gtk;gtk_tree_model_filter_set_modify_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelfilter.h;"void gtk_tree_model_filter_set_modify_func (GtkTreeModelFilter *filter, int n_columns, GType *types, GtkTreeModelFilterModifyFunc func, gpointer data, GDestroyNotify destroy);";subroutine gtk_tree_model_filter_set_modify_func(filter, n_columns, types, func, data, destroy) bind(c)
gtk;gtk_tree_model_filter_set_visible_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelfilter.h;"void gtk_tree_model_filter_set_visible_column (GtkTreeModelFilter *filter, int column);";subroutine gtk_tree_model_filter_set_visible_column(filter, column) bind(c)
gtk;gtk_tree_model_filter_set_visible_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelfilter.h;"void gtk_tree_model_filter_set_visible_func (GtkTreeModelFilter *filter, GtkTreeModelFilterVisibleFunc func, gpointer data, GDestroyNotify destroy);";subroutine gtk_tree_model_filter_set_visible_func(filter, func, data, destroy) bind(c)
gtk;gtk_tree_model_foreach;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_model_foreach (GtkTreeModel *model, GtkTreeModelForeachFunc func, gpointer user_data);";subroutine gtk_tree_model_foreach(model, func, user_data) bind(c)
gtk;gtk_tree_model_get_column_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GType gtk_tree_model_get_column_type (GtkTreeModel *tree_model, int index_);";function gtk_tree_model_get_column_type(tree_model, index_) bind(c)
gtk;gtk_tree_model_get_flags;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreeModelFlags gtk_tree_model_get_flags (GtkTreeModel *tree_model);";function gtk_tree_model_get_flags(tree_model) bind(c)
gtk;gtk_tree_model_get_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_model_get_iter (GtkTreeModel *tree_model, GtkTreeIter *iter, GtkTreePath *path);";function gtk_tree_model_get_iter(tree_model, iter, path) bind(c)
gtk;gtk_tree_model_get_iter_first;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_model_get_iter_first (GtkTreeModel *tree_model, GtkTreeIter *iter);";function gtk_tree_model_get_iter_first(tree_model, iter) bind(c)
gtk;gtk_tree_model_get_iter_from_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_model_get_iter_from_string (GtkTreeModel *tree_model, GtkTreeIter *iter, const char *path_string);";function gtk_tree_model_get_iter_from_string(tree_model, iter, path_string) bind(c)
gtk;gtk_tree_model_get_n_columns;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"int gtk_tree_model_get_n_columns (GtkTreeModel *tree_model);";function gtk_tree_model_get_n_columns(tree_model) bind(c)
gtk;gtk_tree_model_get_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreePath * gtk_tree_model_get_path (GtkTreeModel *tree_model, GtkTreeIter *iter);";function gtk_tree_model_get_path(tree_model, iter) bind(c)
gtk;gtk_tree_model_get_string_from_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"char * gtk_tree_model_get_string_from_iter (GtkTreeModel *tree_model, GtkTreeIter *iter);";function gtk_tree_model_get_string_from_iter(tree_model, iter) bind(c)
gtk;gtk_tree_model_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GType gtk_tree_model_get_type (void) G_GNUC_CONST;";function gtk_tree_model_get_type() bind(c)
gtk;gtk_tree_model_get_valist;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_model_get_valist (GtkTreeModel *tree_model, GtkTreeIter *iter, va_list var_args);";subroutine gtk_tree_model_get_valist(tree_model, iter, var_args) bind(c)
gtk;gtk_tree_model_get_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_model_get_value (GtkTreeModel *tree_model, GtkTreeIter *iter, int column, GValue *value);";subroutine gtk_tree_model_get_value(tree_model, iter, column, value) bind(c)
gtk;gtk_tree_model_iter_children;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_model_iter_children (GtkTreeModel *tree_model, GtkTreeIter *iter, GtkTreeIter *parent);";function gtk_tree_model_iter_children(tree_model, iter, parent) bind(c)
gtk;gtk_tree_model_iter_has_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_model_iter_has_child (GtkTreeModel *tree_model, GtkTreeIter *iter);";function gtk_tree_model_iter_has_child(tree_model, iter) bind(c)
gtk;gtk_tree_model_iter_n_children;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"int gtk_tree_model_iter_n_children (GtkTreeModel *tree_model, GtkTreeIter *iter);";function gtk_tree_model_iter_n_children(tree_model, iter) bind(c)
gtk;gtk_tree_model_iter_next;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_model_iter_next (GtkTreeModel *tree_model, GtkTreeIter *iter);";function gtk_tree_model_iter_next(tree_model, iter) bind(c)
gtk;gtk_tree_model_iter_nth_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_model_iter_nth_child (GtkTreeModel *tree_model, GtkTreeIter *iter, GtkTreeIter *parent, int n);";function gtk_tree_model_iter_nth_child(tree_model, iter, parent, n) bind(c)
gtk;gtk_tree_model_iter_parent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_model_iter_parent (GtkTreeModel *tree_model, GtkTreeIter *iter, GtkTreeIter *child);";function gtk_tree_model_iter_parent(tree_model, iter, child) bind(c)
gtk;gtk_tree_model_iter_previous;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_model_iter_previous (GtkTreeModel *tree_model, GtkTreeIter *iter);";function gtk_tree_model_iter_previous(tree_model, iter) bind(c)
gtk;gtk_tree_model_ref_node;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_model_ref_node (GtkTreeModel *tree_model, GtkTreeIter *iter);";subroutine gtk_tree_model_ref_node(tree_model, iter) bind(c)
gtk;gtk_tree_model_row_changed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_model_row_changed (GtkTreeModel *tree_model, GtkTreePath *path, GtkTreeIter *iter);";subroutine gtk_tree_model_row_changed(tree_model, path, iter) bind(c)
gtk;gtk_tree_model_row_deleted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_model_row_deleted (GtkTreeModel *tree_model, GtkTreePath *path);";subroutine gtk_tree_model_row_deleted(tree_model, path) bind(c)
gtk;gtk_tree_model_row_has_child_toggled;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_model_row_has_child_toggled (GtkTreeModel *tree_model, GtkTreePath *path, GtkTreeIter *iter);";subroutine gtk_tree_model_row_has_child_toggled(tree_model, path, iter) bind(c)
gtk;gtk_tree_model_row_inserted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_model_row_inserted (GtkTreeModel *tree_model, GtkTreePath *path, GtkTreeIter *iter);";subroutine gtk_tree_model_row_inserted(tree_model, path, iter) bind(c)
gtk;gtk_tree_model_rows_reordered;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_model_rows_reordered (GtkTreeModel *tree_model, GtkTreePath *path, GtkTreeIter *iter, int *new_order);";subroutine gtk_tree_model_rows_reordered(tree_model, path, iter, new_order) bind(c)
gtk;gtk_tree_model_rows_reordered_with_length;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_model_rows_reordered_with_length (GtkTreeModel *tree_model, GtkTreePath *path, GtkTreeIter *iter, int *new_order, int length);";subroutine gtk_tree_model_rows_reordered_with_length(tree_model, path, iter, new_order, length) bind(c)
gtk;gtk_tree_model_sort_clear_cache;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelsort.h;"void gtk_tree_model_sort_clear_cache (GtkTreeModelSort *tree_model_sort);";subroutine gtk_tree_model_sort_clear_cache(tree_model_sort) bind(c)
gtk;gtk_tree_model_sort_convert_child_iter_to_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelsort.h;"gboolean gtk_tree_model_sort_convert_child_iter_to_iter (GtkTreeModelSort *tree_model_sort, GtkTreeIter *sort_iter, GtkTreeIter *child_iter);";function gtk_tree_model_sort_convert_child_iter_to_iter(tree_model_sort, sort_iter, child_iter) bind(c)
gtk;gtk_tree_model_sort_convert_child_path_to_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelsort.h;"GtkTreePath *gtk_tree_model_sort_convert_child_path_to_path (GtkTreeModelSort *tree_model_sort, GtkTreePath *child_path);";function gtk_tree_model_sort_convert_child_path_to_path(tree_model_sort, child_path) bind(c)
gtk;gtk_tree_model_sort_convert_iter_to_child_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelsort.h;"void gtk_tree_model_sort_convert_iter_to_child_iter (GtkTreeModelSort *tree_model_sort, GtkTreeIter *child_iter, GtkTreeIter *sorted_iter);";subroutine gtk_tree_model_sort_convert_iter_to_child_iter(tree_model_sort, child_iter, sorted_iter) bind(c)
gtk;gtk_tree_model_sort_convert_path_to_child_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelsort.h;"GtkTreePath *gtk_tree_model_sort_convert_path_to_child_path (GtkTreeModelSort *tree_model_sort, GtkTreePath *sorted_path);";function gtk_tree_model_sort_convert_path_to_child_path(tree_model_sort, sorted_path) bind(c)
gtk;gtk_tree_model_sort_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelsort.h;"GtkTreeModel *gtk_tree_model_sort_get_model (GtkTreeModelSort *tree_model);";function gtk_tree_model_sort_get_model(tree_model) bind(c)
gtk;gtk_tree_model_sort_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelsort.h;"GType gtk_tree_model_sort_get_type (void) G_GNUC_CONST;";function gtk_tree_model_sort_get_type() bind(c)
gtk;gtk_tree_model_sort_iter_is_valid;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelsort.h;"gboolean gtk_tree_model_sort_iter_is_valid (GtkTreeModelSort *tree_model_sort, GtkTreeIter *iter);";function gtk_tree_model_sort_iter_is_valid(tree_model_sort, iter) bind(c)
gtk;gtk_tree_model_sort_new_with_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelsort.h;"GtkTreeModel *gtk_tree_model_sort_new_with_model (GtkTreeModel *child_model);";function gtk_tree_model_sort_new_with_model(child_model) bind(c)
gtk;gtk_tree_model_sort_reset_default_sort_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodelsort.h;"void gtk_tree_model_sort_reset_default_sort_func (GtkTreeModelSort *tree_model_sort);";subroutine gtk_tree_model_sort_reset_default_sort_func(tree_model_sort) bind(c)
gtk;gtk_tree_model_unref_node;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_model_unref_node (GtkTreeModel *tree_model, GtkTreeIter *iter);";subroutine gtk_tree_model_unref_node(tree_model, iter) bind(c)
gtk;gtk_tree_path_append_index;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_path_append_index (GtkTreePath *path, int index_);";subroutine gtk_tree_path_append_index(path, index_) bind(c)
gtk;gtk_tree_path_compare;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"int gtk_tree_path_compare (const GtkTreePath *a, const GtkTreePath *b);";function gtk_tree_path_compare(a, b) bind(c)
gtk;gtk_tree_path_copy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreePath *gtk_tree_path_copy (const GtkTreePath *path);";function gtk_tree_path_copy(path) bind(c)
gtk;gtk_tree_path_down;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_path_down (GtkTreePath *path);";subroutine gtk_tree_path_down(path) bind(c)
gtk;gtk_tree_path_free;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_path_free (GtkTreePath *path);";subroutine gtk_tree_path_free(path) bind(c)
gtk;gtk_tree_path_get_depth;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"int gtk_tree_path_get_depth (GtkTreePath *path);";function gtk_tree_path_get_depth(path) bind(c)
gtk;gtk_tree_path_get_indices;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"int *gtk_tree_path_get_indices (GtkTreePath *path);";function gtk_tree_path_get_indices(path) bind(c)
gtk;gtk_tree_path_get_indices_with_depth;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"int *gtk_tree_path_get_indices_with_depth (GtkTreePath *path, int *depth);";function gtk_tree_path_get_indices_with_depth(path, depth) bind(c)
gtk;gtk_tree_path_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GType gtk_tree_path_get_type (void) G_GNUC_CONST;";function gtk_tree_path_get_type() bind(c)
gtk;gtk_tree_path_is_ancestor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_path_is_ancestor (GtkTreePath *path, GtkTreePath *descendant);";function gtk_tree_path_is_ancestor(path, descendant) bind(c)
gtk;gtk_tree_path_is_descendant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_path_is_descendant (GtkTreePath *path, GtkTreePath *ancestor);";function gtk_tree_path_is_descendant(path, ancestor) bind(c)
gtk;gtk_tree_path_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreePath *gtk_tree_path_new (void);";function gtk_tree_path_new() bind(c)
gtk;gtk_tree_path_new_first;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreePath *gtk_tree_path_new_first (void);";function gtk_tree_path_new_first() bind(c)
gtk;gtk_tree_path_new_from_indicesv;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreePath *gtk_tree_path_new_from_indicesv (int *indices, gsize length);";function gtk_tree_path_new_from_indicesv(indices, length) bind(c)
gtk;gtk_tree_path_new_from_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreePath *gtk_tree_path_new_from_string (const char *path);";function gtk_tree_path_new_from_string(path) bind(c)
gtk;gtk_tree_path_next;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_path_next (GtkTreePath *path);";subroutine gtk_tree_path_next(path) bind(c)
gtk;gtk_tree_path_prepend_index;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_path_prepend_index (GtkTreePath *path, int index_);";subroutine gtk_tree_path_prepend_index(path, index_) bind(c)
gtk;gtk_tree_path_prev;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_path_prev (GtkTreePath *path);";function gtk_tree_path_prev(path) bind(c)
gtk;gtk_tree_path_to_string;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"char *gtk_tree_path_to_string (GtkTreePath *path);";function gtk_tree_path_to_string(path) bind(c)
gtk;gtk_tree_path_up;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_path_up (GtkTreePath *path);";function gtk_tree_path_up(path) bind(c)
gtk;gtk_tree_row_data_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreednd.h;"GType gtk_tree_row_data_get_type (void) G_GNUC_CONST;";function gtk_tree_row_data_get_type() bind(c)
gtk;gtk_tree_row_reference_copy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreeRowReference *gtk_tree_row_reference_copy (GtkTreeRowReference *reference);";function gtk_tree_row_reference_copy(reference) bind(c)
gtk;gtk_tree_row_reference_deleted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_row_reference_deleted (GObject *proxy, GtkTreePath *path);";subroutine gtk_tree_row_reference_deleted(proxy, path) bind(c)
gtk;gtk_tree_row_reference_free;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_row_reference_free (GtkTreeRowReference *reference);";subroutine gtk_tree_row_reference_free(reference) bind(c)
gtk;gtk_tree_row_reference_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreeModel *gtk_tree_row_reference_get_model (GtkTreeRowReference *reference);";function gtk_tree_row_reference_get_model(reference) bind(c)
gtk;gtk_tree_row_reference_get_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreePath *gtk_tree_row_reference_get_path (GtkTreeRowReference *reference);";function gtk_tree_row_reference_get_path(reference) bind(c)
gtk;gtk_tree_row_reference_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GType gtk_tree_row_reference_get_type (void) G_GNUC_CONST;";function gtk_tree_row_reference_get_type() bind(c)
gtk;gtk_tree_row_reference_inserted;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_row_reference_inserted (GObject *proxy, GtkTreePath *path);";subroutine gtk_tree_row_reference_inserted(proxy, path) bind(c)
gtk;gtk_tree_row_reference_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreeRowReference *gtk_tree_row_reference_new (GtkTreeModel *model, GtkTreePath *path);";function gtk_tree_row_reference_new(model, path) bind(c)
gtk;gtk_tree_row_reference_new_proxy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"GtkTreeRowReference *gtk_tree_row_reference_new_proxy (GObject *proxy, GtkTreeModel *model, GtkTreePath *path);";function gtk_tree_row_reference_new_proxy(proxy, model, path) bind(c)
gtk;gtk_tree_row_reference_reordered;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"void gtk_tree_row_reference_reordered (GObject *proxy, GtkTreePath *path, GtkTreeIter *iter, int *new_order);";subroutine gtk_tree_row_reference_reordered(proxy, path, iter, new_order) bind(c)
gtk;gtk_tree_row_reference_valid;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreemodel.h;"gboolean gtk_tree_row_reference_valid (GtkTreeRowReference *reference);";function gtk_tree_row_reference_valid(reference) bind(c)
gtk;gtk_tree_selection_count_selected_rows;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"int gtk_tree_selection_count_selected_rows (GtkTreeSelection *selection);";function gtk_tree_selection_count_selected_rows(selection) bind(c)
gtk;gtk_tree_selection_get_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"GtkSelectionMode gtk_tree_selection_get_mode (GtkTreeSelection *selection);";function gtk_tree_selection_get_mode(selection) bind(c)
gtk;gtk_tree_selection_get_select_function;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"GtkTreeSelectionFunc gtk_tree_selection_get_select_function (GtkTreeSelection *selection);";function gtk_tree_selection_get_select_function(selection) bind(c)
gtk;gtk_tree_selection_get_selected;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"gboolean gtk_tree_selection_get_selected (GtkTreeSelection *selection, GtkTreeModel **model, GtkTreeIter *iter);";function gtk_tree_selection_get_selected(selection, model, iter) bind(c)
gtk;gtk_tree_selection_get_selected_rows;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"GList * gtk_tree_selection_get_selected_rows (GtkTreeSelection *selection, GtkTreeModel **model);";function gtk_tree_selection_get_selected_rows(selection, model) bind(c)
gtk;gtk_tree_selection_get_tree_view;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"GtkTreeView* gtk_tree_selection_get_tree_view (GtkTreeSelection *selection);";function gtk_tree_selection_get_tree_view(selection) bind(c)
gtk;gtk_tree_selection_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"GType gtk_tree_selection_get_type (void) G_GNUC_CONST;";function gtk_tree_selection_get_type() bind(c)
gtk;gtk_tree_selection_get_user_data;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"gpointer gtk_tree_selection_get_user_data (GtkTreeSelection *selection);";function gtk_tree_selection_get_user_data(selection) bind(c)
gtk;gtk_tree_selection_iter_is_selected;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"gboolean gtk_tree_selection_iter_is_selected (GtkTreeSelection *selection, GtkTreeIter *iter);";function gtk_tree_selection_iter_is_selected(selection, iter) bind(c)
gtk;gtk_tree_selection_path_is_selected;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"gboolean gtk_tree_selection_path_is_selected (GtkTreeSelection *selection, GtkTreePath *path);";function gtk_tree_selection_path_is_selected(selection, path) bind(c)
gtk;gtk_tree_selection_select_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"void gtk_tree_selection_select_all (GtkTreeSelection *selection);";subroutine gtk_tree_selection_select_all(selection) bind(c)
gtk;gtk_tree_selection_select_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"void gtk_tree_selection_select_iter (GtkTreeSelection *selection, GtkTreeIter *iter);";subroutine gtk_tree_selection_select_iter(selection, iter) bind(c)
gtk;gtk_tree_selection_select_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"void gtk_tree_selection_select_path (GtkTreeSelection *selection, GtkTreePath *path);";subroutine gtk_tree_selection_select_path(selection, path) bind(c)
gtk;gtk_tree_selection_select_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"void gtk_tree_selection_select_range (GtkTreeSelection *selection, GtkTreePath *start_path, GtkTreePath *end_path);";subroutine gtk_tree_selection_select_range(selection, start_path, end_path) bind(c)
gtk;gtk_tree_selection_selected_foreach;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"void gtk_tree_selection_selected_foreach (GtkTreeSelection *selection, GtkTreeSelectionForeachFunc func, gpointer data);";subroutine gtk_tree_selection_selected_foreach(selection, func, data) bind(c)
gtk;gtk_tree_selection_set_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"void gtk_tree_selection_set_mode (GtkTreeSelection *selection, GtkSelectionMode type);";subroutine gtk_tree_selection_set_mode(selection, type) bind(c)
gtk;gtk_tree_selection_set_select_function;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"void gtk_tree_selection_set_select_function (GtkTreeSelection *selection, GtkTreeSelectionFunc func, gpointer data, GDestroyNotify destroy);";subroutine gtk_tree_selection_set_select_function(selection, func, data, destroy) bind(c)
gtk;gtk_tree_selection_unselect_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"void gtk_tree_selection_unselect_all (GtkTreeSelection *selection);";subroutine gtk_tree_selection_unselect_all(selection) bind(c)
gtk;gtk_tree_selection_unselect_iter;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"void gtk_tree_selection_unselect_iter (GtkTreeSelection *selection, GtkTreeIter *iter);";subroutine gtk_tree_selection_unselect_iter(selection, iter) bind(c)
gtk;gtk_tree_selection_unselect_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"void gtk_tree_selection_unselect_path (GtkTreeSelection *selection, GtkTreePath *path);";subroutine gtk_tree_selection_unselect_path(selection, path) bind(c)
gtk;gtk_tree_selection_unselect_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeselection.h;"void gtk_tree_selection_unselect_range (GtkTreeSelection *selection, GtkTreePath *start_path, GtkTreePath *end_path);";subroutine gtk_tree_selection_unselect_range(selection, start_path, end_path) bind(c)
gtk;gtk_tree_sortable_get_sort_column_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreesortable.h;"gboolean gtk_tree_sortable_get_sort_column_id (GtkTreeSortable *sortable, int *sort_column_id, GtkSortType *order);";function gtk_tree_sortable_get_sort_column_id(sortable, sort_column_id, order) bind(c)
gtk;gtk_tree_sortable_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreesortable.h;"GType gtk_tree_sortable_get_type (void) G_GNUC_CONST;";function gtk_tree_sortable_get_type() bind(c)
gtk;gtk_tree_sortable_has_default_sort_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreesortable.h;"gboolean gtk_tree_sortable_has_default_sort_func (GtkTreeSortable *sortable);";function gtk_tree_sortable_has_default_sort_func(sortable) bind(c)
gtk;gtk_tree_sortable_set_default_sort_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreesortable.h;"void gtk_tree_sortable_set_default_sort_func (GtkTreeSortable *sortable, GtkTreeIterCompareFunc sort_func, gpointer user_data, GDestroyNotify destroy);";subroutine gtk_tree_sortable_set_default_sort_func(sortable, sort_func, user_data, destroy) bind(c)
gtk;gtk_tree_sortable_set_sort_column_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreesortable.h;"void gtk_tree_sortable_set_sort_column_id (GtkTreeSortable *sortable, int sort_column_id, GtkSortType order);";subroutine gtk_tree_sortable_set_sort_column_id(sortable, sort_column_id, order) bind(c)
gtk;gtk_tree_sortable_set_sort_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreesortable.h;"void gtk_tree_sortable_set_sort_func (GtkTreeSortable *sortable, int sort_column_id, GtkTreeIterCompareFunc sort_func, gpointer user_data, GDestroyNotify destroy);";subroutine gtk_tree_sortable_set_sort_func(sortable, sort_column_id, sort_func, user_data, destroy) bind(c)
gtk;gtk_tree_sortable_sort_column_changed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreesortable.h;"void gtk_tree_sortable_sort_column_changed (GtkTreeSortable *sortable);";subroutine gtk_tree_sortable_sort_column_changed(sortable) bind(c)
gtk;gtk_tree_store_append;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_append (GtkTreeStore *tree_store, GtkTreeIter *iter, GtkTreeIter *parent);";subroutine gtk_tree_store_append(tree_store, iter, parent) bind(c)
gtk;gtk_tree_store_clear;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_clear (GtkTreeStore *tree_store);";subroutine gtk_tree_store_clear(tree_store) bind(c)
gtk;gtk_tree_store_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"GType gtk_tree_store_get_type (void) G_GNUC_CONST;";function gtk_tree_store_get_type() bind(c)
gtk;gtk_tree_store_insert;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_insert (GtkTreeStore *tree_store, GtkTreeIter *iter, GtkTreeIter *parent, int position);";subroutine gtk_tree_store_insert(tree_store, iter, parent, position) bind(c)
gtk;gtk_tree_store_insert_after;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_insert_after (GtkTreeStore *tree_store, GtkTreeIter *iter, GtkTreeIter *parent, GtkTreeIter *sibling);";subroutine gtk_tree_store_insert_after(tree_store, iter, parent, sibling) bind(c)
gtk;gtk_tree_store_insert_before;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_insert_before (GtkTreeStore *tree_store, GtkTreeIter *iter, GtkTreeIter *parent, GtkTreeIter *sibling);";subroutine gtk_tree_store_insert_before(tree_store, iter, parent, sibling) bind(c)
gtk;gtk_tree_store_insert_with_valuesv;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_insert_with_valuesv (GtkTreeStore *tree_store, GtkTreeIter *iter, GtkTreeIter *parent, int position, int *columns, GValue *values, int n_values);";subroutine gtk_tree_store_insert_with_valuesv(tree_store, iter, parent, position, columns, values, n_values) bind(c)
gtk;gtk_tree_store_is_ancestor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"gboolean gtk_tree_store_is_ancestor (GtkTreeStore *tree_store, GtkTreeIter *iter, GtkTreeIter *descendant);";function gtk_tree_store_is_ancestor(tree_store, iter, descendant) bind(c)
gtk;gtk_tree_store_iter_depth;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"int gtk_tree_store_iter_depth (GtkTreeStore *tree_store, GtkTreeIter *iter);";function gtk_tree_store_iter_depth(tree_store, iter) bind(c)
gtk;gtk_tree_store_iter_is_valid;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"gboolean gtk_tree_store_iter_is_valid (GtkTreeStore *tree_store, GtkTreeIter *iter);";function gtk_tree_store_iter_is_valid(tree_store, iter) bind(c)
gtk;gtk_tree_store_move_after;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_move_after (GtkTreeStore *tree_store, GtkTreeIter *iter, GtkTreeIter *position);";subroutine gtk_tree_store_move_after(tree_store, iter, position) bind(c)
gtk;gtk_tree_store_move_before;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_move_before (GtkTreeStore *tree_store, GtkTreeIter *iter, GtkTreeIter *position);";subroutine gtk_tree_store_move_before(tree_store, iter, position) bind(c)
gtk;gtk_tree_store_newv;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"GtkTreeStore *gtk_tree_store_newv (int n_columns, GType *types);";function gtk_tree_store_newv(n_columns, types) bind(c)
gtk;gtk_tree_store_prepend;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_prepend (GtkTreeStore *tree_store, GtkTreeIter *iter, GtkTreeIter *parent);";subroutine gtk_tree_store_prepend(tree_store, iter, parent) bind(c)
gtk;gtk_tree_store_remove;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"gboolean gtk_tree_store_remove (GtkTreeStore *tree_store, GtkTreeIter *iter);";function gtk_tree_store_remove(tree_store, iter) bind(c)
gtk;gtk_tree_store_reorder;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_reorder (GtkTreeStore *tree_store, GtkTreeIter *parent, int *new_order);";subroutine gtk_tree_store_reorder(tree_store, parent, new_order) bind(c)
gtk;gtk_tree_store_set_column_types;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_set_column_types (GtkTreeStore *tree_store, int n_columns, GType *types);";subroutine gtk_tree_store_set_column_types(tree_store, n_columns, types) bind(c)
gtk;gtk_tree_store_set_valist;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_set_valist (GtkTreeStore *tree_store, GtkTreeIter *iter, va_list var_args);";subroutine gtk_tree_store_set_valist(tree_store, iter, var_args) bind(c)
gtk;gtk_tree_store_set_value;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_set_value (GtkTreeStore *tree_store, GtkTreeIter *iter, int column, GValue *value);";subroutine gtk_tree_store_set_value(tree_store, iter, column, value) bind(c)
gtk;gtk_tree_store_set_valuesv;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_set_valuesv (GtkTreeStore *tree_store, GtkTreeIter *iter, int *columns, GValue *values, int n_values);";subroutine gtk_tree_store_set_valuesv(tree_store, iter, columns, values, n_values) bind(c)
gtk;gtk_tree_store_swap;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreestore.h;"void gtk_tree_store_swap (GtkTreeStore *tree_store, GtkTreeIter *a, GtkTreeIter *b);";subroutine gtk_tree_store_swap(tree_store, a, b) bind(c)
gtk;gtk_tree_view_append_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"int gtk_tree_view_append_column (GtkTreeView *tree_view, GtkTreeViewColumn *column);";function gtk_tree_view_append_column(tree_view, column) bind(c)
gtk;gtk_tree_view_collapse_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_collapse_all (GtkTreeView *tree_view);";subroutine gtk_tree_view_collapse_all(tree_view) bind(c)
gtk;gtk_tree_view_collapse_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_collapse_row (GtkTreeView *tree_view, GtkTreePath *path);";function gtk_tree_view_collapse_row(tree_view, path) bind(c)
gtk;gtk_tree_view_column_add_attribute;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_add_attribute (GtkTreeViewColumn *tree_column, GtkCellRenderer *cell_renderer, const char *attribute, int column);";subroutine gtk_tree_view_column_add_attribute(tree_column, cell_renderer, attribute, column) bind(c)
gtk;gtk_tree_view_column_cell_get_position;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"gboolean gtk_tree_view_column_cell_get_position (GtkTreeViewColumn *tree_column, GtkCellRenderer *cell_renderer, int *x_offset, int *width);";function gtk_tree_view_column_cell_get_position(tree_column, cell_renderer, x_offset, width) bind(c)
gtk;gtk_tree_view_column_cell_get_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_cell_get_size (GtkTreeViewColumn *tree_column, int *x_offset, int *y_offset, int *width, int *height);";subroutine gtk_tree_view_column_cell_get_size(tree_column, x_offset, y_offset, width, height) bind(c)
gtk;gtk_tree_view_column_cell_is_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"gboolean gtk_tree_view_column_cell_is_visible (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_cell_is_visible(tree_column) bind(c)
gtk;gtk_tree_view_column_cell_set_cell_data;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_cell_set_cell_data (GtkTreeViewColumn *tree_column, GtkTreeModel *tree_model, GtkTreeIter *iter, gboolean is_expander, gboolean is_expanded);";subroutine gtk_tree_view_column_cell_set_cell_data(tree_column, tree_model, iter, is_expander, is_expanded) bind(c)
gtk;gtk_tree_view_column_clear;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_clear (GtkTreeViewColumn *tree_column);";subroutine gtk_tree_view_column_clear(tree_column) bind(c)
gtk;gtk_tree_view_column_clear_attributes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_clear_attributes (GtkTreeViewColumn *tree_column, GtkCellRenderer *cell_renderer);";subroutine gtk_tree_view_column_clear_attributes(tree_column, cell_renderer) bind(c)
gtk;gtk_tree_view_column_clicked;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_clicked (GtkTreeViewColumn *tree_column);";subroutine gtk_tree_view_column_clicked(tree_column) bind(c)
gtk;gtk_tree_view_column_focus_cell;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_focus_cell (GtkTreeViewColumn *tree_column, GtkCellRenderer *cell);";subroutine gtk_tree_view_column_focus_cell(tree_column, cell) bind(c)
gtk;gtk_tree_view_column_get_alignment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"float gtk_tree_view_column_get_alignment (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_alignment(tree_column) bind(c)
gtk;gtk_tree_view_column_get_button;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"GtkWidget *gtk_tree_view_column_get_button (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_button(tree_column) bind(c)
gtk;gtk_tree_view_column_get_clickable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"gboolean gtk_tree_view_column_get_clickable (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_clickable(tree_column) bind(c)
gtk;gtk_tree_view_column_get_expand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"gboolean gtk_tree_view_column_get_expand (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_expand(tree_column) bind(c)
gtk;gtk_tree_view_column_get_fixed_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"int gtk_tree_view_column_get_fixed_width (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_fixed_width(tree_column) bind(c)
gtk;gtk_tree_view_column_get_max_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"int gtk_tree_view_column_get_max_width (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_max_width(tree_column) bind(c)
gtk;gtk_tree_view_column_get_min_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"int gtk_tree_view_column_get_min_width (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_min_width(tree_column) bind(c)
gtk;gtk_tree_view_column_get_reorderable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"gboolean gtk_tree_view_column_get_reorderable (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_reorderable(tree_column) bind(c)
gtk;gtk_tree_view_column_get_resizable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"gboolean gtk_tree_view_column_get_resizable (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_resizable(tree_column) bind(c)
gtk;gtk_tree_view_column_get_sizing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"GtkTreeViewColumnSizing gtk_tree_view_column_get_sizing (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_sizing(tree_column) bind(c)
gtk;gtk_tree_view_column_get_sort_column_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"int gtk_tree_view_column_get_sort_column_id (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_sort_column_id(tree_column) bind(c)
gtk;gtk_tree_view_column_get_sort_indicator;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"gboolean gtk_tree_view_column_get_sort_indicator (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_sort_indicator(tree_column) bind(c)
gtk;gtk_tree_view_column_get_sort_order;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"GtkSortType gtk_tree_view_column_get_sort_order (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_sort_order(tree_column) bind(c)
gtk;gtk_tree_view_column_get_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"int gtk_tree_view_column_get_spacing (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_spacing(tree_column) bind(c)
gtk;gtk_tree_view_column_get_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"const char * gtk_tree_view_column_get_title (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_title(tree_column) bind(c)
gtk;gtk_tree_view_column_get_tree_view;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"GtkWidget *gtk_tree_view_column_get_tree_view (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_tree_view(tree_column) bind(c)
gtk;gtk_tree_view_column_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"GType gtk_tree_view_column_get_type (void) G_GNUC_CONST;";function gtk_tree_view_column_get_type() bind(c)
gtk;gtk_tree_view_column_get_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"gboolean gtk_tree_view_column_get_visible (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_visible(tree_column) bind(c)
gtk;gtk_tree_view_column_get_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"GtkWidget *gtk_tree_view_column_get_widget (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_widget(tree_column) bind(c)
gtk;gtk_tree_view_column_get_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"int gtk_tree_view_column_get_width (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_width(tree_column) bind(c)
gtk;gtk_tree_view_column_get_x_offset;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"int gtk_tree_view_column_get_x_offset (GtkTreeViewColumn *tree_column);";function gtk_tree_view_column_get_x_offset(tree_column) bind(c)
gtk;gtk_tree_view_column_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"GtkTreeViewColumn *gtk_tree_view_column_new (void);";function gtk_tree_view_column_new() bind(c)
gtk;gtk_tree_view_column_new_with_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"GtkTreeViewColumn *gtk_tree_view_column_new_with_area (GtkCellArea *area);";function gtk_tree_view_column_new_with_area(area) bind(c)
gtk;gtk_tree_view_column_pack_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_pack_end (GtkTreeViewColumn *tree_column, GtkCellRenderer *cell, gboolean expand);";subroutine gtk_tree_view_column_pack_end(tree_column, cell, expand) bind(c)
gtk;gtk_tree_view_column_pack_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_pack_start (GtkTreeViewColumn *tree_column, GtkCellRenderer *cell, gboolean expand);";subroutine gtk_tree_view_column_pack_start(tree_column, cell, expand) bind(c)
gtk;gtk_tree_view_column_queue_resize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_queue_resize (GtkTreeViewColumn *tree_column);";subroutine gtk_tree_view_column_queue_resize(tree_column) bind(c)
gtk;gtk_tree_view_column_set_alignment;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_alignment (GtkTreeViewColumn *tree_column, float xalign);";subroutine gtk_tree_view_column_set_alignment(tree_column, xalign) bind(c)
gtk;gtk_tree_view_column_set_cell_data_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_cell_data_func (GtkTreeViewColumn *tree_column, GtkCellRenderer *cell_renderer, GtkTreeCellDataFunc func, gpointer func_data, GDestroyNotify destroy);";subroutine gtk_tree_view_column_set_cell_data_func(tree_column, cell_renderer, func, func_data, destroy) bind(c)
gtk;gtk_tree_view_column_set_clickable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_clickable (GtkTreeViewColumn *tree_column, gboolean clickable);";subroutine gtk_tree_view_column_set_clickable(tree_column, clickable) bind(c)
gtk;gtk_tree_view_column_set_expand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_expand (GtkTreeViewColumn *tree_column, gboolean expand);";subroutine gtk_tree_view_column_set_expand(tree_column, expand) bind(c)
gtk;gtk_tree_view_column_set_fixed_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_fixed_width (GtkTreeViewColumn *tree_column, int fixed_width);";subroutine gtk_tree_view_column_set_fixed_width(tree_column, fixed_width) bind(c)
gtk;gtk_tree_view_column_set_max_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_max_width (GtkTreeViewColumn *tree_column, int max_width);";subroutine gtk_tree_view_column_set_max_width(tree_column, max_width) bind(c)
gtk;gtk_tree_view_column_set_min_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_min_width (GtkTreeViewColumn *tree_column, int min_width);";subroutine gtk_tree_view_column_set_min_width(tree_column, min_width) bind(c)
gtk;gtk_tree_view_column_set_reorderable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_reorderable (GtkTreeViewColumn *tree_column, gboolean reorderable);";subroutine gtk_tree_view_column_set_reorderable(tree_column, reorderable) bind(c)
gtk;gtk_tree_view_column_set_resizable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_resizable (GtkTreeViewColumn *tree_column, gboolean resizable);";subroutine gtk_tree_view_column_set_resizable(tree_column, resizable) bind(c)
gtk;gtk_tree_view_column_set_sizing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_sizing (GtkTreeViewColumn *tree_column, GtkTreeViewColumnSizing type);";subroutine gtk_tree_view_column_set_sizing(tree_column, type) bind(c)
gtk;gtk_tree_view_column_set_sort_column_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_sort_column_id (GtkTreeViewColumn *tree_column, int sort_column_id);";subroutine gtk_tree_view_column_set_sort_column_id(tree_column, sort_column_id) bind(c)
gtk;gtk_tree_view_column_set_sort_indicator;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_sort_indicator (GtkTreeViewColumn *tree_column, gboolean setting);";subroutine gtk_tree_view_column_set_sort_indicator(tree_column, setting) bind(c)
gtk;gtk_tree_view_column_set_sort_order;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_sort_order (GtkTreeViewColumn *tree_column, GtkSortType order);";subroutine gtk_tree_view_column_set_sort_order(tree_column, order) bind(c)
gtk;gtk_tree_view_column_set_spacing;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_spacing (GtkTreeViewColumn *tree_column, int spacing);";subroutine gtk_tree_view_column_set_spacing(tree_column, spacing) bind(c)
gtk;gtk_tree_view_column_set_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_title (GtkTreeViewColumn *tree_column, const char *title);";subroutine gtk_tree_view_column_set_title(tree_column, title) bind(c)
gtk;gtk_tree_view_column_set_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_visible (GtkTreeViewColumn *tree_column, gboolean visible);";subroutine gtk_tree_view_column_set_visible(tree_column, visible) bind(c)
gtk;gtk_tree_view_column_set_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeviewcolumn.h;"void gtk_tree_view_column_set_widget (GtkTreeViewColumn *tree_column, GtkWidget *widget);";subroutine gtk_tree_view_column_set_widget(tree_column, widget) bind(c)
gtk;gtk_tree_view_columns_autosize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_columns_autosize (GtkTreeView *tree_view);";subroutine gtk_tree_view_columns_autosize(tree_view) bind(c)
gtk;gtk_tree_view_convert_bin_window_to_tree_coords;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_convert_bin_window_to_tree_coords (GtkTreeView *tree_view, int bx, int by, int *tx, int *ty);";subroutine gtk_tree_view_convert_bin_window_to_tree_coords(tree_view, bx, by, tx, ty) bind(c)
gtk;gtk_tree_view_convert_bin_window_to_widget_coords;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_convert_bin_window_to_widget_coords (GtkTreeView *tree_view, int bx, int by, int *wx, int *wy);";subroutine gtk_tree_view_convert_bin_window_to_widget_coords(tree_view, bx, by, wx, wy) bind(c)
gtk;gtk_tree_view_convert_tree_to_bin_window_coords;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_convert_tree_to_bin_window_coords (GtkTreeView *tree_view, int tx, int ty, int *bx, int *by);";subroutine gtk_tree_view_convert_tree_to_bin_window_coords(tree_view, tx, ty, bx, by) bind(c)
gtk;gtk_tree_view_convert_tree_to_widget_coords;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_convert_tree_to_widget_coords (GtkTreeView *tree_view, int tx, int ty, int *wx, int *wy);";subroutine gtk_tree_view_convert_tree_to_widget_coords(tree_view, tx, ty, wx, wy) bind(c)
gtk;gtk_tree_view_convert_widget_to_bin_window_coords;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_convert_widget_to_bin_window_coords (GtkTreeView *tree_view, int wx, int wy, int *bx, int *by);";subroutine gtk_tree_view_convert_widget_to_bin_window_coords(tree_view, wx, wy, bx, by) bind(c)
gtk;gtk_tree_view_convert_widget_to_tree_coords;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_convert_widget_to_tree_coords (GtkTreeView *tree_view, int wx, int wy, int *tx, int *ty);";subroutine gtk_tree_view_convert_widget_to_tree_coords(tree_view, wx, wy, tx, ty) bind(c)
gtk;gtk_tree_view_create_row_drag_icon;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GdkPaintable *gtk_tree_view_create_row_drag_icon (GtkTreeView *tree_view, GtkTreePath *path);";function gtk_tree_view_create_row_drag_icon(tree_view, path) bind(c)
gtk;gtk_tree_view_enable_model_drag_dest;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_enable_model_drag_dest (GtkTreeView *tree_view, GdkContentFormats *formats, GdkDragAction actions);";subroutine gtk_tree_view_enable_model_drag_dest(tree_view, formats, actions) bind(c)
gtk;gtk_tree_view_enable_model_drag_source;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_enable_model_drag_source (GtkTreeView *tree_view, GdkModifierType start_button_mask, GdkContentFormats *formats, GdkDragAction actions);";subroutine gtk_tree_view_enable_model_drag_source(tree_view, start_button_mask, formats, actions) bind(c)
gtk;gtk_tree_view_expand_all;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_expand_all (GtkTreeView *tree_view);";subroutine gtk_tree_view_expand_all(tree_view) bind(c)
gtk;gtk_tree_view_expand_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_expand_row (GtkTreeView *tree_view, GtkTreePath *path, gboolean open_all);";function gtk_tree_view_expand_row(tree_view, path, open_all) bind(c)
gtk;gtk_tree_view_expand_to_path;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_expand_to_path (GtkTreeView *tree_view, GtkTreePath *path);";subroutine gtk_tree_view_expand_to_path(tree_view, path) bind(c)
gtk;gtk_tree_view_get_activate_on_single_click;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_activate_on_single_click (GtkTreeView *tree_view);";function gtk_tree_view_get_activate_on_single_click(tree_view) bind(c)
gtk;gtk_tree_view_get_background_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_get_background_area (GtkTreeView *tree_view, GtkTreePath *path, GtkTreeViewColumn *column, GdkRectangle *rect);";subroutine gtk_tree_view_get_background_area(tree_view, path, column, rect) bind(c)
gtk;gtk_tree_view_get_cell_area;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_get_cell_area (GtkTreeView *tree_view, GtkTreePath *path, GtkTreeViewColumn *column, GdkRectangle *rect);";subroutine gtk_tree_view_get_cell_area(tree_view, path, column, rect) bind(c)
gtk;gtk_tree_view_get_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GtkTreeViewColumn *gtk_tree_view_get_column (GtkTreeView *tree_view, int n);";function gtk_tree_view_get_column(tree_view, n) bind(c)
gtk;gtk_tree_view_get_columns;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GList *gtk_tree_view_get_columns (GtkTreeView *tree_view);";function gtk_tree_view_get_columns(tree_view) bind(c)
gtk;gtk_tree_view_get_cursor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_get_cursor (GtkTreeView *tree_view, GtkTreePath **path, GtkTreeViewColumn **focus_column);";subroutine gtk_tree_view_get_cursor(tree_view, path, focus_column) bind(c)
gtk;gtk_tree_view_get_dest_row_at_pos;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_dest_row_at_pos (GtkTreeView *tree_view, int drag_x, int drag_y, GtkTreePath **path, GtkTreeViewDropPosition *pos);";function gtk_tree_view_get_dest_row_at_pos(tree_view, drag_x, drag_y, path, pos) bind(c)
gtk;gtk_tree_view_get_drag_dest_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_get_drag_dest_row (GtkTreeView *tree_view, GtkTreePath **path, GtkTreeViewDropPosition *pos);";subroutine gtk_tree_view_get_drag_dest_row(tree_view, path, pos) bind(c)
gtk;gtk_tree_view_get_enable_search;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_enable_search (GtkTreeView *tree_view);";function gtk_tree_view_get_enable_search(tree_view) bind(c)
gtk;gtk_tree_view_get_enable_tree_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_enable_tree_lines (GtkTreeView *tree_view);";function gtk_tree_view_get_enable_tree_lines(tree_view) bind(c)
gtk;gtk_tree_view_get_expander_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GtkTreeViewColumn *gtk_tree_view_get_expander_column (GtkTreeView *tree_view);";function gtk_tree_view_get_expander_column(tree_view) bind(c)
gtk;gtk_tree_view_get_fixed_height_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_fixed_height_mode (GtkTreeView *tree_view);";function gtk_tree_view_get_fixed_height_mode(tree_view) bind(c)
gtk;gtk_tree_view_get_grid_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GtkTreeViewGridLines gtk_tree_view_get_grid_lines (GtkTreeView *tree_view);";function gtk_tree_view_get_grid_lines(tree_view) bind(c)
gtk;gtk_tree_view_get_headers_clickable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_headers_clickable (GtkTreeView *tree_view);";function gtk_tree_view_get_headers_clickable(tree_view) bind(c)
gtk;gtk_tree_view_get_headers_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_headers_visible (GtkTreeView *tree_view);";function gtk_tree_view_get_headers_visible(tree_view) bind(c)
gtk;gtk_tree_view_get_hover_expand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_hover_expand (GtkTreeView *tree_view);";function gtk_tree_view_get_hover_expand(tree_view) bind(c)
gtk;gtk_tree_view_get_hover_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_hover_selection (GtkTreeView *tree_view);";function gtk_tree_view_get_hover_selection(tree_view) bind(c)
gtk;gtk_tree_view_get_level_indentation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"int gtk_tree_view_get_level_indentation (GtkTreeView *tree_view);";function gtk_tree_view_get_level_indentation(tree_view) bind(c)
gtk;gtk_tree_view_get_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GtkTreeModel *gtk_tree_view_get_model (GtkTreeView *tree_view);";function gtk_tree_view_get_model(tree_view) bind(c)
gtk;gtk_tree_view_get_n_columns;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"guint gtk_tree_view_get_n_columns (GtkTreeView *tree_view);";function gtk_tree_view_get_n_columns(tree_view) bind(c)
gtk;gtk_tree_view_get_path_at_pos;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_path_at_pos (GtkTreeView *tree_view, int x, int y, GtkTreePath **path, GtkTreeViewColumn **column, int *cell_x, int *cell_y);";function gtk_tree_view_get_path_at_pos(tree_view, x, y, path, column, cell_x, cell_y) bind(c)
gtk;gtk_tree_view_get_reorderable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_reorderable (GtkTreeView *tree_view);";function gtk_tree_view_get_reorderable(tree_view) bind(c)
gtk;gtk_tree_view_get_row_separator_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GtkTreeViewRowSeparatorFunc gtk_tree_view_get_row_separator_func (GtkTreeView *tree_view);";function gtk_tree_view_get_row_separator_func(tree_view) bind(c)
gtk;gtk_tree_view_get_rubber_banding;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_rubber_banding (GtkTreeView *tree_view);";function gtk_tree_view_get_rubber_banding(tree_view) bind(c)
gtk;gtk_tree_view_get_search_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"int gtk_tree_view_get_search_column (GtkTreeView *tree_view);";function gtk_tree_view_get_search_column(tree_view) bind(c)
gtk;gtk_tree_view_get_search_entry;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GtkEditable *gtk_tree_view_get_search_entry (GtkTreeView *tree_view);";function gtk_tree_view_get_search_entry(tree_view) bind(c)
gtk;gtk_tree_view_get_search_equal_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GtkTreeViewSearchEqualFunc gtk_tree_view_get_search_equal_func (GtkTreeView *tree_view);";function gtk_tree_view_get_search_equal_func(tree_view) bind(c)
gtk;gtk_tree_view_get_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GtkTreeSelection *gtk_tree_view_get_selection (GtkTreeView *tree_view);";function gtk_tree_view_get_selection(tree_view) bind(c)
gtk;gtk_tree_view_get_show_expanders;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_show_expanders (GtkTreeView *tree_view);";function gtk_tree_view_get_show_expanders(tree_view) bind(c)
gtk;gtk_tree_view_get_tooltip_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"int gtk_tree_view_get_tooltip_column (GtkTreeView *tree_view);";function gtk_tree_view_get_tooltip_column(tree_view) bind(c)
gtk;gtk_tree_view_get_tooltip_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_tooltip_context(GtkTreeView *tree_view, int x, int y, gboolean keyboard_tip, GtkTreeModel **model, GtkTreePath **path, GtkTreeIter *iter);";function gtk_tree_view_get_tooltip_context(tree_view, x, y, keyboard_tip, model, path, iter) bind(c)
gtk;gtk_tree_view_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GType gtk_tree_view_get_type (void) G_GNUC_CONST;";function gtk_tree_view_get_type() bind(c)
gtk;gtk_tree_view_get_visible_range;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_get_visible_range (GtkTreeView *tree_view, GtkTreePath **start_path, GtkTreePath **end_path);";function gtk_tree_view_get_visible_range(tree_view, start_path, end_path) bind(c)
gtk;gtk_tree_view_get_visible_rect;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_get_visible_rect (GtkTreeView *tree_view, GdkRectangle *visible_rect);";subroutine gtk_tree_view_get_visible_rect(tree_view, visible_rect) bind(c)
gtk;gtk_tree_view_insert_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"int gtk_tree_view_insert_column (GtkTreeView *tree_view, GtkTreeViewColumn *column, int position);";function gtk_tree_view_insert_column(tree_view, column, position) bind(c)
gtk;gtk_tree_view_insert_column_with_data_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"int gtk_tree_view_insert_column_with_data_func (GtkTreeView *tree_view, int position, const char *title, GtkCellRenderer *cell, GtkTreeCellDataFunc func, gpointer data, GDestroyNotify dnotify);";function gtk_tree_view_insert_column_with_data_func(tree_view, position, title, cell, func, data, dnotify) bind(c)
gtk;gtk_tree_view_is_blank_at_pos;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_is_blank_at_pos (GtkTreeView *tree_view, int x, int y, GtkTreePath **path, GtkTreeViewColumn **column, int *cell_x, int *cell_y);";function gtk_tree_view_is_blank_at_pos(tree_view, x, y, path, column, cell_x, cell_y) bind(c)
gtk;gtk_tree_view_is_rubber_banding_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_is_rubber_banding_active (GtkTreeView *tree_view);";function gtk_tree_view_is_rubber_banding_active(tree_view) bind(c)
gtk;gtk_tree_view_map_expanded_rows;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_map_expanded_rows (GtkTreeView *tree_view, GtkTreeViewMappingFunc func, gpointer data);";subroutine gtk_tree_view_map_expanded_rows(tree_view, func, data) bind(c)
gtk;gtk_tree_view_move_column_after;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_move_column_after (GtkTreeView *tree_view, GtkTreeViewColumn *column, GtkTreeViewColumn *base_column);";subroutine gtk_tree_view_move_column_after(tree_view, column, base_column) bind(c)
gtk;gtk_tree_view_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GtkWidget *gtk_tree_view_new (void);";function gtk_tree_view_new() bind(c)
gtk;gtk_tree_view_new_with_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"GtkWidget *gtk_tree_view_new_with_model (GtkTreeModel *model);";function gtk_tree_view_new_with_model(model) bind(c)
gtk;gtk_tree_view_remove_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"int gtk_tree_view_remove_column (GtkTreeView *tree_view, GtkTreeViewColumn *column);";function gtk_tree_view_remove_column(tree_view, column) bind(c)
gtk;gtk_tree_view_row_activated;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_row_activated (GtkTreeView *tree_view, GtkTreePath *path, GtkTreeViewColumn *column);";subroutine gtk_tree_view_row_activated(tree_view, path, column) bind(c)
gtk;gtk_tree_view_row_expanded;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"gboolean gtk_tree_view_row_expanded (GtkTreeView *tree_view, GtkTreePath *path);";function gtk_tree_view_row_expanded(tree_view, path) bind(c)
gtk;gtk_tree_view_scroll_to_cell;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_scroll_to_cell (GtkTreeView *tree_view, GtkTreePath *path, GtkTreeViewColumn *column, gboolean use_align, float row_align, float col_align);";subroutine gtk_tree_view_scroll_to_cell(tree_view, path, column, use_align, row_align, col_align) bind(c)
gtk;gtk_tree_view_scroll_to_point;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_scroll_to_point (GtkTreeView *tree_view, int tree_x, int tree_y);";subroutine gtk_tree_view_scroll_to_point(tree_view, tree_x, tree_y) bind(c)
gtk;gtk_tree_view_set_activate_on_single_click;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_activate_on_single_click (GtkTreeView *tree_view, gboolean single);";subroutine gtk_tree_view_set_activate_on_single_click(tree_view, single) bind(c)
gtk;gtk_tree_view_set_column_drag_function;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_column_drag_function (GtkTreeView *tree_view, GtkTreeViewColumnDropFunc func, gpointer user_data, GDestroyNotify destroy);";subroutine gtk_tree_view_set_column_drag_function(tree_view, func, user_data, destroy) bind(c)
gtk;gtk_tree_view_set_cursor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_cursor (GtkTreeView *tree_view, GtkTreePath *path, GtkTreeViewColumn *focus_column, gboolean start_editing);";subroutine gtk_tree_view_set_cursor(tree_view, path, focus_column, start_editing) bind(c)
gtk;gtk_tree_view_set_cursor_on_cell;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_cursor_on_cell (GtkTreeView *tree_view, GtkTreePath *path, GtkTreeViewColumn *focus_column, GtkCellRenderer *focus_cell, gboolean start_editing);";subroutine gtk_tree_view_set_cursor_on_cell(tree_view, path, focus_column, focus_cell, start_editing) bind(c)
gtk;gtk_tree_view_set_drag_dest_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_drag_dest_row (GtkTreeView *tree_view, GtkTreePath *path, GtkTreeViewDropPosition pos);";subroutine gtk_tree_view_set_drag_dest_row(tree_view, path, pos) bind(c)
gtk;gtk_tree_view_set_enable_search;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_enable_search (GtkTreeView *tree_view, gboolean enable_search);";subroutine gtk_tree_view_set_enable_search(tree_view, enable_search) bind(c)
gtk;gtk_tree_view_set_enable_tree_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_enable_tree_lines (GtkTreeView *tree_view, gboolean enabled);";subroutine gtk_tree_view_set_enable_tree_lines(tree_view, enabled) bind(c)
gtk;gtk_tree_view_set_expander_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_expander_column (GtkTreeView *tree_view, GtkTreeViewColumn *column);";subroutine gtk_tree_view_set_expander_column(tree_view, column) bind(c)
gtk;gtk_tree_view_set_fixed_height_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_fixed_height_mode (GtkTreeView *tree_view, gboolean enable);";subroutine gtk_tree_view_set_fixed_height_mode(tree_view, enable) bind(c)
gtk;gtk_tree_view_set_grid_lines;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_grid_lines (GtkTreeView *tree_view, GtkTreeViewGridLines grid_lines);";subroutine gtk_tree_view_set_grid_lines(tree_view, grid_lines) bind(c)
gtk;gtk_tree_view_set_headers_clickable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_headers_clickable (GtkTreeView *tree_view, gboolean setting);";subroutine gtk_tree_view_set_headers_clickable(tree_view, setting) bind(c)
gtk;gtk_tree_view_set_headers_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_headers_visible (GtkTreeView *tree_view, gboolean headers_visible);";subroutine gtk_tree_view_set_headers_visible(tree_view, headers_visible) bind(c)
gtk;gtk_tree_view_set_hover_expand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_hover_expand (GtkTreeView *tree_view, gboolean expand);";subroutine gtk_tree_view_set_hover_expand(tree_view, expand) bind(c)
gtk;gtk_tree_view_set_hover_selection;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_hover_selection (GtkTreeView *tree_view, gboolean hover);";subroutine gtk_tree_view_set_hover_selection(tree_view, hover) bind(c)
gtk;gtk_tree_view_set_level_indentation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_level_indentation (GtkTreeView *tree_view, int indentation);";subroutine gtk_tree_view_set_level_indentation(tree_view, indentation) bind(c)
gtk;gtk_tree_view_set_model;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_model (GtkTreeView *tree_view, GtkTreeModel *model);";subroutine gtk_tree_view_set_model(tree_view, model) bind(c)
gtk;gtk_tree_view_set_reorderable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_reorderable (GtkTreeView *tree_view, gboolean reorderable);";subroutine gtk_tree_view_set_reorderable(tree_view, reorderable) bind(c)
gtk;gtk_tree_view_set_row_separator_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_row_separator_func (GtkTreeView *tree_view, GtkTreeViewRowSeparatorFunc func, gpointer data, GDestroyNotify destroy);";subroutine gtk_tree_view_set_row_separator_func(tree_view, func, data, destroy) bind(c)
gtk;gtk_tree_view_set_rubber_banding;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_rubber_banding (GtkTreeView *tree_view, gboolean enable);";subroutine gtk_tree_view_set_rubber_banding(tree_view, enable) bind(c)
gtk;gtk_tree_view_set_search_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_search_column (GtkTreeView *tree_view, int column);";subroutine gtk_tree_view_set_search_column(tree_view, column) bind(c)
gtk;gtk_tree_view_set_search_entry;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_search_entry (GtkTreeView *tree_view, GtkEditable *entry);";subroutine gtk_tree_view_set_search_entry(tree_view, entry) bind(c)
gtk;gtk_tree_view_set_search_equal_func;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_search_equal_func (GtkTreeView *tree_view, GtkTreeViewSearchEqualFunc search_equal_func, gpointer search_user_data, GDestroyNotify search_destroy);";subroutine gtk_tree_view_set_search_equal_func(tree_view, search_equal_func, search_user_data, search_destroy) bind(c)
gtk;gtk_tree_view_set_show_expanders;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_show_expanders (GtkTreeView *tree_view, gboolean enabled);";subroutine gtk_tree_view_set_show_expanders(tree_view, enabled) bind(c)
gtk;gtk_tree_view_set_tooltip_cell;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_tooltip_cell (GtkTreeView *tree_view, GtkTooltip *tooltip, GtkTreePath *path, GtkTreeViewColumn *column, GtkCellRenderer *cell);";subroutine gtk_tree_view_set_tooltip_cell(tree_view, tooltip, path, column, cell) bind(c)
gtk;gtk_tree_view_set_tooltip_column;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_tooltip_column (GtkTreeView *tree_view, int column);";subroutine gtk_tree_view_set_tooltip_column(tree_view, column) bind(c)
gtk;gtk_tree_view_set_tooltip_row;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_set_tooltip_row (GtkTreeView *tree_view, GtkTooltip *tooltip, GtkTreePath *path);";subroutine gtk_tree_view_set_tooltip_row(tree_view, tooltip, path) bind(c)
gtk;gtk_tree_view_unset_rows_drag_dest;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_unset_rows_drag_dest (GtkTreeView *tree_view);";subroutine gtk_tree_view_unset_rows_drag_dest(tree_view) bind(c)
gtk;gtk_tree_view_unset_rows_drag_source;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtktreeview.h;"void gtk_tree_view_unset_rows_drag_source (GtkTreeView *tree_view);";subroutine gtk_tree_view_unset_rows_drag_source(tree_view) bind(c)
gtk;gtk_value_dup_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpression * gtk_value_dup_expression (const GValue *value);";function gtk_value_dup_expression(value) bind(c)
gtk;gtk_value_get_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"GtkExpression * gtk_value_get_expression (const GValue *value);";function gtk_value_get_expression(value) bind(c)
gtk;gtk_value_set_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"void gtk_value_set_expression (GValue *value, GtkExpression *expression);";subroutine gtk_value_set_expression(value, expression) bind(c)
gtk;gtk_value_take_expression;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkexpression.h;"void gtk_value_take_expression (GValue *value, GtkExpression *expression);";subroutine gtk_value_take_expression(value, expression) bind(c)
gtk;gtk_video_get_autoplay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"gboolean gtk_video_get_autoplay (GtkVideo *self);";function gtk_video_get_autoplay(self) bind(c)
gtk;gtk_video_get_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"GFile * gtk_video_get_file (GtkVideo *self);";function gtk_video_get_file(self) bind(c)
gtk;gtk_video_get_loop;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"gboolean gtk_video_get_loop (GtkVideo *self);";function gtk_video_get_loop(self) bind(c)
gtk;gtk_video_get_media_stream;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"GtkMediaStream *gtk_video_get_media_stream (GtkVideo *self);";function gtk_video_get_media_stream(self) bind(c)
gtk;gtk_video_new_for_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"GtkWidget * gtk_video_new_for_file (GFile *file);";function gtk_video_new_for_file(file) bind(c)
gtk;gtk_video_new_for_filename;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"GtkWidget * gtk_video_new_for_filename (const char *filename);";function gtk_video_new_for_filename(filename) bind(c)
gtk;gtk_video_new_for_media_stream;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"GtkWidget * gtk_video_new_for_media_stream (GtkMediaStream *stream);";function gtk_video_new_for_media_stream(stream) bind(c)
gtk;gtk_video_new_for_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"GtkWidget * gtk_video_new_for_resource (const char *resource_path);";function gtk_video_new_for_resource(resource_path) bind(c)
gtk;gtk_video_set_autoplay;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"void gtk_video_set_autoplay (GtkVideo *self, gboolean autoplay);";subroutine gtk_video_set_autoplay(self, autoplay) bind(c)
gtk;gtk_video_set_file;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"void gtk_video_set_file (GtkVideo *self, GFile *file);";subroutine gtk_video_set_file(self, file) bind(c)
gtk;gtk_video_set_filename;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"void gtk_video_set_filename (GtkVideo *self, const char *filename);";subroutine gtk_video_set_filename(self, filename) bind(c)
gtk;gtk_video_set_loop;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"void gtk_video_set_loop (GtkVideo *self, gboolean loop);";subroutine gtk_video_set_loop(self, loop) bind(c)
gtk;gtk_video_set_media_stream;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"void gtk_video_set_media_stream (GtkVideo *self, GtkMediaStream *stream);";subroutine gtk_video_set_media_stream(self, stream) bind(c)
gtk;gtk_video_set_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvideo.h;"void gtk_video_set_resource (GtkVideo *self, const char *resource_path);";subroutine gtk_video_set_resource(self, resource_path) bind(c)
gtk;gtk_viewport_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkviewport.h;"GtkWidget * gtk_viewport_get_child (GtkViewport *viewport);";function gtk_viewport_get_child(viewport) bind(c)
gtk;gtk_viewport_get_scroll_to_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkviewport.h;"gboolean gtk_viewport_get_scroll_to_focus (GtkViewport *viewport);";function gtk_viewport_get_scroll_to_focus(viewport) bind(c)
gtk;gtk_viewport_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkviewport.h;"GType gtk_viewport_get_type (void) G_GNUC_CONST;";function gtk_viewport_get_type() bind(c)
gtk;gtk_viewport_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkviewport.h;"GtkWidget* gtk_viewport_new (GtkAdjustment *hadjustment, GtkAdjustment *vadjustment);";function gtk_viewport_new(hadjustment, vadjustment) bind(c)
gtk;gtk_viewport_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkviewport.h;"void gtk_viewport_set_child (GtkViewport *viewport, GtkWidget *child);";subroutine gtk_viewport_set_child(viewport, child) bind(c)
gtk;gtk_viewport_set_scroll_to_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkviewport.h;"void gtk_viewport_set_scroll_to_focus (GtkViewport *viewport, gboolean scroll_to_focus);";subroutine gtk_viewport_set_scroll_to_focus(viewport, scroll_to_focus) bind(c)
gtk;gtk_volume_button_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvolumebutton.h;"GType gtk_volume_button_get_type (void) G_GNUC_CONST;";function gtk_volume_button_get_type() bind(c)
gtk;gtk_volume_button_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkvolumebutton.h;"GtkWidget* gtk_volume_button_new (void);";function gtk_volume_button_new() bind(c)
gtk;gtk_widget_action_set_enabled;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_action_set_enabled (GtkWidget *widget, const char *action_name, gboolean enabled);";subroutine gtk_widget_action_set_enabled(widget, action_name, enabled) bind(c)
gtk;gtk_widget_activate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_activate (GtkWidget *widget);";function gtk_widget_activate(widget) bind(c)
gtk;gtk_widget_activate_action_variant;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_activate_action_variant (GtkWidget *widget, const char *name, GVariant *args);";function gtk_widget_activate_action_variant(widget, name, args) bind(c)
gtk;gtk_widget_activate_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_activate_default (GtkWidget *widget);";subroutine gtk_widget_activate_default(widget) bind(c)
gtk;gtk_widget_add_controller;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_add_controller (GtkWidget *widget, GtkEventController *controller);";subroutine gtk_widget_add_controller(widget, controller) bind(c)
gtk;gtk_widget_add_css_class;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_add_css_class (GtkWidget *widget, const char *css_class);";subroutine gtk_widget_add_css_class(widget, css_class) bind(c)
gtk;gtk_widget_add_mnemonic_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_add_mnemonic_label (GtkWidget *widget, GtkWidget *label);";subroutine gtk_widget_add_mnemonic_label(widget, label) bind(c)
gtk;gtk_widget_add_tick_callback;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"guint gtk_widget_add_tick_callback (GtkWidget *widget, GtkTickCallback callback, gpointer user_data, GDestroyNotify notify);";function gtk_widget_add_tick_callback(widget, callback, user_data, notify) bind(c)
gtk;gtk_widget_allocate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_allocate (GtkWidget *widget, int width, int height, int baseline, GskTransform *transform);";subroutine gtk_widget_allocate(widget, width, height, baseline, transform) bind(c)
gtk;gtk_widget_child_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_child_focus (GtkWidget *widget, GtkDirectionType direction);";function gtk_widget_child_focus(widget, direction) bind(c)
gtk;gtk_widget_class_add_shortcut;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_add_shortcut (GtkWidgetClass *widget_class, GtkShortcut *shortcut);";subroutine gtk_widget_class_add_shortcut(widget_class, shortcut) bind(c)
gtk;gtk_widget_class_bind_template_callback_full;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_bind_template_callback_full (GtkWidgetClass *widget_class, const char *callback_name, GCallback callback_symbol);";subroutine gtk_widget_class_bind_template_callback_full(widget_class, callback_name, callback_symbol) bind(c)
gtk;gtk_widget_class_bind_template_child_full;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_bind_template_child_full (GtkWidgetClass *widget_class, const char *name, gboolean internal_child, gssize struct_offset);";subroutine gtk_widget_class_bind_template_child_full(widget_class, name, internal_child, struct_offset) bind(c)
gtk;gtk_widget_class_get_accessible_role;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkAccessibleRole gtk_widget_class_get_accessible_role (GtkWidgetClass *widget_class);";function gtk_widget_class_get_accessible_role(widget_class) bind(c)
gtk;gtk_widget_class_get_activate_signal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"guint gtk_widget_class_get_activate_signal (GtkWidgetClass *widget_class);";function gtk_widget_class_get_activate_signal(widget_class) bind(c)
gtk;gtk_widget_class_get_css_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"const char * gtk_widget_class_get_css_name (GtkWidgetClass *widget_class);";function gtk_widget_class_get_css_name(widget_class) bind(c)
gtk;gtk_widget_class_get_layout_manager_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GType gtk_widget_class_get_layout_manager_type (GtkWidgetClass *widget_class);";function gtk_widget_class_get_layout_manager_type(widget_class) bind(c)
gtk;gtk_widget_class_install_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_install_action (GtkWidgetClass *widget_class, const char *action_name, const char *parameter_type, GtkWidgetActionActivateFunc activate);";subroutine gtk_widget_class_install_action(widget_class, action_name, parameter_type, activate) bind(c)
gtk;gtk_widget_class_install_property_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_install_property_action (GtkWidgetClass *widget_class, const char *action_name, const char *property_name);";subroutine gtk_widget_class_install_property_action(widget_class, action_name, property_name) bind(c)
gtk;gtk_widget_class_query_action;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_class_query_action (GtkWidgetClass *widget_class, guint index_, GType *owner, const char **action_name, const GVariantType **parameter_type, const char **property_name);";function gtk_widget_class_query_action(widget_class, index_, owner, action_name, parameter_type, property_name) bind(c)
gtk;gtk_widget_class_set_accessible_role;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_set_accessible_role (GtkWidgetClass *widget_class, GtkAccessibleRole accessible_role);";subroutine gtk_widget_class_set_accessible_role(widget_class, accessible_role) bind(c)
gtk;gtk_widget_class_set_activate_signal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_set_activate_signal (GtkWidgetClass *widget_class, guint signal_id);";subroutine gtk_widget_class_set_activate_signal(widget_class, signal_id) bind(c)
gtk;gtk_widget_class_set_activate_signal_from_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_set_activate_signal_from_name (GtkWidgetClass *widget_class, const char *signal_name);";subroutine gtk_widget_class_set_activate_signal_from_name(widget_class, signal_name) bind(c)
gtk;gtk_widget_class_set_css_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_set_css_name (GtkWidgetClass *widget_class, const char *name);";subroutine gtk_widget_class_set_css_name(widget_class, name) bind(c)
gtk;gtk_widget_class_set_layout_manager_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_set_layout_manager_type (GtkWidgetClass *widget_class, GType type);";subroutine gtk_widget_class_set_layout_manager_type(widget_class, type) bind(c)
gtk;gtk_widget_class_set_template;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_set_template (GtkWidgetClass *widget_class, GBytes *template_bytes);";subroutine gtk_widget_class_set_template(widget_class, template_bytes) bind(c)
gtk;gtk_widget_class_set_template_from_resource;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_set_template_from_resource (GtkWidgetClass *widget_class, const char *resource_name);";subroutine gtk_widget_class_set_template_from_resource(widget_class, resource_name) bind(c)
gtk;gtk_widget_class_set_template_scope;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_class_set_template_scope (GtkWidgetClass *widget_class, GtkBuilderScope *scope);";subroutine gtk_widget_class_set_template_scope(widget_class, scope) bind(c)
gtk;gtk_widget_compute_bounds;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_compute_bounds (GtkWidget *widget, GtkWidget *target, graphene_rect_t *out_bounds) G_GNUC_WARN_UNUSED_RESULT;";function gtk_widget_compute_bounds(widget, target, out_bounds) bind(c)
gtk;gtk_widget_compute_expand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_compute_expand (GtkWidget *widget, GtkOrientation orientation);";function gtk_widget_compute_expand(widget, orientation) bind(c)
gtk;gtk_widget_compute_point;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_compute_point (GtkWidget *widget, GtkWidget *target, const graphene_point_t *point, graphene_point_t *out_point) G_GNUC_WARN_UNUSED_RESULT;";function gtk_widget_compute_point(widget, target, point, out_point) bind(c)
gtk;gtk_widget_compute_transform;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_compute_transform (GtkWidget *widget, GtkWidget *target, graphene_matrix_t *out_transform) G_GNUC_WARN_UNUSED_RESULT;";function gtk_widget_compute_transform(widget, target, out_transform) bind(c)
gtk;gtk_widget_contains;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_contains (GtkWidget *widget, double x, double y);";function gtk_widget_contains(widget, x, y) bind(c)
gtk;gtk_widget_create_pango_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"PangoContext *gtk_widget_create_pango_context (GtkWidget *widget);";function gtk_widget_create_pango_context(widget) bind(c)
gtk;gtk_widget_create_pango_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"PangoLayout *gtk_widget_create_pango_layout (GtkWidget *widget, const char *text);";function gtk_widget_create_pango_layout(widget, text) bind(c)
gtk;gtk_widget_error_bell;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_error_bell (GtkWidget *widget);";subroutine gtk_widget_error_bell(widget) bind(c)
gtk;gtk_widget_get_allocated_baseline;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"int gtk_widget_get_allocated_baseline (GtkWidget *widget);";function gtk_widget_get_allocated_baseline(widget) bind(c)
gtk;gtk_widget_get_allocated_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"int gtk_widget_get_allocated_height (GtkWidget *widget);";function gtk_widget_get_allocated_height(widget) bind(c)
gtk;gtk_widget_get_allocated_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"int gtk_widget_get_allocated_width (GtkWidget *widget);";function gtk_widget_get_allocated_width(widget) bind(c)
gtk;gtk_widget_get_allocation;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_get_allocation (GtkWidget *widget, GtkAllocation *allocation);";subroutine gtk_widget_get_allocation(widget, allocation) bind(c)
gtk;gtk_widget_get_ancestor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkWidget* gtk_widget_get_ancestor (GtkWidget *widget, GType widget_type);";function gtk_widget_get_ancestor(widget, widget_type) bind(c)
gtk;gtk_widget_get_can_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_can_focus (GtkWidget *widget);";function gtk_widget_get_can_focus(widget) bind(c)
gtk;gtk_widget_get_can_target;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_can_target (GtkWidget *widget);";function gtk_widget_get_can_target(widget) bind(c)
gtk;gtk_widget_get_child_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_child_visible (GtkWidget *widget);";function gtk_widget_get_child_visible(widget) bind(c)
gtk;gtk_widget_get_clipboard;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GdkClipboard *gtk_widget_get_clipboard (GtkWidget *widget);";function gtk_widget_get_clipboard(widget) bind(c)
gtk;gtk_widget_get_css_classes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"char ** gtk_widget_get_css_classes (GtkWidget *widget);";function gtk_widget_get_css_classes(widget) bind(c)
gtk;gtk_widget_get_css_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"const char * gtk_widget_get_css_name (GtkWidget *self) G_GNUC_PURE;";function gtk_widget_get_css_name(self) bind(c)
gtk;gtk_widget_get_cursor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GdkCursor * gtk_widget_get_cursor (GtkWidget *widget);";function gtk_widget_get_cursor(widget) bind(c)
gtk;gtk_widget_get_default_direction;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkTextDirection gtk_widget_get_default_direction (void);";function gtk_widget_get_default_direction() bind(c)
gtk;gtk_widget_get_direction;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkTextDirection gtk_widget_get_direction (GtkWidget *widget);";function gtk_widget_get_direction(widget) bind(c)
gtk;gtk_widget_get_display;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GdkDisplay * gtk_widget_get_display (GtkWidget *widget);";function gtk_widget_get_display(widget) bind(c)
gtk;gtk_widget_get_first_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkWidget * gtk_widget_get_first_child (GtkWidget *widget);";function gtk_widget_get_first_child(widget) bind(c)
gtk;gtk_widget_get_focus_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkWidget * gtk_widget_get_focus_child (GtkWidget *widget);";function gtk_widget_get_focus_child(widget) bind(c)
gtk;gtk_widget_get_focus_on_click;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_focus_on_click (GtkWidget *widget);";function gtk_widget_get_focus_on_click(widget) bind(c)
gtk;gtk_widget_get_focusable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_focusable (GtkWidget *widget);";function gtk_widget_get_focusable(widget) bind(c)
gtk;gtk_widget_get_font_map;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"PangoFontMap * gtk_widget_get_font_map (GtkWidget *widget);";function gtk_widget_get_font_map(widget) bind(c)
gtk;gtk_widget_get_font_options;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"const cairo_font_options_t *gtk_widget_get_font_options (GtkWidget *widget);";function gtk_widget_get_font_options(widget) bind(c)
gtk;gtk_widget_get_frame_clock;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GdkFrameClock* gtk_widget_get_frame_clock (GtkWidget *widget);";function gtk_widget_get_frame_clock(widget) bind(c)
gtk;gtk_widget_get_halign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkAlign gtk_widget_get_halign (GtkWidget *widget);";function gtk_widget_get_halign(widget) bind(c)
gtk;gtk_widget_get_has_tooltip;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_has_tooltip (GtkWidget *widget);";function gtk_widget_get_has_tooltip(widget) bind(c)
gtk;gtk_widget_get_height;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"int gtk_widget_get_height (GtkWidget *widget);";function gtk_widget_get_height(widget) bind(c)
gtk;gtk_widget_get_hexpand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_hexpand (GtkWidget *widget);";function gtk_widget_get_hexpand(widget) bind(c)
gtk;gtk_widget_get_hexpand_set;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_hexpand_set (GtkWidget *widget);";function gtk_widget_get_hexpand_set(widget) bind(c)
gtk;gtk_widget_get_last_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkWidget * gtk_widget_get_last_child (GtkWidget *widget);";function gtk_widget_get_last_child(widget) bind(c)
gtk;gtk_widget_get_layout_manager;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkLayoutManager * gtk_widget_get_layout_manager (GtkWidget *widget);";function gtk_widget_get_layout_manager(widget) bind(c)
gtk;gtk_widget_get_mapped;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_mapped (GtkWidget *widget);";function gtk_widget_get_mapped(widget) bind(c)
gtk;gtk_widget_get_margin_bottom;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"int gtk_widget_get_margin_bottom (GtkWidget *widget);";function gtk_widget_get_margin_bottom(widget) bind(c)
gtk;gtk_widget_get_margin_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"int gtk_widget_get_margin_end (GtkWidget *widget);";function gtk_widget_get_margin_end(widget) bind(c)
gtk;gtk_widget_get_margin_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"int gtk_widget_get_margin_start (GtkWidget *widget);";function gtk_widget_get_margin_start(widget) bind(c)
gtk;gtk_widget_get_margin_top;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"int gtk_widget_get_margin_top (GtkWidget *widget);";function gtk_widget_get_margin_top(widget) bind(c)
gtk;gtk_widget_get_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"const char * gtk_widget_get_name (GtkWidget *widget);";function gtk_widget_get_name(widget) bind(c)
gtk;gtk_widget_get_native;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkNative * gtk_widget_get_native (GtkWidget *widget);";function gtk_widget_get_native(widget) bind(c)
gtk;gtk_widget_get_next_sibling;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkWidget * gtk_widget_get_next_sibling (GtkWidget *widget);";function gtk_widget_get_next_sibling(widget) bind(c)
gtk;gtk_widget_get_opacity;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"double gtk_widget_get_opacity (GtkWidget *widget);";function gtk_widget_get_opacity(widget) bind(c)
gtk;gtk_widget_get_overflow;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkOverflow gtk_widget_get_overflow (GtkWidget *widget);";function gtk_widget_get_overflow(widget) bind(c)
gtk;gtk_widget_get_pango_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"PangoContext *gtk_widget_get_pango_context (GtkWidget *widget);";function gtk_widget_get_pango_context(widget) bind(c)
gtk;gtk_widget_get_parent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkWidget * gtk_widget_get_parent (GtkWidget *widget);";function gtk_widget_get_parent(widget) bind(c)
gtk;gtk_widget_get_preferred_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_get_preferred_size (GtkWidget *widget, GtkRequisition *minimum_size, GtkRequisition *natural_size);";subroutine gtk_widget_get_preferred_size(widget, minimum_size, natural_size) bind(c)
gtk;gtk_widget_get_prev_sibling;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkWidget * gtk_widget_get_prev_sibling (GtkWidget *widget);";function gtk_widget_get_prev_sibling(widget) bind(c)
gtk;gtk_widget_get_primary_clipboard;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GdkClipboard *gtk_widget_get_primary_clipboard (GtkWidget *widget);";function gtk_widget_get_primary_clipboard(widget) bind(c)
gtk;gtk_widget_get_realized;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_realized (GtkWidget *widget);";function gtk_widget_get_realized(widget) bind(c)
gtk;gtk_widget_get_receives_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_receives_default (GtkWidget *widget);";function gtk_widget_get_receives_default(widget) bind(c)
gtk;gtk_widget_get_request_mode;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkSizeRequestMode gtk_widget_get_request_mode (GtkWidget *widget);";function gtk_widget_get_request_mode(widget) bind(c)
gtk;gtk_widget_get_root;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkRoot * gtk_widget_get_root (GtkWidget *widget);";function gtk_widget_get_root(widget) bind(c)
gtk;gtk_widget_get_scale_factor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"int gtk_widget_get_scale_factor (GtkWidget *widget);";function gtk_widget_get_scale_factor(widget) bind(c)
gtk;gtk_widget_get_sensitive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_sensitive (GtkWidget *widget);";function gtk_widget_get_sensitive(widget) bind(c)
gtk;gtk_widget_get_settings;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkSettings* gtk_widget_get_settings (GtkWidget *widget);";function gtk_widget_get_settings(widget) bind(c)
gtk;gtk_widget_get_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"int gtk_widget_get_size (GtkWidget *widget, GtkOrientation orientation);";function gtk_widget_get_size(widget, orientation) bind(c)
gtk;gtk_widget_get_size_request;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_get_size_request (GtkWidget *widget, int *width, int *height);";subroutine gtk_widget_get_size_request(widget, width, height) bind(c)
gtk;gtk_widget_get_state_flags;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkStateFlags gtk_widget_get_state_flags (GtkWidget *widget);";function gtk_widget_get_state_flags(widget) bind(c)
gtk;gtk_widget_get_style_context;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkStyleContext * gtk_widget_get_style_context (GtkWidget *widget);";function gtk_widget_get_style_context(widget) bind(c)
gtk;gtk_widget_get_template_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GObject *gtk_widget_get_template_child (GtkWidget *widget, GType widget_type, const char *name);";function gtk_widget_get_template_child(widget, widget_type, name) bind(c)
gtk;gtk_widget_get_tooltip_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"const char * gtk_widget_get_tooltip_markup (GtkWidget *widget);";function gtk_widget_get_tooltip_markup(widget) bind(c)
gtk;gtk_widget_get_tooltip_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"const char * gtk_widget_get_tooltip_text (GtkWidget *widget);";function gtk_widget_get_tooltip_text(widget) bind(c)
gtk;gtk_widget_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GType gtk_widget_get_type (void) G_GNUC_CONST;";function gtk_widget_get_type() bind(c)
gtk;gtk_widget_get_valign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkAlign gtk_widget_get_valign (GtkWidget *widget);";function gtk_widget_get_valign(widget) bind(c)
gtk;gtk_widget_get_vexpand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_vexpand (GtkWidget *widget);";function gtk_widget_get_vexpand(widget) bind(c)
gtk;gtk_widget_get_vexpand_set;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_vexpand_set (GtkWidget *widget);";function gtk_widget_get_vexpand_set(widget) bind(c)
gtk;gtk_widget_get_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_get_visible (GtkWidget *widget);";function gtk_widget_get_visible(widget) bind(c)
gtk;gtk_widget_get_width;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"int gtk_widget_get_width (GtkWidget *widget);";function gtk_widget_get_width(widget) bind(c)
gtk;gtk_widget_grab_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_grab_focus (GtkWidget *widget);";function gtk_widget_grab_focus(widget) bind(c)
gtk;gtk_widget_has_css_class;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_has_css_class (GtkWidget *widget, const char *css_class);";function gtk_widget_has_css_class(widget, css_class) bind(c)
gtk;gtk_widget_has_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_has_default (GtkWidget *widget);";function gtk_widget_has_default(widget) bind(c)
gtk;gtk_widget_has_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_has_focus (GtkWidget *widget);";function gtk_widget_has_focus(widget) bind(c)
gtk;gtk_widget_has_visible_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_has_visible_focus (GtkWidget *widget);";function gtk_widget_has_visible_focus(widget) bind(c)
gtk;gtk_widget_hide;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_hide (GtkWidget *widget);";subroutine gtk_widget_hide(widget) bind(c)
gtk;gtk_widget_in_destruction;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_in_destruction (GtkWidget *widget);";function gtk_widget_in_destruction(widget) bind(c)
gtk;gtk_widget_init_template;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_init_template (GtkWidget *widget);";subroutine gtk_widget_init_template(widget) bind(c)
gtk;gtk_widget_insert_action_group;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_insert_action_group (GtkWidget *widget, const char *name, GActionGroup *group);";subroutine gtk_widget_insert_action_group(widget, name, group) bind(c)
gtk;gtk_widget_insert_after;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_insert_after (GtkWidget *widget, GtkWidget *parent, GtkWidget *previous_sibling);";subroutine gtk_widget_insert_after(widget, parent, previous_sibling) bind(c)
gtk;gtk_widget_insert_before;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_insert_before (GtkWidget *widget, GtkWidget *parent, GtkWidget *next_sibling);";subroutine gtk_widget_insert_before(widget, parent, next_sibling) bind(c)
gtk;gtk_widget_is_ancestor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_is_ancestor (GtkWidget *widget, GtkWidget *ancestor);";function gtk_widget_is_ancestor(widget, ancestor) bind(c)
gtk;gtk_widget_is_drawable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_is_drawable (GtkWidget *widget);";function gtk_widget_is_drawable(widget) bind(c)
gtk;gtk_widget_is_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_is_focus (GtkWidget *widget);";function gtk_widget_is_focus(widget) bind(c)
gtk;gtk_widget_is_sensitive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_is_sensitive (GtkWidget *widget);";function gtk_widget_is_sensitive(widget) bind(c)
gtk;gtk_widget_is_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_is_visible (GtkWidget *widget);";function gtk_widget_is_visible(widget) bind(c)
gtk;gtk_widget_keynav_failed;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_keynav_failed (GtkWidget *widget, GtkDirectionType direction);";function gtk_widget_keynav_failed(widget, direction) bind(c)
gtk;gtk_widget_list_mnemonic_labels;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GList* gtk_widget_list_mnemonic_labels (GtkWidget *widget);";function gtk_widget_list_mnemonic_labels(widget) bind(c)
gtk;gtk_widget_map;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_map (GtkWidget *widget);";subroutine gtk_widget_map(widget) bind(c)
gtk;gtk_widget_measure;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_measure (GtkWidget *widget, GtkOrientation orientation, int for_size, int *minimum, int *natural, int *minimum_baseline, int *natural_baseline);";subroutine gtk_widget_measure(widget, orientation, for_size, minimum, natural, minimum_baseline, natural_baseline) bind(c)
gtk;gtk_widget_mnemonic_activate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_mnemonic_activate (GtkWidget *widget, gboolean group_cycling);";function gtk_widget_mnemonic_activate(widget, group_cycling) bind(c)
gtk;gtk_widget_observe_children;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GListModel * gtk_widget_observe_children (GtkWidget *widget);";function gtk_widget_observe_children(widget) bind(c)
gtk;gtk_widget_observe_controllers;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GListModel * gtk_widget_observe_controllers (GtkWidget *widget);";function gtk_widget_observe_controllers(widget) bind(c)
gtk;gtk_widget_paintable_get_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidgetpaintable.h;"GtkWidget * gtk_widget_paintable_get_widget (GtkWidgetPaintable *self);";function gtk_widget_paintable_get_widget(self) bind(c)
gtk;gtk_widget_paintable_set_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidgetpaintable.h;"void gtk_widget_paintable_set_widget (GtkWidgetPaintable *self, GtkWidget *widget);";subroutine gtk_widget_paintable_set_widget(self, widget) bind(c)
gtk;gtk_widget_pick;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"GtkWidget * gtk_widget_pick (GtkWidget *widget, double x, double y, GtkPickFlags flags);";function gtk_widget_pick(widget, x, y, flags) bind(c)
gtk;gtk_widget_queue_allocate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_queue_allocate (GtkWidget *widget);";subroutine gtk_widget_queue_allocate(widget) bind(c)
gtk;gtk_widget_queue_draw;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_queue_draw (GtkWidget *widget);";subroutine gtk_widget_queue_draw(widget) bind(c)
gtk;gtk_widget_queue_resize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_queue_resize (GtkWidget *widget);";subroutine gtk_widget_queue_resize(widget) bind(c)
gtk;gtk_widget_realize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_realize (GtkWidget *widget);";subroutine gtk_widget_realize(widget) bind(c)
gtk;gtk_widget_remove_controller;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_remove_controller (GtkWidget *widget, GtkEventController *controller);";subroutine gtk_widget_remove_controller(widget, controller) bind(c)
gtk;gtk_widget_remove_css_class;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_remove_css_class (GtkWidget *widget, const char *css_class);";subroutine gtk_widget_remove_css_class(widget, css_class) bind(c)
gtk;gtk_widget_remove_mnemonic_label;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_remove_mnemonic_label (GtkWidget *widget, GtkWidget *label);";subroutine gtk_widget_remove_mnemonic_label(widget, label) bind(c)
gtk;gtk_widget_remove_tick_callback;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_remove_tick_callback (GtkWidget *widget, guint id);";subroutine gtk_widget_remove_tick_callback(widget, id) bind(c)
gtk;gtk_widget_set_can_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_can_focus (GtkWidget *widget, gboolean can_focus);";subroutine gtk_widget_set_can_focus(widget, can_focus) bind(c)
gtk;gtk_widget_set_can_target;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_can_target (GtkWidget *widget, gboolean can_target);";subroutine gtk_widget_set_can_target(widget, can_target) bind(c)
gtk;gtk_widget_set_child_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_child_visible (GtkWidget *widget, gboolean child_visible);";subroutine gtk_widget_set_child_visible(widget, child_visible) bind(c)
gtk;gtk_widget_set_css_classes;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_css_classes (GtkWidget *widget, const char **classes);";subroutine gtk_widget_set_css_classes(widget, classes) bind(c)
gtk;gtk_widget_set_cursor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_cursor (GtkWidget *widget, GdkCursor *cursor);";subroutine gtk_widget_set_cursor(widget, cursor) bind(c)
gtk;gtk_widget_set_cursor_from_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_cursor_from_name (GtkWidget *widget, const char *name);";subroutine gtk_widget_set_cursor_from_name(widget, name) bind(c)
gtk;gtk_widget_set_default_direction;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_default_direction (GtkTextDirection dir);";subroutine gtk_widget_set_default_direction(dir) bind(c)
gtk;gtk_widget_set_direction;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_direction (GtkWidget *widget, GtkTextDirection dir);";subroutine gtk_widget_set_direction(widget, dir) bind(c)
gtk;gtk_widget_set_focus_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_focus_child (GtkWidget *widget, GtkWidget *child);";subroutine gtk_widget_set_focus_child(widget, child) bind(c)
gtk;gtk_widget_set_focus_on_click;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_focus_on_click (GtkWidget *widget, gboolean focus_on_click);";subroutine gtk_widget_set_focus_on_click(widget, focus_on_click) bind(c)
gtk;gtk_widget_set_focusable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_focusable (GtkWidget *widget, gboolean focusable);";subroutine gtk_widget_set_focusable(widget, focusable) bind(c)
gtk;gtk_widget_set_font_map;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_font_map (GtkWidget *widget, PangoFontMap *font_map);";subroutine gtk_widget_set_font_map(widget, font_map) bind(c)
gtk;gtk_widget_set_font_options;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_font_options (GtkWidget *widget, const cairo_font_options_t *options);";subroutine gtk_widget_set_font_options(widget, options) bind(c)
gtk;gtk_widget_set_halign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_halign (GtkWidget *widget, GtkAlign align);";subroutine gtk_widget_set_halign(widget, align) bind(c)
gtk;gtk_widget_set_has_tooltip;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_has_tooltip (GtkWidget *widget, gboolean has_tooltip);";subroutine gtk_widget_set_has_tooltip(widget, has_tooltip) bind(c)
gtk;gtk_widget_set_hexpand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_hexpand (GtkWidget *widget, gboolean expand);";subroutine gtk_widget_set_hexpand(widget, expand) bind(c)
gtk;gtk_widget_set_hexpand_set;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_hexpand_set (GtkWidget *widget, gboolean set);";subroutine gtk_widget_set_hexpand_set(widget, set) bind(c)
gtk;gtk_widget_set_layout_manager;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_layout_manager (GtkWidget *widget, GtkLayoutManager *layout_manager);";subroutine gtk_widget_set_layout_manager(widget, layout_manager) bind(c)
gtk;gtk_widget_set_margin_bottom;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_margin_bottom (GtkWidget *widget, int margin);";subroutine gtk_widget_set_margin_bottom(widget, margin) bind(c)
gtk;gtk_widget_set_margin_end;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_margin_end (GtkWidget *widget, int margin);";subroutine gtk_widget_set_margin_end(widget, margin) bind(c)
gtk;gtk_widget_set_margin_start;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_margin_start (GtkWidget *widget, int margin);";subroutine gtk_widget_set_margin_start(widget, margin) bind(c)
gtk;gtk_widget_set_margin_top;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_margin_top (GtkWidget *widget, int margin);";subroutine gtk_widget_set_margin_top(widget, margin) bind(c)
gtk;gtk_widget_set_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_name (GtkWidget *widget, const char *name);";subroutine gtk_widget_set_name(widget, name) bind(c)
gtk;gtk_widget_set_opacity;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_opacity (GtkWidget *widget, double opacity);";subroutine gtk_widget_set_opacity(widget, opacity) bind(c)
gtk;gtk_widget_set_overflow;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_overflow (GtkWidget *widget, GtkOverflow overflow);";subroutine gtk_widget_set_overflow(widget, overflow) bind(c)
gtk;gtk_widget_set_parent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_parent (GtkWidget *widget, GtkWidget *parent);";subroutine gtk_widget_set_parent(widget, parent) bind(c)
gtk;gtk_widget_set_receives_default;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_receives_default (GtkWidget *widget, gboolean receives_default);";subroutine gtk_widget_set_receives_default(widget, receives_default) bind(c)
gtk;gtk_widget_set_sensitive;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_sensitive (GtkWidget *widget, gboolean sensitive);";subroutine gtk_widget_set_sensitive(widget, sensitive) bind(c)
gtk;gtk_widget_set_size_request;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_size_request (GtkWidget *widget, int width, int height);";subroutine gtk_widget_set_size_request(widget, width, height) bind(c)
gtk;gtk_widget_set_state_flags;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_state_flags (GtkWidget *widget, GtkStateFlags flags, gboolean clear);";subroutine gtk_widget_set_state_flags(widget, flags, clear) bind(c)
gtk;gtk_widget_set_tooltip_markup;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_tooltip_markup (GtkWidget *widget, const char *markup);";subroutine gtk_widget_set_tooltip_markup(widget, markup) bind(c)
gtk;gtk_widget_set_tooltip_text;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_tooltip_text (GtkWidget *widget, const char *text);";subroutine gtk_widget_set_tooltip_text(widget, text) bind(c)
gtk;gtk_widget_set_valign;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_valign (GtkWidget *widget, GtkAlign align);";subroutine gtk_widget_set_valign(widget, align) bind(c)
gtk;gtk_widget_set_vexpand;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_vexpand (GtkWidget *widget, gboolean expand);";subroutine gtk_widget_set_vexpand(widget, expand) bind(c)
gtk;gtk_widget_set_vexpand_set;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_vexpand_set (GtkWidget *widget, gboolean set);";subroutine gtk_widget_set_vexpand_set(widget, set) bind(c)
gtk;gtk_widget_set_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_set_visible (GtkWidget *widget, gboolean visible);";subroutine gtk_widget_set_visible(widget, visible) bind(c)
gtk;gtk_widget_should_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_should_layout (GtkWidget *widget);";function gtk_widget_should_layout(widget) bind(c)
gtk;gtk_widget_show;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_show (GtkWidget *widget);";subroutine gtk_widget_show(widget) bind(c)
gtk;gtk_widget_size_allocate;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_size_allocate (GtkWidget *widget, const GtkAllocation *allocation, int baseline);";subroutine gtk_widget_size_allocate(widget, allocation, baseline) bind(c)
gtk;gtk_widget_snapshot_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_snapshot_child (GtkWidget *widget, GtkWidget *child, GtkSnapshot *snapshot);";subroutine gtk_widget_snapshot_child(widget, child, snapshot) bind(c)
gtk;gtk_widget_translate_coordinates;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"gboolean gtk_widget_translate_coordinates (GtkWidget *src_widget, GtkWidget *dest_widget, double src_x, double src_y, double *dest_x, double *dest_y);";function gtk_widget_translate_coordinates(src_widget, dest_widget, src_x, src_y, dest_x, dest_y) bind(c)
gtk;gtk_widget_trigger_tooltip_query;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_trigger_tooltip_query (GtkWidget *widget);";subroutine gtk_widget_trigger_tooltip_query(widget) bind(c)
gtk;gtk_widget_unmap;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_unmap (GtkWidget *widget);";subroutine gtk_widget_unmap(widget) bind(c)
gtk;gtk_widget_unparent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_unparent (GtkWidget *widget);";subroutine gtk_widget_unparent(widget) bind(c)
gtk;gtk_widget_unrealize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_unrealize (GtkWidget *widget);";subroutine gtk_widget_unrealize(widget) bind(c)
gtk;gtk_widget_unset_state_flags;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwidget.h;"void gtk_widget_unset_state_flags (GtkWidget *widget, GtkStateFlags flags);";subroutine gtk_widget_unset_state_flags(widget, flags) bind(c)
gtk;gtk_window_close;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_close (GtkWindow *window);";subroutine gtk_window_close(window) bind(c)
gtk;gtk_window_controls_get_decoration_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindowcontrols.h;"const char * gtk_window_controls_get_decoration_layout (GtkWindowControls *self);";function gtk_window_controls_get_decoration_layout(self) bind(c)
gtk;gtk_window_controls_get_empty;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindowcontrols.h;"gboolean gtk_window_controls_get_empty (GtkWindowControls *self);";function gtk_window_controls_get_empty(self) bind(c)
gtk;gtk_window_controls_get_side;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindowcontrols.h;"GtkPackType gtk_window_controls_get_side (GtkWindowControls *self);";function gtk_window_controls_get_side(self) bind(c)
gtk;gtk_window_controls_set_decoration_layout;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindowcontrols.h;"void gtk_window_controls_set_decoration_layout (GtkWindowControls *self, const char *layout);";subroutine gtk_window_controls_set_decoration_layout(self, layout) bind(c)
gtk;gtk_window_controls_set_side;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindowcontrols.h;"void gtk_window_controls_set_side (GtkWindowControls *self, GtkPackType side);";subroutine gtk_window_controls_set_side(self, side) bind(c)
gtk;gtk_window_destroy;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_destroy (GtkWindow *window);";subroutine gtk_window_destroy(window) bind(c)
gtk;gtk_window_fullscreen;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_fullscreen (GtkWindow *window);";subroutine gtk_window_fullscreen(window) bind(c)
gtk;gtk_window_fullscreen_on_monitor;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_fullscreen_on_monitor (GtkWindow *window, GdkMonitor *monitor);";subroutine gtk_window_fullscreen_on_monitor(window, monitor) bind(c)
gtk;gtk_window_get_application;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"GtkApplication *gtk_window_get_application (GtkWindow *window);";function gtk_window_get_application(window) bind(c)
gtk;gtk_window_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"GtkWidget *gtk_window_get_child (GtkWindow *window);";function gtk_window_get_child(window) bind(c)
gtk;gtk_window_get_decorated;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"gboolean gtk_window_get_decorated (GtkWindow *window);";function gtk_window_get_decorated(window) bind(c)
gtk;gtk_window_get_default_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"const char * gtk_window_get_default_icon_name (void);";function gtk_window_get_default_icon_name() bind(c)
gtk;gtk_window_get_default_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_get_default_size (GtkWindow *window, int *width, int *height);";subroutine gtk_window_get_default_size(window, width, height) bind(c)
gtk;gtk_window_get_default_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"GtkWidget *gtk_window_get_default_widget (GtkWindow *window);";function gtk_window_get_default_widget(window) bind(c)
gtk;gtk_window_get_deletable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"gboolean gtk_window_get_deletable (GtkWindow *window);";function gtk_window_get_deletable(window) bind(c)
gtk;gtk_window_get_destroy_with_parent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"gboolean gtk_window_get_destroy_with_parent (GtkWindow *window);";function gtk_window_get_destroy_with_parent(window) bind(c)
gtk;gtk_window_get_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"GtkWidget *gtk_window_get_focus (GtkWindow *window);";function gtk_window_get_focus(window) bind(c)
gtk;gtk_window_get_focus_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"gboolean gtk_window_get_focus_visible (GtkWindow *window);";function gtk_window_get_focus_visible(window) bind(c)
gtk;gtk_window_get_group;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"GtkWindowGroup *gtk_window_get_group (GtkWindow *window);";function gtk_window_get_group(window) bind(c)
gtk;gtk_window_get_hide_on_close;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"gboolean gtk_window_get_hide_on_close (GtkWindow *window);";function gtk_window_get_hide_on_close(window) bind(c)
gtk;gtk_window_get_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"const char * gtk_window_get_icon_name (GtkWindow *window);";function gtk_window_get_icon_name(window) bind(c)
gtk;gtk_window_get_mnemonics_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"gboolean gtk_window_get_mnemonics_visible (GtkWindow *window);";function gtk_window_get_mnemonics_visible(window) bind(c)
gtk;gtk_window_get_modal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"gboolean gtk_window_get_modal (GtkWindow *window);";function gtk_window_get_modal(window) bind(c)
gtk;gtk_window_get_resizable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"gboolean gtk_window_get_resizable (GtkWindow *window);";function gtk_window_get_resizable(window) bind(c)
gtk;gtk_window_get_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"const char * gtk_window_get_title (GtkWindow *window);";function gtk_window_get_title(window) bind(c)
gtk;gtk_window_get_titlebar;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"GtkWidget *gtk_window_get_titlebar (GtkWindow *window);";function gtk_window_get_titlebar(window) bind(c)
gtk;gtk_window_get_toplevels;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"GListModel *gtk_window_get_toplevels (void);";function gtk_window_get_toplevels() bind(c)
gtk;gtk_window_get_transient_for;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"GtkWindow *gtk_window_get_transient_for (GtkWindow *window);";function gtk_window_get_transient_for(window) bind(c)
gtk;gtk_window_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"GType gtk_window_get_type (void) G_GNUC_CONST;";function gtk_window_get_type() bind(c)
gtk;gtk_window_group_add_window;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindowgroup.h;"void gtk_window_group_add_window (GtkWindowGroup *window_group, GtkWindow *window);";subroutine gtk_window_group_add_window(window_group, window) bind(c)
gtk;gtk_window_group_get_type;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindowgroup.h;"GType gtk_window_group_get_type (void) G_GNUC_CONST;";function gtk_window_group_get_type() bind(c)
gtk;gtk_window_group_list_windows;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindowgroup.h;"GList * gtk_window_group_list_windows (GtkWindowGroup *window_group);";function gtk_window_group_list_windows(window_group) bind(c)
gtk;gtk_window_group_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindowgroup.h;"GtkWindowGroup * gtk_window_group_new (void);";function gtk_window_group_new() bind(c)
gtk;gtk_window_group_remove_window;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindowgroup.h;"void gtk_window_group_remove_window (GtkWindowGroup *window_group, GtkWindow *window);";subroutine gtk_window_group_remove_window(window_group, window) bind(c)
gtk;gtk_window_handle_get_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindowhandle.h;"GtkWidget * gtk_window_handle_get_child (GtkWindowHandle *self);";function gtk_window_handle_get_child(self) bind(c)
gtk;gtk_window_handle_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindowhandle.h;"void gtk_window_handle_set_child (GtkWindowHandle *self, GtkWidget *child);";subroutine gtk_window_handle_set_child(self, child) bind(c)
gtk;gtk_window_has_group;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"gboolean gtk_window_has_group (GtkWindow *window);";function gtk_window_has_group(window) bind(c)
gtk;gtk_window_is_active;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"gboolean gtk_window_is_active (GtkWindow *window);";function gtk_window_is_active(window) bind(c)
gtk;gtk_window_is_fullscreen;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"gboolean gtk_window_is_fullscreen (GtkWindow *window);";function gtk_window_is_fullscreen(window) bind(c)
gtk;gtk_window_is_maximized;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"gboolean gtk_window_is_maximized (GtkWindow *window);";function gtk_window_is_maximized(window) bind(c)
gtk;gtk_window_list_toplevels;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"GList* gtk_window_list_toplevels (void);";function gtk_window_list_toplevels() bind(c)
gtk;gtk_window_maximize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_maximize (GtkWindow *window);";subroutine gtk_window_maximize(window) bind(c)
gtk;gtk_window_minimize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_minimize (GtkWindow *window);";subroutine gtk_window_minimize(window) bind(c)
gtk;gtk_window_new;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"GtkWidget* gtk_window_new (void);";function gtk_window_new() bind(c)
gtk;gtk_window_present;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_present (GtkWindow *window);";subroutine gtk_window_present(window) bind(c)
gtk;gtk_window_present_with_time;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_present_with_time (GtkWindow *window, guint32 timestamp);";subroutine gtk_window_present_with_time(window, timestamp) bind(c)
gtk;gtk_window_set_application;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_application (GtkWindow *window, GtkApplication *application);";subroutine gtk_window_set_application(window, application) bind(c)
gtk;gtk_window_set_auto_startup_notification;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_auto_startup_notification (gboolean setting);";subroutine gtk_window_set_auto_startup_notification(setting) bind(c)
gtk;gtk_window_set_child;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_child (GtkWindow *window, GtkWidget *child);";subroutine gtk_window_set_child(window, child) bind(c)
gtk;gtk_window_set_decorated;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_decorated (GtkWindow *window, gboolean setting);";subroutine gtk_window_set_decorated(window, setting) bind(c)
gtk;gtk_window_set_default_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_default_icon_name (const char *name);";subroutine gtk_window_set_default_icon_name(name) bind(c)
gtk;gtk_window_set_default_size;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_default_size (GtkWindow *window, int width, int height);";subroutine gtk_window_set_default_size(window, width, height) bind(c)
gtk;gtk_window_set_default_widget;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_default_widget (GtkWindow *window, GtkWidget *default_widget);";subroutine gtk_window_set_default_widget(window, default_widget) bind(c)
gtk;gtk_window_set_deletable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_deletable (GtkWindow *window, gboolean setting);";subroutine gtk_window_set_deletable(window, setting) bind(c)
gtk;gtk_window_set_destroy_with_parent;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_destroy_with_parent (GtkWindow *window, gboolean setting);";subroutine gtk_window_set_destroy_with_parent(window, setting) bind(c)
gtk;gtk_window_set_display;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_display (GtkWindow *window, GdkDisplay *display);";subroutine gtk_window_set_display(window, display) bind(c)
gtk;gtk_window_set_focus;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_focus (GtkWindow *window, GtkWidget *focus);";subroutine gtk_window_set_focus(window, focus) bind(c)
gtk;gtk_window_set_focus_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_focus_visible (GtkWindow *window, gboolean setting);";subroutine gtk_window_set_focus_visible(window, setting) bind(c)
gtk;gtk_window_set_hide_on_close;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_hide_on_close (GtkWindow *window, gboolean setting);";subroutine gtk_window_set_hide_on_close(window, setting) bind(c)
gtk;gtk_window_set_icon_name;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_icon_name (GtkWindow *window, const char *name);";subroutine gtk_window_set_icon_name(window, name) bind(c)
gtk;gtk_window_set_interactive_debugging;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_interactive_debugging (gboolean enable);";subroutine gtk_window_set_interactive_debugging(enable) bind(c)
gtk;gtk_window_set_mnemonics_visible;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_mnemonics_visible (GtkWindow *window, gboolean setting);";subroutine gtk_window_set_mnemonics_visible(window, setting) bind(c)
gtk;gtk_window_set_modal;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_modal (GtkWindow *window, gboolean modal);";subroutine gtk_window_set_modal(window, modal) bind(c)
gtk;gtk_window_set_resizable;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_resizable (GtkWindow *window, gboolean resizable);";subroutine gtk_window_set_resizable(window, resizable) bind(c)
gtk;gtk_window_set_startup_id;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_startup_id (GtkWindow *window, const char *startup_id);";subroutine gtk_window_set_startup_id(window, startup_id) bind(c)
gtk;gtk_window_set_title;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_title (GtkWindow *window, const char *title);";subroutine gtk_window_set_title(window, title) bind(c)
gtk;gtk_window_set_titlebar;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_titlebar (GtkWindow *window, GtkWidget *titlebar);";subroutine gtk_window_set_titlebar(window, titlebar) bind(c)
gtk;gtk_window_set_transient_for;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_set_transient_for (GtkWindow *window, GtkWindow *parent);";subroutine gtk_window_set_transient_for(window, parent) bind(c)
gtk;gtk_window_unfullscreen;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_unfullscreen (GtkWindow *window);";subroutine gtk_window_unfullscreen(window) bind(c)
gtk;gtk_window_unmaximize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_unmaximize (GtkWindow *window);";subroutine gtk_window_unmaximize(window) bind(c)
gtk;gtk_window_unminimize;GDK_AVAILABLE_IN_ALL;gtk-auto.f90;/usr/include/gtk-4.0/gtk/gtkwindow.h;"void gtk_window_unminimize (GtkWindow *window);";subroutine gtk_window_unminimize(window) bind(c)
gtk_os_dependent;gdk_pixbuf_new_from_file;GDK_PIXBUF_AVAILABLE_IN_ALL;unixonly-auto.f90/mswindowsonly-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_file (const char *filename, GError **error);";function gdk_pixbuf_new_from_file(filename, error) bind(c)
gtk_os_dependent;gdk_pixbuf_new_from_file_at_scale;GDK_PIXBUF_AVAILABLE_IN_2_6;unixonly-auto.f90/mswindowsonly-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_file_at_scale (const char *filename, int width, int height, gboolean preserve_aspect_ratio, GError **error);";function gdk_pixbuf_new_from_file_at_scale(filename, width, height, preserve_aspect_ratio, error) bind(c)
gtk_os_dependent;gdk_pixbuf_new_from_file_at_size;GDK_PIXBUF_AVAILABLE_IN_2_4;unixonly-auto.f90/mswindowsonly-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"GdkPixbuf *gdk_pixbuf_new_from_file_at_size (const char *filename, int width, int height, GError **error);";function gdk_pixbuf_new_from_file_at_size(filename, width, height, error) bind(c)
gtk_os_dependent;gdk_pixbuf_savev;GDK_PIXBUF_AVAILABLE_IN_ALL;unixonly-auto.f90/mswindowsonly-auto.f90;/usr/include/gdk-pixbuf-2.0/gdk-pixbuf/gdk-pixbuf-core.h;"gboolean gdk_pixbuf_savev (GdkPixbuf *pixbuf, const char *filename, const char *type, char **option_keys, char **option_values, GError **error);";function gdk_pixbuf_savev(pixbuf, filename, type, option_keys, option_values, error) bind(c)
pango;pango_alignment_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_alignment_get_type (void) G_GNUC_CONST;";function pango_alignment_get_type() bind(c)
pango;pango_attr_allow_breaks_new;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_allow_breaks_new (gboolean allow_breaks);";function pango_attr_allow_breaks_new(allow_breaks) bind(c)
pango;pango_attr_background_alpha_new;PANGO_AVAILABLE_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_background_alpha_new (guint16 alpha);";function pango_attr_background_alpha_new(alpha) bind(c)
pango;pango_attr_background_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_background_new (guint16 red, guint16 green, guint16 blue);";function pango_attr_background_new(red, green, blue) bind(c)
pango;pango_attr_fallback_new;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_fallback_new (gboolean enable_fallback);";function pango_attr_fallback_new(enable_fallback) bind(c)
pango;pango_attr_family_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_family_new (const char *family);";function pango_attr_family_new(family) bind(c)
pango;pango_attr_font_desc_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_font_desc_new (const PangoFontDescription *desc);";function pango_attr_font_desc_new(desc) bind(c)
pango;pango_attr_font_features_new;PANGO_AVAILABLE_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_font_features_new (const gchar *features);";function pango_attr_font_features_new(features) bind(c)
pango;pango_attr_foreground_alpha_new;PANGO_AVAILABLE_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_foreground_alpha_new (guint16 alpha);";function pango_attr_foreground_alpha_new(alpha) bind(c)
pango;pango_attr_foreground_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_foreground_new (guint16 red, guint16 green, guint16 blue);";function pango_attr_foreground_new(red, green, blue) bind(c)
pango;pango_attr_gravity_hint_new;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_gravity_hint_new (PangoGravityHint hint);";function pango_attr_gravity_hint_new(hint) bind(c)
pango;pango_attr_gravity_new;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_gravity_new (PangoGravity gravity);";function pango_attr_gravity_new(gravity) bind(c)
pango;pango_attr_insert_hyphens_new;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_insert_hyphens_new (gboolean insert_hyphens);";function pango_attr_insert_hyphens_new(insert_hyphens) bind(c)
pango;pango_attr_iterator_copy;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttrIterator *pango_attr_iterator_copy (PangoAttrIterator *iterator);";function pango_attr_iterator_copy(iterator) bind(c)
pango;pango_attr_iterator_destroy;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"void pango_attr_iterator_destroy (PangoAttrIterator *iterator);";subroutine pango_attr_iterator_destroy(iterator) bind(c)
pango;pango_attr_iterator_get;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute * pango_attr_iterator_get (PangoAttrIterator *iterator, PangoAttrType type);";function pango_attr_iterator_get(iterator, type) bind(c)
pango;pango_attr_iterator_get_attrs;PANGO_AVAILABLE_IN_1_2;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"GSList * pango_attr_iterator_get_attrs (PangoAttrIterator *iterator);";function pango_attr_iterator_get_attrs(iterator) bind(c)
pango;pango_attr_iterator_get_font;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"void pango_attr_iterator_get_font (PangoAttrIterator *iterator, PangoFontDescription *desc, PangoLanguage **language, GSList **extra_attrs);";subroutine pango_attr_iterator_get_font(iterator, desc, language, extra_attrs) bind(c)
pango;pango_attr_iterator_get_type;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"GType pango_attr_iterator_get_type (void) G_GNUC_CONST;";function pango_attr_iterator_get_type() bind(c)
pango;pango_attr_iterator_next;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"gboolean pango_attr_iterator_next (PangoAttrIterator *iterator);";function pango_attr_iterator_next(iterator) bind(c)
pango;pango_attr_iterator_range;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"void pango_attr_iterator_range (PangoAttrIterator *iterator, gint *start, gint *end);";subroutine pango_attr_iterator_range(iterator, start, end) bind(c)
pango;pango_attr_language_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_language_new (PangoLanguage *language);";function pango_attr_language_new(language) bind(c)
pango;pango_attr_letter_spacing_new;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_letter_spacing_new (int letter_spacing);";function pango_attr_letter_spacing_new(letter_spacing) bind(c)
pango;pango_attr_list_change;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"void pango_attr_list_change (PangoAttrList *list, PangoAttribute *attr);";subroutine pango_attr_list_change(list, attr) bind(c)
pango;pango_attr_list_copy;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttrList * pango_attr_list_copy (PangoAttrList *list);";function pango_attr_list_copy(list) bind(c)
pango;pango_attr_list_equal;PANGO_AVAILABLE_IN_1_46;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"gboolean pango_attr_list_equal (PangoAttrList *list, PangoAttrList *other_list);";function pango_attr_list_equal(list, other_list) bind(c)
pango;pango_attr_list_filter;PANGO_AVAILABLE_IN_1_2;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttrList *pango_attr_list_filter (PangoAttrList *list, PangoAttrFilterFunc func, gpointer data);";function pango_attr_list_filter(list, func, data) bind(c)
pango;pango_attr_list_get_attributes;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"GSList *pango_attr_list_get_attributes (PangoAttrList *list);";function pango_attr_list_get_attributes(list) bind(c)
pango;pango_attr_list_get_iterator;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttrIterator *pango_attr_list_get_iterator (PangoAttrList *list);";function pango_attr_list_get_iterator(list) bind(c)
pango;pango_attr_list_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"GType pango_attr_list_get_type (void) G_GNUC_CONST;";function pango_attr_list_get_type() bind(c)
pango;pango_attr_list_insert;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"void pango_attr_list_insert (PangoAttrList *list, PangoAttribute *attr);";subroutine pango_attr_list_insert(list, attr) bind(c)
pango;pango_attr_list_insert_before;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"void pango_attr_list_insert_before (PangoAttrList *list, PangoAttribute *attr);";subroutine pango_attr_list_insert_before(list, attr) bind(c)
pango;pango_attr_list_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttrList * pango_attr_list_new (void);";function pango_attr_list_new() bind(c)
pango;pango_attr_list_ref;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttrList * pango_attr_list_ref (PangoAttrList *list);";function pango_attr_list_ref(list) bind(c)
pango;pango_attr_list_splice;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"void pango_attr_list_splice (PangoAttrList *list, PangoAttrList *other, gint pos, gint len);";subroutine pango_attr_list_splice(list, other, pos, len) bind(c)
pango;pango_attr_list_unref;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"void pango_attr_list_unref (PangoAttrList *list);";subroutine pango_attr_list_unref(list) bind(c)
pango;pango_attr_list_update;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"void pango_attr_list_update (PangoAttrList *list, int pos, int remove, int add);";subroutine pango_attr_list_update(list, pos, remove, add) bind(c)
pango;pango_attr_overline_color_new;PANGO_AVAILABLE_IN_1_46;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_overline_color_new (guint16 red, guint16 green, guint16 blue);";function pango_attr_overline_color_new(red, green, blue) bind(c)
pango;pango_attr_overline_new;PANGO_AVAILABLE_IN_1_46;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_overline_new (PangoOverline overline);";function pango_attr_overline_new(overline) bind(c)
pango;pango_attr_rise_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_rise_new (int rise);";function pango_attr_rise_new(rise) bind(c)
pango;pango_attr_scale_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_scale_new (double scale_factor);";function pango_attr_scale_new(scale_factor) bind(c)
pango;pango_attr_shape_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_shape_new (const PangoRectangle *ink_rect, const PangoRectangle *logical_rect);";function pango_attr_shape_new(ink_rect, logical_rect) bind(c)
pango;pango_attr_shape_new_with_data;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_shape_new_with_data (const PangoRectangle *ink_rect, const PangoRectangle *logical_rect, gpointer data, PangoAttrDataCopyFunc copy_func, GDestroyNotify destroy_func);";function pango_attr_shape_new_with_data(ink_rect, logical_rect, data, copy_func, destroy_func) bind(c)
pango;pango_attr_show_new;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_show_new (PangoShowFlags flags);";function pango_attr_show_new(flags) bind(c)
pango;pango_attr_size_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_size_new (int size);";function pango_attr_size_new(size) bind(c)
pango;pango_attr_size_new_absolute;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_size_new_absolute (int size);";function pango_attr_size_new_absolute(size) bind(c)
pango;pango_attr_stretch_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_stretch_new (PangoStretch stretch);";function pango_attr_stretch_new(stretch) bind(c)
pango;pango_attr_strikethrough_color_new;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_strikethrough_color_new (guint16 red, guint16 green, guint16 blue);";function pango_attr_strikethrough_color_new(red, green, blue) bind(c)
pango;pango_attr_strikethrough_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_strikethrough_new (gboolean strikethrough);";function pango_attr_strikethrough_new(strikethrough) bind(c)
pango;pango_attr_style_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_style_new (PangoStyle style);";function pango_attr_style_new(style) bind(c)
pango;pango_attr_type_get_name;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"const char * pango_attr_type_get_name (PangoAttrType type) G_GNUC_CONST;";function pango_attr_type_get_name(type) bind(c)
pango;pango_attr_type_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_attr_type_get_type (void) G_GNUC_CONST;";function pango_attr_type_get_type() bind(c)
pango;pango_attr_type_register;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttrType pango_attr_type_register (const gchar *name);";function pango_attr_type_register(name) bind(c)
pango;pango_attr_underline_color_new;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_underline_color_new (guint16 red, guint16 green, guint16 blue);";function pango_attr_underline_color_new(red, green, blue) bind(c)
pango;pango_attr_underline_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_underline_new (PangoUnderline underline);";function pango_attr_underline_new(underline) bind(c)
pango;pango_attr_variant_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_variant_new (PangoVariant variant);";function pango_attr_variant_new(variant) bind(c)
pango;pango_attr_weight_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute *pango_attr_weight_new (PangoWeight weight);";function pango_attr_weight_new(weight) bind(c)
pango;pango_attribute_copy;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoAttribute * pango_attribute_copy (const PangoAttribute *attr);";function pango_attribute_copy(attr) bind(c)
pango;pango_attribute_destroy;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"void pango_attribute_destroy (PangoAttribute *attr);";subroutine pango_attribute_destroy(attr) bind(c)
pango;pango_attribute_equal;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"gboolean pango_attribute_equal (const PangoAttribute *attr1, const PangoAttribute *attr2) G_GNUC_PURE;";function pango_attribute_equal(attr1, attr2) bind(c)
pango;pango_attribute_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"GType pango_attribute_get_type (void) G_GNUC_CONST;";function pango_attribute_get_type() bind(c)
pango;pango_attribute_init;PANGO_AVAILABLE_IN_1_20;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"void pango_attribute_init (PangoAttribute *attr, const PangoAttrClass *klass);";subroutine pango_attribute_init(attr, klass) bind(c)
pango;pango_bidi_type_for_unichar;PANGO_DEPRECATED_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-bidi-type.h;"PangoBidiType pango_bidi_type_for_unichar (gunichar ch) G_GNUC_CONST;";function pango_bidi_type_for_unichar(ch) bind(c)
pango;pango_bidi_type_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_bidi_type_get_type (void) G_GNUC_CONST;";function pango_bidi_type_get_type() bind(c)
pango;pango_break;PANGO_DEPRECATED_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-break.h;"void pango_break (const gchar *text, int length, PangoAnalysis *analysis, PangoLogAttr *attrs, int attrs_len);";subroutine pango_break(text, length, analysis, attrs, attrs_len) bind(c)
pango;pango_cairo_context_get_font_options;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"const cairo_font_options_t *pango_cairo_context_get_font_options (PangoContext *context);";function pango_cairo_context_get_font_options(context) bind(c)
pango;pango_cairo_context_get_resolution;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"double pango_cairo_context_get_resolution (PangoContext *context);";function pango_cairo_context_get_resolution(context) bind(c)
pango;pango_cairo_context_get_shape_renderer;PANGO_AVAILABLE_IN_1_18;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"PangoCairoShapeRendererFunc pango_cairo_context_get_shape_renderer (PangoContext *context, gpointer *data);";function pango_cairo_context_get_shape_renderer(context, data) bind(c)
pango;pango_cairo_context_set_font_options;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_context_set_font_options (PangoContext *context, const cairo_font_options_t *options);";subroutine pango_cairo_context_set_font_options(context, options) bind(c)
pango;pango_cairo_context_set_resolution;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_context_set_resolution (PangoContext *context, double dpi);";subroutine pango_cairo_context_set_resolution(context, dpi) bind(c)
pango;pango_cairo_context_set_shape_renderer;PANGO_AVAILABLE_IN_1_18;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_context_set_shape_renderer (PangoContext *context, PangoCairoShapeRendererFunc func, gpointer data, GDestroyNotify dnotify);";subroutine pango_cairo_context_set_shape_renderer(context, func, data, dnotify) bind(c)
pango;pango_cairo_create_context;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"PangoContext *pango_cairo_create_context (cairo_t *cr);";function pango_cairo_create_context(cr) bind(c)
pango;pango_cairo_create_layout;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"PangoLayout *pango_cairo_create_layout (cairo_t *cr);";function pango_cairo_create_layout(cr) bind(c)
pango;pango_cairo_error_underline_path;PANGO_AVAILABLE_IN_1_14;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_error_underline_path (cairo_t *cr, double x, double y, double width, double height);";subroutine pango_cairo_error_underline_path(cr, x, y, width, height) bind(c)
pango;pango_cairo_font_get_scaled_font;PANGO_AVAILABLE_IN_1_18;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"cairo_scaled_font_t *pango_cairo_font_get_scaled_font (PangoCairoFont *font);";function pango_cairo_font_get_scaled_font(font) bind(c)
pango;pango_cairo_font_get_type;PANGO_AVAILABLE_IN_1_18;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"GType pango_cairo_font_get_type (void) G_GNUC_CONST;";function pango_cairo_font_get_type() bind(c)
pango;pango_cairo_font_map_create_context;PANGO_DEPRECATED_IN_1_22_FOR(pango_font_map_create_context);pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"PangoContext *pango_cairo_font_map_create_context (PangoCairoFontMap *fontmap);";function pango_cairo_font_map_create_context(fontmap) bind(c)
pango;pango_cairo_font_map_get_default;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"PangoFontMap *pango_cairo_font_map_get_default (void);";function pango_cairo_font_map_get_default() bind(c)
pango;pango_cairo_font_map_get_font_type;PANGO_AVAILABLE_IN_1_18;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"cairo_font_type_t pango_cairo_font_map_get_font_type (PangoCairoFontMap *fontmap);";function pango_cairo_font_map_get_font_type(fontmap) bind(c)
pango;pango_cairo_font_map_get_resolution;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"double pango_cairo_font_map_get_resolution (PangoCairoFontMap *fontmap);";function pango_cairo_font_map_get_resolution(fontmap) bind(c)
pango;pango_cairo_font_map_get_type;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"GType pango_cairo_font_map_get_type (void) G_GNUC_CONST;";function pango_cairo_font_map_get_type() bind(c)
pango;pango_cairo_font_map_new;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"PangoFontMap *pango_cairo_font_map_new (void);";function pango_cairo_font_map_new() bind(c)
pango;pango_cairo_font_map_new_for_font_type;PANGO_AVAILABLE_IN_1_18;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"PangoFontMap *pango_cairo_font_map_new_for_font_type (cairo_font_type_t fonttype);";function pango_cairo_font_map_new_for_font_type(fonttype) bind(c)
pango;pango_cairo_font_map_set_default;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_font_map_set_default (PangoCairoFontMap *fontmap);";subroutine pango_cairo_font_map_set_default(fontmap) bind(c)
pango;pango_cairo_font_map_set_resolution;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_font_map_set_resolution (PangoCairoFontMap *fontmap, double dpi);";subroutine pango_cairo_font_map_set_resolution(fontmap, dpi) bind(c)
pango;pango_cairo_glyph_string_path;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_glyph_string_path (cairo_t *cr, PangoFont *font, PangoGlyphString *glyphs);";subroutine pango_cairo_glyph_string_path(cr, font, glyphs) bind(c)
pango;pango_cairo_layout_line_path;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_layout_line_path (cairo_t *cr, PangoLayoutLine *line);";subroutine pango_cairo_layout_line_path(cr, line) bind(c)
pango;pango_cairo_layout_path;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_layout_path (cairo_t *cr, PangoLayout *layout);";subroutine pango_cairo_layout_path(cr, layout) bind(c)
pango;pango_cairo_show_error_underline;PANGO_AVAILABLE_IN_1_14;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_show_error_underline (cairo_t *cr, double x, double y, double width, double height);";subroutine pango_cairo_show_error_underline(cr, x, y, width, height) bind(c)
pango;pango_cairo_show_glyph_item;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_show_glyph_item (cairo_t *cr, const char *text, PangoGlyphItem *glyph_item);";subroutine pango_cairo_show_glyph_item(cr, text, glyph_item) bind(c)
pango;pango_cairo_show_glyph_string;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_show_glyph_string (cairo_t *cr, PangoFont *font, PangoGlyphString *glyphs);";subroutine pango_cairo_show_glyph_string(cr, font, glyphs) bind(c)
pango;pango_cairo_show_layout;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_show_layout (cairo_t *cr, PangoLayout *layout);";subroutine pango_cairo_show_layout(cr, layout) bind(c)
pango;pango_cairo_show_layout_line;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_show_layout_line (cairo_t *cr, PangoLayoutLine *line);";subroutine pango_cairo_show_layout_line(cr, line) bind(c)
pango;pango_cairo_update_context;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_update_context (cairo_t *cr, PangoContext *context);";subroutine pango_cairo_update_context(cr, context) bind(c)
pango;pango_cairo_update_layout;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pangocairo.h;"void pango_cairo_update_layout (cairo_t *cr, PangoLayout *layout);";subroutine pango_cairo_update_layout(cr, layout) bind(c)
pango;pango_color_copy;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"PangoColor *pango_color_copy (const PangoColor *src);";function pango_color_copy(src) bind(c)
pango;pango_color_free;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"void pango_color_free (PangoColor *color);";subroutine pango_color_free(color) bind(c)
pango;pango_color_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"GType pango_color_get_type (void) G_GNUC_CONST;";function pango_color_get_type() bind(c)
pango;pango_color_parse;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"gboolean pango_color_parse (PangoColor *color, const char *spec);";function pango_color_parse(color, spec) bind(c)
pango;pango_color_parse_with_alpha;PANGO_AVAILABLE_IN_1_46;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"gboolean pango_color_parse_with_alpha (PangoColor *color, guint16 *alpha, const char *spec);";function pango_color_parse_with_alpha(color, alpha, spec) bind(c)
pango;pango_color_to_string;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"gchar *pango_color_to_string(const PangoColor *color);";function pango_color_to_string(color) bind(c)
pango;pango_context_changed;PANGO_AVAILABLE_IN_1_32;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"void pango_context_changed (PangoContext *context);";subroutine pango_context_changed(context) bind(c)
pango;pango_context_get_base_dir;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"PangoDirection pango_context_get_base_dir (PangoContext *context);";function pango_context_get_base_dir(context) bind(c)
pango;pango_context_get_base_gravity;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"PangoGravity pango_context_get_base_gravity (PangoContext *context);";function pango_context_get_base_gravity(context) bind(c)
pango;pango_context_get_font_description;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"PangoFontDescription * pango_context_get_font_description (PangoContext *context);";function pango_context_get_font_description(context) bind(c)
pango;pango_context_get_font_map;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"PangoFontMap *pango_context_get_font_map (PangoContext *context);";function pango_context_get_font_map(context) bind(c)
pango;pango_context_get_gravity;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"PangoGravity pango_context_get_gravity (PangoContext *context);";function pango_context_get_gravity(context) bind(c)
pango;pango_context_get_gravity_hint;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"PangoGravityHint pango_context_get_gravity_hint (PangoContext *context);";function pango_context_get_gravity_hint(context) bind(c)
pango;pango_context_get_language;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"PangoLanguage *pango_context_get_language (PangoContext *context);";function pango_context_get_language(context) bind(c)
pango;pango_context_get_matrix;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"const PangoMatrix * pango_context_get_matrix (PangoContext *context);";function pango_context_get_matrix(context) bind(c)
pango;pango_context_get_metrics;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"PangoFontMetrics *pango_context_get_metrics (PangoContext *context, const PangoFontDescription *desc, PangoLanguage *language);";function pango_context_get_metrics(context, desc, language) bind(c)
pango;pango_context_get_round_glyph_positions;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"gboolean pango_context_get_round_glyph_positions (PangoContext *context);";function pango_context_get_round_glyph_positions(context) bind(c)
pango;pango_context_get_serial;PANGO_AVAILABLE_IN_1_32;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"guint pango_context_get_serial (PangoContext *context);";function pango_context_get_serial(context) bind(c)
pango;pango_context_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"GType pango_context_get_type (void) G_GNUC_CONST;";function pango_context_get_type() bind(c)
pango;pango_context_list_families;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"void pango_context_list_families (PangoContext *context, PangoFontFamily ***families, int *n_families);";subroutine pango_context_list_families(context, families, n_families) bind(c)
pango;pango_context_load_font;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"PangoFont * pango_context_load_font (PangoContext *context, const PangoFontDescription *desc);";function pango_context_load_font(context, desc) bind(c)
pango;pango_context_load_fontset;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"PangoFontset *pango_context_load_fontset (PangoContext *context, const PangoFontDescription *desc, PangoLanguage *language);";function pango_context_load_fontset(context, desc, language) bind(c)
pango;pango_context_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"PangoContext *pango_context_new (void);";function pango_context_new() bind(c)
pango;pango_context_set_base_dir;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"void pango_context_set_base_dir (PangoContext *context, PangoDirection direction);";subroutine pango_context_set_base_dir(context, direction) bind(c)
pango;pango_context_set_base_gravity;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"void pango_context_set_base_gravity (PangoContext *context, PangoGravity gravity);";subroutine pango_context_set_base_gravity(context, gravity) bind(c)
pango;pango_context_set_font_description;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"void pango_context_set_font_description (PangoContext *context, const PangoFontDescription *desc);";subroutine pango_context_set_font_description(context, desc) bind(c)
pango;pango_context_set_font_map;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"void pango_context_set_font_map (PangoContext *context, PangoFontMap *font_map);";subroutine pango_context_set_font_map(context, font_map) bind(c)
pango;pango_context_set_gravity_hint;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"void pango_context_set_gravity_hint (PangoContext *context, PangoGravityHint hint);";subroutine pango_context_set_gravity_hint(context, hint) bind(c)
pango;pango_context_set_language;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"void pango_context_set_language (PangoContext *context, PangoLanguage *language);";subroutine pango_context_set_language(context, language) bind(c)
pango;pango_context_set_matrix;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"void pango_context_set_matrix (PangoContext *context, const PangoMatrix *matrix);";subroutine pango_context_set_matrix(context, matrix) bind(c)
pango;pango_context_set_round_glyph_positions;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"void pango_context_set_round_glyph_positions (PangoContext *context, gboolean round_positions);";subroutine pango_context_set_round_glyph_positions(context, round_positions) bind(c)
pango;pango_coverage_copy;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-coverage.h;"PangoCoverage * pango_coverage_copy (PangoCoverage *coverage);";function pango_coverage_copy(coverage) bind(c)
pango;pango_coverage_from_bytes;PANGO_DEPRECATED_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-coverage.h;"PangoCoverage *pango_coverage_from_bytes (guchar *bytes, int n_bytes);";function pango_coverage_from_bytes(bytes, n_bytes) bind(c)
pango;pango_coverage_get;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-coverage.h;"PangoCoverageLevel pango_coverage_get (PangoCoverage *coverage, int index_);";function pango_coverage_get(coverage, index_) bind(c)
pango;pango_coverage_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-coverage.h;"GType pango_coverage_get_type (void) G_GNUC_CONST;";function pango_coverage_get_type() bind(c)
pango;pango_coverage_level_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_coverage_level_get_type (void) G_GNUC_CONST;";function pango_coverage_level_get_type() bind(c)
pango;pango_coverage_max;PANGO_DEPRECATED_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-coverage.h;"void pango_coverage_max (PangoCoverage *coverage, PangoCoverage *other);";subroutine pango_coverage_max(coverage, other) bind(c)
pango;pango_coverage_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-coverage.h;"PangoCoverage * pango_coverage_new (void);";function pango_coverage_new() bind(c)
pango;pango_coverage_ref;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-coverage.h;"PangoCoverage * pango_coverage_ref (PangoCoverage *coverage);";function pango_coverage_ref(coverage) bind(c)
pango;pango_coverage_set;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-coverage.h;"void pango_coverage_set (PangoCoverage *coverage, int index_, PangoCoverageLevel level);";subroutine pango_coverage_set(coverage, index_, level) bind(c)
pango;pango_coverage_to_bytes;PANGO_DEPRECATED_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-coverage.h;"void pango_coverage_to_bytes (PangoCoverage *coverage, guchar **bytes, int *n_bytes);";subroutine pango_coverage_to_bytes(coverage, bytes, n_bytes) bind(c)
pango;pango_coverage_unref;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-coverage.h;"void pango_coverage_unref (PangoCoverage *coverage);";subroutine pango_coverage_unref(coverage) bind(c)
pango;pango_default_break;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-break.h;"void pango_default_break (const gchar *text, int length, PangoAnalysis *analysis, PangoLogAttr *attrs, int attrs_len);";subroutine pango_default_break(text, length, analysis, attrs, attrs_len) bind(c)
pango;pango_direction_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_direction_get_type (void) G_GNUC_CONST;";function pango_direction_get_type() bind(c)
pango;pango_ellipsize_mode_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_ellipsize_mode_get_type (void) G_GNUC_CONST;";function pango_ellipsize_mode_get_type() bind(c)
pango;pango_engine_get_type;PANGO_DEPRECATED_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-engine.h;"GType pango_engine_get_type (void) G_GNUC_CONST;";function pango_engine_get_type() bind(c)
pango;pango_engine_lang_get_type;PANGO_DEPRECATED_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-engine.h;"GType pango_engine_lang_get_type (void) G_GNUC_CONST;";function pango_engine_lang_get_type() bind(c)
pango;pango_engine_shape_get_type;PANGO_DEPRECATED_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-engine.h;"GType pango_engine_shape_get_type (void) G_GNUC_CONST;";function pango_engine_shape_get_type() bind(c)
pango;pango_extents_to_pixels;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-types.h;"void pango_extents_to_pixels (PangoRectangle *inclusive, PangoRectangle *nearest);";subroutine pango_extents_to_pixels(inclusive, nearest) bind(c)
pango;pango_fc_decoder_get_charset;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-decoder.h;"FcCharSet *pango_fc_decoder_get_charset (PangoFcDecoder *decoder, PangoFcFont *fcfont);";function pango_fc_decoder_get_charset(decoder, fcfont) bind(c)
pango;pango_fc_decoder_get_glyph;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-decoder.h;"PangoGlyph pango_fc_decoder_get_glyph (PangoFcDecoder *decoder, PangoFcFont *fcfont, guint32 wc);";function pango_fc_decoder_get_glyph(decoder, fcfont, wc) bind(c)
pango;pango_fc_decoder_get_type;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-decoder.h;"GType pango_fc_decoder_get_type (void) G_GNUC_CONST;";function pango_fc_decoder_get_type() bind(c)
pango;pango_fc_font_description_from_pattern;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"PangoFontDescription *pango_fc_font_description_from_pattern (FcPattern *pattern, gboolean include_size);";function pango_fc_font_description_from_pattern(pattern, include_size) bind(c)
pango;pango_fc_font_get_glyph;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-font.h;"guint pango_fc_font_get_glyph (PangoFcFont *font, gunichar wc);";function pango_fc_font_get_glyph(font, wc) bind(c)
pango;pango_fc_font_get_languages;;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-font.h;"PangoLanguage ** pango_fc_font_get_languages (PangoFcFont *font);";function pango_fc_font_get_languages(font) bind(c)
pango;pango_fc_font_get_pattern;PANGO_AVAILABLE_IN_1_48;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-font.h;"FcPattern *pango_fc_font_get_pattern (PangoFcFont *font);";function pango_fc_font_get_pattern(font) bind(c)
pango;pango_fc_font_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-font.h;"GType pango_fc_font_get_type (void) G_GNUC_CONST;";function pango_fc_font_get_type() bind(c)
pango;pango_fc_font_get_unknown_glyph;PANGO_DEPRECATED_FOR(PANGO_GET_UNKNOWN_GLYPH);pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-font.h;"PangoGlyph pango_fc_font_get_unknown_glyph (PangoFcFont *font, gunichar wc);";function pango_fc_font_get_unknown_glyph(font, wc) bind(c)
pango;pango_fc_font_has_char;PANGO_DEPRECATED_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-font.h;"gboolean pango_fc_font_has_char (PangoFcFont *font, gunichar wc);";function pango_fc_font_has_char(font, wc) bind(c)
pango;pango_fc_font_kern_glyphs;PANGO_DEPRECATED_IN_1_32;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-font.h;"void pango_fc_font_kern_glyphs (PangoFcFont *font, PangoGlyphString *glyphs);";subroutine pango_fc_font_kern_glyphs(font, glyphs) bind(c)
pango;pango_fc_font_lock_face;PANGO_DEPRECATED_IN_1_44_FOR(pango_font_get_hb_font);pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-font.h;"FT_Face pango_fc_font_lock_face (PangoFcFont *font);";function pango_fc_font_lock_face(font) bind(c)
pango;pango_fc_font_map_add_decoder_find_func;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"void pango_fc_font_map_add_decoder_find_func (PangoFcFontMap *fcfontmap, PangoFcDecoderFindFunc findfunc, gpointer user_data, GDestroyNotify dnotify);";subroutine pango_fc_font_map_add_decoder_find_func(fcfontmap, findfunc, user_data, dnotify) bind(c)
pango;pango_fc_font_map_cache_clear;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"void pango_fc_font_map_cache_clear (PangoFcFontMap *fcfontmap);";subroutine pango_fc_font_map_cache_clear(fcfontmap) bind(c)
pango;pango_fc_font_map_config_changed;;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"void pango_fc_font_map_config_changed (PangoFcFontMap *fcfontmap);";subroutine pango_fc_font_map_config_changed(fcfontmap) bind(c)
pango;pango_fc_font_map_create_context;PANGO_DEPRECATED_IN_1_22_FOR(pango_font_map_create_context);pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"PangoContext * pango_fc_font_map_create_context (PangoFcFontMap *fcfontmap);";function pango_fc_font_map_create_context(fcfontmap) bind(c)
pango;pango_fc_font_map_find_decoder;PANGO_AVAILABLE_IN_1_26;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"PangoFcDecoder *pango_fc_font_map_find_decoder (PangoFcFontMap *fcfontmap, FcPattern *pattern);";function pango_fc_font_map_find_decoder(fcfontmap, pattern) bind(c)
pango;pango_fc_font_map_get_config;;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"FcConfig * pango_fc_font_map_get_config (PangoFcFontMap *fcfontmap);";function pango_fc_font_map_get_config(fcfontmap) bind(c)
pango;pango_fc_font_map_get_hb_face;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"hb_face_t * pango_fc_font_map_get_hb_face (PangoFcFontMap *fcfontmap, PangoFcFont *fcfont);";function pango_fc_font_map_get_hb_face(fcfontmap, fcfont) bind(c)
pango;pango_fc_font_map_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"GType pango_fc_font_map_get_type (void) G_GNUC_CONST;";function pango_fc_font_map_get_type() bind(c)
pango;pango_fc_font_map_set_config;;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"void pango_fc_font_map_set_config (PangoFcFontMap *fcfontmap, FcConfig *fcconfig);";subroutine pango_fc_font_map_set_config(fcfontmap, fcconfig) bind(c)
pango;pango_fc_font_map_set_default_substitute;PANGO_AVAILABLE_IN_1_48;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"void pango_fc_font_map_set_default_substitute (PangoFcFontMap *fontmap, PangoFcSubstituteFunc func, gpointer data, GDestroyNotify notify);";subroutine pango_fc_font_map_set_default_substitute(fontmap, func, data, notify) bind(c)
pango;pango_fc_font_map_shutdown;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"void pango_fc_font_map_shutdown (PangoFcFontMap *fcfontmap);";subroutine pango_fc_font_map_shutdown(fcfontmap) bind(c)
pango;pango_fc_font_map_substitute_changed;PANGO_AVAILABLE_IN_1_48;pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-fontmap.h;"void pango_fc_font_map_substitute_changed (PangoFcFontMap *fontmap);";subroutine pango_fc_font_map_substitute_changed(fontmap) bind(c)
pango;pango_fc_font_unlock_face;PANGO_DEPRECATED_IN_1_44_FOR(pango_font_get_hb_font);pango-auto.f90;/usr/include/pango-1.0/pango/pangofc-font.h;"void pango_fc_font_unlock_face (PangoFcFont *font);";subroutine pango_fc_font_unlock_face(font) bind(c)
pango;pango_find_base_dir;PANGO_DEPRECATED_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-bidi-type.h;"PangoDirection pango_find_base_dir (const gchar *text, gint length);";function pango_find_base_dir(text, length) bind(c)
pango;pango_find_map;PANGO_DEPRECATED_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-modules.h;"PangoMap * pango_find_map (PangoLanguage *language, guint engine_type_id, guint render_type_id);";function pango_find_map(language, engine_type_id, render_type_id) bind(c)
pango;pango_find_paragraph_boundary;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-break.h;"void pango_find_paragraph_boundary (const gchar *text, gint length, gint *paragraph_delimiter_index, gint *next_paragraph_start);";subroutine pango_find_paragraph_boundary(text, length, paragraph_delimiter_index, next_paragraph_start) bind(c)
pango;pango_font_describe;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontDescription *pango_font_describe (PangoFont *font);";function pango_font_describe(font) bind(c)
pango;pango_font_describe_with_absolute_size;PANGO_AVAILABLE_IN_1_14;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontDescription *pango_font_describe_with_absolute_size (PangoFont *font);";function pango_font_describe_with_absolute_size(font) bind(c)
pango;pango_font_description_better_match;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"gboolean pango_font_description_better_match (const PangoFontDescription *desc, const PangoFontDescription *old_match, const PangoFontDescription *new_match) G_GNUC_PURE;";function pango_font_description_better_match(desc, old_match, new_match) bind(c)
pango;pango_font_description_copy;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontDescription *pango_font_description_copy (const PangoFontDescription *desc);";function pango_font_description_copy(desc) bind(c)
pango;pango_font_description_copy_static;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontDescription *pango_font_description_copy_static (const PangoFontDescription *desc);";function pango_font_description_copy_static(desc) bind(c)
pango;pango_font_description_equal;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"gboolean pango_font_description_equal (const PangoFontDescription *desc1, const PangoFontDescription *desc2) G_GNUC_PURE;";function pango_font_description_equal(desc1, desc2) bind(c)
pango;pango_font_description_free;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_free (PangoFontDescription *desc);";subroutine pango_font_description_free(desc) bind(c)
pango;pango_font_description_from_string;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontDescription *pango_font_description_from_string (const char *str);";function pango_font_description_from_string(str) bind(c)
pango;pango_font_description_get_family;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"const char *pango_font_description_get_family (const PangoFontDescription *desc) G_GNUC_PURE;";function pango_font_description_get_family(desc) bind(c)
pango;pango_font_description_get_gravity;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoGravity pango_font_description_get_gravity (const PangoFontDescription *desc) G_GNUC_PURE;";function pango_font_description_get_gravity(desc) bind(c)
pango;pango_font_description_get_set_fields;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontMask pango_font_description_get_set_fields (const PangoFontDescription *desc) G_GNUC_PURE;";function pango_font_description_get_set_fields(desc) bind(c)
pango;pango_font_description_get_size;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"gint pango_font_description_get_size (const PangoFontDescription *desc) G_GNUC_PURE;";function pango_font_description_get_size(desc) bind(c)
pango;pango_font_description_get_size_is_absolute;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"gboolean pango_font_description_get_size_is_absolute (const PangoFontDescription *desc) G_GNUC_PURE;";function pango_font_description_get_size_is_absolute(desc) bind(c)
pango;pango_font_description_get_stretch;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoStretch pango_font_description_get_stretch (const PangoFontDescription *desc) G_GNUC_PURE;";function pango_font_description_get_stretch(desc) bind(c)
pango;pango_font_description_get_style;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoStyle pango_font_description_get_style (const PangoFontDescription *desc) G_GNUC_PURE;";function pango_font_description_get_style(desc) bind(c)
pango;pango_font_description_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"GType pango_font_description_get_type (void) G_GNUC_CONST;";function pango_font_description_get_type() bind(c)
pango;pango_font_description_get_variant;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoVariant pango_font_description_get_variant (const PangoFontDescription *desc) G_GNUC_PURE;";function pango_font_description_get_variant(desc) bind(c)
pango;pango_font_description_get_variations;PANGO_AVAILABLE_IN_1_42;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"const char *pango_font_description_get_variations (const PangoFontDescription *desc) G_GNUC_PURE;";function pango_font_description_get_variations(desc) bind(c)
pango;pango_font_description_get_weight;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoWeight pango_font_description_get_weight (const PangoFontDescription *desc) G_GNUC_PURE;";function pango_font_description_get_weight(desc) bind(c)
pango;pango_font_description_hash;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"guint pango_font_description_hash (const PangoFontDescription *desc) G_GNUC_PURE;";function pango_font_description_hash(desc) bind(c)
pango;pango_font_description_merge;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_merge (PangoFontDescription *desc, const PangoFontDescription *desc_to_merge, gboolean replace_existing);";subroutine pango_font_description_merge(desc, desc_to_merge, replace_existing) bind(c)
pango;pango_font_description_merge_static;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_merge_static (PangoFontDescription *desc, const PangoFontDescription *desc_to_merge, gboolean replace_existing);";subroutine pango_font_description_merge_static(desc, desc_to_merge, replace_existing) bind(c)
pango;pango_font_description_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontDescription *pango_font_description_new (void);";function pango_font_description_new() bind(c)
pango;pango_font_description_set_absolute_size;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_set_absolute_size (PangoFontDescription *desc, double size);";subroutine pango_font_description_set_absolute_size(desc, size) bind(c)
pango;pango_font_description_set_family;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_set_family (PangoFontDescription *desc, const char *family);";subroutine pango_font_description_set_family(desc, family) bind(c)
pango;pango_font_description_set_family_static;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_set_family_static (PangoFontDescription *desc, const char *family);";subroutine pango_font_description_set_family_static(desc, family) bind(c)
pango;pango_font_description_set_gravity;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_set_gravity (PangoFontDescription *desc, PangoGravity gravity);";subroutine pango_font_description_set_gravity(desc, gravity) bind(c)
pango;pango_font_description_set_size;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_set_size (PangoFontDescription *desc, gint size);";subroutine pango_font_description_set_size(desc, size) bind(c)
pango;pango_font_description_set_stretch;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_set_stretch (PangoFontDescription *desc, PangoStretch stretch);";subroutine pango_font_description_set_stretch(desc, stretch) bind(c)
pango;pango_font_description_set_style;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_set_style (PangoFontDescription *desc, PangoStyle style);";subroutine pango_font_description_set_style(desc, style) bind(c)
pango;pango_font_description_set_variant;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_set_variant (PangoFontDescription *desc, PangoVariant variant);";subroutine pango_font_description_set_variant(desc, variant) bind(c)
pango;pango_font_description_set_variations;PANGO_AVAILABLE_IN_1_42;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_set_variations (PangoFontDescription *desc, const char *variations);";subroutine pango_font_description_set_variations(desc, variations) bind(c)
pango;pango_font_description_set_variations_static;PANGO_AVAILABLE_IN_1_42;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_set_variations_static (PangoFontDescription *desc, const char *variations);";subroutine pango_font_description_set_variations_static(desc, variations) bind(c)
pango;pango_font_description_set_weight;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_set_weight (PangoFontDescription *desc, PangoWeight weight);";subroutine pango_font_description_set_weight(desc, weight) bind(c)
pango;pango_font_description_to_filename;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"char * pango_font_description_to_filename (const PangoFontDescription *desc);";function pango_font_description_to_filename(desc) bind(c)
pango;pango_font_description_to_string;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"char * pango_font_description_to_string (const PangoFontDescription *desc);";function pango_font_description_to_string(desc) bind(c)
pango;pango_font_description_unset_fields;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_description_unset_fields (PangoFontDescription *desc, PangoFontMask to_unset);";subroutine pango_font_description_unset_fields(desc, to_unset) bind(c)
pango;pango_font_descriptions_free;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_descriptions_free (PangoFontDescription **descs, int n_descs);";subroutine pango_font_descriptions_free(descs, n_descs) bind(c)
pango;pango_font_face_describe;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontDescription *pango_font_face_describe (PangoFontFace *face);";function pango_font_face_describe(face) bind(c)
pango;pango_font_face_get_face_name;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"const char *pango_font_face_get_face_name (PangoFontFace *face) G_GNUC_PURE;";function pango_font_face_get_face_name(face) bind(c)
pango;pango_font_face_get_family;PANGO_AVAILABLE_IN_1_46;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontFamily * pango_font_face_get_family (PangoFontFace *face);";function pango_font_face_get_family(face) bind(c)
pango;pango_font_face_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"GType pango_font_face_get_type (void) G_GNUC_CONST;";function pango_font_face_get_type() bind(c)
pango;pango_font_face_is_synthesized;PANGO_AVAILABLE_IN_1_18;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"gboolean pango_font_face_is_synthesized (PangoFontFace *face) G_GNUC_PURE;";function pango_font_face_is_synthesized(face) bind(c)
pango;pango_font_face_list_sizes;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_face_list_sizes (PangoFontFace *face, int **sizes, int *n_sizes);";subroutine pango_font_face_list_sizes(face, sizes, n_sizes) bind(c)
pango;pango_font_family_get_face;PANGO_AVAILABLE_IN_1_46;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontFace *pango_font_family_get_face (PangoFontFamily *family, const char *name);";function pango_font_family_get_face(family, name) bind(c)
pango;pango_font_family_get_name;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"const char *pango_font_family_get_name (PangoFontFamily *family) G_GNUC_PURE;";function pango_font_family_get_name(family) bind(c)
pango;pango_font_family_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"GType pango_font_family_get_type (void) G_GNUC_CONST;";function pango_font_family_get_type() bind(c)
pango;pango_font_family_is_monospace;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"gboolean pango_font_family_is_monospace (PangoFontFamily *family) G_GNUC_PURE;";function pango_font_family_is_monospace(family) bind(c)
pango;pango_font_family_is_variable;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"gboolean pango_font_family_is_variable (PangoFontFamily *family) G_GNUC_PURE;";function pango_font_family_is_variable(family) bind(c)
pango;pango_font_family_list_faces;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_family_list_faces (PangoFontFamily *family, PangoFontFace ***faces, int *n_faces);";subroutine pango_font_family_list_faces(family, faces, n_faces) bind(c)
pango;pango_font_find_shaper;PANGO_DEPRECATED_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoEngineShape * pango_font_find_shaper (PangoFont *font, PangoLanguage *language, guint32 ch);";function pango_font_find_shaper(font, language, ch) bind(c)
pango;pango_font_get_coverage;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoCoverage * pango_font_get_coverage (PangoFont *font, PangoLanguage *language);";function pango_font_get_coverage(font, language) bind(c)
pango;pango_font_get_face;PANGO_AVAILABLE_IN_1_46;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontFace * pango_font_get_face (PangoFont *font);";function pango_font_get_face(font) bind(c)
pango;pango_font_get_features;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_get_features (PangoFont *font, hb_feature_t *features, guint len, guint *num_features);";subroutine pango_font_get_features(font, features, len, num_features) bind(c)
pango;pango_font_get_font_map;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontMap *pango_font_get_font_map (PangoFont *font);";function pango_font_get_font_map(font) bind(c)
pango;pango_font_get_glyph_extents;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_get_glyph_extents (PangoFont *font, PangoGlyph glyph, PangoRectangle *ink_rect, PangoRectangle *logical_rect);";subroutine pango_font_get_glyph_extents(font, glyph, ink_rect, logical_rect) bind(c)
pango;pango_font_get_hb_font;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"hb_font_t * pango_font_get_hb_font (PangoFont *font);";function pango_font_get_hb_font(font) bind(c)
pango;pango_font_get_metrics;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontMetrics * pango_font_get_metrics (PangoFont *font, PangoLanguage *language);";function pango_font_get_metrics(font, language) bind(c)
pango;pango_font_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"GType pango_font_get_type (void) G_GNUC_CONST;";function pango_font_get_type() bind(c)
pango;pango_font_has_char;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"gboolean pango_font_has_char (PangoFont *font, gunichar wc);";function pango_font_has_char(font, wc) bind(c)
pango;pango_font_map_changed;PANGO_AVAILABLE_IN_1_34;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontmap.h;"void pango_font_map_changed (PangoFontMap *fontmap);";subroutine pango_font_map_changed(fontmap) bind(c)
pango;pango_font_map_create_context;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontmap.h;"PangoContext * pango_font_map_create_context (PangoFontMap *fontmap);";function pango_font_map_create_context(fontmap) bind(c)
pango;pango_font_map_get_family;PANGO_AVAILABLE_IN_1_46;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontmap.h;"PangoFontFamily *pango_font_map_get_family (PangoFontMap *fontmap, const char *name);";function pango_font_map_get_family(fontmap, name) bind(c)
pango;pango_font_map_get_serial;PANGO_AVAILABLE_IN_1_32;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontmap.h;"guint pango_font_map_get_serial (PangoFontMap *fontmap);";function pango_font_map_get_serial(fontmap) bind(c)
pango;pango_font_map_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontmap.h;"GType pango_font_map_get_type (void) G_GNUC_CONST;";function pango_font_map_get_type() bind(c)
pango;pango_font_map_list_families;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontmap.h;"void pango_font_map_list_families (PangoFontMap *fontmap, PangoFontFamily ***families, int *n_families);";subroutine pango_font_map_list_families(fontmap, families, n_families) bind(c)
pango;pango_font_map_load_font;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontmap.h;"PangoFont * pango_font_map_load_font (PangoFontMap *fontmap, PangoContext *context, const PangoFontDescription *desc);";function pango_font_map_load_font(fontmap, context, desc) bind(c)
pango;pango_font_map_load_fontset;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontmap.h;"PangoFontset *pango_font_map_load_fontset (PangoFontMap *fontmap, PangoContext *context, const PangoFontDescription *desc, PangoLanguage *language);";function pango_font_map_load_fontset(fontmap, context, desc, language) bind(c)
pango;pango_font_mask_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_font_mask_get_type (void) G_GNUC_CONST;";function pango_font_mask_get_type() bind(c)
pango;pango_font_metrics_get_approximate_char_width;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"int pango_font_metrics_get_approximate_char_width (PangoFontMetrics *metrics) G_GNUC_PURE;";function pango_font_metrics_get_approximate_char_width(metrics) bind(c)
pango;pango_font_metrics_get_approximate_digit_width;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"int pango_font_metrics_get_approximate_digit_width (PangoFontMetrics *metrics) G_GNUC_PURE;";function pango_font_metrics_get_approximate_digit_width(metrics) bind(c)
pango;pango_font_metrics_get_ascent;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"int pango_font_metrics_get_ascent (PangoFontMetrics *metrics) G_GNUC_PURE;";function pango_font_metrics_get_ascent(metrics) bind(c)
pango;pango_font_metrics_get_descent;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"int pango_font_metrics_get_descent (PangoFontMetrics *metrics) G_GNUC_PURE;";function pango_font_metrics_get_descent(metrics) bind(c)
pango;pango_font_metrics_get_height;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"int pango_font_metrics_get_height (PangoFontMetrics *metrics) G_GNUC_PURE;";function pango_font_metrics_get_height(metrics) bind(c)
pango;pango_font_metrics_get_strikethrough_position;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"int pango_font_metrics_get_strikethrough_position (PangoFontMetrics *metrics) G_GNUC_PURE;";function pango_font_metrics_get_strikethrough_position(metrics) bind(c)
pango;pango_font_metrics_get_strikethrough_thickness;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"int pango_font_metrics_get_strikethrough_thickness (PangoFontMetrics *metrics) G_GNUC_PURE;";function pango_font_metrics_get_strikethrough_thickness(metrics) bind(c)
pango;pango_font_metrics_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"GType pango_font_metrics_get_type (void) G_GNUC_CONST;";function pango_font_metrics_get_type() bind(c)
pango;pango_font_metrics_get_underline_position;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"int pango_font_metrics_get_underline_position (PangoFontMetrics *metrics) G_GNUC_PURE;";function pango_font_metrics_get_underline_position(metrics) bind(c)
pango;pango_font_metrics_get_underline_thickness;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"int pango_font_metrics_get_underline_thickness (PangoFontMetrics *metrics) G_GNUC_PURE;";function pango_font_metrics_get_underline_thickness(metrics) bind(c)
pango;pango_font_metrics_ref;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"PangoFontMetrics *pango_font_metrics_ref (PangoFontMetrics *metrics);";function pango_font_metrics_ref(metrics) bind(c)
pango;pango_font_metrics_unref;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-font.h;"void pango_font_metrics_unref (PangoFontMetrics *metrics);";subroutine pango_font_metrics_unref(metrics) bind(c)
pango;pango_fontset_foreach;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontset.h;"void pango_fontset_foreach (PangoFontset *fontset, PangoFontsetForeachFunc func, gpointer data);";subroutine pango_fontset_foreach(fontset, func, data) bind(c)
pango;pango_fontset_get_font;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontset.h;"PangoFont * pango_fontset_get_font (PangoFontset *fontset, guint wc);";function pango_fontset_get_font(fontset, wc) bind(c)
pango;pango_fontset_get_metrics;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontset.h;"PangoFontMetrics *pango_fontset_get_metrics (PangoFontset *fontset);";function pango_fontset_get_metrics(fontset) bind(c)
pango;pango_fontset_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontset.h;"GType pango_fontset_get_type (void) G_GNUC_CONST;";function pango_fontset_get_type() bind(c)
pango;pango_fontset_simple_append;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontset.h;"void pango_fontset_simple_append (PangoFontsetSimple *fontset, PangoFont *font);";subroutine pango_fontset_simple_append(fontset, font) bind(c)
pango;pango_fontset_simple_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontset.h;"GType pango_fontset_simple_get_type (void) G_GNUC_CONST;";function pango_fontset_simple_get_type() bind(c)
pango;pango_fontset_simple_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontset.h;"PangoFontsetSimple * pango_fontset_simple_new (PangoLanguage *language);";function pango_fontset_simple_new(language) bind(c)
pango;pango_fontset_simple_size;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-fontset.h;"int pango_fontset_simple_size (PangoFontsetSimple *fontset);";function pango_fontset_simple_size(fontset) bind(c)
pango;pango_ft2_font_get_coverage;PANGO_DEPRECATED_FOR(pango_font_get_coverage);pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"PangoCoverage *pango_ft2_font_get_coverage (PangoFont *font, PangoLanguage *language);";function pango_ft2_font_get_coverage(font, language) bind(c)
pango;pango_ft2_font_get_face;PANGO_DEPRECATED_FOR(pango_fc_font_lock_face);pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"FT_Face pango_ft2_font_get_face (PangoFont *font);";function pango_ft2_font_get_face(font) bind(c)
pango;pango_ft2_font_get_kerning;PANGO_DEPRECATED_FOR(pango_fc_font_kern_glyphs);pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"int pango_ft2_font_get_kerning (PangoFont *font, PangoGlyph left, PangoGlyph right);";function pango_ft2_font_get_kerning(font, left, right) bind(c)
pango;pango_ft2_font_map_create_context;PANGO_DEPRECATED_IN_1_22_FOR(pango_font_map_create_context);pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"PangoContext *pango_ft2_font_map_create_context (PangoFT2FontMap *fontmap);";function pango_ft2_font_map_create_context(fontmap) bind(c)
pango;pango_ft2_font_map_for_display;PANGO_DEPRECATED_FOR(pango_ft2_font_map_new);pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"PangoFontMap *pango_ft2_font_map_for_display (void);";function pango_ft2_font_map_for_display() bind(c)
pango;pango_ft2_font_map_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"GType pango_ft2_font_map_get_type (void) G_GNUC_CONST;";function pango_ft2_font_map_get_type() bind(c)
pango;pango_ft2_font_map_new;PANGO_AVAILABLE_IN_1_2;pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"PangoFontMap *pango_ft2_font_map_new (void);";function pango_ft2_font_map_new() bind(c)
pango;pango_ft2_font_map_set_default_substitute;PANGO_DEPRECATED_IN_1_48_FOR(pango_fc_font_map_set_default_substitute);pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"void pango_ft2_font_map_set_default_substitute (PangoFT2FontMap *fontmap, PangoFT2SubstituteFunc func, gpointer data, GDestroyNotify notify);";subroutine pango_ft2_font_map_set_default_substitute(fontmap, func, data, notify) bind(c)
pango;pango_ft2_font_map_set_resolution;PANGO_AVAILABLE_IN_1_2;pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"void pango_ft2_font_map_set_resolution (PangoFT2FontMap *fontmap, double dpi_x, double dpi_y);";subroutine pango_ft2_font_map_set_resolution(fontmap, dpi_x, dpi_y) bind(c)
pango;pango_ft2_font_map_substitute_changed;PANGO_DEPRECATED_IN_1_48_FOR(pango_fc_font_map_substitute_changed);pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"void pango_ft2_font_map_substitute_changed (PangoFT2FontMap *fontmap);";subroutine pango_ft2_font_map_substitute_changed(fontmap) bind(c)
pango;pango_ft2_get_context;PANGO_DEPRECATED_FOR(pango_font_map_create_context);pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"PangoContext *pango_ft2_get_context (double dpi_x, double dpi_y);";function pango_ft2_get_context(dpi_x, dpi_y) bind(c)
pango;pango_ft2_get_unknown_glyph;PANGO_DEPRECATED_FOR(PANGO_GET_UNKNOWN_GLYPH);pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"PangoGlyph pango_ft2_get_unknown_glyph (PangoFont *font);";function pango_ft2_get_unknown_glyph(font) bind(c)
pango;pango_ft2_render;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"void pango_ft2_render (FT_Bitmap *bitmap, PangoFont *font, PangoGlyphString *glyphs, gint x, gint y);";subroutine pango_ft2_render(bitmap, font, glyphs, x, y) bind(c)
pango;pango_ft2_render_layout;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"void pango_ft2_render_layout (FT_Bitmap *bitmap, PangoLayout *layout, int x, int y);";subroutine pango_ft2_render_layout(bitmap, layout, x, y) bind(c)
pango;pango_ft2_render_layout_line;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"void pango_ft2_render_layout_line (FT_Bitmap *bitmap, PangoLayoutLine *line, int x, int y);";subroutine pango_ft2_render_layout_line(bitmap, line, x, y) bind(c)
pango;pango_ft2_render_layout_line_subpixel;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"void pango_ft2_render_layout_line_subpixel (FT_Bitmap *bitmap, PangoLayoutLine *line, int x, int y);";subroutine pango_ft2_render_layout_line_subpixel(bitmap, line, x, y) bind(c)
pango;pango_ft2_render_layout_subpixel;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"void pango_ft2_render_layout_subpixel (FT_Bitmap *bitmap, PangoLayout *layout, int x, int y);";subroutine pango_ft2_render_layout_subpixel(bitmap, layout, x, y) bind(c)
pango;pango_ft2_render_transformed;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"void pango_ft2_render_transformed (FT_Bitmap *bitmap, const PangoMatrix *matrix, PangoFont *font, PangoGlyphString *glyphs, int x, int y);";subroutine pango_ft2_render_transformed(bitmap, matrix, font, glyphs, x, y) bind(c)
pango;pango_ft2_shutdown_display;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pangoft2.h;"void pango_ft2_shutdown_display (void);";subroutine pango_ft2_shutdown_display() bind(c)
pango;pango_get_log_attrs;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-break.h;"void pango_get_log_attrs (const char *text, int length, int level, PangoLanguage *language, PangoLogAttr *log_attrs, int attrs_len);";subroutine pango_get_log_attrs(text, length, level, language, log_attrs, attrs_len) bind(c)
pango;pango_get_mirror_char;PANGO_DEPRECATED_FOR(g_unichar_get_mirror_char);pango-auto.f90;/usr/include/pango-1.0/pango/pango-bidi-type.h;"gboolean pango_get_mirror_char (gunichar ch, gunichar *mirrored_ch);";function pango_get_mirror_char(ch, mirrored_ch) bind(c)
pango;pango_glyph_item_apply_attrs;PANGO_AVAILABLE_IN_1_2;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"GSList * pango_glyph_item_apply_attrs (PangoGlyphItem *glyph_item, const char *text, PangoAttrList *list);";function pango_glyph_item_apply_attrs(glyph_item, text, list) bind(c)
pango;pango_glyph_item_copy;PANGO_AVAILABLE_IN_1_20;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"PangoGlyphItem *pango_glyph_item_copy (PangoGlyphItem *orig);";function pango_glyph_item_copy(orig) bind(c)
pango;pango_glyph_item_free;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"void pango_glyph_item_free (PangoGlyphItem *glyph_item);";subroutine pango_glyph_item_free(glyph_item) bind(c)
pango;pango_glyph_item_get_logical_widths;PANGO_AVAILABLE_IN_1_26;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"void pango_glyph_item_get_logical_widths (PangoGlyphItem *glyph_item, const char *text, int *logical_widths);";subroutine pango_glyph_item_get_logical_widths(glyph_item, text, logical_widths) bind(c)
pango;pango_glyph_item_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"GType pango_glyph_item_get_type (void) G_GNUC_CONST;";function pango_glyph_item_get_type() bind(c)
pango;pango_glyph_item_iter_copy;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"PangoGlyphItemIter *pango_glyph_item_iter_copy (PangoGlyphItemIter *orig);";function pango_glyph_item_iter_copy(orig) bind(c)
pango;pango_glyph_item_iter_free;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"void pango_glyph_item_iter_free (PangoGlyphItemIter *iter);";subroutine pango_glyph_item_iter_free(iter) bind(c)
pango;pango_glyph_item_iter_get_type;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"GType pango_glyph_item_iter_get_type (void) G_GNUC_CONST;";function pango_glyph_item_iter_get_type() bind(c)
pango;pango_glyph_item_iter_init_end;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"gboolean pango_glyph_item_iter_init_end (PangoGlyphItemIter *iter, PangoGlyphItem *glyph_item, const char *text);";function pango_glyph_item_iter_init_end(iter, glyph_item, text) bind(c)
pango;pango_glyph_item_iter_init_start;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"gboolean pango_glyph_item_iter_init_start (PangoGlyphItemIter *iter, PangoGlyphItem *glyph_item, const char *text);";function pango_glyph_item_iter_init_start(iter, glyph_item, text) bind(c)
pango;pango_glyph_item_iter_next_cluster;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"gboolean pango_glyph_item_iter_next_cluster (PangoGlyphItemIter *iter);";function pango_glyph_item_iter_next_cluster(iter) bind(c)
pango;pango_glyph_item_iter_prev_cluster;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"gboolean pango_glyph_item_iter_prev_cluster (PangoGlyphItemIter *iter);";function pango_glyph_item_iter_prev_cluster(iter) bind(c)
pango;pango_glyph_item_letter_space;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"void pango_glyph_item_letter_space (PangoGlyphItem *glyph_item, const char *text, PangoLogAttr *log_attrs, int letter_spacing);";subroutine pango_glyph_item_letter_space(glyph_item, text, log_attrs, letter_spacing) bind(c)
pango;pango_glyph_item_split;PANGO_AVAILABLE_IN_1_2;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph-item.h;"PangoGlyphItem *pango_glyph_item_split (PangoGlyphItem *orig, const char *text, int split_index);";function pango_glyph_item_split(orig, text, split_index) bind(c)
pango;pango_glyph_string_copy;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"PangoGlyphString *pango_glyph_string_copy (PangoGlyphString *string);";function pango_glyph_string_copy(string) bind(c)
pango;pango_glyph_string_extents;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"void pango_glyph_string_extents (PangoGlyphString *glyphs, PangoFont *font, PangoRectangle *ink_rect, PangoRectangle *logical_rect);";subroutine pango_glyph_string_extents(glyphs, font, ink_rect, logical_rect) bind(c)
pango;pango_glyph_string_extents_range;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"void pango_glyph_string_extents_range (PangoGlyphString *glyphs, int start, int end, PangoFont *font, PangoRectangle *ink_rect, PangoRectangle *logical_rect);";subroutine pango_glyph_string_extents_range(glyphs, start, end, font, ink_rect, logical_rect) bind(c)
pango;pango_glyph_string_free;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"void pango_glyph_string_free (PangoGlyphString *string);";subroutine pango_glyph_string_free(string) bind(c)
pango;pango_glyph_string_get_logical_widths;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"void pango_glyph_string_get_logical_widths (PangoGlyphString *glyphs, const char *text, int length, int embedding_level, int *logical_widths);";subroutine pango_glyph_string_get_logical_widths(glyphs, text, length, embedding_level, logical_widths) bind(c)
pango;pango_glyph_string_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"GType pango_glyph_string_get_type (void) G_GNUC_CONST;";function pango_glyph_string_get_type() bind(c)
pango;pango_glyph_string_get_width;PANGO_AVAILABLE_IN_1_14;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"int pango_glyph_string_get_width(PangoGlyphString *glyphs);";function pango_glyph_string_get_width(glyphs) bind(c)
pango;pango_glyph_string_index_to_x;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"void pango_glyph_string_index_to_x (PangoGlyphString *glyphs, char *text, int length, PangoAnalysis *analysis, int index_, gboolean trailing, int *x_pos);";subroutine pango_glyph_string_index_to_x(glyphs, text, length, analysis, index_, trailing, x_pos) bind(c)
pango;pango_glyph_string_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"PangoGlyphString *pango_glyph_string_new (void);";function pango_glyph_string_new() bind(c)
pango;pango_glyph_string_set_size;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"void pango_glyph_string_set_size (PangoGlyphString *string, gint new_len);";subroutine pango_glyph_string_set_size(string, new_len) bind(c)
pango;pango_glyph_string_x_to_index;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"void pango_glyph_string_x_to_index (PangoGlyphString *glyphs, char *text, int length, PangoAnalysis *analysis, int x_pos, int *index_, int *trailing);";subroutine pango_glyph_string_x_to_index(glyphs, text, length, analysis, x_pos, index_, trailing) bind(c)
pango;pango_gravity_get_for_matrix;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-gravity.h;"PangoGravity pango_gravity_get_for_matrix (const PangoMatrix *matrix) G_GNUC_PURE;";function pango_gravity_get_for_matrix(matrix) bind(c)
pango;pango_gravity_get_for_script;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-gravity.h;"PangoGravity pango_gravity_get_for_script (PangoScript script, PangoGravity base_gravity, PangoGravityHint hint) G_GNUC_CONST;";function pango_gravity_get_for_script(script, base_gravity, hint) bind(c)
pango;pango_gravity_get_for_script_and_width;PANGO_AVAILABLE_IN_1_26;pango-auto.f90;/usr/include/pango-1.0/pango/pango-gravity.h;"PangoGravity pango_gravity_get_for_script_and_width (PangoScript script, gboolean wide, PangoGravity base_gravity, PangoGravityHint hint) G_GNUC_CONST;";function pango_gravity_get_for_script_and_width(script, wide, base_gravity, hint) bind(c)
pango;pango_gravity_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_gravity_get_type (void) G_GNUC_CONST;";function pango_gravity_get_type() bind(c)
pango;pango_gravity_hint_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_gravity_hint_get_type (void) G_GNUC_CONST;";function pango_gravity_hint_get_type() bind(c)
pango;pango_gravity_to_rotation;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-gravity.h;"double pango_gravity_to_rotation (PangoGravity gravity) G_GNUC_CONST;";function pango_gravity_to_rotation(gravity) bind(c)
pango;pango_is_zero_width;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"gboolean pango_is_zero_width (gunichar ch) G_GNUC_CONST;";function pango_is_zero_width(ch) bind(c)
pango;pango_item_apply_attrs;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-item.h;"void pango_item_apply_attrs (PangoItem *item, PangoAttrIterator *iter);";subroutine pango_item_apply_attrs(item, iter) bind(c)
pango;pango_item_copy;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-item.h;"PangoItem *pango_item_copy (PangoItem *item);";function pango_item_copy(item) bind(c)
pango;pango_item_free;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-item.h;"void pango_item_free (PangoItem *item);";subroutine pango_item_free(item) bind(c)
pango;pango_item_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-item.h;"GType pango_item_get_type (void) G_GNUC_CONST;";function pango_item_get_type() bind(c)
pango;pango_item_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-item.h;"PangoItem *pango_item_new (void);";function pango_item_new() bind(c)
pango;pango_item_split;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-item.h;"PangoItem *pango_item_split (PangoItem *orig, int split_index, int split_offset);";function pango_item_split(orig, split_index, split_offset) bind(c)
pango;pango_itemize;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"GList *pango_itemize (PangoContext *context, const char *text, int start_index, int length, PangoAttrList *attrs, PangoAttrIterator *cached_iter);";function pango_itemize(context, text, start_index, length, attrs, cached_iter) bind(c)
pango;pango_itemize_with_base_dir;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-context.h;"GList *pango_itemize_with_base_dir (PangoContext *context, PangoDirection base_dir, const char *text, int start_index, int length, PangoAttrList *attrs, PangoAttrIterator *cached_iter);";function pango_itemize_with_base_dir(context, base_dir, text, start_index, length, attrs, cached_iter) bind(c)
pango;pango_language_from_string;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-language.h;"PangoLanguage *pango_language_from_string (const char *language);";function pango_language_from_string(language) bind(c)
pango;pango_language_get_default;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-language.h;"PangoLanguage *pango_language_get_default (void) G_GNUC_CONST;";function pango_language_get_default() bind(c)
pango;pango_language_get_preferred;PANGO_AVAILABLE_IN_1_48;pango-auto.f90;/usr/include/pango-1.0/pango/pango-language.h;"PangoLanguage **pango_language_get_preferred (void) G_GNUC_CONST;";function pango_language_get_preferred() bind(c)
pango;pango_language_get_sample_string;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-language.h;"const char *pango_language_get_sample_string (PangoLanguage *language) G_GNUC_CONST;";function pango_language_get_sample_string(language) bind(c)
pango;pango_language_get_scripts;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pango-language.h;"const PangoScript *pango_language_get_scripts (PangoLanguage *language, int *num_scripts);";function pango_language_get_scripts(language, num_scripts) bind(c)
pango;pango_language_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-language.h;"GType pango_language_get_type (void) G_GNUC_CONST;";function pango_language_get_type() bind(c)
pango;pango_language_includes_script;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-language.h;"gboolean pango_language_includes_script (PangoLanguage *language, PangoScript script) G_GNUC_PURE;";function pango_language_includes_script(language, script) bind(c)
pango;pango_language_matches;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-language.h;"gboolean pango_language_matches (PangoLanguage *language, const char *range_list) G_GNUC_PURE;";function pango_language_matches(language, range_list) bind(c)
pango;pango_language_to_string;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-language.h;"const char *pango_language_to_string (PangoLanguage *language) G_GNUC_CONST;";function pango_language_to_string(language) bind(c)
pango;pango_layout_context_changed;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_context_changed (PangoLayout *layout);";subroutine pango_layout_context_changed(layout) bind(c)
pango;pango_layout_copy;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoLayout *pango_layout_copy (PangoLayout *src);";function pango_layout_copy(src) bind(c)
pango;pango_layout_get_alignment;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoAlignment pango_layout_get_alignment (PangoLayout *layout);";function pango_layout_get_alignment(layout) bind(c)
pango;pango_layout_get_attributes;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoAttrList *pango_layout_get_attributes (PangoLayout *layout);";function pango_layout_get_attributes(layout) bind(c)
pango;pango_layout_get_auto_dir;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gboolean pango_layout_get_auto_dir (PangoLayout *layout);";function pango_layout_get_auto_dir(layout) bind(c)
pango;pango_layout_get_baseline;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"int pango_layout_get_baseline (PangoLayout *layout);";function pango_layout_get_baseline(layout) bind(c)
pango;pango_layout_get_character_count;PANGO_AVAILABLE_IN_1_30;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gint pango_layout_get_character_count (PangoLayout *layout);";function pango_layout_get_character_count(layout) bind(c)
pango;pango_layout_get_context;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoContext *pango_layout_get_context (PangoLayout *layout);";function pango_layout_get_context(layout) bind(c)
pango;pango_layout_get_cursor_pos;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_get_cursor_pos (PangoLayout *layout, int index_, PangoRectangle *strong_pos, PangoRectangle *weak_pos);";subroutine pango_layout_get_cursor_pos(layout, index_, strong_pos, weak_pos) bind(c)
pango;pango_layout_get_direction;PANGO_AVAILABLE_IN_1_46;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoDirection pango_layout_get_direction (PangoLayout *layout, int index);";function pango_layout_get_direction(layout, index) bind(c)
pango;pango_layout_get_ellipsize;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoEllipsizeMode pango_layout_get_ellipsize (PangoLayout *layout);";function pango_layout_get_ellipsize(layout) bind(c)
pango;pango_layout_get_extents;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_get_extents (PangoLayout *layout, PangoRectangle *ink_rect, PangoRectangle *logical_rect);";subroutine pango_layout_get_extents(layout, ink_rect, logical_rect) bind(c)
pango;pango_layout_get_font_description;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"const PangoFontDescription *pango_layout_get_font_description (PangoLayout *layout);";function pango_layout_get_font_description(layout) bind(c)
pango;pango_layout_get_height;PANGO_AVAILABLE_IN_1_20;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"int pango_layout_get_height (PangoLayout *layout);";function pango_layout_get_height(layout) bind(c)
pango;pango_layout_get_indent;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"int pango_layout_get_indent (PangoLayout *layout);";function pango_layout_get_indent(layout) bind(c)
pango;pango_layout_get_iter;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoLayoutIter *pango_layout_get_iter (PangoLayout *layout);";function pango_layout_get_iter(layout) bind(c)
pango;pango_layout_get_justify;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gboolean pango_layout_get_justify (PangoLayout *layout);";function pango_layout_get_justify(layout) bind(c)
pango;pango_layout_get_line;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoLayoutLine *pango_layout_get_line (PangoLayout *layout, int line);";function pango_layout_get_line(layout, line) bind(c)
pango;pango_layout_get_line_count;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"int pango_layout_get_line_count (PangoLayout *layout);";function pango_layout_get_line_count(layout) bind(c)
pango;pango_layout_get_line_readonly;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoLayoutLine *pango_layout_get_line_readonly (PangoLayout *layout, int line);";function pango_layout_get_line_readonly(layout, line) bind(c)
pango;pango_layout_get_line_spacing;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"float pango_layout_get_line_spacing (PangoLayout *layout);";function pango_layout_get_line_spacing(layout) bind(c)
pango;pango_layout_get_lines;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"GSList * pango_layout_get_lines (PangoLayout *layout);";function pango_layout_get_lines(layout) bind(c)
pango;pango_layout_get_lines_readonly;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"GSList * pango_layout_get_lines_readonly (PangoLayout *layout);";function pango_layout_get_lines_readonly(layout) bind(c)
pango;pango_layout_get_log_attrs;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_get_log_attrs (PangoLayout *layout, PangoLogAttr **attrs, gint *n_attrs);";subroutine pango_layout_get_log_attrs(layout, attrs, n_attrs) bind(c)
pango;pango_layout_get_log_attrs_readonly;PANGO_AVAILABLE_IN_1_30;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"const PangoLogAttr *pango_layout_get_log_attrs_readonly (PangoLayout *layout, gint *n_attrs);";function pango_layout_get_log_attrs_readonly(layout, n_attrs) bind(c)
pango;pango_layout_get_pixel_extents;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_get_pixel_extents (PangoLayout *layout, PangoRectangle *ink_rect, PangoRectangle *logical_rect);";subroutine pango_layout_get_pixel_extents(layout, ink_rect, logical_rect) bind(c)
pango;pango_layout_get_pixel_size;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_get_pixel_size (PangoLayout *layout, int *width, int *height);";subroutine pango_layout_get_pixel_size(layout, width, height) bind(c)
pango;pango_layout_get_serial;PANGO_AVAILABLE_IN_1_32;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"guint pango_layout_get_serial (PangoLayout *layout);";function pango_layout_get_serial(layout) bind(c)
pango;pango_layout_get_single_paragraph_mode;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gboolean pango_layout_get_single_paragraph_mode (PangoLayout *layout);";function pango_layout_get_single_paragraph_mode(layout) bind(c)
pango;pango_layout_get_size;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_get_size (PangoLayout *layout, int *width, int *height);";subroutine pango_layout_get_size(layout, width, height) bind(c)
pango;pango_layout_get_spacing;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"int pango_layout_get_spacing (PangoLayout *layout);";function pango_layout_get_spacing(layout) bind(c)
pango;pango_layout_get_tabs;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoTabArray* pango_layout_get_tabs (PangoLayout *layout);";function pango_layout_get_tabs(layout) bind(c)
pango;pango_layout_get_text;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"const char *pango_layout_get_text (PangoLayout *layout);";function pango_layout_get_text(layout) bind(c)
pango;pango_layout_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"GType pango_layout_get_type (void) G_GNUC_CONST;";function pango_layout_get_type() bind(c)
pango;pango_layout_get_unknown_glyphs_count;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"int pango_layout_get_unknown_glyphs_count (PangoLayout *layout);";function pango_layout_get_unknown_glyphs_count(layout) bind(c)
pango;pango_layout_get_width;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"int pango_layout_get_width (PangoLayout *layout);";function pango_layout_get_width(layout) bind(c)
pango;pango_layout_get_wrap;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoWrapMode pango_layout_get_wrap (PangoLayout *layout);";function pango_layout_get_wrap(layout) bind(c)
pango;pango_layout_index_to_line_x;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_index_to_line_x (PangoLayout *layout, int index_, gboolean trailing, int *line, int *x_pos);";subroutine pango_layout_index_to_line_x(layout, index_, trailing, line, x_pos) bind(c)
pango;pango_layout_index_to_pos;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_index_to_pos (PangoLayout *layout, int index_, PangoRectangle *pos);";subroutine pango_layout_index_to_pos(layout, index_, pos) bind(c)
pango;pango_layout_is_ellipsized;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gboolean pango_layout_is_ellipsized (PangoLayout *layout);";function pango_layout_is_ellipsized(layout) bind(c)
pango;pango_layout_is_wrapped;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gboolean pango_layout_is_wrapped (PangoLayout *layout);";function pango_layout_is_wrapped(layout) bind(c)
pango;pango_layout_iter_at_last_line;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gboolean pango_layout_iter_at_last_line (PangoLayoutIter *iter);";function pango_layout_iter_at_last_line(iter) bind(c)
pango;pango_layout_iter_copy;PANGO_AVAILABLE_IN_1_20;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoLayoutIter *pango_layout_iter_copy (PangoLayoutIter *iter);";function pango_layout_iter_copy(iter) bind(c)
pango;pango_layout_iter_free;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_iter_free (PangoLayoutIter *iter);";subroutine pango_layout_iter_free(iter) bind(c)
pango;pango_layout_iter_get_baseline;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"int pango_layout_iter_get_baseline (PangoLayoutIter *iter);";function pango_layout_iter_get_baseline(iter) bind(c)
pango;pango_layout_iter_get_char_extents;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_iter_get_char_extents (PangoLayoutIter *iter, PangoRectangle *logical_rect);";subroutine pango_layout_iter_get_char_extents(iter, logical_rect) bind(c)
pango;pango_layout_iter_get_cluster_extents;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_iter_get_cluster_extents (PangoLayoutIter *iter, PangoRectangle *ink_rect, PangoRectangle *logical_rect);";subroutine pango_layout_iter_get_cluster_extents(iter, ink_rect, logical_rect) bind(c)
pango;pango_layout_iter_get_index;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"int pango_layout_iter_get_index (PangoLayoutIter *iter);";function pango_layout_iter_get_index(iter) bind(c)
pango;pango_layout_iter_get_layout;PANGO_AVAILABLE_IN_1_20;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoLayout *pango_layout_iter_get_layout (PangoLayoutIter *iter);";function pango_layout_iter_get_layout(iter) bind(c)
pango;pango_layout_iter_get_layout_extents;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_iter_get_layout_extents (PangoLayoutIter *iter, PangoRectangle *ink_rect, PangoRectangle *logical_rect);";subroutine pango_layout_iter_get_layout_extents(iter, ink_rect, logical_rect) bind(c)
pango;pango_layout_iter_get_line;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoLayoutLine *pango_layout_iter_get_line (PangoLayoutIter *iter);";function pango_layout_iter_get_line(iter) bind(c)
pango;pango_layout_iter_get_line_extents;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_iter_get_line_extents (PangoLayoutIter *iter, PangoRectangle *ink_rect, PangoRectangle *logical_rect);";subroutine pango_layout_iter_get_line_extents(iter, ink_rect, logical_rect) bind(c)
pango;pango_layout_iter_get_line_readonly;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoLayoutLine *pango_layout_iter_get_line_readonly (PangoLayoutIter *iter);";function pango_layout_iter_get_line_readonly(iter) bind(c)
pango;pango_layout_iter_get_line_yrange;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_iter_get_line_yrange (PangoLayoutIter *iter, int *y0_, int *y1_);";subroutine pango_layout_iter_get_line_yrange(iter, y0_, y1_) bind(c)
pango;pango_layout_iter_get_run;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoLayoutRun *pango_layout_iter_get_run (PangoLayoutIter *iter);";function pango_layout_iter_get_run(iter) bind(c)
pango;pango_layout_iter_get_run_extents;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_iter_get_run_extents (PangoLayoutIter *iter, PangoRectangle *ink_rect, PangoRectangle *logical_rect);";subroutine pango_layout_iter_get_run_extents(iter, ink_rect, logical_rect) bind(c)
pango;pango_layout_iter_get_run_readonly;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoLayoutRun *pango_layout_iter_get_run_readonly (PangoLayoutIter *iter);";function pango_layout_iter_get_run_readonly(iter) bind(c)
pango;pango_layout_iter_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"GType pango_layout_iter_get_type (void) G_GNUC_CONST;";function pango_layout_iter_get_type() bind(c)
pango;pango_layout_iter_next_char;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gboolean pango_layout_iter_next_char (PangoLayoutIter *iter);";function pango_layout_iter_next_char(iter) bind(c)
pango;pango_layout_iter_next_cluster;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gboolean pango_layout_iter_next_cluster (PangoLayoutIter *iter);";function pango_layout_iter_next_cluster(iter) bind(c)
pango;pango_layout_iter_next_line;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gboolean pango_layout_iter_next_line (PangoLayoutIter *iter);";function pango_layout_iter_next_line(iter) bind(c)
pango;pango_layout_iter_next_run;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gboolean pango_layout_iter_next_run (PangoLayoutIter *iter);";function pango_layout_iter_next_run(iter) bind(c)
pango;pango_layout_line_get_extents;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_line_get_extents (PangoLayoutLine *line, PangoRectangle *ink_rect, PangoRectangle *logical_rect);";subroutine pango_layout_line_get_extents(line, ink_rect, logical_rect) bind(c)
pango;pango_layout_line_get_height;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_line_get_height (PangoLayoutLine *line, int *height);";subroutine pango_layout_line_get_height(line, height) bind(c)
pango;pango_layout_line_get_pixel_extents;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_line_get_pixel_extents (PangoLayoutLine *layout_line, PangoRectangle *ink_rect, PangoRectangle *logical_rect);";subroutine pango_layout_line_get_pixel_extents(layout_line, ink_rect, logical_rect) bind(c)
pango;pango_layout_line_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"GType pango_layout_line_get_type (void) G_GNUC_CONST;";function pango_layout_line_get_type() bind(c)
pango;pango_layout_line_get_x_ranges;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_line_get_x_ranges (PangoLayoutLine *line, int start_index, int end_index, int **ranges, int *n_ranges);";subroutine pango_layout_line_get_x_ranges(line, start_index, end_index, ranges, n_ranges) bind(c)
pango;pango_layout_line_index_to_x;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_line_index_to_x (PangoLayoutLine *line, int index_, gboolean trailing, int *x_pos);";subroutine pango_layout_line_index_to_x(line, index_, trailing, x_pos) bind(c)
pango;pango_layout_line_ref;PANGO_AVAILABLE_IN_1_10;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoLayoutLine *pango_layout_line_ref (PangoLayoutLine *line);";function pango_layout_line_ref(line) bind(c)
pango;pango_layout_line_unref;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_line_unref (PangoLayoutLine *line);";subroutine pango_layout_line_unref(line) bind(c)
pango;pango_layout_line_x_to_index;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gboolean pango_layout_line_x_to_index (PangoLayoutLine *line, int x_pos, int *index_, int *trailing);";function pango_layout_line_x_to_index(line, x_pos, index_, trailing) bind(c)
pango;pango_layout_move_cursor_visually;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_move_cursor_visually (PangoLayout *layout, gboolean strong, int old_index, int old_trailing, int direction, int *new_index, int *new_trailing);";subroutine pango_layout_move_cursor_visually(layout, strong, old_index, old_trailing, direction, new_index, new_trailing) bind(c)
pango;pango_layout_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"PangoLayout *pango_layout_new (PangoContext *context);";function pango_layout_new(context) bind(c)
pango;pango_layout_set_alignment;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_alignment (PangoLayout *layout, PangoAlignment alignment);";subroutine pango_layout_set_alignment(layout, alignment) bind(c)
pango;pango_layout_set_attributes;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_attributes (PangoLayout *layout, PangoAttrList *attrs);";subroutine pango_layout_set_attributes(layout, attrs) bind(c)
pango;pango_layout_set_auto_dir;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_auto_dir (PangoLayout *layout, gboolean auto_dir);";subroutine pango_layout_set_auto_dir(layout, auto_dir) bind(c)
pango;pango_layout_set_ellipsize;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_ellipsize (PangoLayout *layout, PangoEllipsizeMode ellipsize);";subroutine pango_layout_set_ellipsize(layout, ellipsize) bind(c)
pango;pango_layout_set_font_description;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_font_description (PangoLayout *layout, const PangoFontDescription *desc);";subroutine pango_layout_set_font_description(layout, desc) bind(c)
pango;pango_layout_set_height;PANGO_AVAILABLE_IN_1_20;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_height (PangoLayout *layout, int height);";subroutine pango_layout_set_height(layout, height) bind(c)
pango;pango_layout_set_indent;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_indent (PangoLayout *layout, int indent);";subroutine pango_layout_set_indent(layout, indent) bind(c)
pango;pango_layout_set_justify;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_justify (PangoLayout *layout, gboolean justify);";subroutine pango_layout_set_justify(layout, justify) bind(c)
pango;pango_layout_set_line_spacing;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_line_spacing (PangoLayout *layout, float factor);";subroutine pango_layout_set_line_spacing(layout, factor) bind(c)
pango;pango_layout_set_markup;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_markup (PangoLayout *layout, const char *markup, int length);";subroutine pango_layout_set_markup(layout, markup, length) bind(c)
pango;pango_layout_set_markup_with_accel;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_markup_with_accel (PangoLayout *layout, const char *markup, int length, gunichar accel_marker, gunichar *accel_char);";subroutine pango_layout_set_markup_with_accel(layout, markup, length, accel_marker, accel_char) bind(c)
pango;pango_layout_set_single_paragraph_mode;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_single_paragraph_mode (PangoLayout *layout, gboolean setting);";subroutine pango_layout_set_single_paragraph_mode(layout, setting) bind(c)
pango;pango_layout_set_spacing;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_spacing (PangoLayout *layout, int spacing);";subroutine pango_layout_set_spacing(layout, spacing) bind(c)
pango;pango_layout_set_tabs;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_tabs (PangoLayout *layout, PangoTabArray *tabs);";subroutine pango_layout_set_tabs(layout, tabs) bind(c)
pango;pango_layout_set_text;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_text (PangoLayout *layout, const char *text, int length);";subroutine pango_layout_set_text(layout, text, length) bind(c)
pango;pango_layout_set_width;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_width (PangoLayout *layout, int width);";subroutine pango_layout_set_width(layout, width) bind(c)
pango;pango_layout_set_wrap;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"void pango_layout_set_wrap (PangoLayout *layout, PangoWrapMode wrap);";subroutine pango_layout_set_wrap(layout, wrap) bind(c)
pango;pango_layout_xy_to_index;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-layout.h;"gboolean pango_layout_xy_to_index (PangoLayout *layout, int x, int y, int *index_, int *trailing);";function pango_layout_xy_to_index(layout, x, y, index_, trailing) bind(c)
pango;pango_log2vis_get_embedding_levels;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"guint8 * pango_log2vis_get_embedding_levels (const gchar *text, int length, PangoDirection *pbase_dir);";function pango_log2vis_get_embedding_levels(text, length, pbase_dir) bind(c)
pango;pango_map_get_engine;PANGO_DEPRECATED_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-modules.h;"PangoEngine * pango_map_get_engine (PangoMap *map, PangoScript script);";function pango_map_get_engine(map, script) bind(c)
pango;pango_map_get_engines;PANGO_DEPRECATED_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-modules.h;"void pango_map_get_engines (PangoMap *map, PangoScript script, GSList **exact_engines, GSList **fallback_engines);";subroutine pango_map_get_engines(map, script, exact_engines, fallback_engines) bind(c)
pango;pango_markup_parser_finish;PANGO_AVAILABLE_IN_1_32;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"gboolean pango_markup_parser_finish (GMarkupParseContext *context, PangoAttrList **attr_list, char **text, gunichar *accel_char, GError **error);";function pango_markup_parser_finish(context, attr_list, text, accel_char, error) bind(c)
pango;pango_markup_parser_new;PANGO_AVAILABLE_IN_1_32;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"GMarkupParseContext * pango_markup_parser_new (gunichar accel_marker);";function pango_markup_parser_new(accel_marker) bind(c)
pango;pango_matrix_concat;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"void pango_matrix_concat (PangoMatrix *matrix, const PangoMatrix *new_matrix);";subroutine pango_matrix_concat(matrix, new_matrix) bind(c)
pango;pango_matrix_copy;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"PangoMatrix *pango_matrix_copy (const PangoMatrix *matrix);";function pango_matrix_copy(matrix) bind(c)
pango;pango_matrix_free;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"void pango_matrix_free (PangoMatrix *matrix);";subroutine pango_matrix_free(matrix) bind(c)
pango;pango_matrix_get_font_scale_factor;PANGO_AVAILABLE_IN_1_12;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"double pango_matrix_get_font_scale_factor (const PangoMatrix *matrix) G_GNUC_PURE;";function pango_matrix_get_font_scale_factor(matrix) bind(c)
pango;pango_matrix_get_font_scale_factors;PANGO_AVAILABLE_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"void pango_matrix_get_font_scale_factors (const PangoMatrix *matrix, double *xscale, double *yscale);";subroutine pango_matrix_get_font_scale_factors(matrix, xscale, yscale) bind(c)
pango;pango_matrix_get_type;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"GType pango_matrix_get_type (void) G_GNUC_CONST;";function pango_matrix_get_type() bind(c)
pango;pango_matrix_rotate;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"void pango_matrix_rotate (PangoMatrix *matrix, double degrees);";subroutine pango_matrix_rotate(matrix, degrees) bind(c)
pango;pango_matrix_scale;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"void pango_matrix_scale (PangoMatrix *matrix, double scale_x, double scale_y);";subroutine pango_matrix_scale(matrix, scale_x, scale_y) bind(c)
pango;pango_matrix_transform_distance;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"void pango_matrix_transform_distance (const PangoMatrix *matrix, double *dx, double *dy);";subroutine pango_matrix_transform_distance(matrix, dx, dy) bind(c)
pango;pango_matrix_transform_pixel_rectangle;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"void pango_matrix_transform_pixel_rectangle (const PangoMatrix *matrix, PangoRectangle *rect);";subroutine pango_matrix_transform_pixel_rectangle(matrix, rect) bind(c)
pango;pango_matrix_transform_point;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"void pango_matrix_transform_point (const PangoMatrix *matrix, double *x, double *y);";subroutine pango_matrix_transform_point(matrix, x, y) bind(c)
pango;pango_matrix_transform_rectangle;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"void pango_matrix_transform_rectangle (const PangoMatrix *matrix, PangoRectangle *rect);";subroutine pango_matrix_transform_rectangle(matrix, rect) bind(c)
pango;pango_matrix_translate;PANGO_AVAILABLE_IN_1_6;pango-auto.f90;/usr/include/pango-1.0/pango/pango-matrix.h;"void pango_matrix_translate (PangoMatrix *matrix, double tx, double ty);";subroutine pango_matrix_translate(matrix, tx, ty) bind(c)
pango;pango_module_register;PANGO_DEPRECATED_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-modules.h;"void pango_module_register (PangoIncludedModule *module);";subroutine pango_module_register(module) bind(c)
pango;pango_ot_buffer_add_glyph;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"void pango_ot_buffer_add_glyph (PangoOTBuffer *buffer, guint glyph, guint properties, guint cluster);";subroutine pango_ot_buffer_add_glyph(buffer, glyph, properties, cluster) bind(c)
pango;pango_ot_buffer_clear;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"void pango_ot_buffer_clear (PangoOTBuffer *buffer);";subroutine pango_ot_buffer_clear(buffer) bind(c)
pango;pango_ot_buffer_destroy;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"void pango_ot_buffer_destroy (PangoOTBuffer *buffer);";subroutine pango_ot_buffer_destroy(buffer) bind(c)
pango;pango_ot_buffer_get_glyphs;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"void pango_ot_buffer_get_glyphs (const PangoOTBuffer *buffer, PangoOTGlyph **glyphs, int *n_glyphs);";subroutine pango_ot_buffer_get_glyphs(buffer, glyphs, n_glyphs) bind(c)
pango;pango_ot_buffer_get_type;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"GType pango_ot_buffer_get_type (void) G_GNUC_CONST;";function pango_ot_buffer_get_type() bind(c)
pango;pango_ot_buffer_new;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoOTBuffer *pango_ot_buffer_new (PangoFcFont *font);";function pango_ot_buffer_new(font) bind(c)
pango;pango_ot_buffer_output;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"void pango_ot_buffer_output (const PangoOTBuffer *buffer, PangoGlyphString *glyphs);";subroutine pango_ot_buffer_output(buffer, glyphs) bind(c)
pango;pango_ot_buffer_set_rtl;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"void pango_ot_buffer_set_rtl (PangoOTBuffer *buffer, gboolean rtl);";subroutine pango_ot_buffer_set_rtl(buffer, rtl) bind(c)
pango;pango_ot_buffer_set_zero_width_marks;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"void pango_ot_buffer_set_zero_width_marks (PangoOTBuffer *buffer, gboolean zero_width_marks);";subroutine pango_ot_buffer_set_zero_width_marks(buffer, zero_width_marks) bind(c)
pango;pango_ot_info_find_feature;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"gboolean pango_ot_info_find_feature (PangoOTInfo *info, PangoOTTableType table_type, PangoOTTag feature_tag, guint script_index, guint language_index, guint *feature_index);";function pango_ot_info_find_feature(info, table_type, feature_tag, script_index, language_index, feature_index) bind(c)
pango;pango_ot_info_find_language;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"gboolean pango_ot_info_find_language (PangoOTInfo *info, PangoOTTableType table_type, guint script_index, PangoOTTag language_tag, guint *language_index, guint *required_feature_index);";function pango_ot_info_find_language(info, table_type, script_index, language_tag, language_index, required_feature_index) bind(c)
pango;pango_ot_info_find_script;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"gboolean pango_ot_info_find_script (PangoOTInfo *info, PangoOTTableType table_type, PangoOTTag script_tag, guint *script_index);";function pango_ot_info_find_script(info, table_type, script_tag, script_index) bind(c)
pango;pango_ot_info_get;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoOTInfo *pango_ot_info_get (FT_Face face);";function pango_ot_info_get(face) bind(c)
pango;pango_ot_info_get_type;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"GType pango_ot_info_get_type (void) G_GNUC_CONST;";function pango_ot_info_get_type() bind(c)
pango;pango_ot_info_list_features;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoOTTag *pango_ot_info_list_features (PangoOTInfo *info, PangoOTTableType table_type, PangoOTTag tag, guint script_index, guint language_index);";function pango_ot_info_list_features(info, table_type, tag, script_index, language_index) bind(c)
pango;pango_ot_info_list_languages;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoOTTag *pango_ot_info_list_languages (PangoOTInfo *info, PangoOTTableType table_type, guint script_index, PangoOTTag language_tag);";function pango_ot_info_list_languages(info, table_type, script_index, language_tag) bind(c)
pango;pango_ot_info_list_scripts;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoOTTag *pango_ot_info_list_scripts (PangoOTInfo *info, PangoOTTableType table_type);";function pango_ot_info_list_scripts(info, table_type) bind(c)
pango;pango_ot_ruleset_add_feature;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"void pango_ot_ruleset_add_feature (PangoOTRuleset *ruleset, PangoOTTableType table_type, guint feature_index, gulong property_bit);";subroutine pango_ot_ruleset_add_feature(ruleset, table_type, feature_index, property_bit) bind(c)
pango;pango_ot_ruleset_description_copy;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoOTRulesetDescription *pango_ot_ruleset_description_copy (const PangoOTRulesetDescription *desc);";function pango_ot_ruleset_description_copy(desc) bind(c)
pango;pango_ot_ruleset_description_equal;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"gboolean pango_ot_ruleset_description_equal (const PangoOTRulesetDescription *desc1, const PangoOTRulesetDescription *desc2) G_GNUC_PURE;";function pango_ot_ruleset_description_equal(desc1, desc2) bind(c)
pango;pango_ot_ruleset_description_free;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"void pango_ot_ruleset_description_free (PangoOTRulesetDescription *desc);";subroutine pango_ot_ruleset_description_free(desc) bind(c)
pango;pango_ot_ruleset_description_get_type;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"GType pango_ot_ruleset_description_get_type (void) G_GNUC_CONST;";function pango_ot_ruleset_description_get_type() bind(c)
pango;pango_ot_ruleset_description_hash;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"guint pango_ot_ruleset_description_hash (const PangoOTRulesetDescription *desc) G_GNUC_PURE;";function pango_ot_ruleset_description_hash(desc) bind(c)
pango;pango_ot_ruleset_get_feature_count;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"guint pango_ot_ruleset_get_feature_count (const PangoOTRuleset *ruleset, guint *n_gsub_features, guint *n_gpos_features);";function pango_ot_ruleset_get_feature_count(ruleset, n_gsub_features, n_gpos_features) bind(c)
pango;pango_ot_ruleset_get_for_description;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"const PangoOTRuleset *pango_ot_ruleset_get_for_description (PangoOTInfo *info, const PangoOTRulesetDescription *desc);";function pango_ot_ruleset_get_for_description(info, desc) bind(c)
pango;pango_ot_ruleset_get_type;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"GType pango_ot_ruleset_get_type (void) G_GNUC_CONST;";function pango_ot_ruleset_get_type() bind(c)
pango;pango_ot_ruleset_maybe_add_feature;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"gboolean pango_ot_ruleset_maybe_add_feature (PangoOTRuleset *ruleset, PangoOTTableType table_type, PangoOTTag feature_tag, gulong property_bit);";function pango_ot_ruleset_maybe_add_feature(ruleset, table_type, feature_tag, property_bit) bind(c)
pango;pango_ot_ruleset_maybe_add_features;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"guint pango_ot_ruleset_maybe_add_features (PangoOTRuleset *ruleset, PangoOTTableType table_type, const PangoOTFeatureMap *features, guint n_features);";function pango_ot_ruleset_maybe_add_features(ruleset, table_type, features, n_features) bind(c)
pango;pango_ot_ruleset_new;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoOTRuleset *pango_ot_ruleset_new (PangoOTInfo *info);";function pango_ot_ruleset_new(info) bind(c)
pango;pango_ot_ruleset_new_for;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoOTRuleset *pango_ot_ruleset_new_for (PangoOTInfo *info, PangoScript script, PangoLanguage *language);";function pango_ot_ruleset_new_for(info, script, language) bind(c)
pango;pango_ot_ruleset_new_from_description;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoOTRuleset *pango_ot_ruleset_new_from_description (PangoOTInfo *info, const PangoOTRulesetDescription *desc);";function pango_ot_ruleset_new_from_description(info, desc) bind(c)
pango;pango_ot_ruleset_position;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"void pango_ot_ruleset_position (const PangoOTRuleset *ruleset, PangoOTBuffer *buffer);";subroutine pango_ot_ruleset_position(ruleset, buffer) bind(c)
pango;pango_ot_ruleset_substitute;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"void pango_ot_ruleset_substitute (const PangoOTRuleset *ruleset, PangoOTBuffer *buffer);";subroutine pango_ot_ruleset_substitute(ruleset, buffer) bind(c)
pango;pango_ot_tag_from_language;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoOTTag pango_ot_tag_from_language (PangoLanguage *language) G_GNUC_CONST;";function pango_ot_tag_from_language(language) bind(c)
pango;pango_ot_tag_from_script;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoOTTag pango_ot_tag_from_script (PangoScript script) G_GNUC_CONST;";function pango_ot_tag_from_script(script) bind(c)
pango;pango_ot_tag_to_language;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoLanguage *pango_ot_tag_to_language (PangoOTTag language_tag) G_GNUC_CONST;";function pango_ot_tag_to_language(language_tag) bind(c)
pango;pango_ot_tag_to_script;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-ot.h;"PangoScript pango_ot_tag_to_script (PangoOTTag script_tag) G_GNUC_CONST;";function pango_ot_tag_to_script(script_tag) bind(c)
pango;pango_overline_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_overline_get_type (void) G_GNUC_CONST;";function pango_overline_get_type() bind(c)
pango;pango_parse_enum;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"gboolean pango_parse_enum (GType type, const char *str, int *value, gboolean warn, char **possible_values);";function pango_parse_enum(type, str, value, warn, possible_values) bind(c)
pango;pango_parse_markup;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-attributes.h;"gboolean pango_parse_markup (const char *markup_text, int length, gunichar accel_marker, PangoAttrList **attr_list, char **text, gunichar *accel_char, GError **error);";function pango_parse_markup(markup_text, length, accel_marker, attr_list, text, accel_char, error) bind(c)
pango;pango_parse_stretch;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"gboolean pango_parse_stretch (const char *str, PangoStretch *stretch, gboolean warn);";function pango_parse_stretch(str, stretch, warn) bind(c)
pango;pango_parse_style;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"gboolean pango_parse_style (const char *str, PangoStyle *style, gboolean warn);";function pango_parse_style(str, style, warn) bind(c)
pango;pango_parse_variant;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"gboolean pango_parse_variant (const char *str, PangoVariant *variant, gboolean warn);";function pango_parse_variant(str, variant, warn) bind(c)
pango;pango_parse_weight;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"gboolean pango_parse_weight (const char *str, PangoWeight *weight, gboolean warn);";function pango_parse_weight(str, weight, warn) bind(c)
pango;pango_quantize_line_geometry;PANGO_AVAILABLE_IN_1_12;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"void pango_quantize_line_geometry (int *thickness, int *position);";subroutine pango_quantize_line_geometry(thickness, position) bind(c)
pango;pango_read_line;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"gint pango_read_line (FILE *stream, GString *str);";function pango_read_line(stream, str) bind(c)
pango;pango_render_part_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_render_part_get_type (void) G_GNUC_CONST;";function pango_render_part_get_type() bind(c)
pango;pango_renderer_activate;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_activate (PangoRenderer *renderer);";subroutine pango_renderer_activate(renderer) bind(c)
pango;pango_renderer_deactivate;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_deactivate (PangoRenderer *renderer);";subroutine pango_renderer_deactivate(renderer) bind(c)
pango;pango_renderer_draw_error_underline;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_draw_error_underline (PangoRenderer *renderer, int x, int y, int width, int height);";subroutine pango_renderer_draw_error_underline(renderer, x, y, width, height) bind(c)
pango;pango_renderer_draw_glyph;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_draw_glyph (PangoRenderer *renderer, PangoFont *font, PangoGlyph glyph, double x, double y);";subroutine pango_renderer_draw_glyph(renderer, font, glyph, x, y) bind(c)
pango;pango_renderer_draw_glyph_item;PANGO_AVAILABLE_IN_1_22;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_draw_glyph_item (PangoRenderer *renderer, const char *text, PangoGlyphItem *glyph_item, int x, int y);";subroutine pango_renderer_draw_glyph_item(renderer, text, glyph_item, x, y) bind(c)
pango;pango_renderer_draw_glyphs;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_draw_glyphs (PangoRenderer *renderer, PangoFont *font, PangoGlyphString *glyphs, int x, int y);";subroutine pango_renderer_draw_glyphs(renderer, font, glyphs, x, y) bind(c)
pango;pango_renderer_draw_layout;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_draw_layout (PangoRenderer *renderer, PangoLayout *layout, int x, int y);";subroutine pango_renderer_draw_layout(renderer, layout, x, y) bind(c)
pango;pango_renderer_draw_layout_line;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_draw_layout_line (PangoRenderer *renderer, PangoLayoutLine *line, int x, int y);";subroutine pango_renderer_draw_layout_line(renderer, line, x, y) bind(c)
pango;pango_renderer_draw_rectangle;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_draw_rectangle (PangoRenderer *renderer, PangoRenderPart part, int x, int y, int width, int height);";subroutine pango_renderer_draw_rectangle(renderer, part, x, y, width, height) bind(c)
pango;pango_renderer_draw_trapezoid;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_draw_trapezoid (PangoRenderer *renderer, PangoRenderPart part, double y1_, double x11, double x21, double y2, double x12, double x22);";subroutine pango_renderer_draw_trapezoid(renderer, part, y1_, x11, x21, y2, x12, x22) bind(c)
pango;pango_renderer_get_alpha;PANGO_AVAILABLE_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"guint16 pango_renderer_get_alpha (PangoRenderer *renderer, PangoRenderPart part);";function pango_renderer_get_alpha(renderer, part) bind(c)
pango;pango_renderer_get_color;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"PangoColor *pango_renderer_get_color (PangoRenderer *renderer, PangoRenderPart part);";function pango_renderer_get_color(renderer, part) bind(c)
pango;pango_renderer_get_layout;PANGO_AVAILABLE_IN_1_20;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"PangoLayout *pango_renderer_get_layout (PangoRenderer *renderer);";function pango_renderer_get_layout(renderer) bind(c)
pango;pango_renderer_get_layout_line;PANGO_AVAILABLE_IN_1_20;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"PangoLayoutLine *pango_renderer_get_layout_line (PangoRenderer *renderer);";function pango_renderer_get_layout_line(renderer) bind(c)
pango;pango_renderer_get_matrix;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"const PangoMatrix *pango_renderer_get_matrix (PangoRenderer *renderer);";function pango_renderer_get_matrix(renderer) bind(c)
pango;pango_renderer_get_type;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"GType pango_renderer_get_type (void) G_GNUC_CONST;";function pango_renderer_get_type() bind(c)
pango;pango_renderer_part_changed;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_part_changed (PangoRenderer *renderer, PangoRenderPart part);";subroutine pango_renderer_part_changed(renderer, part) bind(c)
pango;pango_renderer_set_alpha;PANGO_AVAILABLE_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_set_alpha (PangoRenderer *renderer, PangoRenderPart part, guint16 alpha);";subroutine pango_renderer_set_alpha(renderer, part, alpha) bind(c)
pango;pango_renderer_set_color;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_set_color (PangoRenderer *renderer, PangoRenderPart part, const PangoColor *color);";subroutine pango_renderer_set_color(renderer, part, color) bind(c)
pango;pango_renderer_set_matrix;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pango-renderer.h;"void pango_renderer_set_matrix (PangoRenderer *renderer, const PangoMatrix *matrix);";subroutine pango_renderer_set_matrix(renderer, matrix) bind(c)
pango;pango_reorder_items;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"GList *pango_reorder_items (GList *logical_items);";function pango_reorder_items(logical_items) bind(c)
pango;pango_scan_int;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"gboolean pango_scan_int (const char **pos, int *out);";function pango_scan_int(pos, out) bind(c)
pango;pango_scan_string;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"gboolean pango_scan_string (const char **pos, GString *out);";function pango_scan_string(pos, out) bind(c)
pango;pango_scan_word;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"gboolean pango_scan_word (const char **pos, GString *out);";function pango_scan_word(pos, out) bind(c)
pango;pango_script_for_unichar;PANGO_DEPRECATED_IN_1_44_FOR(g_unichar_get_script);pango-auto.f90;/usr/include/pango-1.0/pango/pango-script.h;"PangoScript pango_script_for_unichar (gunichar ch) G_GNUC_CONST;";function pango_script_for_unichar(ch) bind(c)
pango;pango_script_get_sample_language;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-script.h;"PangoLanguage *pango_script_get_sample_language (PangoScript script) G_GNUC_PURE;";function pango_script_get_sample_language(script) bind(c)
pango;pango_script_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_script_get_type (void) G_GNUC_CONST;";function pango_script_get_type() bind(c)
pango;pango_script_iter_free;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-script.h;"void pango_script_iter_free (PangoScriptIter *iter);";subroutine pango_script_iter_free(iter) bind(c)
pango;pango_script_iter_get_range;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-script.h;"void pango_script_iter_get_range (PangoScriptIter *iter, const char **start, const char **end, PangoScript *script);";subroutine pango_script_iter_get_range(iter, start, end, script) bind(c)
pango;pango_script_iter_get_type;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-script.h;"GType pango_script_iter_get_type (void) G_GNUC_CONST;";function pango_script_iter_get_type() bind(c)
pango;pango_script_iter_new;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-script.h;"PangoScriptIter *pango_script_iter_new (const char *text, int length);";function pango_script_iter_new(text, length) bind(c)
pango;pango_script_iter_next;PANGO_AVAILABLE_IN_1_4;pango-auto.f90;/usr/include/pango-1.0/pango/pango-script.h;"gboolean pango_script_iter_next (PangoScriptIter *iter);";function pango_script_iter_next(iter) bind(c)
pango;pango_shape;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"void pango_shape (const char *text, int length, const PangoAnalysis *analysis, PangoGlyphString *glyphs);";subroutine pango_shape(text, length, analysis, glyphs) bind(c)
pango;pango_shape_flags_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_shape_flags_get_type (void) G_GNUC_CONST;";function pango_shape_flags_get_type() bind(c)
pango;pango_shape_full;PANGO_AVAILABLE_IN_1_32;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"void pango_shape_full (const char *item_text, int item_length, const char *paragraph_text, int paragraph_length, const PangoAnalysis *analysis, PangoGlyphString *glyphs);";subroutine pango_shape_full(item_text, item_length, paragraph_text, paragraph_length, analysis, glyphs) bind(c)
pango;pango_shape_with_flags;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-glyph.h;"void pango_shape_with_flags (const char *item_text, int item_length, const char *paragraph_text, int paragraph_length, const PangoAnalysis *analysis, PangoGlyphString *glyphs, PangoShapeFlags flags);";subroutine pango_shape_with_flags(item_text, item_length, paragraph_text, paragraph_length, analysis, glyphs, flags) bind(c)
pango;pango_show_flags_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_show_flags_get_type (void) G_GNUC_CONST;";function pango_show_flags_get_type() bind(c)
pango;pango_skip_space;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"gboolean pango_skip_space (const char **pos);";function pango_skip_space(pos) bind(c)
pango;pango_split_file_list;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"char ** pango_split_file_list (const char *str);";function pango_split_file_list(str) bind(c)
pango;pango_stretch_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_stretch_get_type (void) G_GNUC_CONST;";function pango_stretch_get_type() bind(c)
pango;pango_style_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_style_get_type (void) G_GNUC_CONST;";function pango_style_get_type() bind(c)
pango;pango_tab_align_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_tab_align_get_type (void) G_GNUC_CONST;";function pango_tab_align_get_type() bind(c)
pango;pango_tab_array_copy;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-tabs.h;"PangoTabArray *pango_tab_array_copy (PangoTabArray *src);";function pango_tab_array_copy(src) bind(c)
pango;pango_tab_array_free;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-tabs.h;"void pango_tab_array_free (PangoTabArray *tab_array);";subroutine pango_tab_array_free(tab_array) bind(c)
pango;pango_tab_array_get_positions_in_pixels;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-tabs.h;"gboolean pango_tab_array_get_positions_in_pixels (PangoTabArray *tab_array);";function pango_tab_array_get_positions_in_pixels(tab_array) bind(c)
pango;pango_tab_array_get_size;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-tabs.h;"gint pango_tab_array_get_size (PangoTabArray *tab_array);";function pango_tab_array_get_size(tab_array) bind(c)
pango;pango_tab_array_get_tab;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-tabs.h;"void pango_tab_array_get_tab (PangoTabArray *tab_array, gint tab_index, PangoTabAlign *alignment, gint *location);";subroutine pango_tab_array_get_tab(tab_array, tab_index, alignment, location) bind(c)
pango;pango_tab_array_get_tabs;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-tabs.h;"void pango_tab_array_get_tabs (PangoTabArray *tab_array, PangoTabAlign **alignments, gint **locations);";subroutine pango_tab_array_get_tabs(tab_array, alignments, locations) bind(c)
pango;pango_tab_array_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-tabs.h;"GType pango_tab_array_get_type (void) G_GNUC_CONST;";function pango_tab_array_get_type() bind(c)
pango;pango_tab_array_new;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-tabs.h;"PangoTabArray *pango_tab_array_new (gint initial_size, gboolean positions_in_pixels);";function pango_tab_array_new(initial_size, positions_in_pixels) bind(c)
pango;pango_tab_array_resize;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-tabs.h;"void pango_tab_array_resize (PangoTabArray *tab_array, gint new_size);";subroutine pango_tab_array_resize(tab_array, new_size) bind(c)
pango;pango_tab_array_set_tab;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-tabs.h;"void pango_tab_array_set_tab (PangoTabArray *tab_array, gint tab_index, PangoTabAlign alignment, gint location);";subroutine pango_tab_array_set_tab(tab_array, tab_index, alignment, location) bind(c)
pango;pango_tailor_break;PANGO_AVAILABLE_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-break.h;"void pango_tailor_break (const char *text, int length, PangoAnalysis *analysis, int offset, PangoLogAttr *log_attrs, int log_attrs_len);";subroutine pango_tailor_break(text, length, analysis, offset, log_attrs, log_attrs_len) bind(c)
pango;pango_trim_string;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"char *pango_trim_string (const char *str);";function pango_trim_string(str) bind(c)
pango;pango_underline_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_underline_get_type (void) G_GNUC_CONST;";function pango_underline_get_type() bind(c)
pango;pango_unichar_direction;PANGO_DEPRECATED_IN_1_44;pango-auto.f90;/usr/include/pango-1.0/pango/pango-bidi-type.h;"PangoDirection pango_unichar_direction (gunichar ch) G_GNUC_CONST;";function pango_unichar_direction(ch) bind(c)
pango;pango_units_from_double;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-types.h;"int pango_units_from_double (double d) G_GNUC_CONST;";function pango_units_from_double(d) bind(c)
pango;pango_units_to_double;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-types.h;"double pango_units_to_double (int i) G_GNUC_CONST;";function pango_units_to_double(i) bind(c)
pango;pango_variant_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_variant_get_type (void) G_GNUC_CONST;";function pango_variant_get_type() bind(c)
pango;pango_version;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"int pango_version (void) G_GNUC_CONST;";function pango_version() bind(c)
pango;pango_version_check;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"const char * pango_version_check (int required_major, int required_minor, int required_micro) G_GNUC_CONST;";function pango_version_check(required_major, required_minor, required_micro) bind(c)
pango;pango_version_string;PANGO_AVAILABLE_IN_1_16;pango-auto.f90;/usr/include/pango-1.0/pango/pango-utils.h;"const char * pango_version_string (void) G_GNUC_CONST;";function pango_version_string() bind(c)
pango;pango_weight_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_weight_get_type (void) G_GNUC_CONST;";function pango_weight_get_type() bind(c)
pango;pango_wrap_mode_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pango-enum-types.h;"GType pango_wrap_mode_get_type (void) G_GNUC_CONST;";function pango_wrap_mode_get_type() bind(c)
pango;pango_xft_font_get_display;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"Display * pango_xft_font_get_display (PangoFont *font);";function pango_xft_font_get_display(font) bind(c)
pango;pango_xft_font_get_font;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"XftFont * pango_xft_font_get_font (PangoFont *font);";function pango_xft_font_get_font(font) bind(c)
pango;pango_xft_font_get_glyph;PANGO_DEPRECATED_FOR(pango_fc_font_get_glyph);pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"guint pango_xft_font_get_glyph (PangoFont *font, gunichar wc);";function pango_xft_font_get_glyph(font, wc) bind(c)
pango;pango_xft_font_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"GType pango_xft_font_get_type (void) G_GNUC_CONST;";function pango_xft_font_get_type() bind(c)
pango;pango_xft_font_get_unknown_glyph;PANGO_DEPRECATED_FOR(PANGO_GET_UNKNOWN_GLYPH);pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"PangoGlyph pango_xft_font_get_unknown_glyph (PangoFont *font, gunichar wc);";function pango_xft_font_get_unknown_glyph(font, wc) bind(c)
pango;pango_xft_font_has_char;PANGO_DEPRECATED_FOR(pango_fc_font_has_char);pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"gboolean pango_xft_font_has_char (PangoFont *font, gunichar wc);";function pango_xft_font_has_char(font, wc) bind(c)
pango;pango_xft_font_lock_face;PANGO_DEPRECATED_FOR(pango_fc_font_lock_face);pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"FT_Face pango_xft_font_lock_face (PangoFont *font);";function pango_xft_font_lock_face(font) bind(c)
pango;pango_xft_font_map_get_type;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"GType pango_xft_font_map_get_type (void) G_GNUC_CONST;";function pango_xft_font_map_get_type() bind(c)
pango;pango_xft_font_unlock_face;PANGO_DEPRECATED_FOR(pango_fc_font_unlock_face);pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"void pango_xft_font_unlock_face (PangoFont *font);";subroutine pango_xft_font_unlock_face(font) bind(c)
pango;pango_xft_get_context;PANGO_DEPRECATED;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"PangoContext *pango_xft_get_context (Display *display, int screen);";function pango_xft_get_context(display, screen) bind(c)
pango;pango_xft_get_font_map;PANGO_AVAILABLE_IN_1_2;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"PangoFontMap *pango_xft_get_font_map (Display *display, int screen);";function pango_xft_get_font_map(display, screen) bind(c)
pango;pango_xft_picture_render;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft-render.h;"void pango_xft_picture_render (Display *display, Picture src_picture, Picture dest_picture, PangoFont *font, PangoGlyphString *glyphs, gint x, gint y);";subroutine pango_xft_picture_render(display, src_picture, dest_picture, font, glyphs, x, y) bind(c)
pango;pango_xft_render;PANGO_AVAILABLE_IN_ALL;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft-render.h;"void pango_xft_render (XftDraw *draw, XftColor *color, PangoFont *font, PangoGlyphString *glyphs, gint x, gint y);";subroutine pango_xft_render(draw, color, font, glyphs, x, y) bind(c)
pango;pango_xft_render_layout;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft-render.h;"void pango_xft_render_layout (XftDraw *draw, XftColor *color, PangoLayout *layout, int x, int y);";subroutine pango_xft_render_layout(draw, color, layout, x, y) bind(c)
pango;pango_xft_render_layout_line;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft-render.h;"void pango_xft_render_layout_line (XftDraw *draw, XftColor *color, PangoLayoutLine *line, int x, int y);";subroutine pango_xft_render_layout_line(draw, color, line, x, y) bind(c)
pango;pango_xft_render_transformed;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft-render.h;"void pango_xft_render_transformed (XftDraw *draw, XftColor *color, PangoMatrix *matrix, PangoFont *font, PangoGlyphString *glyphs, int x, int y);";subroutine pango_xft_render_transformed(draw, color, matrix, font, glyphs, x, y) bind(c)
pango;pango_xft_renderer_get_type;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft-render.h;"GType pango_xft_renderer_get_type (void) G_GNUC_CONST;";function pango_xft_renderer_get_type() bind(c)
pango;pango_xft_renderer_new;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft-render.h;"PangoRenderer *pango_xft_renderer_new (Display *display, int screen);";function pango_xft_renderer_new(display, screen) bind(c)
pango;pango_xft_renderer_set_default_color;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft-render.h;"void pango_xft_renderer_set_default_color (PangoXftRenderer *xftrenderer, PangoColor *default_color);";subroutine pango_xft_renderer_set_default_color(xftrenderer, default_color) bind(c)
pango;pango_xft_renderer_set_draw;PANGO_AVAILABLE_IN_1_8;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft-render.h;"void pango_xft_renderer_set_draw (PangoXftRenderer *xftrenderer, XftDraw *draw);";subroutine pango_xft_renderer_set_draw(xftrenderer, draw) bind(c)
pango;pango_xft_set_default_substitute;PANGO_DEPRECATED_IN_1_48_FOR(pango_fc_font_map_set_default_substitute);pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"void pango_xft_set_default_substitute (Display *display, int screen, PangoXftSubstituteFunc func, gpointer data, GDestroyNotify notify);";subroutine pango_xft_set_default_substitute(display, screen, func, data, notify) bind(c)
pango;pango_xft_shutdown_display;PANGO_AVAILABLE_IN_1_2;pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"void pango_xft_shutdown_display (Display *display, int screen);";subroutine pango_xft_shutdown_display(display, screen) bind(c)
pango;pango_xft_substitute_changed;PANGO_DEPRECATED_IN_1_48_FOR(pango_fc_font_map_substitute_changed);pango-auto.f90;/usr/include/pango-1.0/pango/pangoxft.h;"void pango_xft_substitute_changed (Display *display, int screen);";subroutine pango_xft_substitute_changed(display, screen) bind(c)
pango;script_engine_create;PANGO_DEPRECATED_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-engine.h;"PangoEngine *script_engine_create (const char *id);";function script_engine_create(id) bind(c)
pango;script_engine_exit;PANGO_DEPRECATED_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-engine.h;"void script_engine_exit (void);";subroutine script_engine_exit() bind(c)
pango;script_engine_init;PANGO_DEPRECATED_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-engine.h;"void script_engine_init (GTypeModule *module);";subroutine script_engine_init(module) bind(c)
pango;script_engine_list;PANGO_DEPRECATED_IN_1_38;pango-auto.f90;/usr/include/pango-1.0/pango/pango-engine.h;"void script_engine_list (PangoEngineInfo **engines, int *n_engines);";subroutine script_engine_list(engines, n_engines) bind(c)
unix_print;gtk_enumerate_printers;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"void gtk_enumerate_printers (GtkPrinterFunc func, gpointer data, GDestroyNotify destroy, gboolean wait);";subroutine gtk_enumerate_printers(func, data, destroy, wait) bind(c)
unix_print;gtk_page_setup_unix_dialog_get_page_setup;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkpagesetupunixdialog.h;"GtkPageSetup * gtk_page_setup_unix_dialog_get_page_setup (GtkPageSetupUnixDialog *dialog);";function gtk_page_setup_unix_dialog_get_page_setup(dialog) bind(c)
unix_print;gtk_page_setup_unix_dialog_get_print_settings;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkpagesetupunixdialog.h;"GtkPrintSettings *gtk_page_setup_unix_dialog_get_print_settings (GtkPageSetupUnixDialog *dialog);";function gtk_page_setup_unix_dialog_get_print_settings(dialog) bind(c)
unix_print;gtk_page_setup_unix_dialog_get_type;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkpagesetupunixdialog.h;"GType gtk_page_setup_unix_dialog_get_type (void) G_GNUC_CONST;";function gtk_page_setup_unix_dialog_get_type() bind(c)
unix_print;gtk_page_setup_unix_dialog_new;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkpagesetupunixdialog.h;"GtkWidget * gtk_page_setup_unix_dialog_new (const char *title, GtkWindow *parent);";function gtk_page_setup_unix_dialog_new(title, parent) bind(c)
unix_print;gtk_page_setup_unix_dialog_set_page_setup;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkpagesetupunixdialog.h;"void gtk_page_setup_unix_dialog_set_page_setup (GtkPageSetupUnixDialog *dialog, GtkPageSetup *page_setup);";subroutine gtk_page_setup_unix_dialog_set_page_setup(dialog, page_setup) bind(c)
unix_print;gtk_page_setup_unix_dialog_set_print_settings;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkpagesetupunixdialog.h;"void gtk_page_setup_unix_dialog_set_print_settings (GtkPageSetupUnixDialog *dialog, GtkPrintSettings *print_settings);";subroutine gtk_page_setup_unix_dialog_set_print_settings(dialog, print_settings) bind(c)
unix_print;gtk_print_capabilities_get_type;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"GType gtk_print_capabilities_get_type (void) G_GNUC_CONST;";function gtk_print_capabilities_get_type() bind(c)
unix_print;gtk_print_job_get_collate;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"gboolean gtk_print_job_get_collate (GtkPrintJob *job);";function gtk_print_job_get_collate(job) bind(c)
unix_print;gtk_print_job_get_n_up;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"guint gtk_print_job_get_n_up (GtkPrintJob *job);";function gtk_print_job_get_n_up(job) bind(c)
unix_print;gtk_print_job_get_n_up_layout;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"GtkNumberUpLayout gtk_print_job_get_n_up_layout (GtkPrintJob *job);";function gtk_print_job_get_n_up_layout(job) bind(c)
unix_print;gtk_print_job_get_num_copies;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"int gtk_print_job_get_num_copies (GtkPrintJob *job);";function gtk_print_job_get_num_copies(job) bind(c)
unix_print;gtk_print_job_get_page_ranges;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"GtkPageRange * gtk_print_job_get_page_ranges (GtkPrintJob *job, int *n_ranges);";function gtk_print_job_get_page_ranges(job, n_ranges) bind(c)
unix_print;gtk_print_job_get_page_set;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"GtkPageSet gtk_print_job_get_page_set (GtkPrintJob *job);";function gtk_print_job_get_page_set(job) bind(c)
unix_print;gtk_print_job_get_pages;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"GtkPrintPages gtk_print_job_get_pages (GtkPrintJob *job);";function gtk_print_job_get_pages(job) bind(c)
unix_print;gtk_print_job_get_printer;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"GtkPrinter *gtk_print_job_get_printer (GtkPrintJob *job);";function gtk_print_job_get_printer(job) bind(c)
unix_print;gtk_print_job_get_reverse;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"gboolean gtk_print_job_get_reverse (GtkPrintJob *job);";function gtk_print_job_get_reverse(job) bind(c)
unix_print;gtk_print_job_get_rotate;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"gboolean gtk_print_job_get_rotate (GtkPrintJob *job);";function gtk_print_job_get_rotate(job) bind(c)
unix_print;gtk_print_job_get_scale;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"double gtk_print_job_get_scale (GtkPrintJob *job);";function gtk_print_job_get_scale(job) bind(c)
unix_print;gtk_print_job_get_settings;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"GtkPrintSettings *gtk_print_job_get_settings (GtkPrintJob *job);";function gtk_print_job_get_settings(job) bind(c)
unix_print;gtk_print_job_get_status;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"GtkPrintStatus gtk_print_job_get_status (GtkPrintJob *job);";function gtk_print_job_get_status(job) bind(c)
unix_print;gtk_print_job_get_surface;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"cairo_surface_t *gtk_print_job_get_surface (GtkPrintJob *job, GError **error);";function gtk_print_job_get_surface(job, error) bind(c)
unix_print;gtk_print_job_get_title;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"const char * gtk_print_job_get_title (GtkPrintJob *job);";function gtk_print_job_get_title(job) bind(c)
unix_print;gtk_print_job_get_track_print_status;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"gboolean gtk_print_job_get_track_print_status (GtkPrintJob *job);";function gtk_print_job_get_track_print_status(job) bind(c)
unix_print;gtk_print_job_get_type;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"GType gtk_print_job_get_type (void) G_GNUC_CONST;";function gtk_print_job_get_type() bind(c)
unix_print;gtk_print_job_new;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"GtkPrintJob *gtk_print_job_new (const char *title, GtkPrinter *printer, GtkPrintSettings *settings, GtkPageSetup *page_setup);";function gtk_print_job_new(title, printer, settings, page_setup) bind(c)
unix_print;gtk_print_job_send;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"void gtk_print_job_send (GtkPrintJob *job, GtkPrintJobCompleteFunc callback, gpointer user_data, GDestroyNotify dnotify);";subroutine gtk_print_job_send(job, callback, user_data, dnotify) bind(c)
unix_print;gtk_print_job_set_collate;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"void gtk_print_job_set_collate (GtkPrintJob *job, gboolean collate);";subroutine gtk_print_job_set_collate(job, collate) bind(c)
unix_print;gtk_print_job_set_n_up;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"void gtk_print_job_set_n_up (GtkPrintJob *job, guint n_up);";subroutine gtk_print_job_set_n_up(job, n_up) bind(c)
unix_print;gtk_print_job_set_n_up_layout;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"void gtk_print_job_set_n_up_layout (GtkPrintJob *job, GtkNumberUpLayout layout);";subroutine gtk_print_job_set_n_up_layout(job, layout) bind(c)
unix_print;gtk_print_job_set_num_copies;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"void gtk_print_job_set_num_copies (GtkPrintJob *job, int num_copies);";subroutine gtk_print_job_set_num_copies(job, num_copies) bind(c)
unix_print;gtk_print_job_set_page_ranges;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"void gtk_print_job_set_page_ranges (GtkPrintJob *job, GtkPageRange *ranges, int n_ranges);";subroutine gtk_print_job_set_page_ranges(job, ranges, n_ranges) bind(c)
unix_print;gtk_print_job_set_page_set;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"void gtk_print_job_set_page_set (GtkPrintJob *job, GtkPageSet page_set);";subroutine gtk_print_job_set_page_set(job, page_set) bind(c)
unix_print;gtk_print_job_set_pages;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"void gtk_print_job_set_pages (GtkPrintJob *job, GtkPrintPages pages);";subroutine gtk_print_job_set_pages(job, pages) bind(c)
unix_print;gtk_print_job_set_reverse;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"void gtk_print_job_set_reverse (GtkPrintJob *job, gboolean reverse);";subroutine gtk_print_job_set_reverse(job, reverse) bind(c)
unix_print;gtk_print_job_set_rotate;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"void gtk_print_job_set_rotate (GtkPrintJob *job, gboolean rotate);";subroutine gtk_print_job_set_rotate(job, rotate) bind(c)
unix_print;gtk_print_job_set_scale;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"void gtk_print_job_set_scale (GtkPrintJob *job, double scale);";subroutine gtk_print_job_set_scale(job, scale) bind(c)
unix_print;gtk_print_job_set_source_fd;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"gboolean gtk_print_job_set_source_fd (GtkPrintJob *job, int fd, GError **error);";function gtk_print_job_set_source_fd(job, fd, error) bind(c)
unix_print;gtk_print_job_set_source_file;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"gboolean gtk_print_job_set_source_file (GtkPrintJob *job, const char *filename, GError **error);";function gtk_print_job_set_source_file(job, filename, error) bind(c)
unix_print;gtk_print_job_set_track_print_status;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintjob.h;"void gtk_print_job_set_track_print_status (GtkPrintJob *job, gboolean track_status);";subroutine gtk_print_job_set_track_print_status(job, track_status) bind(c)
unix_print;gtk_print_unix_dialog_add_custom_tab;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"void gtk_print_unix_dialog_add_custom_tab (GtkPrintUnixDialog *dialog, GtkWidget *child, GtkWidget *tab_label);";subroutine gtk_print_unix_dialog_add_custom_tab(dialog, child, tab_label) bind(c)
unix_print;gtk_print_unix_dialog_get_current_page;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"int gtk_print_unix_dialog_get_current_page (GtkPrintUnixDialog *dialog);";function gtk_print_unix_dialog_get_current_page(dialog) bind(c)
unix_print;gtk_print_unix_dialog_get_embed_page_setup;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"gboolean gtk_print_unix_dialog_get_embed_page_setup (GtkPrintUnixDialog *dialog);";function gtk_print_unix_dialog_get_embed_page_setup(dialog) bind(c)
unix_print;gtk_print_unix_dialog_get_has_selection;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"gboolean gtk_print_unix_dialog_get_has_selection (GtkPrintUnixDialog *dialog);";function gtk_print_unix_dialog_get_has_selection(dialog) bind(c)
unix_print;gtk_print_unix_dialog_get_manual_capabilities;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"GtkPrintCapabilities gtk_print_unix_dialog_get_manual_capabilities (GtkPrintUnixDialog *dialog);";function gtk_print_unix_dialog_get_manual_capabilities(dialog) bind(c)
unix_print;gtk_print_unix_dialog_get_page_setup;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"GtkPageSetup * gtk_print_unix_dialog_get_page_setup (GtkPrintUnixDialog *dialog);";function gtk_print_unix_dialog_get_page_setup(dialog) bind(c)
unix_print;gtk_print_unix_dialog_get_page_setup_set;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"gboolean gtk_print_unix_dialog_get_page_setup_set (GtkPrintUnixDialog *dialog);";function gtk_print_unix_dialog_get_page_setup_set(dialog) bind(c)
unix_print;gtk_print_unix_dialog_get_selected_printer;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"GtkPrinter * gtk_print_unix_dialog_get_selected_printer (GtkPrintUnixDialog *dialog);";function gtk_print_unix_dialog_get_selected_printer(dialog) bind(c)
unix_print;gtk_print_unix_dialog_get_settings;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"GtkPrintSettings * gtk_print_unix_dialog_get_settings (GtkPrintUnixDialog *dialog);";function gtk_print_unix_dialog_get_settings(dialog) bind(c)
unix_print;gtk_print_unix_dialog_get_support_selection;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"gboolean gtk_print_unix_dialog_get_support_selection (GtkPrintUnixDialog *dialog);";function gtk_print_unix_dialog_get_support_selection(dialog) bind(c)
unix_print;gtk_print_unix_dialog_get_type;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"GType gtk_print_unix_dialog_get_type (void) G_GNUC_CONST;";function gtk_print_unix_dialog_get_type() bind(c)
unix_print;gtk_print_unix_dialog_new;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"GtkWidget * gtk_print_unix_dialog_new (const char *title, GtkWindow *parent);";function gtk_print_unix_dialog_new(title, parent) bind(c)
unix_print;gtk_print_unix_dialog_set_current_page;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"void gtk_print_unix_dialog_set_current_page (GtkPrintUnixDialog *dialog, int current_page);";subroutine gtk_print_unix_dialog_set_current_page(dialog, current_page) bind(c)
unix_print;gtk_print_unix_dialog_set_embed_page_setup;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"void gtk_print_unix_dialog_set_embed_page_setup (GtkPrintUnixDialog *dialog, gboolean embed);";subroutine gtk_print_unix_dialog_set_embed_page_setup(dialog, embed) bind(c)
unix_print;gtk_print_unix_dialog_set_has_selection;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"void gtk_print_unix_dialog_set_has_selection (GtkPrintUnixDialog *dialog, gboolean has_selection);";subroutine gtk_print_unix_dialog_set_has_selection(dialog, has_selection) bind(c)
unix_print;gtk_print_unix_dialog_set_manual_capabilities;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"void gtk_print_unix_dialog_set_manual_capabilities (GtkPrintUnixDialog *dialog, GtkPrintCapabilities capabilities);";subroutine gtk_print_unix_dialog_set_manual_capabilities(dialog, capabilities) bind(c)
unix_print;gtk_print_unix_dialog_set_page_setup;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"void gtk_print_unix_dialog_set_page_setup (GtkPrintUnixDialog *dialog, GtkPageSetup *page_setup);";subroutine gtk_print_unix_dialog_set_page_setup(dialog, page_setup) bind(c)
unix_print;gtk_print_unix_dialog_set_settings;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"void gtk_print_unix_dialog_set_settings (GtkPrintUnixDialog *dialog, GtkPrintSettings *settings);";subroutine gtk_print_unix_dialog_set_settings(dialog, settings) bind(c)
unix_print;gtk_print_unix_dialog_set_support_selection;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprintunixdialog.h;"void gtk_print_unix_dialog_set_support_selection (GtkPrintUnixDialog *dialog, gboolean support_selection);";subroutine gtk_print_unix_dialog_set_support_selection(dialog, support_selection) bind(c)
unix_print;gtk_printer_accepts_pdf;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"gboolean gtk_printer_accepts_pdf (GtkPrinter *printer);";function gtk_printer_accepts_pdf(printer) bind(c)
unix_print;gtk_printer_accepts_ps;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"gboolean gtk_printer_accepts_ps (GtkPrinter *printer);";function gtk_printer_accepts_ps(printer) bind(c)
unix_print;gtk_printer_compare;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"int gtk_printer_compare (GtkPrinter *a, GtkPrinter *b);";function gtk_printer_compare(a, b) bind(c)
unix_print;gtk_printer_get_backend;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"GtkPrintBackend *gtk_printer_get_backend (GtkPrinter *printer);";function gtk_printer_get_backend(printer) bind(c)
unix_print;gtk_printer_get_capabilities;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"GtkPrintCapabilities gtk_printer_get_capabilities (GtkPrinter *printer);";function gtk_printer_get_capabilities(printer) bind(c)
unix_print;gtk_printer_get_default_page_size;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"GtkPageSetup *gtk_printer_get_default_page_size (GtkPrinter *printer);";function gtk_printer_get_default_page_size(printer) bind(c)
unix_print;gtk_printer_get_description;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"const char * gtk_printer_get_description (GtkPrinter *printer);";function gtk_printer_get_description(printer) bind(c)
unix_print;gtk_printer_get_hard_margins;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"gboolean gtk_printer_get_hard_margins (GtkPrinter *printer, double *top, double *bottom, double *left, double *right);";function gtk_printer_get_hard_margins(printer, top, bottom, left, right) bind(c)
unix_print;gtk_printer_get_hard_margins_for_paper_size;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"gboolean gtk_printer_get_hard_margins_for_paper_size (GtkPrinter *printer, GtkPaperSize *paper_size, double *top, double *bottom, double *left, double *right);";function gtk_printer_get_hard_margins_for_paper_size(printer, paper_size, top, bottom, left, right) bind(c)
unix_print;gtk_printer_get_icon_name;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"const char * gtk_printer_get_icon_name (GtkPrinter *printer);";function gtk_printer_get_icon_name(printer) bind(c)
unix_print;gtk_printer_get_job_count;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"int gtk_printer_get_job_count (GtkPrinter *printer);";function gtk_printer_get_job_count(printer) bind(c)
unix_print;gtk_printer_get_location;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"const char * gtk_printer_get_location (GtkPrinter *printer);";function gtk_printer_get_location(printer) bind(c)
unix_print;gtk_printer_get_name;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"const char * gtk_printer_get_name (GtkPrinter *printer);";function gtk_printer_get_name(printer) bind(c)
unix_print;gtk_printer_get_state_message;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"const char * gtk_printer_get_state_message (GtkPrinter *printer);";function gtk_printer_get_state_message(printer) bind(c)
unix_print;gtk_printer_get_type;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"GType gtk_printer_get_type (void) G_GNUC_CONST;";function gtk_printer_get_type() bind(c)
unix_print;gtk_printer_has_details;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"gboolean gtk_printer_has_details (GtkPrinter *printer);";function gtk_printer_has_details(printer) bind(c)
unix_print;gtk_printer_is_accepting_jobs;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"gboolean gtk_printer_is_accepting_jobs (GtkPrinter *printer);";function gtk_printer_is_accepting_jobs(printer) bind(c)
unix_print;gtk_printer_is_active;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"gboolean gtk_printer_is_active (GtkPrinter *printer);";function gtk_printer_is_active(printer) bind(c)
unix_print;gtk_printer_is_default;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"gboolean gtk_printer_is_default (GtkPrinter *printer);";function gtk_printer_is_default(printer) bind(c)
unix_print;gtk_printer_is_paused;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"gboolean gtk_printer_is_paused (GtkPrinter *printer);";function gtk_printer_is_paused(printer) bind(c)
unix_print;gtk_printer_is_virtual;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"gboolean gtk_printer_is_virtual (GtkPrinter *printer);";function gtk_printer_is_virtual(printer) bind(c)
unix_print;gtk_printer_list_papers;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"GList *gtk_printer_list_papers (GtkPrinter *printer);";function gtk_printer_list_papers(printer) bind(c)
unix_print;gtk_printer_new;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"GtkPrinter *gtk_printer_new (const char *name, GtkPrintBackend *backend, gboolean virtual_);";function gtk_printer_new(name, backend, virtual_) bind(c)
unix_print;gtk_printer_request_details;GDK_AVAILABLE_IN_ALL;unix-print-auto.f90;/usr/include/gtk-4.0/unix-print/gtk/gtkprinter.h;"void gtk_printer_request_details (GtkPrinter *printer);";subroutine gtk_printer_request_details(printer) bind(c)
